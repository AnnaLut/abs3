.head 0 +  Application Description: технологические операции по обработке
файлов из внешних систем
--------------------------------------
УНИТИ-БАРС (С) Чупахина Наталия, Сыропоршнев Денис
2001 г
.head 1 -  Outline Version - 4.0.26
.head 1 +  Design-time Settings
.data VIEWINFO
0000: 6F00000001000000 FFFF01000D004347 5458566965775374 6174650400010000
0020: 00000000009C0000 002C000000020000 0003000000FFFFFF FFFFFFFFFFF8FFFF
0040: FFE2FFFFFF000000 0000000000DE0100 0041010000010000 0001000000010000
0060: 000F4170706C6963 6174696F6E497465 6D01000000075769 6E646F7773
.enddata
.data DT_MAKERUNDLG
0000: 000000001E5C4241 525339385C524553 4F555243455C4943 4F5C4D6F6E65792E
0020: 69636F165C424152 5339385C42494E5C 7362625F6E632E65 7865165C42415253
0040: 39385C42494E5C6E 65776170702E646C 6C165C4241525339 385C42494E5C6E65
0060: 776170702E617063 000001010115513A 5C43454E54555241 5C6E65776170702E
0080: 72756E15513A5C43 454E545552415C6E 65776170702E646C 6C15513A5C43454E
00A0: 545552415C6E6577 6170702E61706300 000101011A513A5C 4241525339385C42
00C0: 494E5C6B6C6F705F 656C6C2E65786518 513A5C4241525339 385C42494E5C6E65
00E0: 776170702E646C6C 18513A5C42415253 39385C42494E5C6E 65776170702E6170
0100: 6300000101011551 3A5C43454E545552 415C6E6577617070 2E61706C15513A5C
0120: 43454E545552415C 6E65776170702E64 6C6C15513A5C4345 4E545552415C6E65
0140: 776170702E617063 0000010101
.enddata
.head 2 -  Outline Window State: Normal
.head 2 +  Outline Window Location and Size
.data VIEWINFO
0000: 6600040003002D00 0000000000000000 0000B71E5D0E0500 1D00FFFF4D61696E
0020: 0000000000000000 0000000000000000 0000003B00010000 00000000000000E9
0040: 1E800A00008600FF FF496E7465726E61 6C2046756E637469 6F6E730000000000
0060: 0000000000000000 0000000000003200 0100000000000000 0000E91E800A0000
0080: DF00FFFF56617269 61626C6573000000 0000000000000000 0000000000000000
00A0: 3000010000000000 00000000F51E100D 0000F400FFFF436C 6173736573000000
00C0: 0000000000000000 0000000000000000
.enddata
.data VIEWSIZE
0000: D000
.enddata
.head 3 -  Left:   -0.013"
.head 3 -  Top:    0.0"
.head 3 -  Width:  8.013"
.head 3 -  Height: 4.969"
.head 2 +  Options Box Location
.data VIEWINFO
0000: 1018B80BB80B2500
.enddata
.data VIEWSIZE
0000: 0800
.enddata
.head 3 -  Visible? Yes
.head 3 -  Left:   4.15"
.head 3 -  Top:    1.885"
.head 3 -  Width:  3.8"
.head 3 -  Height: 2.073"
.head 2 +  Class Editor Location
.head 3 -  Visible? No
.head 3 -  Left:   0.575"
.head 3 -  Top:    0.094"
.head 3 -  Width:  5.063"
.head 3 -  Height: 2.719"
.head 2 +  Tool Palette Location
.head 3 -  Visible? No
.head 3 -  Left:   6.388"
.head 3 -  Top:    0.729"
.head 2 -  Fully Qualified External References? Yes
.head 2 -  Reject Multiple Window Instances? No
.head 2 -  Enable Runtime Checks Of External References? Yes
.head 2 -  Use Release 4.0 Scope Rules? No
.head 1 +  Libraries
.head 2 -  Dynalib: Ssplashl.apd
.head 2 -  Dynalib: Absapi.apd
.head 2 -  Dynalib: Dblogin.apd
.head 2 -  Dynalib: Global.apd
.head 2 -  Dynalib: License.apd
.head 2 -  Dynalib: Message.apd
.head 2 -  Dynalib: ROLEAUTH.APD
.head 2 -  Dynalib: Watchdog.apd
.head 2 -  File Include: GenButn.apl
.head 2 -  File Include: Genfiltr.apl
.head 2 -  File Include: Gentimer.apl
.head 2 -  File Include: Docfun6.apl
.head 2 -  File Include: Vtdos.apl
.head 1 +  Global Declarations
.head 2 +  Window Defaults
.head 3 +  Tool Bar
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Form Window
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Dialog Box
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Top Level Table Window
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Data Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Multiline Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Spin Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Background Text
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Pushbutton
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Radio Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Check Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Option Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Group Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Child Table Window
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  List Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Combo Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Line
.head 4 -  Line Color: Use Parent
.head 3 +  Frame
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: 3D Face Color
.head 3 +  Picture
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 2 +  Formats
.head 3 -  Number: 0'%'
.head 3 -  Number: #0
.head 3 -  Number: ###000
.head 3 -  Number: ###000;'($'###000')'
.head 3 -  Date/Time: hh:mm:ss AMPM
.head 3 -  Date/Time: M/d/yy
.head 3 -  Date/Time: MM-dd-yy
.head 3 -  Date/Time: dd-MMM-yyyy
.head 3 -  Date/Time: MMM d, yyyy
.head 3 -  Date/Time: MMM d, yyyy hh:mm AMPM
.head 3 -  Date/Time: MMMM d, yyyy hh:mm AMPM
.head 2 +  External Functions
.head 3 +  Library name: IctBob.Dll
.head 4 +  Function: llopen
.head 5 -  Description: открытие файла (C++)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: HANDLE
.head 5 +  Parameters
.head 6 -  ! первый параметр: имя файла, второй: тип открытия
.head 6 -  String: LPCSTR
.head 6 -  Number: INT
.head 4 +  Function: llcreat
.head 5 -  Description: создание файла (C++)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: HANDLE
.head 5 +  Parameters
.head 6 -  ! первый параметр: имя файла, второй: тип открытия
.head 6 -  String: LPCSTR
.head 6 -  Number: INT
.head 4 +  Function: llclose
.head 5 -  Description: закрытие файла (C++)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: HANDLE
.head 5 +  Parameters
.head 6 -  Number: HANDLE
.head 4 +  Function: llread
.head 5 -  Description: чтение файла (C++)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: UINT
.head 5 +  Parameters
.head 6 -  Number: HANDLE
.head 6 -  String: LPVOID
.head 6 -  Number: UINT
.head 4 +  Function: llwrite
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: UINT
.head 5 +  Parameters
.head 6 -  Number: HANDLE
.head 6 -  String: LPCSTR
.head 6 -  Number: UINT
.head 4 +  Function: lllseek
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LONG
.head 5 +  Parameters
.head 6 -  Number: HANDLE
.head 6 -  Number: LONG
.head 6 -  Number: INT
.head 4 +  Function: llstr2str
.head 5 -  Description: преобразование строки HEXtoBIN
.head 5 -  Export Ordinal: 0
.head 5 -  Returns
.head 5 +  Parameters
.head 6 -  String: LPSTR
.head 6 -  Receive String: LPVOID
.head 6 -  Number: ULONG
.head 2 +  Constants
.data CCDATA
0000: 3000000000000000 0000000000000000 00000000
.enddata
.data CCSIZE
0000: 1400
.enddata
.head 3 +  System
.head 3 +  User
.head 2 +  Resources
.head 2 +  Variables
.data RESOURCE 0 0 1 862873849
0000: 380000001D000000 0000000000000000 0200000200000062 000000E0010D0000
0020: 00FF3F6F00800000 0304000000FFFF
.enddata
.head 3 -  Number: nFetchRes
.head 3 -  Number: nUsers
.head 3 -  Date/Time: dtExpDate
.head 3 -  Date/Time: dtWBDate
.head 2 +  Internal Functions
.head 2 -  Named Menus
.head 2 +  Class Definitions
.data RESOURCE 0 0 1 25218691
0000: 37010000A2000000 0000000000000000 0200000200FFFF01 00160000436C6173
0020: 73566172004F7574 6C696E6552006567 496E666F22003C00 000A630047656E46
0040: 696C746500727400 00000400001E0002 0400C10001000000 3F8001F800000037
0060: 040001F00D000000 FF1F110000DC0002 00FF7F1570000000 0100FFFF21018022
0080: 000001C200000B63 47F8444669B30004 00770200F601004F 800100FE008D0400
00A0: 010DFD00FF371100 02F700FFDF15DC00 0100FF7F
.enddata
.head 3 +  Functional Class: cDocNOKK
.head 4 -  Description: Класс документа для электронных клиентов
.head 4 +  Derived From
.head 5 -  Class: cDoc
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Boolean: bSignInited
.head 5 -  Number: nBIS
.head 4 +  Functions
.head 5 +  ! Function: sIni1
.head 6 -      Description: Инициализировать ЭЦП
.head 6 +      Returns 
.head 7 -      Boolean: 
.head 6 -      Parameters 
.head 6 +      Static Variables 
.head 7 -  ! Boolean: bSignInited
.head 7 -      Number: nTim
.head 6 +      Local variables 
.head 7 -  ! String: strUxDateTime
.head 7 -      String: strDay
.head 7 -      Number: nDay
.head 7 -      Number: nErrorSign
.head 7 -      String: strErrorSign
.head 7 -      String: strPinCode
.head 6 +      Actions 
.head 7 -  ! Call Debug('bSignInited:'||Str(bSignInited))
.head 7 +      If bSignInited
.head 8 -      Return TRUE
.head 7 +      If GetSignType() = 'UKR' or GetSignType() = 'NBU' or 
   GetSignType() = 'VEG'
.head 8 -      Set nErrorSign = NUMBER_Null
.head 8 -      Set strPinCode = ''
.head 8 +      While TRUE
.head 9 +      If SalModalDialog(dlgAskPinCode, hWndForm,strPinCode)
.head 10 +      If GetSignType() = 'NBU'
.head 11 +      If bSignInited
.head 12 -      Set nErrorSign = CLOSE_ZAH()
.head 11 -      Set nErrorSign = INIT_ZAH(GetOpenKeyDir(),
    GetSecretKeyDrv(), GetIdOper(),
    GetKeyDate(), strPinCode)
.head 11 +      If nErrorSign = -70
.head 12 -      Call MessageErrorEx('>> RSA. Последний ' ||
     'день действия секретного ключа')
.head 11 +      Else If nErrorSign > -77 And nErrorSign < -70
.head 12 -      Set nDay = - nErrorSign - 70
.head 12 +      If nDay = 1
.head 13 -      Set strDay = 'день'
.head 12 +      Else If nDay = 2 Or nDay = 3 Or nDay = 4
.head 13 -      Set strDay = 'дня'
.head 12 +      Else If nDay = 5 Or nDay = 6
.head 13 -      Set strDay = 'дней'
.head 12 -      Call MessageErrorEx('>> RSA. Срок действия'
     || 'секретного ключа прекращается ' ||
     'через ' || NumberToStr(nDay) || ' '
     || strDay)
.head 11 +      Else If nErrorSign != 0
.head 12 -      Break 
.head 10 +      Else If GetSignType() = 'VEG'
.head 11 +      If bSignInited
.head 12 -  ! Set nErrorSign = VegaClose (pVegaSES)
.head 12 -      Set nErrorSign = VegaClose (0)
.head 12 -      Set bSignInited = FALSE
.head 11 -      Call SalStrSetBufferLength( sBuf, 11024+4104+1)
.head 11 -  ! Call SalStrSetBufferLength( pVegaSES, 8192 )
.head 11 -      Set nErrorSign = VegaSetBuf(sBuf,11024+4104)
.head 11 +      If nErrorSign
.head 12 -  ! Call Debug('VegaSetBuf Err '||SalNumberToStrX(nErrorSign,0))
.head 12 -      Break 
.head 11 -      Set nErrorSign = VegaSetDate(SalFmtFormatDateTime(GetBankDate(),'dd/MM/yyyy'))
.head 11 +      If nErrorSign
.head 12 -  ! Call Debug('VegaSetDate Err '||SalNumberToStrX(nErrorSign,0))
.head 12 -      Break 
.head 11 -  ! Set nErrorSign = VegaOpen(GetOpenKeyDir()||'\\Vega.cfg',GetOpenKeyDir()||'\\',pVegaSES)
.head 11 -      Set nErrorSign = VegaOpen(GetOpenKeyDir()||'\\Vega.cfg',GetOpenKeyDir()||'\\',0)
.head 11 +      If nErrorSign
.head 12 -  ! Call Debug('VegaOpen Err '||SalNumberToStrX(nErrorSign,0))
.head 12 -      Break 
.head 11 -      Call SalStrSetBufferLength(sUid,9)
.head 11 +      If GetSecretKeyDrv()='TM'
.head 12 -      Set nErrorSign=ReadTM()
.head 12 +      If nErrorSign
.head 13 -  ! Call Debug('ReadTM Err '||SalNumberToStrX(nErrorSign,0))
.head 13 -      Set nErrorSign=nErrorSign+500
.head 13 -      Break 
.head 12 -      Call VegaSetFmode(1,0)
.head 12 -      Set nErrorSign = VegaLoadSecKey(m_lsSecretKey,PadR(strPinCode,32),sUid,0)
.head 12 -      Call VegaSetFmode(0,0)
.head 11 +      Else 
.head 12 -      Set nErrorSign = VegaLoadSecKey(GetSecretKeyDrv()||'\\'||SalStrRightX('00'||GetGlobalOption('REGNCODE'),2)||GetIdOper()||'.KEY',PadR(strPinCode,32),sUid,0)
.head 11 +      If nErrorSign=1
.head 12 -      Set nErrorSign=0
.head 11 +      If nErrorSign
.head 12 -  ! Call Debug('VegaLoadSecKey Err '||SalNumberToStrX(nErrorSign,0))
.head 12 -      Break 
.head 10 +      Else 
.head 11 +      If bSignInited
.head 12 -      Set nErrorSign = nsignExitOPSign()
.head 11 -  ! Cipher 98
.head 11 -  ! Set nErrorSign = nsignInitOPSign(
    GetOpenKeyDir(), GetSecretKeyDrv(),
    strPinCode, GetBankMfo())
.head 11 -  ! Cipher 99 с ОперИдом
.head 11 -      Set nErrorSign = nsignInitOPSign(
    GetOpenKeyDir(), GetSecretKeyDrv(),
    strPinCode, GetBankMfo(),GetIdOper())
.head 11 -  ! Отладка
.head 11 -  ! Set nErrorSign = nsignInitOPSign(
    GetOpenKeyDir(), GetSecretKeyDrv(),
    strPinCode, '351447', GetIdOper())
.head 11 +      If nErrorSign != 0
.head 12 -      Break 
.head 10 -      Call SaveInfoToLog('>> RSA - инициализация - OK')
.head 10 -      Set bSignInited = TRUE
.head 10 -      Return TRUE
.head 9 +      Else 
.head 10 -      Break 
.head 8 +      If nErrorSign != NUMBER_Null ! обработка ошибок ЭЦП
.head 9 +      If GetSignType() = 'NBU'
.head 10 -      Set strErrorSign = '>> RSA. Ошибка инициализации ЭЦП: '||NumberToStr(nErrorSign)
.head 10 -  ! Call CLOSE_ZAH()
.head 10 -      Call MessageErrorEx(strErrorSign)
.head 9 +      Else If GetSignType() = 'VEG'
.head 10 -      Set strErrorSign = 'Ошибка '||SalNumberToStrX( (nErrorSign - SalNumberMod( nErrorSign, 4096 ))/4095, 0 )||'-'||
                SalNumberToStrX(SalNumberMod( nErrorSign, 4096 ),0) || ' инициализации ЭЦП VEGA. '||GetIdOper()
.head 10 -      Call MessageErrorEx(strErrorSign)
.head 10 -  ! Set strErrorSign = SalStrRepeatX(' ', 129)
.head 10 +  ! If nErrorSign<64
.head 11 -       Call VegaLoadGetMsgEx(nErrorSign, strErrorSign, 128)
.head 10 +  ! Else
.head 11 -       Call VegaGetMsgEx(nErrorSign, strErrorSign, 128)
.head 10 -  ! Call MessageErrorEx( strErrorSign )
.head 9 +      Else 
.head 10 -      Set strErrorSign = SalStrRepeatX(' ', 129)
.head 10 -      Call nsignMapError2Text(strErrorSign,
     nErrorSign)
.head 10 -      Call MessageErrorEx('>> CIP. ' ||
     StrDosToWinX(strErrorSign))
.head 10 -      Call nsignExitOPSign()
.head 8 -      Return FALSE
.head 7 +      Else 
.head 8 -      Return MessageErrorEx('Неизвестная система ЭЦП: '|| GetSignType())
.head 7 +  ! Комментарий
.head 8 -  ! 'NBU' -- используется ЭЦП НБУ
.head 8 -  ! 'UKR' -- используется ЭЦП Банка 'Украина'
.head 8 -  ! 'VEG' -- используется ЭЦП VEGA
.head 5 +  ! Function: sIni
.head 6 -   Description: Инициализировать ЭЦП
.head 6 +   Returns 
.head 7 -   Boolean: 
.head 6 -   Parameters 
.head 6 +   Static Variables 
.head 7 -   Boolean: bSignInited
.head 7 -   Number: nTim
.head 6 +   Local variables 
.head 7 -  ! String: strUxDateTime
.head 7 -   String: strDay
.head 7 -   Number: nDay
.head 7 -   Number: nErrorSign
.head 7 -   String: strErrorSign
.head 7 -   String: strPinCode
.head 7 -   Number: lTim
.head 7 -   Number: nDaysLeft
.head 7 -   String: strDaysLeftMsg
.head 7 -   String: strFullMsg
.head 7 -   String: strFileName
.head 6 +   Actions 
.head 7 -   Set lTim = nTim
.head 7 -   Set nTim = SalDateHour(SalDateCurrent())*60 + SalDateMinute(SalDateCurrent())
.head 7 +   If bSignInited and nTim-lTim < 5
.head 8 -   Return TRUE
.head 7 +   If GetSignType() = 'UKR' or
   GetSignType() = 'NBU' or GetSignType() = 'VEG'
.head 8 -   Set nErrorSign = NUMBER_Null
.head 8 -   Set strPinCode = ''
.head 8 +   While TRUE
.head 9 +   If SalModalDialog(dlgAskPinCode, hWndForm, strPinCode)
.head 10 +   If GetSignType() = 'NBU'
.head 11 +   If bSignInited
.head 12 -   Set nErrorSign = CLOSE_ZAH()
.head 12 -   Set bSignInited = FALSE
.head 11 -   Set nErrorSign = INIT_ZAH(GetOpenKeyDir(),GetSecretKeyDrv(),GetIdOper(),GetKeyDate(), strPinCode)
.head 11 +   If nErrorSign = -70
.head 12 -   Call MessageErrorEx('Последний день действия секретного ключа '||GetIdOper())
.head 11 +   Else If nErrorSign > -77 And nErrorSign < -70
.head 12 -   Set nDay = - nErrorSign - 70
.head 12 +   If nDay = 1
.head 13 -   Set strDay = 'день'
.head 12 +   Else If nDay = 2 Or nDay = 3 Or nDay = 4
.head 13 -   Set strDay = 'дня'
.head 12 +   Else If nDay = 5 Or nDay = 6
.head 13 -   Set strDay = 'дней'
.head 12 -   Call MessageErrorEx('Действие ключа '||GetIdOper()||' прекращается через ' ||NumberToStr(nDay) || ' ' || strDay)
.head 11 +   Else If nErrorSign
.head 12 -   Break 
.head 10 +   Else If GetSignType() = 'VEG'
.head 11 +   If bSignInited
.head 12 -  ! Set nErrorSign = VegaClose (pVegaSES)
.head 12 -   Set nErrorSign = VegaClose (0)
.head 12 -   Set bSignInited = FALSE
.head 11 -   Call SalStrSetBufferLength( sBuf, 11024+4104+1)
.head 11 -  ! Call SalStrSetBufferLength( pVegaSES, 8192 )
.head 11 -   Set nErrorSign = VegaSetBuf(sBuf,11024+4104)
.head 11 +   If nErrorSign
.head 12 -  ! Call Debug('VegaSetBuf Err '||SalNumberToStrX(nErrorSign,0))
.head 12 -   Break 
.head 11 -   Set nErrorSign = VegaSetDate(SalFmtFormatDateTime(GetBankDate(),'dd/MM/yyyy'))
.head 11 +   If nErrorSign
.head 12 -  ! Call Debug('VegaSetDate Err '||SalNumberToStrX(nErrorSign,0))
.head 12 -   Break 
.head 11 -  ! Set nErrorSign = VegaOpen(GetOpenKeyDir()||'\\Vega.cfg',GetOpenKeyDir()||'\\',pVegaSES)
.head 11 -   Set nErrorSign = VegaOpen(GetOpenKeyDir()||'\\Vega.cfg',GetOpenKeyDir()||'\\',0)
.head 11 +   If nErrorSign
.head 12 -  ! Call Debug('VegaOpen Err '||SalNumberToStrX(nErrorSign,0))
.head 12 -   Break 
.head 11 -   Call SalStrSetBufferLength(sUid,9)
.head 11 +   If GetSecretKeyDrv()='TM'
.head 12 -   Set nErrorSign=ReadTM()
.head 12 +   If nErrorSign
.head 13 -  ! Call Debug('ReadTM Err '||SalNumberToStrX(nErrorSign,0))
.head 13 -   Set nErrorSign=nErrorSign+500
.head 13 -   Break 
.head 12 -   Call VegaSetFmode(1,0)
.head 12 -   Set nErrorSign = VegaLoadSecKey(m_lsSecretKey,PadR(strPinCode,32),sUid,0)
.head 12 -   Call VegaSetFmode(0,0)
.head 11 +   Else 
.head 12 -   Set nErrorSign = VegaLoadSecKey(GetSecretKeyDrv()||'\\'||SalStrRightX('00'||GetGlobalOption('REGNCODE'),2)||GetIdOper()||'.KEY',PadR(strPinCode,32),sUid,0)
.head 11 -  ! Обрабатываем все предупреждения от VegaLoadSecKey - SERG
.head 11 +   If nErrorSign>=1 AND  nErrorSign<=8
.head 12 -   Set strErrorSign = SalStrRepeatX(' ', 129)
.head 12 -   Call VegaGetMsgAux(nErrorSign, strErrorSign, 128 )
.head 12 +   If nErrorSign=1 OR nErrorSign=2
.head 13 -   Set nDaysLeft = VegaDaysLeft(0)
.head 13 -   Set strDaysLeftMsg = 'До истечения срока действия секретного ключа осталось '
||SalNumberToStrX(nDaysLeft,0) || ' ' || GetDayStrByNum(nDaysLeft)
.head 12 +   Else If nErrorSign=4
.head 13 -   Set nDaysLeft = VegaDaysLeftA(0)
.head 13 -   Set strDaysLeftMsg = 'До истечения срока действия ключа администратора осталось '
||SalNumberToStrX(nDaysLeft,0) || ' ' || GetDayStrByNum(nDaysLeft)
.head 12 -   Set strFullMsg = SalStrLeftX(strErrorSign, SalStrLength(strErrorSign)) || SalNumberToChar(13) ||
	strDaysLeftMsg || SalNumberToChar(13) || 'Продолжите работу'
.head 12 -  ! Операционисты должны видеть только предупреждения
с кодом 1 или 2 - остальные пока игнорируем
4 - касается администратора
8 - возникать не должно
.head 12 +   If nErrorSign=1 OR nErrorSign=2
.head 13 -   Call SalMessageBox(strFullMsg , 'Предупреждение', MB_Ok | MB_IconExclamation )
.head 12 -  ! Обнуляем переменную с кодом ошибки
.head 12 -   Set nErrorSign=0
.head 11 +   If nErrorSign
.head 12 -  ! Call Debug('VegaLoadSecKey Err '||SalNumberToStrX(nErrorSign,0))
.head 12 -   Break 
.head 11 -  ! Обрабатываем ситуацию обновления ключа для TouchMemory
.head 11 +   If GetSecretKeyDrv()='TM'
.head 12 +   If VegaSecKeyUpdate(0)  ! было изменение ключа
.head 13 -  ! дампим старый ключ на диск C и прописываем новый на ТМ
.head 13 -  ! Call Debug('Обновление ключа')
.head 13 -  ! Дампить СК на лок. диск запрещается !!!
.head 13 -  ! Set strFileName = 'C:\\' || SalStrRightX('00'||GetGlobalOption('REGNCODE'),2)||GetIdOper()||'.KEY'
.head 13 +  ! If SalFileOpen(hFileKeyBackup, strFileName, OF_Create | OF_Write | OF_Binary )
.head 14 -      Call SalFileWrite(hFileKeyBackup, m_lsSecretKeyCopy, VEGA_SKFILE_SIZE)
.head 14 -      Call SalFileClose(hFileKeyBackup)
.head 14 -      Call SalMessageBox( 'Старый ключ сохранен в файле ' || strFileName ,
'Сообщение',  MB_Ok | MB_IconAsterisk )
.head 13 +  ! Else
.head 14 -      Call SalMessageBox( 'Ошибка открытия файла '|| strFileName ||
' для записи' || SalNumberToChar(13) || 'Старый ключ сохранен не будет',
'Предупреждение', MB_Ok | MB_IconExclamation )
.head 13 -   Set nErrorSign =  WriteTM()
.head 13 +   If nErrorSign = 0
.head 14 -   Call SalMessageBox( 'Секретный ключ успешно обновлен на TouchMemory',
 'Сообщение', MB_Ok | MB_IconAsterisk )
.head 14 -   Call SaveInfoToLog('СК ' || SalStrRightX('00'||GetGlobalOption('REGNCODE'),2)||GetIdOper() ||
' успешно обновлен на TouchMemory')
.head 13 +   Else 
.head 14 -   Set nErrorSign = nErrorSign+500
.head 12 +  ! Else
.head 13 -      Call Debug('Ключ не менялся ')
.head 13 -      Set strFileName = 'C:\\' || SalStrRightX('00'||GetGlobalOption('REGNCODE'),2)||GetIdOper()||'.KEY'
.head 13 -      Call Debug( strFileName )
.head 10 +   Else 
.head 11 +   If bSignInited
.head 12 -   Set nErrorSign = nsignExitOPSign()
.head 12 -   Set bSignInited = FALSE
.head 11 -   Set nErrorSign = nsignInitOPSign(GetOpenKeyDir(),GetSecretKeyDrv(),strPinCode,GetBankMfo(),GetIdOper())
.head 11 +   If nErrorSign
.head 12 -   Break 
.head 10 -   Call SaveInfoToLog('Инициализация ЭЦП - OK')
.head 10 -   Set bSignInited = TRUE
.head 10 -   Return TRUE
.head 9 +   Else 
.head 10 -   Break 
.head 8 +   If nErrorSign                 ! обработка ошибок ЭЦП
.head 9 +   If GetSignType() = 'NBU'
.head 10 -   Set strErrorSign = 'Ошибка '||NumberToStr(nErrorSign) || ' инициализации ЭЦП НБУ. '||GetIdOper()
.head 10 -   Call MessageErrorEx(strErrorSign)
.head 9 +   Else If GetSignType() = 'VEG'
.head 10 -  ! Строку сообщения для ошибок VEGA и TM предоставляет библ. ф-ция VegaGetMsgAux - SERG
.head 10 -  ! Set strErrorSign = 'Ошибка '||SalNumberToStrX( (nErrorSign - SalNumberMod( nErrorSign, 4096 ))/4095, 0 )||'-'||
                SalNumberToStrX(SalNumberMod( nErrorSign, 4096 ),0) || ' инициализации ЭЦП VEGA. '||GetIdOper()
.head 10 -   Set strErrorSign = SalStrRepeatX(' ', 4096)
.head 10 -   Call VegaGetMsgAux(nErrorSign, strErrorSign, 4096)
.head 10 -   Call MessageErrorEx(strErrorSign)
.head 9 +   Else 
.head 10 -   Set strErrorSign = SalStrRepeatX(' ', 129)
.head 10 -   Call nsignMapError2Text(strErrorSign, nErrorSign)
.head 10 -   Call MessageErrorEx( StrDosToWinX(strErrorSign) )
.head 10 -   Call nsignExitOPSign()
.head 8 -   Return FALSE
.head 7 +   Else 
.head 8 -   Return MessageErrorEx('Неизвестная система ЭЦП: '|| GetSignType())
.head 7 +  ! Комментарий
.head 8 -  ! 'NBU' -- используется ЭЦП НБУ
.head 8 -  ! 'UKR' -- используется ЭЦП Банка 'Украина'
.head 8 -  ! 'VEG' -- используется ЭЦП NOKK 'VEGA'
.head 5 +  Function: iSep
.head 6 -  Description: Вставка документа в ARC_RRP
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: nNull
.head 7 -  String: sNull
.head 7 -  Long String: lsNull
.head 7 -  Number: nFetchRes
.head 7 -  String: sRef
.head 7 -  String: sNd
.head 7 -  String: sNama
.head 7 -  String: sNamb
.head 7 -  String: sNazn
.head 7 -  String: sDrec
.head 7 -  String: sDatA
.head 7 -  Date/Time: dDatA
.head 7 -  String: sData
.head 7 -  String: sDatp
.head 7 -  Number: nVob
.head 6 +  Actions
.head 7 -  Set dDatA = SalDateConstruct(
    SalDateYear(m_dDatP),SalDateMonth(m_dDatP), SalDateDay(m_dDatP),
    SalDateHour(SalDateCurrent()),SalDateMinute(SalDateCurrent()),0)
.head 7 -  Set nNull = NUMBER_Null
.head 7 -  Set sNull = ''
.head 7 -  Set lsNull = ''
.head 7 +  If m_nVob=1 or m_nVob=2 or m_nVob=6 or m_nVob=33 or m_nVob=81
.head 8 -  Set nVob = m_nVob
.head 7 +  Else
.head 8 -  Set nVob = GetVobForBadVob()
.head 7 +  While TRUE
.head 8 -  Set m_nErr = -1
.head 8 -  Set m_nRec = 0
.head 8 +  If SalStrTrimX(SalStrUpperX(GetDBMS())) = 'ORACLE'
.head 9 +  If m_nRefF
.head 10 -  Set sRef = SalNumberToStrX(m_nRefF, 0)
.head 9 +  Else
.head 10 -  Set sRef = m_sRef_A             !--SalNumberToStrX(m_nRef, 0)
.head 9 +  If GetGlobalOptionEx('SEPNUM')=2
.head 10 -  Set sNd   = m_sNd
.head 10 -  Set sNama = A.Nam
.head 10 -  Set sNamb = B.Nam
.head 10 -  Set sNazn = m_sNazn
.head 10 -  Set sDrec = m_sDrec
.head 9 +  Else
.head 10 -  Set sNd   = StrWinToDosX(m_sNd)
.head 10 -  Set sNama = StrWinToDosX(A.Nam)
.head 10 -  Set sNamb = StrWinToDosX(B.Nam)
.head 10 -  Set sNazn = StrWinToDosX(m_sNazn)
.head 10 -  Set sDrec = StrWinToDosX(m_sDrec)
.head 9 +  If not SqlPLSQLCommand(hSql(),
  "sep.in_sep(m_nErr,m_nRec,A.Bank,A.Nls,B.Bank,B.Nls,m_nDk,A.S,
              nVob,sNd,A.Kv,m_dDatD,m_dDatP,sNama,sNamb,sNazn,
           m_sNaznk,m_sNazns,A.Okpo,B.Okpo,m_sOperId,sRef,m_nBis,
       lsNull,sNull,nNull,dDatA,sDrec,m_nOtm,m_nRef,nNull,sNull)")
.head 10 -  Break
.head 9 +  If m_nRec > 0 and m_lsSign
.head 10 +  If not SqlPrepare(hSql(), "UPDATE arc_rrp SET sign=:m_lsSign, prty=:m_nPrty WHERE rec=:m_nRec")
.head 11 -  Break
.head 10 +  If not SqlSetLongBindDatatype(1, BLOB_BYTE)
.head 11 -  Break
.head 10 +  If not SqlExecute(hSql())
.head 11 -  Break
.head 8 +  Else
.head 9 -  Set sData = SalFmtFormatDateTime(m_dDatD, 'MM-dd-yyyy')
.head 9 -  Set sDatp = SalFmtFormatDateTime(m_dDatP, 'MM-dd-yyyy')
.head 9 -  Set sDatA = SalFmtFormatDateTime(m_dDatP, 'yyyy-MM-dd ') ||
    NumberToStr(SalDateHour(SalDateCurrent())) || ':' ||
    NumberToStr(SalDateMinute(SalDateCurrent()))
.head 9 +  If not SqlRetrieve(hSql(), "informix.in_sep",
   ':A.Bank,:A.Nls,:B.Bank,:B.Nls,:m_nDk,:A.S,
    :nVob,:sNd,:A.Kv,:sData,:sDatp,:sNama,:sNamb,:sNazn,:m_sNaznk,:m_sNazns,
    :A.Okpo,:B.Okpo,:m_sOperId,:m_nRef, :m_nBis,
    :m_lsSign,:nNull,:nNull,:sDatA,:sDrec,
    :m_nOtm,:m_nRef,:nNull',':m_nErr,:m_nRec')
.head 10 -  Break
.head 9 +  If not SqlSetLongBindDatatype(22, BLOB_BYTE)
.head 10 -  Break
.head 9 +  If not SqlExecute(hSql())
.head 10 -  Break
.head 9 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 10 -  Break
.head 8 +  If m_nErr
.head 9 -  Break
.head 8 -  Return TRUE
.head 7 -  Call SqlRollbackEx(hSql(), 'Неуспех при IN_SEP ' || SalNumberToStrX(m_nErr, 0))
.head 7 -  Return FALSE
.head 2 +  Default Classes
.head 3 -  MDI Window: cBaseMDI
.head 3 -  Form Window:
.head 3 -  Dialog Box:
.head 3 -  Table Window:
.head 3 -  Quest Window:
.head 3 -  Data Field:
.head 3 -  Spin Field:
.head 3 -  Multiline Field:
.head 3 -  Pushbutton:
.head 3 -  Radio Button:
.head 3 -  Option Button:
.head 3 -  Check Box:
.head 3 -  Child Table:
.head 3 -  Quest Child Window: cQuickDatabase
.head 3 -  List Box:
.head 3 -  Combo Box:
.head 3 -  Picture:
.head 3 -  Vertical Scroll Bar:
.head 3 -  Horizontal Scroll Bar:
.head 3 -  Column:
.head 3 -  Background Text:
.head 3 -  Group Box:
.head 3 -  Line:
.head 3 -  Frame:
.head 3 -  Custom Control:
.head 2 +  Application Actions
.head 3 +  On SAM_AppStartup
.head 4 -  Call SplashOpenWindow()
.head 4 -  ! Инициализация начальных  параметров
.head 4 -  ! Call SplashSetStatusText("Инициализация параметров...")
.head 4 -  Call GetConfigSettings()
.head 4 -  !
.head 4 -  ! Call SplashSetStatusText("Инициализация аудита...")
.head 4 -  Call DBSpy_Init(GetDbs())
.head 4 -  !
.head 4 -  ! Call SplashSetStatusText("Инициализация интерфейса...")
.head 4 -  Call SplashCloseWindow()
.head 4 +  If DatabaseLogin(dtWBDate)
.head 5 -  Call SetWorkBankDate( dtWBDate )
.head 5 -  Set nUsers = GetGlobalOptionEx('USRLIMIT')
.head 5 -  Set dtExpDate = SalFmtFormatStrDateTime(
    GetGlobalOption('EXPDATE'), 'dd/MM/yyyy')
.head 5 +  If dtExpDate < SalDateCurrent()
.head 6 -  Call SalMessageBeep(MB_IconStop)
.head 6 -  Call SalMessageBox('Истек срок действия лицензии!',
     'Bars: Лицензирование!', MB_Ok)
.head 6 -  Call SalQuit()
.head 5 +  Else
.head 6 +  ! If IsLicenseValid(GetBankMfo(), GetBankName(), nUsers,
   dtExpDate)
.head 7 +     If dtExpDate - SalDateCurrent() < 31
.head 8 -     Call SalMessageBeep(MB_IconStop)
.head 8 -     Call SalMessageBox(
     'Срок действия лицензии истекает через ' ||
     SalNumberToStrX((dtExpDate -
     SalDateCurrent()), 0) || ' дней!',
     'Bars: Лицензирование!', MB_Ok)
.head 7 -  ! Основной вызов
.head 7 -     Call SalCreateWindow(frm_NC, hWndNULL)
.head 6 +  If IsLicenseValid(GetBankMfo(), GetBankName(), nUsers,
   dtExpDate, FALSE)
.head 7 +  If dtExpDate - SalDateCurrent() < 31
.head 8 -  Call SalMessageBeep(MB_IconStop)
.head 8 -  Call SalMessageBox(
     'Срок действия лицензии истекает через ' ||
     SalNumberToStrX((dtExpDate -
     SalDateCurrent()), 0) || ' дней!',
     'Bars: Лицензирование!', MB_Ok)
.head 7 -  ! Основной вызов
.head 7 -  Call SalCreateWindow(frm_NC, hWndNULL)
.head 6 +  Else
.head 7 -  Call SalMessageBeep(MB_IconStop)
.head 7 -  Call SalMessageBox(
     'Лицензия неверна или истек срок ее действия!',
     'Bars: Лицензирование!', MB_Ok)
.head 7 -  Call SalQuit()
.head 4 +  Else
.head 5 -  Call SalQuit()
.head 3 +  On SAM_SqlError
.head 4 -  Call ShowSqlError(wParam, lParam)
.head 4 -  Return FALSE
.head 3 +  On SAM_AppExit
.head 4 -  Call SaveInfoToLog(MSG_DisconnectDbs() || GetDbs())
.head 4 +  If hSqlAux3()
.head 5 -  Call SqlDisconnect(hSqlAux3())
.head 4 +  If hSqlAux2()
.head 5 -  Call SqlDisconnect(hSqlAux2())
.head 4 +  If hSqlAux()
.head 5 -  Call SqlDisconnect(hSqlAux())
.head 4 +  If hSql()
.head 5 -  Call SqlDisconnect(hSql())
.head 4 -  Call DBSpy_Disconnect()
.head 4 -  Call SalQuit()
.head 1 +  Form Window: frm_NC
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Процессинг платежных файлов от внешних источников
.head 2 -  Icon File:
.head 2 -  Accesories Enabled? Yes
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Automatically Created at Runtime? No
.head 3 -  Initial State: Normal
.head 3 -  Maximizable? Yes
.head 3 -  Minimizable? Yes
.head 3 -  System Menu? Yes
.head 3 -  Resizable? Yes
.head 3 -  Window Location and Size
.head 4 -  Left:   0.88"
.head 4 -  Top:    0.783"
.head 4 -  Width:  12.0"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 6.0"
.head 4 -  Height Editable? Yes
.head 3 -  Form Size
.head 4 -  Width:  Default
.head 4 -  Height: Default
.head 4 -  Number of Pages: Dynamic
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description:
.head 2 -  Named Menus
.head 2 -  Menu
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? No
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Data Field: dTime
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cClock
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Date/Time
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   3.457"
.head 6 -  Top:    0.219"
.head 6 -  Width:  1.143"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Class Default
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 +  Pushbutton: pbRef
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cTimer
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Выполнить
.head 4 -  Window Location and Size
.head 5 -  Left:   4.9"
.head 5 -  Top:    0.073"
.head 5 -  Width:  2.0"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 0.5"
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name: \BARS98\RESOURCE\BMP\Execute.bmp
.head 4 -  Picture Transparent Color: Gray
.head 4 -  Image Style: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call pbRef.Init(nInterval, 0, TRUE)
.head 5 +  On UM_TimerFired
.head 6 -  Call SalSendMsg(hWndForm, SAM_User, 0, 0)
.head 3 +  Pushbutton: pbExit
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cpbCancel
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Выйти
.head 4 -  Window Location and Size
.head 5 -  Left:   9.2"
.head 5 -  Top:    0.073"
.head 5 -  Width:  1.5"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 0.5"
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name: \BARS98\RESOURCE\BMP\Discard.bmp
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalMessageBox("Вы намерены выйти из программы ? ",
   "Внимание !", MB_YesNo) = IDYES
.head 7 -  Call pbRef.Kill()
.head 7 -  Call SalQuit()
.head 6 +  Else
.head 7 -  Return FALSE
.head 6 -  ! Call SalDestroyWindow(hWndForm)
.head 3 +  Child Table: t_w
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   0.014"
.head 6 -  Top:    0.646"
.head 6 -  Width:  11.814"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 4.885"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: 8
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 1000
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: c_time
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Время
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  1.114"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: c_mess
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Сообщение
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  9.843"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 4 -  Functions
.head 4 -  Window Variables
.head 4 -  Message Actions
.head 3 +  Data Field: dDAT
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Date/Time
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   2.029"
.head 6 -  Top:    0.219"
.head 6 -  Width:  1.143"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Date
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 -  Background Text: Банковская дата
.head 4 -  Resource Id: 64674
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   0.229"
.head 5 -  Top:    0.24"
.head 5 -  Width:  1.786"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.177"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 2 +  Functions
.head 3 +  Function: Klient1_PL  ! Цикл по файлам
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sMaska
.head 5 -  String: sMass[*]
.head 5 -  Number: nKol
.head 5 -  Number: nTek
.head 4 +  Actions
.head 5 +  If IsBankDayOpen()
.head 6 -  Set sMaska = strPath1 || '\\$$**'||DD||'.***'
.head 6 -  Call SalArraySetUpperBound(sMass, 1, -1)
.head 6 -  Set nKol = VisDosEnumFiles(sMaska, FA_Standard, sMass)
.head 6 +  If nKol > 0 ! обработка файлов
.head 7 -  Set nTek = 0
.head 7 +  While nTek < nKol
.head 8 +  If not Kontrol1(sMass[nTek])
.head 9 -  Call SqlRollback(hSql())
.head 8 -  Set nTek = nTek + 1
.head 6 +  Else
.head 7 -  Call Mess1('Нет файлов для обработки (' || sMaska || ', ' || Str(nKol) || ' )',0)
.head 5 -  Return TRUE
.head 3 +  Function: Kontrol1    ! Контроль одного файла
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sFile
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: hF
.head 5 -  Number: bOk
.head 4 +  Actions
.head 5 -  Call Mess1( 'Обработка файла '||sFile, 2 )
.head 5 -  ! Set sErrMes = '???'
.head 5 -  Set sErrMes = ''
.head 5 +  Loop
.head 6 -  ! Не открывается монопольно
.head 6 -  Set hF = llopen(strPath1 || '\\' || sFile, 2)
.head 6 +  If hF <= 0
.head 7 -  Set sErrMes = 'Невозможно открыть'
.head 7 -  Set bOk = -1 ! ~ FALSE файл не убивать
.head 7 -  Break
.head 6 -  Set bOk = 0 ! ~ FALSE
.head 6 -  ! Ош в платежах - откат всего пакета
.head 6 +  If not Paket1(hF, sFile)
.head 7 -  Break
.head 6 -  Set bOk = 1 ! ~ TRUE
.head 6 -  Break
.head 5 +  If bOk = 0 or bOk = -1 
.head 6 -  Call SqlRollback(hSql())
.head 5 +  If bOk = 0 or bOk = 1
.head 6 -  Call llclose(hF)
.head 5 +  If bOk = 0 or bOk = -1 
.head 6 +  If sErrMes
.head 7 -  Call MessageError('Файл ' || sFile || ': ' || sErrMes)
.head 5 +  If bOk = 0 or bOk = 1 
.head 6 -  Call BackUpFile(bOk, strPath1, sFile)
.head 5 -  Call Mess1( 'Конец обработки файла '||sFile, 2 )
.head 5 -  Return bOk
.head 3 +  Function: Paket1      ! Обработка одного файла
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: hF
.head 5 -  String: sFile
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sTmp
.head 5 -  Number: nTek
.head 5 -  Number: nT
.head 5 -  Number: nRecLen
.head 5 -  String: sT
.head 5 -  Number: nRRR
.head 5 -  Boolean: bGood
.head 5 -  Number: bExit
.head 5 -  Number: nKolstr
.head 5 -  Number: n
.head 4 +  Actions
.head 5 -  Set bExit= 0
.head 5 -  Set bFl  = 0
.head 5 -  Set nTek = 0
.head 5 -  ! обраб-ка первых 2-х строк
.head 5 -  ! Set sTmp = Spac(298)   !(101+1)+(195+1)
.head 5 -  Set sTmp = Spac(102 + 594)
.head 5 -  Call lllseek(hF, 0, FILE_SeekBegin)
.head 5 -  Set nRRR = llread(hF, sTmp, 298)
.head 5 +  If nRRR = 0	! No strings
.head 6 -  Call Mess1('     файл пуст',0)
.head 6 -  Return FALSE
.head 5 -  ! проверка имени файла
.head 5 +  If SalStrUpperX( Subs(sTmp,103,12) ) != sFile
.head 6 -  Set sErrMes='Имя файла не соответствует имени, данному в файле. '
.head 6 -  Call Mess1('Несоответствие имен файла',1)
.head 6 -  Return FALSE
.head 5 -  Set dDatFA=SalDateConstruct(2000+Val(Subs(sTmp,115,2)),
                Val(Subs(sTmp,117,2)),Val(Subs(sTmp,119,2)),
                Val(Subs(sTmp,121,2)),Val(Subs(sTmp,123,2)),0)
.head 5 -  Set nKolstr=Val(Subs(sTmp,125,6))
.head 5 -  ! Set nRecLen = 620
.head 5 -  Set nRecLen = 594
.head 5 +  If SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO ZAG_A (fn,dat,sde,skr,n,otm)
   VALUES(:sFile,:dDatFA,0,0,:nKolstr,5)")
.head 6 -  Set nRec_A=0
.head 6 -  !
.head 6 +  If SqlPrepareAndExecute(hSql(), "
     SELECT rec
     FROM ZAG_NOK
     WHERE fn=:sFile") and 
   SqlFetchNext(hSql(), nFetchRes)
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call Mess1('Файл ранее обрабатывался',1)
.head 7 -  Return TRUE
.head 6 +  Loop
.head 7 -  ! Set sTmp = Spac(326)
.head 7 -  ! SalNumberToChar(13) || SalNumberToChar(10)
.head 7 -  !
.head 7 -  ! Проверка структуры строки (length=nRecLen,д. заканчиваться на '0D 0A')
.head 7 -  Set sTmp = Spac(nRecLen)
.head 7 -  Call lllseek(hF, 298+nRecLen*nTek, FILE_SeekBegin)
.head 7 -  Set nRRR = llread(hF, sTmp, nRecLen)
.head 7 +  If nRRR = 0	! No more strings
.head 8 -  Break
.head 7 +  If SalStrMidX(sTmp,nRecLen-2,2) != SalNumberToChar(13) || SalNumberToChar(10)
.head 8 -  Call Mess1('     нарушена структура строки ' || SalNumberToStrX(nTek+1,0), 1)
.head 8 -  Set bFl=1  ! -чтобы не выводилось сообщение об отсутствии док. для оплаты
.head 8 -  Set bExit=1
.head 8 -  Break
.head 7 -  ! Вычитываем строку
.head 7 -  Set sTmp = Spac(440)
.head 7 -  Call lllseek(hF, 298+nRecLen*nTek, FILE_SeekBegin)
.head 7 -  ! Set nRRR = llread(hF, sTmp, 326)
.head 7 -  Set nRRR = llread(hF, sTmp, 440)
.head 7 +  If nRRR = 0	! No more strings
.head 8 -  Break
.head 7 +  If not Oplata1(sTmp, sFile)
.head 8 -  ! поставить ROLLBACK и закомментировать Return FALSE
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Set sT=' - '||sFile||' : '||Subs(sTmp,0,47)
.head 8 -  Call ToLog(sT)
.head 8 -  Call ToLog(sErrMes)
.head 8 -  Call SalStatusSetText(hWndForm, sT)
.head 8 -  Set bExit=1
.head 8 -  Break
.head 7 +  ! If Oplata1(sTmp, sFile)
.head 8 -  ! Set bFl=1
.head 8 -  ! Set nT=nTek+1
.head 8 -  ! Call SqlPrepareAndExecute(hSqlAux2(), "
     SELECT rec
     INTO :nRRR
     FROM ZAG_NOK
     WHERE fn=:sFile and rec=:nT")
.head 8 -  ! Set bGood = not SqlFetchNext(hSqlAux2(), nFetchRes)
.head 8 +  ! If bGood and SqlPrepareAndExecute(hSqlAux2(), "
   INSERT
   INTO ZAG_NOK (fn,rec,dat)
   VALUES(:sFile,:nT,sysdate)")
.head 9 -  ! хорошо
.head 9 -  ! поставить COMMIT
.head 9 -       Call SqlCommit(hSqlAux2())
.head 9 -       Set sT=' + '||sFile||' : '||Subs(sTmp,0,47)
.head 9 -       Call ToLog(sT)
.head 9 -       Call SalStatusSetText(hWndForm, sT)
.head 8 +  ! Else
.head 9 -  ! Set tbKLI.nDo1 = tbKLI.nDo1 + 1 ! плохо
.head 9 -       Call SqlRollback(hSqlAux2())
.head 9 -       Set sT=' - '||sFile||' : '||Subs(sTmp,0,47)
.head 9 -       Call ToLog(sT)
.head 9 -       Call SalStatusSetText(hWndForm, sT)
.head 7 +  ! Else
.head 8 -  ! поставить ROLLBACK и закомментировать Return FALSE
.head 8 -      Call SqlRollback(hSqlAux2())
.head 8 -      Set sT=' - '||sFile||' : '||Subs(sTmp,0,47)
.head 8 -      Call ToLog(sT)
.head 8 -      Call ToLog(sErrMes)
.head 8 -      Call SalStatusSetText(hWndForm, sT)
.head 8 -      Set bExit=1
.head 8 -      Break 
.head 7 -  Set nTek=nTek+1
.head 6 +  If bFl=0
.head 7 -  Call Mess1('     в файле отсутствуют документы для оплаты',0)
.head 6 -  Set nT=nTek
.head 6 -  ! вставить в ZAG_NOK и сделать COMMIT
.head 6 +  If bExit=0   
.head 7 -  ! хорошо
.head 7 -  ! поставить COMMIT
.head 7 -  Call SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO ZAG_NOK (fn,rec,dat)
   VALUES(:sFile,:nT,bankdate)")
.head 7 -  Call SqlCommit(hSql())
.head 7 -  Set sT=' + '||sFile||' : '||Subs(sTmp,0,47)
.head 7 -  Call ToLog(sT)
.head 7 -  Call SalStatusSetText(hWndForm, sT)
.head 7 -  Call Mess1('Документы оплачены', 0)
.head 6 +  Else
.head 7 -  ! Set tbKLI.nDo1 = tbKLI.nDo1 + 1 ! плохо
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Set sT=' - '||sFile||' : '||Subs(sTmp,0,47)
.head 7 -  Call ToLog(sT)
.head 7 -  Call SalStatusSetText(hWndForm, sT)
.head 5 +  Else
.head 6 -  ! Set sErrMes = 'Ош вставки в ZAG_A'
.head 6 -  Call Mess1('Ош вставки в ZAG_A',1)
.head 6 -  Return TRUE
.head 5 -  Call ToLog('')
.head 5 -  Call SalStatusSetText(hWndForm, '')
.head 5 +  If bExit=1
.head 6 -  Call Mess1('Обработка файла прекращена, документы не оплачены',1)
.head 6 -  Return FALSE
.head 5 -  Return TRUE
.head 3 +  Function: Oplata1     ! Оплата одного документа
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sTmp
.head 5 -  String: sFile
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  ! Number: nOSTB         !! Плановый остаток
.head 5 -  ! Number: nOSTB8        !! Плановый неиспользованный лимит
.head 5 -  Number: nRef          !! референс (NUMBER_Null для новых)
.head 5 -  String: sTT           !! Код операции
.head 5 -  ! String: s8            !! Особій код НОК
.head 5 -  Number: nIsp
.head 5 -  Number: nVob          !! Вид обработки
.head 5 -  String: sNd           !! № док
.head 5 -  Date/Time: dDoc       !! Дата док
.head 5 -  Date/Time: dPos       !! Дата ввода(поступления в банк)
.head 5 -  String: sNls1         !! Счет-А
.head 5 -  String: sNam1         !! Наим-А
.head 5 -  ! String: sBank1      !! МФО-А
.head 5 -  ! String: sNb1        !! Наим банка-А(м.б. '')
.head 5 -  Number: nKv1          !! Код вал-А
.head 5 -  Number: nS1           !! Сумма-А
.head 5 -  String: sOkpo1        !! ОКПО-А
.head 5 -  String: sNls2         !! Счет-Б
.head 5 -  String: sNam2         !! Наим-Б
.head 5 -  String: sBank2        !! МФО-Б
.head 5 -  ! String: sNb2        !! Наим банка-Б(м.б. '')
.head 5 -  ! Number: nKv2        !! Код вал-Б
.head 5 -  ! Number: nS2         !! Сумма-Б
.head 5 -  String: sOkpo2        !! ОКПО-Б (м.б. '')
.head 5 -  String: sNazn         !! Назначение пл
.head 5 -  String: sDrec         !! Доп реквизиты
.head 5 -  ! String: sOperId     !! Идентификатор ключа опрециониста
.head 5 -  ! Long String: lsSign !! ЭЦП опрециониста
.head 5 -  ! Number: nSk         !! СКП
.head 5 -  Number: nBIS
.head 5 -  String: sNumDoc
.head 5 -  String: sDK
.head 5 -  String: sS
.head 5 -  String: sD
.head 5 -  String: sK
.head 5 -  String: sOB40
.head 5 -  Number: nRec
.head 4 +  Actions
.head 5 -  Set bFl=1
.head 5 -  Set nKv1=Val(Subs(sTmp, 76, 3))
.head 5 -  Set sDK=Subs(sTmp,47,1)
.head 5 -  Set sNd=SalStrTrimX(StrDosToWinX(Subs(sTmp,66,10)))
.head 5 -  ! Код валюты=980
.head 5 +  If nKv1=GetBaseVal(  )
.head 6 -  Set sNls1=SalStrTrimX(Subs(sTmp,10,14))
.head 6 -  Set sNam1=SalStrTrimX(StrDosToWinX(Subs(sTmp,91,38)))
.head 6 -  Set sNls2=SalStrTrimX(Subs(sTmp,33,14))
.head 6 -  Set sNam2=SalStrTrimX(StrDosToWinX(Subs(sTmp,129,38)))
.head 6 -  Set nVob=Val(SalStrTrimX(Subs(sTmp,64,2)))
.head 6 -  Set dDoc=IifD(Subs(sTmp,79,6)=Spac(6),GetBankDate(),
              SalDateConstruct(2000+Val(Subs(sTmp,79,2)),
                Val(Subs(sTmp,81,2)),Val(Subs(sTmp,83,2)),0,0,0))
.head 6 -  Set dPos=IifD(Subs(sTmp,85,6)=Spac(6),GetBankDate(),
              SalDateConstruct(2000+Val(Subs(sTmp,85,2)),
                Val(Subs(sTmp,87,2)),Val(Subs(sTmp,89,2)),0,0,0))
.head 6 -  Set nS1=Val(Subs(sTmp, 48, 16))
.head 6 -  Set sNazn=SalStrTrimX(StrDosToWinX(Subs(sTmp,167,160)))
.head 6 -  Set sDrec=SalStrTrimX(StrDosToWinX(Subs(sTmp,327,60)))
.head 6 -  Set sBank2=SalStrTrimX(Subs(sTmp,24,9))
.head 6 -  Set sOkpo1=SalStrTrimX(Subs(sTmp,392,14))
.head 6 -  ! ОКПО1???
.head 6 +  ! If sOkpo1='0'
.head 7 -      Set sOkpo1=''
.head 6 +  If sOkpo1='0' or sOkpo1='' or V_Okpo(sOkpo1)!=sOkpo1
.head 7 -  Call Mess1('     ошибка заполнения реквизита ОКПО А ( док.№'||sNd||', сч.А '||sNls1||', МФО Б '||sBank2||', сч.Б '||sNls2||' )', 1 )
.head 7 -  Return FALSE
.head 6 -  Set sOkpo2=SalStrTrimX(Subs(sTmp,406,14))
.head 6 -  ! проверять ОКПО2
.head 6 +  ! If sOkpo2='0'
.head 7 -      Set sOkpo2=''
.head 6 +  If sOkpo2='0' or sOkpo2='' or V_Okpo(sOkpo2)!=sOkpo2
.head 7 -  Call Mess1('     ошибка заполнения реквизита ОКПО Б ( док.№'||sNd||', сч.А '||sNls1||', МФО Б '||sBank2||', сч.Б '||sNls2||' )', 1 )
.head 7 -  Return FALSE
.head 6 -  Set nRef=NUMBER_Null
.head 6 -  Set nBIS=Val(SalStrTrimX(Subs(sTmp,435,2)))
.head 6 -  Set sNumDoc = SalStrTrimX(Subs(sTmp,420,9))
.head 6 +  If sDK='2'   ! информационный дебет
.head 7 +  If nS1>0
.head 8 -  Call ccDoc.SetDoc(nRef, 'NCU', 1, 6, sNd, dDoc, dPos,
     GetBankDate(), GetBankDate(), 
     sNls1,   sNam1,        GetBankMfo(), '', nKv1, nS1, sOkpo1, 
     NCUnlsb, GetBankName(),GetBankMfo(), '', nKv1, nS1, sOkpo2, 
     sNazn, sDrec, GetIdOper(), '', NUMBER_Null, 0)
.head 8 +  If NOT ccDoc.oDoc()
.head 9 -  Call Mess1('     документ №'||sNd||' на сумму '|| SalNumberToStrX(nS1/100,2) ||' грн. не оплачен ( сч.А '||sNls1||', МФО Б '||sBank2||', сч.Б '||sNls2||' )',1)
.head 9 -  Return FALSE
.head 8 +  If NOT SqlPrepareAndExecute(hSql(), "INSERT INTO operw (REF,TAG,VALUE) VALUES (:ccDoc.m_nRef,'IDF',:sFile)")
.head 9 -  Set sErrMes = 'Ош вставки IDF'
.head 9 -  Return FALSE
.head 7 -  Call ccDoc.SetDoc(ccDoc.m_nRef, 'NC2', 2, nVob, sNd, dDoc, dPos,
     GetBankDate(), GetBankDate(), 
     sNls1, sNam1, GetBankMfo(), '', nKv1, nS1, sOkpo1, 
     sNls2, sNam2, sBank2,       '', nKv1, nS1, sOkpo2, 
     sNazn, sDrec, GetIdOper(),  '', NUMBER_Null, 0)
.head 7 -  Set ccDoc.m_nBis = nBIS
.head 7 -  Set ccDoc.m_sRef_A = sNumDoc
.head 7 +  If nBIS = 1
.head 8 +  If ccDoc.m_sDrec
.head 9 -  Set ccDoc.m_sNazns = '11'
.head 8 +  Else
.head 9 -  Set ccDoc.m_sNazns = '10'
.head 7 +  Else
.head 8 -  Set ccDoc.m_sNazns = '33'
.head 7 +  If not ccDoc.sDoc()
.head 8 -  Set sErrMes = 'Ош подписи документа'
.head 8 -  Return FALSE
.head 7 +  If not ccDoc.iSep()
.head 8 -  Set sErrMes = 'Ошибка вставки в arc_rrp '
.head 8 -  Return FALSE
.head 7 +  If ccDoc.m_nErr > 0
.head 8 -  Set sErrMes = 'Ошибка вставки в arc_rrp: '||Str(ccDoc.m_nErr)
.head 8 -  Return FALSE
.head 7 -  Set nRec_A = nRec_A+1
.head 7 +  If NOT SqlPrepareAndExecute(hSql(), "UPDATE arc_rrp SET fn_a=:sFile, rec_a=:nRec_A, dat_a=:dDatFA WHERE rec=:ccDoc.m_nRec") 
OR NOT SqlPrepareAndExecute(hSql(), "DELETE FROM tzapros WHERE rec=:ccDoc.m_nRec") 
.head 8 -  Set sErrMes = 'Ош вставки BIS'
.head 8 -  Return FALSE
.head 6 +  Else If sDK='3'   ! информационный кредит
.head 7 +  ! If nS1>0
.head 8 -  Call ccDoc.SetDoc(nRef, 'NCU', 1, 6, sNd, dDoc, dPos,
     GetBankDate(), GetBankDate(), 
     sNls1,   sNam1,        GetBankMfo(), '', nKv1, nS1, sOkpo1, 
     NCUnlsb, GetBankName(),GetBankMfo(), '', nKv1, nS1, sOkpo2, 
     sNazn, sDrec, GetIdOper(), '', NUMBER_Null, 0)
.head 8 +  If NOT ccDoc.oDoc()
.head 9 -  Call Mess1('     документ №'||sNd||' на сумму '|| SalNumberToStrX(nS1/100,2) ||' грн. не оплачен ( сч.А '||sNls1||', МФО Б '||sBank2||', сч.Б '||sNls2||' )',1)
.head 9 -  Return FALSE
.head 8 +  If NOT SqlPrepareAndExecute(hSql(), "INSERT INTO operw (REF,TAG,VALUE) VALUES (:ccDoc.m_nRef,'IDF',:sFile)")
.head 9 -  Set sErrMes = 'Ош вставки IDF'
.head 9 -  Return FALSE
.head 7 -  Call ccDoc.SetDoc(nRef, 'NC2', 3, nVob, sNd, dDoc, dPos,
     GetBankDate(), GetBankDate(), 
     sNls1, sNam1, GetBankMfo(), '', nKv1, nS1, sOkpo1, 
     sNls2, sNam2, sBank2,       '', nKv1, nS1, sOkpo2, 
     sNazn, sDrec, GetIdOper(),  '', NUMBER_Null, 0)
.head 7 -  Set ccDoc.m_nBis = nBIS
.head 7 -  Set ccDoc.m_sRef_A = sNumDoc
.head 7 +  ! If nBIS = 1
.head 8 +  If ccDoc.m_sDrec
.head 9 -  Set ccDoc.m_sNazns = '11'
.head 8 +  Else 
.head 9 -  Set ccDoc.m_sNazns = '10'
.head 7 +  ! Else
.head 8 -  Set ccDoc.m_sNazns = '33'
.head 7 -  Set ccDoc.m_sNazns = '10'
.head 7 +  If not ccDoc.sDoc()
.head 8 -  Set sErrMes = 'Ош подписи документа'
.head 8 -  Return FALSE
.head 7 +  If not ccDoc.iSep()
.head 8 -  Set sErrMes = 'Ошибка вставки в arc_rrp '
.head 8 -  Return FALSE
.head 7 +  If ccDoc.m_nErr > 0
.head 8 -  Set sErrMes = 'Ошибка вставки в arc_rrp: '||Str(ccDoc.m_nErr)
.head 8 -  Return FALSE
.head 7 -  Set nRec_A = nRec_A+1
.head 7 +  If NOT SqlPrepareAndExecute(hSql(), "UPDATE arc_rrp SET fn_a=:sFile, rec_a=:nRec_A, dat_a=:dDatFA WHERE rec=:ccDoc.m_nRec") 
OR NOT SqlPrepareAndExecute(hSql(), "DELETE FROM tzapros WHERE rec=:ccDoc.m_nRec") 
.head 8 -  Set sErrMes = 'Ош вставки BIS'
.head 8 -  Return FALSE
.head 6 +  Else ! кредитовый платеж
.head 7 -  Call ccDoc.SetDoc(nRef, 'NC1', 1, nVob, sNd, dDoc, dPos,
     GetBankDate(), GetBankDate(), 
     sNls1, sNam1, GetBankMfo(), '', nKv1, nS1, sOkpo1, 
     sNls2, sNam2, sBank2,       '', nKv1, nS1, sOkpo2, 
     sNazn, sDrec, GetIdOper(), '', NUMBER_Null, 0)
.head 7 -  ! Set ccDoc.m_sRef_A = sNumDoc
.head 7 +  If NOT ccDoc.oDoc()
.head 8 -  Call Mess1('     ошибка при оплате документа №'||sNd||' на сумму '|| SalNumberToStrX(nS1/100,2) ||' грн. ( сч.А '||sNls1||', МФО Б '||sBank2||', сч.Б '||sNls2||' )',1)
.head 8 -  Return FALSE
.head 7 +  If NOT SqlPrepareAndExecute(hSql(), 
"INSERT INTO operw (REF,TAG,VALUE)
 VALUES (:ccDoc.m_nRef,'IDF',:sFile)")
.head 8 -  Set sErrMes = 'Ош вставки IDF'
.head 8 -  Return FALSE
.head 6 +  If nS1>0
.head 7 -  Call Mess1('     обработан документ №'||sNd||' на сумму '|| SalNumberToStrX(nS1/100,2) ||' грн. ( сч.A '||sNls1||', МФО Б '||sBank2||', сч.Б '||sNls2||' )',0)
.head 6 -  Return TRUE
.head 5 +  Else
.head 6 -  Call Mess1('     документ №'||sNd||' : неверен код валюты',1)
.head 6 -  Return FALSE
.head 3 +  Function: BackUpFile
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: nMode
.head 5 -  String: strPath
.head 5 -  String: strFn
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sBackUpPath
.head 5 -  File Handle: hFile
.head 4 +  Actions
.head 5 +  If VisDosExist(strBKUPDir) ! do backup
.head 6 -  Set sBackUpPath = strBKUPDir || '\\' ||
    SalFmtFormatDateTime(dDAT, 'yyMMdd')
.head 6 -  Set sBackUpPath = sBackUpPath || IifS(nMode=1, '\\OK',
    '\\NOT')
.head 6 +  If not VisDosExist(sBackUpPath)
.head 7 +  If not SalFileCreateDirectory(sBackUpPath)
.head 8 -  Call SalMessageBox('Не могу создать каталог:' ||
     sBackUpPath, 'Внимание', MB_IconStop)
.head 8 -  Return FALSE
.head 6 -  Call SalFileCopy(strPath || '\\' || strFn, sBackUpPath ||
     '\\' || strFn, TRUE)
.head 5 -  Call SalFileOpen(hFile, strPath || '\\' || strFn, OF_Delete)
.head 5 -  Return TRUE
.head 3 +  Function: ToLog
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sMes
.head 4 +  Static Variables
.head 5 -  Boolean: bOpen
.head 5 -  File Handle: hLogFile
.head 4 +  Local variables
.head 5 -  String: strFileName
.head 5 -  String: strTmpStr
.head 4 +  Actions
.head 5 +  If not bOpen
.head 6 -  Set strFileName = GetLogDir() || '\\' ||
    SalStrLeftX(GetUserLoginName(), 8) || '.LOG'
.head 6 +  If Not SalFileOpen(hLogFile, strFileName, OF_Exist)
.head 7 -  Call SalFileOpen(hLogFile, strFileName,
     OF_Create | OF_Text | OF_Write | OF_Append |
     OF_Share_Deny_None)
.head 6 +  Else
.head 7 -  Call SalFileOpen(hLogFile, strFileName,
     OF_Text | OF_Write | OF_Append |
     OF_Share_Deny_None)
.head 6 -  Set bOpen = TRUE
.head 5 -  Set strTmpStr = SalFmtFormatDateTime(SalDateCurrent(),
    ddMMyy() || ' hhh:mm:ss')
.head 5 -  Set strTmpStr = strTmpStr || ' ' || sMes
.head 5 -  Call SalFilePutStr(hLogFile, StrWinToDosX(strTmpStr))
.head 5 +  If not sMes
.head 6 -  Call SalFileClose(hLogFile)
.head 6 -  Set bOpen = FALSE
.head 3 +  Function: Mess1
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sStr
.head 5 -  Number: nColor
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nNewRow
.head 5 -  String: sTime
.head 4 +  Actions
.head 5 -  Set sTime = SalFmtFormatDateTime(SalDateCurrent(), 'hhhh:mm:ss ')
.head 5 +  If sStr != ''
.head 6 -  Set nNewRow = SalTblInsertRow(t_w,TBL_MaxRow)
.head 6 -  Call SalTblSetRowFlags(t_w,nNewRow,ROW_New,FALSE)
.head 6 -  Call SalTblSetContext(t_w,nNewRow)
.head 6 -  Set t_w.c_time = sTime
.head 6 -  Set t_w.c_mess = sStr
.head 6 -  Call SalTblSetFocusRow(t_w, nNewRow)
.head 6 +  If nColor = 1
.head 7 -  Call SalTblSetCellTextColor(t_w.c_mess,COLOR_Red,TRUE)
.head 6 +  Else If nColor = 2
.head 7 -  Call SalTblSetCellTextColor(t_w.c_mess,COLOR_DarkGreen,TRUE)
.head 5 -  Call SalUpdateWindow(hWndForm)
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  Number: nInterval
.head 3 -  String: strPath1
.head 3 -  String: strDocSource
.head 3 -  String: AMFO
.head 3 -  String: AQH
.head 3 -  String: DD
.head 3 -  : ccDoc
.head 4 -  Class: cDocNOKK
.head 3 -  Number: nTmp
.head 3 -  String: strBKUPDir
.head 3 -  String: sErrMes
.head 3 -  !
.head 3 -  Number: nBaseVal
.head 3 -  String: sBD
.head 3 -  String: sD
.head 3 -  String: sM
.head 3 -  Boolean: fBusy
.head 3 -  Boolean: bFl
.head 3 -  Number: nRec_A
.head 3 -  Date/Time: dDatFA
.head 3 -  String: NCUnlsb
.head 3 -  Number: nO
.head 3 -  !
.head 3 -  Number: nWinFW
.head 3 -  Number: nWinFH
.head 3 -  Number: nWinX0
.head 3 -  Number: nWinY0
.head 3 -  Number: nWinWidth
.head 3 -  Number: nWinHeigh
.head 3 -  Number: nTblX0
.head 3 -  Number: nTblY0
.head 3 -  Number: nTblWidth
.head 3 -  Number: nTblHeigh
.head 3 -  Number: nX
.head 3 -  Number: nY
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SetRole(hSql(), 'start1')
.head 4 -  Call SetRole(hSql(), 'sbb_nc')
.head 4 -  Call SalCenterWindow(hWndForm)
.head 4 -  Call SalUseRegistry(FALSE, '')
.head 4 -  Set nBaseVal = GetBaseVal()
.head 4 -  Set nInterval = SalGetProfileInt(INI_ElektroKlients,
    'Interval', 600, GetIniFileName())
.head 4 -  Call SalGetProfileString('Files', 'F_$A', '',
     strPath1, GetIniFileName())
.head 4 -  Call SalGetProfileString(INI_ElektroKlients, 'BackUpDir',
     GetPrnDir(), strBKUPDir, GetIniFileName())
.head 4 -  Call SalGetProfileString('Files', 'DocSource', '',
     strDocSource, GetIniFileName())
.head 4 -  Set dDAT = GetBankDate()
.head 4 -  Set AMFO = GetBankMfo()
.head 4 -  Set AQH = GetBankName()
.head 4 +  If not SqlPrepareAndExecute( hSql(), "
        SELECT nlsb INTO :NCUnlsb
        FROM tts WHERE tt='NCU' " ) or 
   not SqlFetchNext( hSql(), nFetchRes )
.head 5 -  Set NCUnlsb=''
.head 4 -  Set nO = 0
.head 4 -  Call SalWaitCursor(FALSE)
.head 3 +  On SAM_User
.head 4 +  If fBusy
.head 5 -  Return TRUE
.head 4 -  Set fBusy = TRUE
.head 4 +  If IsBankDayOpen()
.head 5 +  If GetSignOn()
.head 6 +  If not ccDoc.sIni()
.head 7 -  Set nO=nO+1
.head 7 +  If nO=3
.head 8 -  Call pbRef.Kill()
.head 8 -  Call SalQuit()
.head 7 -  Set fBusy = FALSE
.head 7 -  Return FALSE
.head 4 -  ! Set sBD=GetGlobalOption('BANKDATE' )
.head 4 -  Set sBD = SalFmtFormatDateTime( dDAT, 'MM/dd/yyyy' )
.head 4 -  Set sD=SalStrMidX(sBD,3,2)
.head 4 -  Set sM=SalStrMidX(sBD,0,2)
.head 4 -  Set DD=sM||sD
.head 4 -  Call Klient1_PL()
.head 4 -  Set fBusy = FALSE
.head 3 +  On SAM_Close
.head 4 +  If SalMessageBox("Вы намерены прекратить работу? ",
   "Внимание!", MB_YesNo) = IDYES
.head 5 -  Call SalQuit()
.head 4 +  Else
.head 5 -  Return FALSE
.head 3 +  On SAM_Destroy
.head 4 +  If ccDoc.bSignInited
.head 5 -  Set nTmp = CLOSE_ZAH()
.head 4 +  If SqlPrepareAndExecute(hSql(), "
   DELETE
   FROM zag_nok
   WHERE DAT<=bankdate-20") and SqlCommitEx(hSql(),
   'Очистка zag_nok')
.head 5 -  Return TRUE
.head 4 +  Else
.head 5 -  Return FALSE
.head 3 +  On WM_Size
.head 4 -  Call SalGetWindowSize( hWndForm, nWinFW, nWinFH )
.head 4 +  If nWinFW >= 9
.head 5 +  If nWinFH<4
.head 6 -  Call SalSetWindowSize( hWndForm, nWinFW, 4 )
.head 4 +  Else
.head 5 +  If nWinFH<4
.head 6 -  Call SalSetWindowSize( hWndForm, 9, 4 )
.head 5 +  Else
.head 6 -  Call SalSetWindowSize( hWndForm, 9, nWinFH )
.head 4 -  Call GetClientRect( hWndForm, nWinX0, nWinY0, nWinWidth, nWinHeigh )
.head 4 -  Call SalGetWindowLoc( hWndForm.frm_NC.pbExit, nX, nY )
.head 4 -  Call SalSetWindowLoc( hWndForm.frm_NC.pbExit,
	SalPixelsToFormUnits( hWndForm, nWinWidth, FALSE  )-1.6, nY )
.head 4 -  !
.head 4 -  Call SalSetWindowSize( hWndForm.frm_NC.t_w,
	SalPixelsToFormUnits( hWndForm.frm_NC.t_w, nWinWidth, FALSE )-0.03,
	SalPixelsToFormUnits( hWndForm.frm_NC.t_w, nWinHeigh, TRUE  )-0.65)
.head 4 -  !
.head 4 -  Call GetClientRect( hWndForm.frm_NC.t_w, nTblX0, nTblY0, nTblWidth, nTblHeigh )
.head 4 -  Call SalTblSetColumnWidth( hWndForm.frm_NC.t_w.c_mess,
	SalPixelsToFormUnits( hWndForm.frm_NC.t_w, nTblWidth, FALSE )-1.9 )
.head 4 -  !
.head 4 -  Call SalInvalidateWindow( hWndForm )
