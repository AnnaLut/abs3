set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'Інвестиції у державні цінні папери';
  l_tablinesdef := '50';
  l_tabname     := 'V_CP_DGP008';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 1, 'ID', 'N', 'Вн.~№ ЦП', null, 1, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 2, 'REF', 'N', 'REF~придбання', null, 2, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 3, 'REF_SALE', 'N', 'REF~продажу', null, 3, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 11, 'G001', 'C', 'Номер~балансового~рахунку~1', null, 11, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 12, 'G002', 'C', 'РЕПО~(так/ні)~2', null, 12, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 13, 'G003', 'C', 'Тип~боргового~цінного~паперу~3', null, 13, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 14, 'G004', 'C', 'Валюта~(код)~4', null, 14, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 15, 'G005', 'C', 'Класиф.~ЦП~(1-торговельні,~ 2-у наяв. для прод.,~ 3-утрим. до пог.)~5', null, 15, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 16, 'G006', 'C', 'Наявність~особливих~умов~6', null, 16, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 17, 'G007', 'C', 'Назва~емітента~7', null, 17, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 18, 'G008', 'C', 'Код~ЄДРПОУ~8', null, 18, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 19, 'G009', 'C', 'Пов"язана~сторона~9', null, 19, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);

  bars_metabase.add_column(l_tabid, 21, 'G010', 'C', 'Серія~облігацій~10', null, 21, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 22, 'G011', 'C', 'Номер~аукціону~11', null, 22, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 23, 'G012', 'C', 'ISIN~12', null, 23, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 24, 'G013', 'C', 'Періодичність~сплати~купону~13', null, 24, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 25, 'G014', 'C', 'Дата~придбання~14', null, 25, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 26, 'G015', 'C', 'Назва~продавця~15', null, 26, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 27, 'G016', 'C', 'Відсоткова~ставка~на початок~звітного~періоду~16', null, 27, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 28, 'G017', 'C', 'Ціна~придбання~17', null, 28, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 29, 'G018', 'C', 'Кількість~на початок~звітного~періоду, шт.~18', null, 29, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 30, 'G019', 'C', 'Номінальна~вартість~на початок~звітного~періоду, грн~19', null, 30, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 31, 'G020', 'C', 'Неамортизований~дисконт/премія~на початок~звітного~періоду~20', null, 31, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 32, 'G021', 'C', 'Нараховані/~прострочені/~невизнані~% станом ~на кінець ~дня звітної ~дати~21', null, 32, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 33, 'G022', 'C', 'Сплачений~накопичений~купонний~дохід~на початок~звітного~періоду~22', null, 33, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 34, 'G023', 'C', 'Сума резерву,~фактично сформ.~на початок~зв. періоду~(зг. пост. № 23)~23', null, 34, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 35, 'G024', 'C', 'Сума~резерву,~розрахованого згідно~МСБО 39~на початок ~звітного~періоду~24', null, 35, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 36, 'G025', 'C', 'Сума~переоцінки~на початок~звітного~періоду,~до вимог~МСФЗ~25', null, 36, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 37, 'G026', 'C', 'Балансова~вартість~на початок~звітного періоду~(згідно МСФЗ)~26', null, 37, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);

  bars_metabase.add_column(l_tabid, 39, 'G027', 'C', 'Категорія~якості~за МСФЗ~на початок~періоду~27', null, 39, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 40, 'G028', 'C', 'Рівень~на початок~звітного~періоду~28', null, 40, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 41, 'G029', 'C', 'Придбання~(випуск)~за звітний~період~(ном. вартість)~29', null, 41, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 42, 'G030', 'C', 'Придбання~(випуск)~за звітний~період,~кількість~30', null, 42, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 43, 'G031', 'C', 'Ціна~придбання~31', null, 43, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 44, 'G032', 'C', 'Сума~фактично~сплачених~коштів~за придбані~ЦП (сума~за договором)~32', null, 44, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 45, 'G033', 'C', 'Сума~сплачених~накопичених~купонів~у ціні~придбання~33', null, 45, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 46, 'G034', 'C', 'Форма~проведення~розрахунку~34', null, 46, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 47, 'G035', 'C', 'Дата~придбання~35', null, 47, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 48, 'G036', 'C', 'Назва~продавця~36', null, 48, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 49, 'G037', 'C', 'Реалізація~(погашення)~за звітний~період~(ном. вартість)~37', null, 49, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 50, 'G038', 'C', 'Реалізація~(погашення)~за звітний~період,~кількість~38', null, 50, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 51, 'G039', 'C', 'Ціна~реалізації~39', null, 51, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 52, 'G040', 'C', 'Сума~фактично~отриманих~коштів~за продані~ЦП (сума~за договором)~40', null, 52, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 53, 'G041', 'C', 'Накопичений~купонний~дохід,~отриманий~у ціні~реалізації~41', null, 53, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 54, 'G042', 'C', 'Форма~проведення~розрахунку~42', null, 54, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 55, 'G043', 'C', 'Дата~реалізації~43', null, 55, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 56, 'G044', 'C', 'Номер~біржової~угоди~44', null, 56, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 57, 'G045', 'C', 'Назва~покупця~45', null, 57, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 58, 'G046', 'C', 'Вид~цінного~паперу~46', null, 58, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 59, 'G047', 'C', 'Вид~договору~/контракту~47', null, 59, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 60, 'G048', 'C', 'Вид~операції~48', null, 60, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 61, 'G049', 'C', 'Дата~погашення~49', null, 61, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 62, 'G050', 'C', 'Дата~оферти~(найближча~після звітної~дати)~50', null, 62, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 63, 'G051', 'C', 'Дата~виплати~купону~(найближча~після звітної~дати)~51', null, 63, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 64, 'G052', 'C', 'Відсоткова~ставка~на кінець~дня звітної~дати~52', null, 64, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 65, 'G053', 'C', 'Кількість~станом~на кінець~дня звітної~дати, шт.~53', null, 65, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 66, 'G054', 'C', 'Номінальна~вартість~на кінець~дня звітної~дати~54', null, 66, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 67, 'G055', 'C', 'Неамортизований~дисконт~/премія~на кінець~дня звітної~дати~55', null, 67, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 68, 'G056', 'C', 'Нараховані/~прострочені/~невизнані~відсотки станом~на кінець~дня звітної~дати~56', null, 68, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 69, 'G057', 'C', 'Накопичений~(непогашений)~купонний~дохід~на кінець~дня звітної~дати~57', null, 69, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 70, 'G058', 'C', 'Сума~резерву,~фактично~сформованого~на кінець~дня звітної~дати~(№ 23)~58', null, 70, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 71, 'G059', 'C', 'Сума~резерву,~розрахованого~згідно~вимог~МСБО 39~на кінець~дня звітної~дати~59', null, 71, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 72, 'G060', 'C', 'Сума~переоцінки~на кінець~дня звітної~дати,~МСФЗ~60', null, 72, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 73, 'G061', 'C', 'Балансова~вартість~на кінець~дня звітної~дати~(згідно МСФЗ)~61', null, 73, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 74, 'G062', 'C', 'Справедлива~вартість ЦП~згідно~МСБО 39~на звітну~дату~за 1 шт~62', null, 74, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);

  bars_metabase.add_column(l_tabid, 76, 'G063', 'C', 'Категорія~якості~за МСФЗ~на кінець~дня звітної~дати~63', null, 76, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);

  bars_metabase.add_column(l_tabid, 78, 'G064', 'C', 'Рівень~станом~на звітну~дату~64', null, 78, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 79, 'G065', 'C', 'Торговий~дохід протягом~звітного~періоду~65', null, 79, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 80, 'G066', 'C', 'Сума~процентного~доходу~протягом~зв.періоду~(в т.ч. аморт.~дисконту/премії)~66', null, 80, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 81, 'G067', 'C', 'Визнання~результату~при первісному~визнанні~(рахунки 6390,7390)~67', null, 81, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 82, 'G068', 'C', 'Курсова~різниця,~яка виникає~під час~виплати~купонного~доходу~68', null, 82, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 83, 'G069', 'C', 'Результат~переоцінки~залишку~внаслідок~зміни~валютних~курсів~69', null, 83, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 84, 'G070', 'C', 'Сума процентного~доходу протягом~звітного періоду~70', null, 84, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 85, 'G071', 'C', 'Отриманий~купон.дохід~за звітний~період~71', null, 85, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 86, 'G072', 'C', 'Амортизація~дисконту~протягом~звітного~періоду~72', null, 86, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 87, 'G073', 'C', 'Амортизація~премії~протягом~звітного~періоду~73', null, 87, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 88, 'G074', 'C', 'Сумма~інших~сукупних~доходів~та витрат~від зміни~у вартості ЦП ~МСФЗ~74', null, 88, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 89, 'G075', 'C', 'Біржове~котирування~на звітну~дату~для оцінки~75', null, 89, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 90, 'G076', 'C', 'Торгова~площадка~76', null, 90, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 91, 'G077', 'C', 'Дата~котирування~77', null, 91, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 92, 'G078', 'C', 'Зміни~у рівні~ЦП для~паперів, що були ~на початок~звітного періоду~(Так/Ні)~78', null, 92, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 93, 'G079', 'C', 'У разі~зміни у~рівні ЦП~, зазначити~причину~такої~зміни~79', null, 93, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 94, 'G080', 'C', 'Рейтинг~контрагента~на звітну~дату~80', null, 94, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 95, 'G081', 'C', 'Назва~агенства~81', null, 95, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 96, 'G082', 'C', 'Дата~проведення~оцінки~82', null, 96, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 97, 'G083', 'C', 'Джерело~інформації~83', null, 97, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 98, 'G084', 'C', 'Внутрішній~рейтинг~контрагента~за оцінкою Банка~станом~на звітну~дату~84', null, 98, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 99, 'G085', 'C', 'Віднесення~рейтингу,~присвоєного~міжнародним~рейтинговим~агентсвом~85', null, 99, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid,100, 'G086', 'C', 'Класифікація~державних ЦП~для примітки~86', null,100, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);




  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 1, 'Для відладки звітів DGP (вибірка з sec_audit за поточний день)', '', '', 'ALL', '', '', '', '', 'sPar=V_CP_DGP_SEC_AUDIT[DESCR=>Для відладки звітів DGP (вибірка з sec_audit за поточний день)][ACCESSCODE=>1][showDialogWindow=>false][OpenInWindow]', null);

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
