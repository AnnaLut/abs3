set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'FOREX: Архів угод';
  l_tablinesdef := '30';
  l_tabselect_statement := '';
  l_tabname     := 'V_FXS_ARCHIVE';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 1, 'DAT', 'D', 'Дата~FOREX', '1.1', 10, 3, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 2, 'DAT_A', 'D', 'Дата А', '1.2', 10, 16, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 3, 'DAT_B', 'D', 'Дата Б', '1.2', 10, 23, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 4, 'DEAL_TAG', 'N', 'Ід. FOREX', '1.1', 22, 2, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 5, 'KODB', 'A', 'BIC/МФО~партнера', '1.5', 12, 35, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 6, 'KURS', 'N', 'Курс~угоди', '.8', 22, 34, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 7, 'KVA', 'N', 'Вал. А~купівля', '.7', 22, 15, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 8, 'KVB', 'N', 'Вал. Б~продаж', '.8', 22, 22, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 9, 'MFO', 'C', 'МФО', '.8', 12, 57, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 10, 'NB', 'A', 'Назва партнера', '3.5', 35, 40, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 11, 'NTIK', 'C', '№ тікету', '1.2', 15, 4, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 12, 'OKPO', 'C', 'ЗОКПО', '1.3', 14, 56, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 13, 'RATEA', 'N', '%%~ставка А', '.9', 22, 18, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 14, 'RATEB', 'N', '%%~ставка Б', '.9', 22, 25, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 15, 'REF', 'N', 'Референс~основний', '1.5', 22, 13, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '/barsroot/documentview/default.aspx?ref=:REF', '', 0);
  bars_metabase.add_column(l_tabid, 17, 'REFA', 'N', 'Референс А', '1.5', 22, 20, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '/barsroot/documentview/default.aspx?ref=:REFA', '', 0);
  bars_metabase.add_column(l_tabid, 19, 'REFB', 'N', 'Референс 1Б', '1.3', 22, 32, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '/barsroot/documentview/default.aspx?ref=:REFB', '', 0);
  bars_metabase.add_column(l_tabid, 20, 'REFB2', 'N', 'Референс 2Б', '1.3', 22, 33, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '/barsroot/documentview/default.aspx?ref=:REFB2', '', 0);
  bars_metabase.add_column(l_tabid, 23, 'RNK', 'N', 'РНК', '1', 22, 50, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 24, 'SUMA', 'N', 'Сума А', '1.5', 22, 17, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 25, 'SUMB', 'N', 'Сума Б', '1.5', 22, 24, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 26, 'SUMC', 'N', 'Сума, куплена~для кілєнта', '1.5', 22, 19, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 27, 'SUMP', 'N', 'Форвард Доходи(+)~витрати(-) від~ переоцінки', '1.7', 22, 44, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 28, 'SUMPA', 'N', 'Форвард~Сума переоцінки~вал. А', '1.5', 22, 42, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 29, 'SUMPB', 'N', 'Форвард~Сума переоцінки~вал. Б', '1.5', 22, 43, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 30, 'SWAP_TAG', 'N', 'Ід. SWAP', '1.1', 22, 1, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 35, 'RECPAR', 'C', 'Редагування', '', null, 99, 0, 0, 0, 0, '', '', 0, 0, '', 0, 1, 0, 'sPar=FX_DREC[NSIFUNCTION][ACCESSCODE=>2][PROC=>PUL.Set_Mas_Ini(''DEAL_TAG'',:DEAL_TAG, ''X'' )][EXEC=>BEFORE]', '', 0);
  bars_metabase.add_column(l_tabid, 36, 'SWI_REF', 'C', 'Вхідне~SWIFT~повідомл.', '1', null, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '/barsroot/documentview/view_swift.aspx?swref=:SWI_REF', '', 0);
  bars_metabase.add_column(l_tabid, 37, 'SWO_REF', 'C', 'Вихідне~SWIFT~повідомл.', '.9', null, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '/barsroot/documentview/view_swift.aspx?swref=:SWO_REF', '', 0);
  bars_metabase.add_column(l_tabid, 38, 'SOSM', 'C', 'SOSM', '', null, 14, 0, 0, 0, 0, '', '', 0, 0, '', 0, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 39, 'SOSA', 'C', 'SOSA', '', null, 21, 0, 0, 0, 0, '', '', 0, 0, '', 0, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 40, 'SOSB', 'C', 'SOSB', '', null, 30, 0, 0, 0, 0, '', '', 0, 0, '', 0, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 41, 'FX_TYPE', 'C', 'Тип угоди', '1', 30, 11, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 42, 'F092', 'C', 'F092', '.5', null, 12, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 41, 'Друк тікету', '', '', 'EACH', '', '', '', '', '/barsroot/tools/print_frx.aspx?frt=forex_tic'||chr(38)||'p_ref=:REF'||chr(38)||'p_deal_tag=:DEAL_TAG'||chr(38)||'OpenInWindow=true', 118);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 80, 'Перегляд бухгалтерської моделі', '', '', 'EACH', '', '', '', '', 'sPar=V_FOREX_ACCOUNT_MODEL[CONDITIONS=> DEAL_TAG=:DEAL_TAG][DESCR=>Перегляд бухгалтерської моделі][ACCESSCODE=>1][showDialogWindow=>false][OpenInWindow] ', 37);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 90, 'Документи по угоді', '', '', 'EACH', '', '', '', '', 'sPar=V_FOREX_DEAL_DOCUMENTS[NSIFUNCTION][CONDITIONS=> DEAL_TAG=:DEAL_TAG][DESCR=>Документи по угоді][ACCESSCODE=>1][showDialogWindow=>false] [OpenInWindow]', 55);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 100, 'Перегляд документу на вал - А', '', '', 'EACH', '', '', '', '', '/barsroot/documentview/default.aspx?ref=:REFA'||chr(38)||'OpenInWindow=true', 113);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 110, 'Перегляд документу на FOREX', '', '', 'EACH', '', '', '', '', '/barsroot/documentview/default.aspx?ref=:REF'||chr(38)||'OpenInWindow=true', 111);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 120, 'Перегляд документу 1 на вал. Б', '', '', 'EACH', '', '', '', '', '/barsroot/documentview/default.aspx?ref=:REFB'||chr(38)||'OpenInWindow=true', 115);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 130, 'Перегляд документу 2 на вал. Б', '', '', 'EACH', '', '', '', '', '/barsroot/documentview/default.aspx?ref=:REFB2'||chr(38)||'OpenInWindow=true', 112);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 140, 'Редагування реквізитів договору', '', '', 'EACH', '', '', '', '', '/barsroot/Forex/ChangeParamFXSDeal/ChangeParamFXSDeal?DEAL_TAG=:DEAL_TAG'||chr(38)||'OpenInWindow=true', 71);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 200, 'Зформувати SWIFT повідомлення', 'SWIFT.Gen3xxMsg(300, :DEAL_TAG)', '', 'EACH', 'Зформувати SWIFT повідомлення?', 'SWIFT повідомлення зформовано!', '', '', '', 46);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 210, 'Прив''язати вхідне SWIFT повідомлення', '', '', 'EACH', '', '', '', '', '', 58);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 230, 'Відв''язати вхідне SWIFT повідомлення', 'SWIFT.UnLink3XXMsg(300,NUMBER_Null,:DEAL_TAG,''O'')', '', 'EACH', 'Відв''язати SWIFT повідомлення?', 'SWIFT повідомлення відв''язано!', '', '', '', 108);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 235, 'Перегляд вхідного SWIFT повідомлення', '', '', 'EACH', '', '', '', '', '/barsroot/documentview/view_swift.aspx?swref=:SWI_REF'||chr(38)||'OpenInWindow=true', 116);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 250, 'Прив''язати вихідне SWIFT повідомлення', '', '', 'EACH', '', '', '', '', '', 117);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 251, 'Відв''язати вихідне SWIFT повідомлення', 'SWIFT.UnLink3XXMsg(300,null,:DEAL_TAG,''I'')', '', 'EACH', 'Відв''язати SWIFT повідомлення?', 'SWIFT повідомлення відв''язано!', '', '', '', 110);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 255, 'Перегляд вихідного SWIFT повідомлення', '', '', 'EACH', '', '', '', '', '/barsroot/documentview/view_swift.aspx?swref=:SWO_REF'||chr(38)||'OpenInWindow=true', 116);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 300, 'Зміна терміну для СВОП', 'FOREX.LONG_TERM ( 0,   :SWAP_TAG  ,   :DEAL_TAG ) ', '', 'EACH', '', '', '', '', '/barsroot/Forex/RegularDeals/RegularDeals', 164);

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 1, null, ':SWAP_TAG is not null and :SWAP_TAG>0', 2, 'RGB(255,255,224)');

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'REF');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 10, l_newcolid, ':SOSM IN (-1,-2)', 1, 'Color_Red');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'REF');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 11, l_newcolid, ':SOSM=1', 1, 'COLOR_Green');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'REF');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 12, l_newcolid, ':SOSM=3', 1, 'RGB(0,0,205)');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'REF');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 13, l_newcolid, ':SOSM=5', 1, 'COLOR_Black');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'REFA');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 20, l_newcolid, ':SOSA IN (-1,-2)', 1, 'Color_Red');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'REFA');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 21, l_newcolid, ':SOSA=1', 1, 'COLOR_Green');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'REFA');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 22, l_newcolid, ':SOSA=3', 1, 'RGB(0,0,205)');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'REFA');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 23, l_newcolid, ':SOSA=5', 1, 'COLOR_Black');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'REFB');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 30, l_newcolid, ':SOSB IN (-1,-2)', 1, 'Color_Red');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'REFB');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 31, l_newcolid, ':SOSB=1', 1, 'COLOR_Green');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'REFB');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 32, l_newcolid, ':SOSB=3', 1, 'RGB(0,0,205)');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'REFB');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 33, l_newcolid, ':SOSB=5', 1, 'COLOR_Black');
  end if;

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
