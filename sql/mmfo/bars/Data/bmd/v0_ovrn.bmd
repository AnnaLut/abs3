set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'OVRN-0) <<Солідарний>> Овердрафт. Нові дог.';
  l_tablinesdef := '';
  l_tabselect_statement := '';
  l_tabname     := 'V0_OVRN';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 1, 'ACC', 'N', 'Консол~рах~ACC8', '1', null, 90, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 2, 'CC_ID', 'C', '+Зовніш.~№ дог', '1.3', null, 4, 0, 0, 1, 0, '', '', 1, 0, '', 0, 0, 0, '', 'FunNSIEdit("[PROC=>OVRN.AUTOR("||Str(:ND)||",:X)][PAR=>:X(SEM=Підстава,TYPE=S)][QST=>Дог.№ "|| :CC_ID ||", учасників " ||Str(:KOL)||". Авторизуємо ?][MSG=>ОК,Комісію стягнено, Ліміти виставлено!]")', 0);
  bars_metabase.add_column(l_tabid, 3, 'IR0', 'N', '+Ставка~покриття~Оверд', '.5', null, 11, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', 'SetProcParN( :ACC, :KV, STRING_Null, STRING_Null)', 0);
  bars_metabase.add_column(l_tabid, 4, 'IR1', 'N', '+Ставка~покриття~Пасиву', '.5', null, 12, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', 'SetProcParN( :ACC, :KV, STRING_Null, STRING_Null)', 0);
  bars_metabase.add_column(l_tabid, 5, 'KOL', 'N', 'Кіл~учас', '.5', null, 20, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 6, 'LIMIT', 'N', '+Загальний~Ліміт~(початковий)', '1.7', null, 10, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', 'FunNSIEditF("V3_OVRN[NSIFUNCTION][PROC=>OVRN.PUL_OVR( 1, "||Str(:ND)||","||Str(:ACC)||")][EXEC=>BEFORE]",0 )', 0);
  bars_metabase.add_column(l_tabid, 7, 'ND', 'N', 'Реф.дог~---------------~ВСІ РАХУНКИ', '1.3', null, 21, 0, 1, 0, 0, '', '', 1, 0, '', 1, 0, 1, '/barsroot/customerlist/custacc.aspx?type=3'||chr(38)||'nd=:ND', 'ShowAccList(0,AVIEW_ALL,AVIEW_ReadOnly|AVIEW_AllOptions," a.acc in (select acc from nd_acc where nd = :ND union all select acc from cc_accp where nd =:ND ) " )', 0);
  bars_metabase.add_column(l_tabid, 8, 'OSTC', 'N', 'Поточ.~заг.зал.', '1.3', null, 25, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 9, 'OST_FREE', 'N', 'Поточ.~заг.ресурс', '1.3', null, 26, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 10, 'RNK', 'N', 'РНК~головний~------------~ДОД.РЕКВ.', '1.3', null, 3, 0, 0, 0, 1, '', '', 1, 0, '', 1, 0, 1, '/barsroot/CreditUi/NewCredit/?custtype=2'||chr(38)||'nd=:ND'||chr(38)||'tagOnly=true', '', 0);
  bars_metabase.add_column(l_tabid, 11, 'SDATE', 'D', '+Дата~початку~дії', '1.3', null, 6, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 12, 'SOS', 'N', 'Стан дог~---------~ПОДІЇ', '.7', null, 94, 0, 0, 0, 1, '', '', 1, 0, '', 1, 0, 0, 'sPar=CC_SOB_W[NSIFUNCTION][ACCESSCODE=>4][PROC=>PUL.Set_Mas_Ini(''ND'',:ND, ''X'' )][EXEC=>BEFORE][showDialogWindow=>false]', 'FunNSIEditFFiltered("CC_SOB", 0, "nd = "|| Str( :ND)  ) ', 0);
  bars_metabase.add_column(l_tabid, 13, 'WDATE', 'D', '+Дата~завешення', '1.3', null, 7, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 14, 'KV', 'N', 'Вал', '', null, 99, 0, 0, 0, 0, '', '', 1, 0, '', 1, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 15, 'NLS8', 'C', 'Рахунок~косолідації~-------------~УЧАСНИКИ', '1.5', null, 1, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, 'sPar=V2_OVRN[NSIFUNCTION][CONDITIONS=>ND=:ND][ACCESSCODE=>5][PROC=>OVRN.PUL_OVR(1,:ND,:ACC)][EXEC=>BEFORE][showDialogWindow=>false]', 'FunNSIEditFFiltered("V2_OVRN[PROC=>OVRN.PUL_OVR( 1, "||Str(:ND)||","||Str(:ACC)||")][EXEC=>BEFORE]", 5 ,"nd="||Str(:ND)  )', 0);
  bars_metabase.add_column(l_tabid, 16, 'NLS', 'C', '+Головний~Рах.', '1.5', null, 2, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', 'Sel027 ( hWndMDI, 2, :ND, Str( :RNK ),Str( :ACC )  ) ', 0);
  bars_metabase.add_column(l_tabid, 17, 'DAY', 'N', '+День~сплат~%%', '.5', null, 18, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 18, 'AVT', 'B', 'Автори~зован', '', null, 99, 0, 0, 0, 0, '', '', 1, 0, '', 1, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 19, 'PD', 'N', '+Ліміт~ від ЧКО~(%)', '.5', null, 19, 0, 0, 0, 0, '', '#0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 20, 'ISP ', 'N', '+Відпов~виконав.', '.5', null, 30, 0, 0, 0, 1, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 21, 'METR', 'B', '+Дифер.~% ст', '.5', null, 13, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 22, 'IDR', 'N', '+№ шкали~Дифер.~% ст', '.5', null, 14, 0, 0, 0, 1, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 23, 'NZ', 'B', 'Без~забеспеч.', '.3', null, 5, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 24, 'KF', 'C', 'Код~МФО', '1.5', null, 40, 0, 0, 0, 1, '', '', 0, 0, '', 1, 0, 0, '', '', 0);

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('CUSTOMER');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 10, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица CUSTOMER для описания сложного поля таблицы V0_OVRN.');
  end if;

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('CC_SOS');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'SOS');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 12, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица CC_SOS для описания сложного поля таблицы V0_OVRN.');
  end if;

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('STAFF$BASE');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ID');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 20, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица STAFF$BASE для описания сложного поля таблицы V0_OVRN.');
  end if;

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('INT_OVR_RANG');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ID');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 22, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица INT_OVR_RANG для описания сложного поля таблицы V0_OVRN.');
  end if;

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('BANKS_RU');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'MFO');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 24, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица BANKS_RU для описания сложного поля таблицы V0_OVRN.');
  end if;

  -- добавляем описание сортировки
  bars_metabase.add_sortorder(l_tabid, 7, 1, 'ASC ');

  -- добавляем описание процедур
  bars_metabase.add_actiontbl(l_tabid, 'DELETE', 'OVRN.DEL_master ( :ND )');

  -- добавляем описание процедур
  bars_metabase.add_actiontbl(l_tabid, 'INSERT', 'OVRN.ADD_master (  0, 0,    :CC_ID, :SDATE, :WDATE, :LIMIT, :IR0, :IR1 , :NLS, :KV, :DAY, :PD , :ISP, :METR, :IDR , :NZ )');

  -- добавляем описание процедур
  bars_metabase.add_actiontbl(l_tabid, 'UPDATE', 'OVRN.ADD_master (:ND, :ACC, :CC_ID, :SDATE, :WDATE, :LIMIT, :IR0, :IR1 , :NLS, :KV, :DAY, :PD, :ISP,:METR, :IDR , :NZ) ');

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 1, 'Договірні Ліміти ОВР ', '', '', 'EACH', '', '', '', '', 'sPar=V3D_OVRN[ACCESSCODE=>1][PROC=>PUL.PUT ( ''ND'', :ND) ][EXEC=>BEFORE][showDialogWindow=>false]', 47);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 5, 'Перегляд рах., пов`язвних з Дог.', '', '', 'EACH', '', '', '', '', 'sPar=ACCOUNT1[CONDITIONS=>(ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 82);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 10, 'Проц/картка рах.консолідації', '', '', 'EACH', '', '', '', '', '/barsroot/viewaccounts/accountform.aspx?type=2'||chr(38)||'acc=:ACC'||chr(38)||'rnk='||chr(38)||'accessmode=1 ', 60);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 15, 'Графік загальних Лімітів ', '', '', 'EACH', '', '', '', '', 'sPar=V3_OVRN[NSIFUNCTION][ACCESSCODE=>0][PROC=>OVRN.PUL_OVR(1,:ND,:ACC)][EXEC=>BEFORE][showDialogWindow=>false]', 83);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 20, 'Авторизація угоди в цілому', '', '', 'EACH', ':CC_ID , уч. :KOL?', '', '', '', 'sPar=[PROC=>OVRN.AUTOR(:ND,:X)][PAR=>:X(SEM=Підстава,TYPE=S)][MSG=>ОК !]', 109);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 24, 'Дод.Інформація (в т.ч. для БКІ )', '', '', 'EACH', '', '', '', '', '/barsroot/CreditUi/NewCredit/?custtype=2'||chr(38)||'nd=:ND'||chr(38)||'tagOnly=true', 99);

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
