set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'Данi про клас-цiю кред.операцiй та розр-к резерву по ЮО';
  l_tablinesdef := '';
  l_tabname     := 'INV_CCK_UL';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 1, 'G00', 'D', 'Дата~формування~iнвентаризацii', .5, 10, 1, 1, 1, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 2, 'G01', 'C', '01~Найменування~пiдроздiлу', 3, 70, 2, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 3, 'G02', 'C', '02~МФО~пiдроздiлу', 2, 30, 3, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 4, 'G03', 'C', '03~ЄДРПОУ~позичальника', 1, 10, 4, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 5, 'G04', 'C', '04~Назва~позичальника', 3, 70, 5, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 6, 'G05', 'C', '05~Клiєнт(к)/Неклiєнт(нк)~банку', .5, 2, 6, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 7, 'G06', 'N', '06~Ознака~iнсайдера~згiдно~KL_K061', .5, 22, 7, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 8, 'G07', 'N', '07~Резидент/Нерезидент', .5, 22, 8, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 9, 'G08', 'N', '08~Сума~за угодою~в валютi~договору', 1, 22, 9, 1, 0, 0, 0, '', '0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 10, 'G09', 'N', '09~Валюта~кредиту', .5, 22, 10, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 11, 'G10', 'C', '10~№ кредитної~угоди', 1.5, 20, 11, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 12, 'G11', 'C', '11~Дата~укладання~угоди', 1, 10, 12, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 13, 'G12', 'C', '12~Дата~фактичної~видачi~кредиту', 1, 10, 13, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 14, 'G13', 'C', '13~Дата~погашення~кредиту~за угодою', 1, 10, 14, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 15, 'G14', 'C', '14~Чинна~дата~погашення ', 1, 10, 15, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 16, 'G15', 'C', '15~Дата~вiднесення~на рахунок~прострочених', 1, 10, 16, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 17, 'G16', 'C', '16~Дата~вiднесення~на рахунок~сумнiвних', 1, 10, 17, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 18, 'G17', 'C', '17~Галузь~економiки', 1, 5, 18, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 19, 'G18', 'C', '18~Приналежнiсть~до малого~бiзнесу  ', .5, 2, 19, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 20, 'G19', 'C', '19~Форма~власностi', 1, 2, 20, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 21, 'G20', 'C', '20~Номер~балансового~рахунку', 1, 4, 21, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 22, 'G21', 'N', '21~Заборгованiсть~в валютi~кредиту', 1.5, 22, 22, 1, 0, 0, 0, '', '0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 23, 'G22', 'N', '22~Заборгованiсть~в нац.валютi', 1.5, 22, 23, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G22)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 24, 'G23', 'N', '23~Сума~позабалансових~неризикових~зобов"язань', 1.5, 22, 24, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G23)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 25, 'G24', 'N', '24~Сума~позабалансових~ризикових~зобов"язань ', 1.5, 22, 25, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G24)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 26, 'G25', 'N', '25~Дiюча~ставка~(% рiчних)', .5, 22, 26, 1, 0, 0, 0, '', '0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 27, 'G26', 'N', '26~Нарахованi~несплаченi~доходи~(не простр)', 1.5, 22, 27, 1, 0, 0, 0, '', '0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 28, 'G27', 'N', '27~Нарахованi~простроченi~доходи~до 31 дня', 1.5, 22, 28, 1, 0, 0, 0, '', '0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 29, 'G28', 'N', '28~Нарахованi~простроченi~доходи~понад 31 день ', 1.5, 22, 29, 1, 0, 0, 0, '', '0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 30, 'G29', 'N', '29~Нарахованi~сумнiвнi~доходи ', 1.5, 22, 30, 1, 0, 0, 0, '', '0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 31, 'G30', 'N', '30~Сума~несплачених~вiдсоткiв', 1.5, 22, 31, 1, 0, 0, 0, '', '0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 32, 'G31', 'C', '31~Заходи щодо повернненя~по прострочених кредитах', 3, 2, 32, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 33, 'G32', 'C', '32~Заходи щодо повернненя~по сумнiвних кредитах', 3, 2, 33, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 34, 'G33', 'N', '33~Фiн.рез-т~у поперед.роцi~приб(-)/збиток(-)', 1.5, 22, 34, 1, 0, 0, 0, '', '0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 35, 'G34', 'N', '34~Фiн.рез-т~у поперед.кварталi~приб(-)/збиток(-)', 1.5, 22, 35, 1, 0, 0, 0, '', '0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 36, 'G35', 'C', '35~Оцiнка~фiн.стану~позичальника~(клас) ', .5, 1, 36, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 37, 'G36', 'C', '36~Категорiя~ризику~кредитної~операцiї ', .5, 1, 37, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 38, 'G37', 'C', '37~Обслуговування~боргу~позичальником ', .5, 1, 38, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 39, 'G38', 'C', '38~Вид застави', .5, 2, 39, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 40, 'G39', 'C', '39~Мiсцезнаходження~застави  ', .5, 1, 40, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 41, 'G40', 'C', '40~Номер~договору застави ', .5, 20, 41, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 42, 'G41', 'C', '41~Дата укладання~договору застави ', .5, 10, 42, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 43, 'G42', 'C', '42~Назва~заставленого майна', 1, 70, 43, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 44, 'G43', 'C', '43~Одиниця~вимiру~застави', .5, 10, 44, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 45, 'G44', 'N', '44~Кiль-то~одиниць~застави ', .5, 22, 45, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 46, 'G45', 'C', '45~Реєстр.номер~в держ.реєстрi~прав вл-тi', 1, 20, 46, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 47, 'G46', 'N', '46~Загальна вартiсть~застави ', 1.5, 22, 47, 1, 0, 0, 0, '', '0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 48, 'G47', 'C', '47~Дата~останньої перевiрки~наявностi застави', .5, 10, 48, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 49, 'G48', 'C', '48~Дата~переоцiнки~застави ', .5, 10, 49, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 50, 'G49', 'N', '49~Переглянута~оцiночна вартiсть~застави', .5, 22, 50, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G49)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 51, 'G50', 'C', '50~Номер~договору страхування~застави', 1, 20, 51, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 52, 'G51', 'C', '51~Дата укладання~договору~страхування застави ', 1, 10, 52, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 53, 'G52', 'C', '52~Вид забезпечення~KL_S031', .5, 30, 53, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 54, 'G53', 'N', '53~Сума забезпечення~ до розрахунку~резерву', 1.5, 22, 54, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G53)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 55, 'G54', 'N', '54~Сума заборгованостi~до розрахунку~резерву', 1.5, 22, 55, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G54)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 56, 'G55', 'N', '55~Коеф-т~резервування~(%)', .5, 22, 56, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 57, 'G56', 'N', '56~Розрахункова~сума резерву ', 1.5, 22, 57, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G56)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 58, 'G57', 'N', '57~Фактична~сума резерву~за рах-к прибутку', 1.5, 22, 58, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G57)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 59, 'G58', 'N', '58~Фактична~сума резерву~за рах-к вал.витрат', 1.5, 22, 59, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G58)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 60, 'G59', 'N', '59~Вiдхилення~суми~резерву ', .5, 22, 60, 1, 0, 0, 0, '', '0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 61, 'G60', 'N', '60~Пеня та штрафи', 1.5, 22, 61, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G60)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 62, 'G61', 'N', '61~Код типу~проблемної~заборгованостi', .5, 22, 62, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 63, 'G62', 'N', '62~Розрахункова~сума резерву~Простр. та сумн.%', 1.5, 22, 63, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G62)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 64, 'G63', 'N', '63~Фактична~сума резерву~Простр. та сумн.%', 1.5, 22, 64, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G63)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 65, 'G64', 'N', '64~Сума~неамортизованого~дисконту ', 1.5, 22, 65, 1, 0, 0, 0, '', '0.00', 1, 0, 'sum(inv_cck_ul.G64)', 0, 0, 0, '', '', 0);

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
