declare
  type t_rec_metaextrnval is record (
     tabid      meta_extrnval.tabid%type,
     colid      meta_extrnval.colid%type,
     srccolname meta_columns.colname%type,
     tab_alias  meta_extrnval.tab_alias%type,
     tab_cond   meta_extrnval.tab_cond%type,
     src_cond   meta_extrnval.src_cond%type);
  type t_tab_metaextrnval is table of t_rec_metaextrnval;
  l_arr_metaextrnval t_tab_metaextrnval := t_tab_metaextrnval();

  type t_rec_metabrowsetbl is record (
     hosttabid   meta_browsetbl.hosttabid%type,
     hostcolid   meta_browsetbl.hostcolkeyid%type,
     addcolname  meta_columns.colname%type,
     varcolname  meta_columns.colname%type,
     addtabalias meta_browsetbl.addtabalias%type,
     cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_metabrowsetbl is table of t_rec_metabrowsetbl;
  l_arr_metabrowsetbl t_tab_metabrowsetbl := t_tab_metabrowsetbl();

  type t_rec_metafiltertbl is record (
     tabid    meta_filtertbl.tabid%type,
     colid    meta_filtertbl.colid%type,
     fltcode  meta_filtertbl.filter_code%type,
     flag_ins meta_filtertbl.flag_ins%type,
     flag_del meta_filtertbl.flag_del%type,
     flag_upd meta_filtertbl.flag_upd%type);
  type t_tab_metafiltertbl is table of t_rec_metafiltertbl;
  l_arr_metafiltertbl t_tab_metafiltertbl := t_tab_metafiltertbl();

  l_tabid       meta_tables.tabid%type;
  l_tablinesdef meta_tables.linesdef%type;
  l_tabname     meta_tables.tabname%type;
  l_tabsemantic meta_tables.semantic%type;
  l_newtabid    meta_tables.tabid%type;
  l_newcolid    meta_columns.colid%type;
  l_varcolid    meta_columns.colid%type;
  l_colname     meta_columns.colname%type;
  i             number;

begin

  l_tabsemantic := 'Сесії передачі К-файлів';
  l_tablinesdef := '30';
  l_tabname := 'V_OB_CORP_SESS';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then
  
     -- получаем код для новой таблицы
     l_tabid := bars_metabase.get_newtabid();

     -- добавляем описание таблицы в БМД
     bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, null, l_tablinesdef);

  -- если таблица описана в БМД
  else

     -- обновляем семантику таблицы
     bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

     -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
     i := 0;
     for k in (select e.tabid, e.colid, e.tab_cond, c.colname, e.tab_alias, e.src_cond
                 from meta_extrnval e, meta_columns c
                where e.srctabid=l_tabid
                  and e.srctabid=c.tabid and e.srccolid=c.colid)
     loop
        i := i + 1;
        l_arr_metaextrnval.extend;
        l_arr_metaextrnval(i).tabid      := k.tabid;
        l_arr_metaextrnval(i).colid      := k.colid;
        l_arr_metaextrnval(i).srccolname := k.colname;
        l_arr_metaextrnval(i).tab_alias  := k.tab_alias;
        l_arr_metaextrnval(i).tab_cond   := k.tab_cond;
        l_arr_metaextrnval(i).src_cond   := k.src_cond;
     end loop;

     -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
     i := 0;
     for k in (select b.hosttabid, b.hostcolkeyid, b.addtabalias,
                      c.colname k_colname, v.colname v_colname, v.semantic v_colsemantic
                 from meta_browsetbl b, meta_columns c, meta_columns v
                where b.addtabid=l_tabid
                  and b.addtabid=c.tabid and b.addcolkeyid=c.colid
                  and b.addtabid=v.tabid and b.var_colid=v.colid)
     loop
        i := i + 1;
        l_arr_metabrowsetbl.extend;
        l_arr_metabrowsetbl(i).hosttabid   := k.hosttabid;
        l_arr_metabrowsetbl(i).hostcolid   := k.hostcolkeyid;
        l_arr_metabrowsetbl(i).addcolname  := k.k_colname;
        l_arr_metabrowsetbl(i).varcolname  := k.v_colname;
        l_arr_metabrowsetbl(i).addtabalias := k.addtabalias;
        l_arr_metabrowsetbl(i).cond_tag    := k.v_colsemantic;
     end loop;

     -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
     i := 0;
     for k in (select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
                 from meta_filtertbl
                where filter_tabid = l_tabid and tabid <> l_tabid)
     loop
        i := i + 1;
        l_arr_metafiltertbl.extend;
        l_arr_metafiltertbl(i).tabid    := k.tabid;
        l_arr_metafiltertbl(i).colid    := k.colid;
        l_arr_metafiltertbl(i).fltcode  := k.filter_code;
        l_arr_metafiltertbl(i).flag_ins := k.flag_ins;
        l_arr_metafiltertbl(i).flag_del := k.flag_del;
        l_arr_metafiltertbl(i).flag_upd := k.flag_upd;
     end loop;

     -- удаляем описание полей
     bars_metabase.delete_metatables(l_tabid);
  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 1, 'ID', 'N', 'Номер синхронізації',             1.8, '', 1, 0, 1 ,0, 0, '', '', 1, 0, '', 0, 0, 1, 'sPar=V_OB_CORP_SALDO[CONDITIONS=>V_OB_CORP_SALDO.KF=SUBSTR(:MFO,1,6) AND V_OB_CORP_SALDO.SESS_ID=:ID][ACCESSCODE=>1][showDialogWindow=>false]');
  bars_metabase.add_column(l_tabid, 2, 'MFO', 'C', 'МФО даних синхронізації',        3, '', 2, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '');  
  bars_metabase.add_column(l_tabid, 3, 'FILE_DATE', 'D', 'Дата даних',               2, '', 3, 0, 0 ,0, 0, '', '', 1, 0, '', 0, 0, 1, '');
  bars_metabase.add_column(l_tabid, 4, 'CORP', 'C', 'Номер корпорації',              3, '', 4, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, 'sPar=V_OB_CORP_SESS_CORP[CONDITIONS=>V_OB_CORP_SESS_CORP.MFO=SUBSTR(:MFO,1,6) AND V_OB_CORP_SESS_CORP.ID=:ID][ACCESSCODE=>1][NSIFUNCTION][showDialogWindow=>false]');
  bars_metabase.add_column(l_tabid, 5, 'SYNCTIME', 'D', 'Дата та час~синхронізації', 2, '', 5, 0, 0 ,0, 1, '', '', 1, 0, '', 0, 0, 1, '');  
  bars_metabase.add_column(l_tabid, 6, 'STATE', 'C', 'Статус',                       2, '', 6, 0, 0 ,0, 0, '', '', 1, 0, '', 0, 0, 1, '');
  bars_metabase.add_column(l_tabid, 7, 'ERR_LOG', 'C', 'Текст помилки',              3, '', 7, 0, 0 ,0, 0, '', '', 1, 0, '', 0, 0, 1, '');
  

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);
  
  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 1, 'Формування К-файлу' , 'KFILE_PACK.FILL_DATA(:P_DATE, :P_CORP)', ':P_DATE(SEM=ДАТА,TYPE=D), :P_CORP(SEM=НОМЕР КОРПОРАЦІЇ,TYPE=С)', 'ONCE', '', '', '', '', '', 4);
  bars_metabase.add_nsifunction(l_tabid, 2, 'Вивантажити К-файли', 'KFILE_PACK.CALL_WEB_SERV(:ID)',      '', 'SELECTED_ONE', '', '', '', '', '', 7);
 -- добавляем описание сортировки
  bars_metabase.add_sortorder(l_tabid, 1, 1, 'DESC');
 
  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_arr_metaextrnval.count
  loop
     l_newcolid := bars_metabase.get_colid(l_tabid, l_arr_metaextrnval(i).srccolname);
     if (l_newcolid is not null) then
        bars_metabase.add_extrnval(
           l_arr_metaextrnval(i).tabid,
           l_arr_metaextrnval(i).colid,
           l_tabid,
           l_newcolid,
           l_arr_metaextrnval(i).tab_alias,
           l_arr_metaextrnval(i).tab_cond);
     end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_arr_metabrowsetbl.count
  loop
     l_newcolid := bars_metabase.get_colid(l_tabid, l_arr_metabrowsetbl(i).addcolname);
     l_varcolid := bars_metabase.get_colid(l_tabid, l_arr_metabrowsetbl(i).varcolname);
     if (l_newcolid is not null and l_varcolid is not null) then
        bars_metabase.add_browsetbl( 
           l_arr_metabrowsetbl(i).hosttabid,
           l_tabid,
           l_arr_metabrowsetbl(i).addtabalias,
           l_arr_metabrowsetbl(i).hostcolid,
           l_newcolid,
           l_varcolid,
           l_arr_metabrowsetbl(i).cond_tag);
     end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_arr_metafiltertbl.count
  loop
     bars_metabase.add_filtertbl(
        l_arr_metafiltertbl(i).tabid,
        l_arr_metafiltertbl(i).colid,
        l_tabid,
        l_arr_metafiltertbl(i).fltcode,
        l_arr_metafiltertbl(i).flag_ins,
        l_arr_metafiltertbl(i).flag_del,
        l_arr_metafiltertbl(i).flag_upd);
  end loop;
end;
/
commit;
/

