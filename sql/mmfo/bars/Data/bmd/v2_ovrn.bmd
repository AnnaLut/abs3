set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'OVRN-2) Учасники <<Солідарного>> Овердрафту';
  l_tablinesdef := '';
  l_tabselect_statement := '';
  l_tabname     := 'V2_OVRN';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 1, 'ACCC', 'N', 'Консол~рах~ACC8', '', null, 98, 0, 0, 0, 0, '', '', 0, 0, '', 1, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 2, 'CC_ID', 'C', 'Зовн.№~дог', '', null, 31, 0, 0, 0, 0, '', '', 0, 0, '', 1, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 5, 'IRA', 'N', 'Ставка~~ОВЕР', '.5', null, 8, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', 'SetProcParN( :ACC, 1, STRING_Null, STRING_Null)', 0);
  bars_metabase.add_column(l_tabid, 6, 'IRP', 'N', 'Ставка~винаг.~ПАС', '.5', null, 9, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', 'SetProcParN( :ACC, 1, STRING_Null, STRING_Null)', 0);
  bars_metabase.add_column(l_tabid, 7, 'KV', 'N', 'Вал', '.3', null, 22, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 8, 'LIM', 'N', 'Інд.лім~Початк', '1.3', null, 5, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', 'FunNSIEditFFiltered("V3_OVRN[PROC=>OVRN.PUL_OVR( 2, "||Str(:ND)||","||Str(:ACC)||")][EXEC=>BEFORE]",0,"nd="||Str(:ND)||" and acc="||Str(:ACC) )', 0);
  bars_metabase.add_column(l_tabid, 10, 'ND', 'N', 'Реф.дог~гол.угоди', '', null, 34, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 11, 'NLS', 'C', 'Рахунок~учасника', '1.5', null, 1, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', 'Sel027 ( hWndMDI, 1, :ND, Str( :RNK ),Str( :ACC )  ) ', 0);
  bars_metabase.add_column(l_tabid, 12, 'OSTC', 'N', 'Власний~залишок~----------~ Установка STOP', '1.3', null, 23, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 1, 0, 0, 'sPar=[PROC=>OVRN.STOP(1,:ND,:ACC,:NLS,:KV,:X)][PAR=>:X(SEM=Підстава)][EXEC=>BEFORE][QST=>Установити Блокування  :NLS ?][MSG=>ОК, Буде Заблоковоно ліміти всім учасникам !]
', 'FunNSIEdit("[PROC=>OVRN.STOP( 1, :ND, :ACC, :NLS, :KV, :X )][PAR=>:X(SEM=Підстава)][QST=>Установити Блокування рах."|| :NLS ||".  ?][MSG=>ОК, Буде Заблоковоно ліміти всім учасникам !]")', 0);
  bars_metabase.add_column(l_tabid, 13, 'OST_FREE', 'N', 'Власний~ресурс~----------~ Відміна STOP', '1.3', null, 24, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 1, 0, 0, 'sPar=[PROC=>OVRN.STOP(0,:ND,:ACC,:NLS,:KV,:X)][PAR=>:X(SEM=Підстава)][EXEC=>BEFORE][QST=>Відмінити Блокування  :NLS ?][MSG=>ОК, Буде Відновлено ліміти всім учасникам !]
', 'FunNSIEdit("[PROC=>OVRN.STOP( 0, :ND, :ACC, :NLS, :KV, :X )][PAR=>:X(SEM=Підстава)][QST=>Відмінити Блокування  рах."|| :NLS ||".  ?][MSG=>ОК, Буде Відновлено ліміти всім учасникам !]")', 0);
  bars_metabase.add_column(l_tabid, 14, 'RNK', 'N', 'РНК~гол.угоди', '', null, 37, 0, 0, 0, 0, '', '', 0, 0, '', 1, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 15, 'SDATE', 'D', 'Дата~початку дії', '', null, 32, 0, 0, 0, 0, '', '', 0, 0, '', 1, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 16, 'SOS', 'N', 'Стан~гол.угоди', '', null, 36, 0, 0, 0, 0, '', '', 0, 0, '', 1, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 17, 'WDATE', 'D', 'Дата~завешення', '', null, 33, 0, 0, 0, 0, '', '', 0, 0, '', 1, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 18, 'ACC', 'N', 'ACC~---------~ВИПИСКА~ПО РАХ', '', null, 99, 0, 1, 0, 0, '', '', 1, 0, '', 1, 0, 0, '/barsroot/customerlist/showhistory.aspx?acc=:ACC'||chr(38)||'type=1', 'ShowAccList(0,AVIEW_ALL,AVIEW_ReadOnly|AVIEW_AllOptions," a.acc = :ACC " )', 0);
  bars_metabase.add_column(l_tabid, 19, 'RNK1', 'N', 'РНК~учасн~----------~КАРТКА', '1', null, 2, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, '/barsroot/clientregister/registration.aspx?readonly=1'||chr(38)||'rnk=:RNK1', 'EditCustomer( 2 , NUMBER_Null, :RNK1, CVIEW_ReadOnly, hWndForm, 0, "", FALSE)', 0);
  bars_metabase.add_column(l_tabid, 20, 'NMK1', 'C', 'Клєнт-учасник~-------~ШАБЛОН ПОВІД~ПРО ЗМІНУ ГЛО', '2', null, 13, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, 'sPar=VZ_OVRN[NSIFUNCTION][ACCESSCODE=>1][PROC=>OVRN.PUL_OVR(2,:ND,:ACC)][EXEC=>BEFORE][showDialogWindow=>false]', 'FunNSIEditF("VZ_OVRN[PROC=>OVRN.PUL_OVR( 2, "||Str(:ND)||","||Str(:ACC)||")][EXEC=>BEFORE]" , 2  )', 0);
  bars_metabase.add_column(l_tabid, 21, 'TERM', 'N', 'Погодж.~СБК~кіл.днів', '.5', null, 6, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 23, 'MDATE', 'D', 'План-дата~обнул.ОВР', '1.3', null, 26, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 24, 'DATVZ', 'D', 'Факт-дата~виник.ОВР', '1.3', null, 25, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 25, 'DATSP', 'D', 'План-дата~просрочки', '1.3', null, 27, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 26, 'SP/100', 'N', 'Простр~ОВР', '1', null, 28, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 27, 'SPN/100', 'N', 'Простр.%%', '1', null, 29, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 28, 'RLIM', 'D', 'Дата зміни~ліміту~----------~ЧКО по міс', '1.2', null, 12, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, 'sPar=V6_OVRN[NSIFUNCTION][ACCESSCODE=>0][PROC=>PUL.Set_Mas_Ini(''ACC26'',:ACC,''ACC262'')][EXEC=>BEFORE][showDialogWindow=>false]', 'FunNSIEditF("V6_OVRN[PROC=>PUL.Set_Mas_Ini(''ACC26'','' "||Str(:ACC)||"'',''ACC262'')][EXEC=>BEFORE]",0)', 0);
  bars_metabase.add_column(l_tabid, 29, 'OKPO', 'C', 'Ід код~клієнта', '1.2', null, 30, 1, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, '', 'FunNSIEdit("[PROC=>OVRN.DEL_slave(:ND,:ACC,:NLS,:KV)][QST=>Вилучити учасника :NMK1 ?][MSG=>Всі параметри угоди відмінено !]")', 0);
  bars_metabase.add_column(l_tabid, 30, 'PK', 'N', 'Ліміт~ від ЧКО~(%)', '.5', null, 7, 0, 0, 0, 0, '', '#0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 31, 'TARIF', 'C', 'Комісійна~винагорода~----------~ТАРИФИ', '.9', null, 11, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, 'sPar=V8_OVRN[NSIFUNCTION][ACCESSCODE=>2][PROC=>OVRN.PUL_OVR(2,:ND,:ACC)][EXEC=>BEFORE][showDialogWindow=>false]', 'FunNSIEditF("V8_OVRN[PROC=>OVRN.PUL_OVR( 2, "||Str(:ND)||","||Str(:ACC)||")][EXEC=>BEFORE]" , 2  )', 0);
  bars_metabase.add_column(l_tabid, 32, 'DONOR', 'B', 'Учасник ГК~Без~оверд.', '.5', null, 3, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 33, 'IRB', 'N', 'Баз.~% ст~ПАС', '.5', null, 10, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 34, 'NK', 'N', 'Нов/~Діюч~1/0', '.5', null, 4, 0, 0, 0, 1, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 35, 'ACC_ADD', 'C', 'Додаткові~рахунки ЧКО', '2.5', null, 38, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, 'sPar=V_OVR_ACC_ADD[CONDITIONS=>(V_OVR_ACC_ADD.acc = :ACC)][NSIFUNCTION][ACCESSCODE=>2][showDialogWindow=>false]', '', 0);

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('YES_NO');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ID');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 34, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица YES_NO для описания сложного поля таблицы V2_OVRN.');
  end if;

  -- добавляем описание процедур
  bars_metabase.add_actiontbl(l_tabid, 'DELETE', 'OVRN.DEL_slave (  :ND, :ACC,  :NLS, :KV )  ');

  -- добавляем описание процедур
  bars_metabase.add_actiontbl(l_tabid, 'INSERT', 'OVRN.ADD_slave ( 0, :ND, :ACC, :LIM, :IRA, :IRP, :NLS, :TERM, :PK, :DONOR, :NK  ) ');

  -- добавляем описание процедур
  bars_metabase.add_actiontbl(l_tabid, 'UPDATE', 'OVRN.ADD_slave ( 1, :ND, :ACC, :LIM, :IRA, :IRP, :NLS, :TERM, :PK , :DONOR, :NK) ');

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 0, 'Перегляд рах., пов`язвних з Дог+Кл.', '', '', 'EACH', '', '', '', '', 'sPar=ACCOUNT1[CONDITIONS=>(ACCOUNT1.RNK = :RNK and ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 82);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 1, 'Забеспечення кредиту', '', '', 'EACH', '', '', '', '', 'sPar=V_ZAL_ND[ACCESSCODE=>5][PROC=>OVRN.PUL_OVR(2,:ND,:ACC)][EXEC=>BEFORE][showDialogWindow=>false]', 65);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 2, 'Проц/картка рах.учасника', '', '', 'EACH', '', '', '', '', '/barsroot/viewaccounts/accountform.aspx?type=2'||chr(38)||'acc=:ACC'||chr(38)||'rnk='||chr(38)||'accessmode=1 ', 60);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 3, 'Графік індив.Лімітів ', '', '', 'EACH', '', '', '', '', 'sPar=V3_OVRN[ACCESSCODE=>0][PROC=>OVRN.PUL_OVR(2,:ND,:ACC)][EXEC=>BEFORE][showDialogWindow=>false]', 83);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 5, 'Зміна рах,учасника ', 'OVRN.REPL_ACC (:ND,:ACC, 980, :N) ', ':N(SEM=Новий рахунок,TYPE=S)', 'EACH', 'Змінити рахунок :NLS учасника :NMK1 ?', '', '', '', '', 44);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 9, 'Перегляд "Сірої зони" по  Дог.', '', '', 'EACH', '', '', '', '', 'sPar=VT_OVRN[CONDITIONS=>(VT_OVRN.ND = :ND) [ACCESSCODE=>1][showDialogWindow=>false]', 51);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 10, 'ВИЛУЧЕННЯ учасника', 'OVRN.DEL_slave(:ND,:ACC,:NLS,:KV)


', '', 'EACH', 'Вилучити учасника :NMK1 ?', 'Всі параметри угоди відмінено !', '', '', '', 5);

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'MDATE');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 1, l_newcolid, ':MDATE <=  gl.BD ', 1, 'COLOR_Red');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'OSTC');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 2, l_newcolid, ':OSTC  < 0', 1, 'COLOR_Red');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'OSTC');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 3, l_newcolid, ':OSTC  >=  0', 1, 'COLOR_Blue');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'DATSP');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 4, l_newcolid, ':DATSP <= gl.BD ', 1, 'COLOR_Red');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'SP/100');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 5, l_newcolid, ':SP/100 <> 0 ', 1, 'COLOR_Red');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'OSTC');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 6, l_newcolid, ' 1=1', 2, 'COLOR_LightGray');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'OST_FREE');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 7, l_newcolid, ' 1=1', 2, 'COLOR_Yellow');
  end if;

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
