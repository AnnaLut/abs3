set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'MSFZ9. КП ЮО. Розподіл складних КД на прості / V_MSFZ9';
  l_tablinesdef := '';
  l_tabselect_statement := '';
  l_tabname     := 'V_MSFZ9';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 1, 'CC_ID', 'C', '№~КД', '1', null, 2, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 2, 'ISG', 'N', 'Кіл~ISG', '.3', null, 25, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, 'sPar=ACCOUNT1[CONDITIONS=>(ACCOUNT1.KV=:KV and ACCOUNT1.TIP=''ISG'' and ACCOUNT1.DAZS is null and ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 'FunNSIEditFFiltered("ACCOUNT1",1, "KV="||Str(:KV)||" and TIP=''ISG'' and DAZS is null and ACC in (select acc from nd_acc where ND="||Str(:ND)))', 0);
  bars_metabase.add_column(l_tabid, 3, 'KOL', 'N', 'Кіл~рах', '.3', null, 27, 0, 0, 0, 0, '', '', 0, 0, '', 0, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 4, 'KV', 'N', 'Вал~SS', '.3', null, 5, 0, 1, 0, 0, '', '', 0, 0, '', 0, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 5, 'ND', 'N', 'Реф~КД', '1', null, 1, 0, 1, 0, 0, '', '', 0, 0, 'Count(*) ', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 6, 'RNK', 'N', 'РНК~позич', '1', null, 4, 0, 0, 0, 1, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 7, 'S36', 'N', 'Кіл~S36', '.3', null, 21, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, 'sPar=ACCOUNT1[CONDITIONS=>( ACCOUNT1.TIP=''S36'' and ACCOUNT1.DAZS is null and ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 'FunNSIEditFFiltered("ACCOUNT1",1, "KV="||Str(:KV)||" and TIP=''S36'' and DAZS is null and ACC in (select acc from nd_acc where ND="||Str(:ND)))', 0);
  bars_metabase.add_column(l_tabid, 8, 'SDATE', 'D', 'Дата поч~КД', '1.5', null, 3, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 9, 'SDI', 'N', 'Кіл~SDI', '.3', null, 19, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, 'sPar=ACCOUNT1[CONDITIONS=>( ACCOUNT1.TIP=''SDI'' and ACCOUNT1.DAZS is null and ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 'FunNSIEditFFiltered("ACCOUNT1",1, "KV="||Str(:KV)||" and TIP=''SDI'' and DAZS is null and ACC in (select acc from nd_acc where ND="||Str(:ND)))', 0);
  bars_metabase.add_column(l_tabid, 10, 'SG', 'N', 'Кіл~SG', '.3', null, 23, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, 'sPar=ACCOUNT1[CONDITIONS=>( ACCOUNT1.TIP=''SG '' and ACCOUNT1.DAZS is null and ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 'FunNSIEditFFiltered("ACCOUNT1",1, "KV="||Str(:KV)||" and TIP=''SG '' and DAZS is null and ACC in (select acc from nd_acc where ND="||Str(:ND)))', 0);
  bars_metabase.add_column(l_tabid, 11, 'SN', 'N', 'Кіл~SN', '.3', null, 11, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, 'sPar=ACCOUNT1[CONDITIONS=>( ACCOUNT1.TIP=''SN '' and ACCOUNT1.DAZS is null and ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 'FunNSIEditFFiltered("ACCOUNT1",1, "KV="||Str(:KV)||" and TIP=''SN '' and DAZS is null and ACC in (select acc from nd_acc where ND="||Str(:ND)))', 0);
  bars_metabase.add_column(l_tabid, 12, 'SNA', 'N', 'Кіл~SNA', '.3', null, 15, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, 'sPar=ACCOUNT1[CONDITIONS=>( ACCOUNT1.TIP=''SNA'' and ACCOUNT1.DAZS is null and ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 'FunNSIEditFFiltered("ACCOUNT1",1, "KV="||Str(:KV)||" and TIP=''SNA'' and DAZS is null and ACC in (select acc from nd_acc where ND="||Str(:ND)))', 0);
  bars_metabase.add_column(l_tabid, 13, 'SNO', 'N', 'Кіл~SNO', '.3', null, 17, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, 'sPar=ACCOUNT1[CONDITIONS=>( ACCOUNT1.TIP=''SNO'' and ACCOUNT1.DAZS is null and ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 'FunNSIEditFFiltered("ACCOUNT1",1, "KV="||Str(:KV)||" and TIP=''SNO'' and DAZS is null and ACC in (select acc from nd_acc where ND="||Str(:ND)))', 0);
  bars_metabase.add_column(l_tabid, 14, 'SOS', 'N', 'Стан~КД', '.3', null, 70, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 15, 'SP', 'N', 'Кіл~SP', '.3', null, 9, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, 'sPar=ACCOUNT1[CONDITIONS=>( ACCOUNT1.TIP=''SP '' and ACCOUNT1.DAZS is null and ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 'FunNSIEditFFiltered("ACCOUNT1",1, "KV="||Str(:KV)||" and TIP=''SP '' and DAZS is null and ACC in (select acc from nd_acc where ND="||Str(:ND)))', 0);
  bars_metabase.add_column(l_tabid, 16, 'SPN', 'N', 'Кіл~SPN', '.3', null, 13, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, 'sPar=ACCOUNT1[CONDITIONS=>( ACCOUNT1.TIP=''SPN'' and ACCOUNT1.DAZS is null and ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 'FunNSIEditFFiltered("ACCOUNT1",1, "KV="||Str(:KV)||" and TIP=''SPN'' and DAZS is null and ACC in (select acc from nd_acc where ND="||Str(:ND)))', 0);
  bars_metabase.add_column(l_tabid, 17, 'SS', 'N', 'Кіл~SS', '.3', null, 7, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, 'sPar=ACCOUNT1[CONDITIONS=>( ACCOUNT1.TIP=''SS '' and ACCOUNT1.DAZS is null and ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 'FunNSIEditFFiltered("ACCOUNT1",1, "KV="||Str(:KV)||" and TIP=''SS '' and DAZS is null and ACC in (select acc from nd_acc where ND="||Str(:ND)))', 0);
  bars_metabase.add_column(l_tabid, 18, 'VIDD', 'N', 'Вид~КД', '.3', null, 99, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 19, 'WDATE', 'D', 'Дата завер~КД', '1.5', null, 60, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 20, 'SS1', 'N', 'Сума~SS', '1.5', null, 8, 0, 0, 0, 1, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 21, 'SN1', 'N', 'Сума~SN', '.8', null, 12, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 22, 'SP1', 'N', 'Сума~SP', '1', null, 10, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 23, 'SPN1', 'N', 'Сума~SPN', '.8', null, 14, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 24, 'SNA1', 'N', 'Сума~SNA', '.8', null, 16, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 25, 'SNO1', 'N', 'Сума~SNO', '.8', null, 18, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 26, 'SDI1', 'N', 'Сума~SDI', '.8', null, 20, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 27, 'S361', 'N', 'Сума~S36', '.8', null, 22, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 30, 'SX', 'N', 'Кіл~SS*', '.3', null, 7, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, 'sPar=ACCOUNT1[CONDITIONS=>( ACCOUNT1.TIP=''SS '' and ACCOUNT1.DAZS is null and ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 'FunNSIEditFFiltered("ACCOUNT1",1, "KV="||Str(:KV)||" and TIP=''SS '' and DAZS is null and ACC in (select acc from nd_acc where ND="||Str(:ND)))', 0);

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('CUSTOMER');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 6, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица CUSTOMER для описания сложного поля таблицы V_MSFZ9.');
  end if;

  -- добавляем описание сортировки
  bars_metabase.add_sortorder(l_tabid, 4, 2, 'ASC ');

  -- добавляем описание сортировки
  bars_metabase.add_sortorder(l_tabid, 5, 1, 'ASC ');

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 0, 'Перегляд всіх рах., пов`язвних з КД ', '', '', 'EACH', '', '', 'FunNSIEditFFiltered("ACCOUNT1",1, "DAZS is null and ACC in (select acc from nd_acc where ND="||Str(:ND)))', '', 'sPar=ACCOUNT1[CONDITIONS=>(ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 82);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 1, 'Об`єднати/Розділити  всі супутні однорідні рахунки вибраного КД  ', 'MSFZ9.REGU (:ND,:KV)', '', 'EACH', '', '', '', '', '', 70);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 2, 'Перегляд останнього протоколу Об`єднання/Розділу КД ', '', '', 'EACH', '', '', '', '', 'sPar=PR_MSFZ9[ACCESSCODE=>1][showDialogWindow=>false]', 98);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 4, 'Відмінити розподіл КД', 'MSFZ9.step_x ( :N ) ', ':N(SEM=Ген_Дог,TYPE=N) ', 'ONCE', '', '', '', '', '', 3);

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 2, null, ':SS > 1 and :SS1 =0 ', 2, 'COLOR_LightGreen');

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 10, null, ':SS =0  ', 2, 'COLOR_LightGray');

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'SN');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 14, l_newcolid, ':SS = 1 and  :SN > 1', 2, 'COLOR_Orchid');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'S36');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 15, l_newcolid, ':SS = 1 and  :S36 > 1', 2, 'COLOR_Orchid');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'SDI');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 16, l_newcolid, ':SS = 1 and  :SDI > 1', 2, 'COLOR_Orchid');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'SNA');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 17, l_newcolid, ':SS = 1 and  :SNA > 1', 2, 'COLOR_Orchid');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'SNO');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 18, l_newcolid, ':SS = 1 and  :SNO > 1', 2, 'COLOR_Yellow');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'SP');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 19, l_newcolid, ':SS = 1 and  :SP > 1', 2, 'COLOR_Orchid');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'SPN');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 20, l_newcolid, ':SS = 1 and  :SPN > 1', 2, 'COLOR_Orchid');
  end if;

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
