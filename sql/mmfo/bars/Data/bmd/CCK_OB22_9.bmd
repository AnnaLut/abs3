set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := '6.Додаток (МСФЗ-9) до CCK_Ob22 / CCK_OB22_9';
  l_tablinesdef := '10';
  l_tabselect_statement := '';
  l_tabname     := 'CCK_OB22_9';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid,   1, 'NBS' , 'C', 'БР~тiла'  , '', 4, 1, 1, 1, 1, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid,   2, 'OB22', 'C', 'ob22~тiла', '', 2, 2, 1, 1, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);

  bars_metabase.add_column(l_tabid,  11, 'S1NP', 'C', 'БС+Об22~NEW_FEE~плюс S1 грн~до спрв~FV_ADJ' , '', 6, 11, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid,  12, 'S1NM', 'C', 'БС+Об22~NEW_FEE~мінус S1 грн~до спрв~FV_ADJ', '', 6, 12, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid,  13, 'S1VP', 'C', 'БС+Об22~NEW_FEE~плюс S1 вал~до спрв~FV_ADJ' , '', 6, 13, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid,  14, 'S1VM', 'C', 'БС+Об22~NEW_FEE~мінус S1 вал~до спрв~FV_ADJ', '', 6, 14, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);

  bars_metabase.add_column(l_tabid,  21, 'S3NP', 'C', 'БС+Об22~NEW_FEE~плюс S3 грн~від модф~MODIF' , '', 6, 21, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid,  22, 'S3NM', 'C', 'БС+Об22~NEW_FEE~мінус S3 грн~від модф~MODIF', '', 6, 22, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid,  23, 'S3VP', 'C', 'БС+Об22~NEW_FEE~плюс S3 вал~від модф~MODIF' , '', 6, 23, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid,  24, 'S3VM', 'C', 'БС+Об22~NEW_FEE~мінус S3 вал~від модф~MODIF', '', 6, 24, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);

  bars_metabase.add_column(l_tabid,  31, 'SRR' , 'C', 'БС+Об22~Рахунок~Переоц.~від XLS' , '', 6, 31, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid,  32, 'R6R' , 'C', 'БС+Об22~Мінус~Переоц.~від XLS', '', 6, 32, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid,  33, 'R7R' , 'C', 'БС+Об22~Плюс~Переоц.~від XLS' , '', 6, 33, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);



  -- добавляем описание сортировки
  bars_metabase.add_sortorder(l_tabid, 1, 1, 'ASC ');
  bars_metabase.add_sortorder(l_tabid, 2, 2, 'ASC ');

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'NBS');  if (l_newcolid is not null) then    bars_metabase.add_tblcolor(l_tabid, 1, l_newcolid, '1 = 1', 2, 'COLOR_Yellow');  end if;
  l_newcolid := bars_metabase.get_colid(l_tabid, 'OB22'); if (l_newcolid is not null) then    bars_metabase.add_tblcolor(l_tabid, 2, l_newcolid, '1 = 1', 2, 'COLOR_Yellow');  end if;

  l_newcolid := bars_metabase.get_colid(l_tabid, 'S1NP');  if (l_newcolid is not null) then   bars_metabase.add_tblcolor(l_tabid, 11, l_newcolid, '1 = 1', 2, 'COLOR_LightAqua');  end if;
  l_newcolid := bars_metabase.get_colid(l_tabid, 'S1NM');  if (l_newcolid is not null) then   bars_metabase.add_tblcolor(l_tabid, 12, l_newcolid, '1 = 1', 2, 'COLOR_LightAqua');  end if;
  l_newcolid := bars_metabase.get_colid(l_tabid, 'S1VP');  if (l_newcolid is not null) then   bars_metabase.add_tblcolor(l_tabid, 13, l_newcolid, '1 = 1', 2, 'COLOR_Sky');  end if;
  l_newcolid := bars_metabase.get_colid(l_tabid, 'S1VM');  if (l_newcolid is not null) then   bars_metabase.add_tblcolor(l_tabid, 14, l_newcolid, '1 = 1', 2, 'COLOR_Sky');  end if;

  l_newcolid := bars_metabase.get_colid(l_tabid, 'S3NP');  if (l_newcolid is not null) then   bars_metabase.add_tblcolor(l_tabid, 21, l_newcolid, '1 = 1', 2, 'COLOR_LightGreen');  end if;
  l_newcolid := bars_metabase.get_colid(l_tabid, 'S3NM');  if (l_newcolid is not null) then   bars_metabase.add_tblcolor(l_tabid, 22, l_newcolid, '1 = 1', 2, 'COLOR_LightGreen');  end if;
  l_newcolid := bars_metabase.get_colid(l_tabid, 'S3VP');  if (l_newcolid is not null) then   bars_metabase.add_tblcolor(l_tabid, 23, l_newcolid, '1 = 1', 2, 'COLOR_Green');  end if;
  l_newcolid := bars_metabase.get_colid(l_tabid, 'S3VM');  if (l_newcolid is not null) then   bars_metabase.add_tblcolor(l_tabid, 24, l_newcolid, '1 = 1', 2, 'COLOR_Green');  end if;

  l_newcolid := bars_metabase.get_colid(l_tabid, 'SRR');  if (l_newcolid is not null) then    bars_metabase.add_tblcolor(l_tabid, 31, l_newcolid, '1 = 1', 2, 'COLOR_Orchid');  end if;
  l_newcolid := bars_metabase.get_colid(l_tabid, 'R6R');  if (l_newcolid is not null) then    bars_metabase.add_tblcolor(l_tabid, 32, l_newcolid, '1 = 1', 2, 'COLOR_Orchid');  end if;
  l_newcolid := bars_metabase.get_colid(l_tabid, 'R7R');  if (l_newcolid is not null) then    bars_metabase.add_tblcolor(l_tabid, 33, l_newcolid, '1 = 1', 2, 'COLOR_Orchid');  end if;

end;
/

commit;
