set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'OVRN-1) <<Солідарний>> Овердрафт. Робочі дог.';
  l_tablinesdef := '';
  l_tabselect_statement := '';
  l_tabname     := 'V1_OVRN';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 1, 'ACC', 'N', 'Консол~рах~ACC8', '1', null, 99, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 2, 'CC_ID', 'C', 'Зовн.~№ дог', '1.2', null, 17, 0, 0, 1, 0, '', '', 1, 0, '', 1, 0, 0, '', 'FunNSIEdit("[PROC=>OVRN.AUTOR("||Str(:ND)||",:X)][PAR=>:X(SEM=Підстава,TYPE=S)][QST=>Дог.№ "|| :CC_ID ||", учасників " ||Str(:KOL)||". Авторизуємо ?][MSG=>ОК,Комісію стягнено, Ліміти виставлено!]")', 0);
  bars_metabase.add_column(l_tabid, 3, 'IR0', 'N', 'Пільг~% ст~-----~АКТ', '.5', null, 21, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, '', 'SetProcParN( :ACC, :KV, STRING_Null, STRING_Null)', 0);
  bars_metabase.add_column(l_tabid, 4, 'IR1', 'N', 'Пільг~% ст~-----~ПАС', '.5', null, 22, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, '', 'SetProcParN( :ACC, :KV, STRING_Null, STRING_Null)', 0);
  bars_metabase.add_column(l_tabid, 5, 'KOL', 'N', 'Кіл~учас', '.3', null, 20, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 6, 'LIMIT', 'N', 'Діючий лім~по дог', '1.5', null, 10, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 1, 0, 0, '', 'FunNSIEditF("V3_OVRN[NSIFUNCTION][PROC=>OVRN.PUL_OVR( 1, "||Str(:ND)||","||Str(:ACC)||")][EXEC=>BEFORE]",0 )', 0);
  bars_metabase.add_column(l_tabid, 7, 'ND', 'N', 'Реф.дог~--------~ВСІ~РАХУНКИ', '1.3', null, 13, 0, 1, 0, 0, '', '', 1, 0, '', 1, 0, 1, '/barsroot/customerlist/custacc.aspx?type=3'||chr(38)||'nd=:ND', 'ShowAccList(0,AVIEW_ALL,AVIEW_ReadOnly|AVIEW_AllOptions," a.acc in (select acc from nd_acc where nd = :ND union all select acc from cc_accp where nd =:ND ) " )', 0);
  bars_metabase.add_column(l_tabid, 8, 'OSTC/100', 'N', 'Поточ.заг.~ДЕБ.факт-зал.', '1.2', null, 31, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 9, 'OST_FREE', 'N', 'Вільний~ ліміт~по ДОГ', '1.2', null, 30, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 10, 'RNK', 'N', 'РНК~головний~-------------~ДОД.РЕКВ.', '1.5', null, 2, 0, 0, 0, 1, '', '', 1, 0, '', 1, 0, 1, '/barsroot/CreditUi/NewCredit/?custtype=2'||chr(38)||'nd=:ND'||chr(38)||'tagOnly=true', '', 0);
  bars_metabase.add_column(l_tabid, 11, 'SDATE', 'D', 'Дата~початку~дії', '1.3', null, 18, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 12, 'SOS', 'N', 'Стан~дог~-------~ПОДІЇ', '.3', null, 34, 0, 0, 0, 1, '', '', 1, 0, '', 1, 0, 0, 'sPar=CC_SOB[NSIFUNCTION][ACCESSCODE=>4][PROC=>PUL.Set_Mas_Ini(''ND'',:ND, ''X'' )][CONDITIONS=> nd=:ND][EXEC=>BEFORE][showDialogWindow=>false]', 'FunNSIEditFFiltered("CC_SOB", 0, "nd = "|| Str( :ND)  ) ', 0);
  bars_metabase.add_column(l_tabid, 13, 'WDATE', 'D', 'Дата~завешення', '1.3', null, 19, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 14, 'KV', 'N', 'Вал', '', null, 99, 0, 0, 0, 0, '', '', 1, 0, '', 1, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 15, 'NLS8', 'C', 'Рахунок~косолідації~-------------~УЧАСНИКИ', '1.5', null, 11, 0, 0, 0, 0, '', '', 1, 0, '', 1, 0, 0, 'sPar=V2_OVRN[NSIFUNCTION][CONDITIONS=>V2_OVRN.ND=:ND][ACCESSCODE=>5][PROC=>OVRN.PUL_OVR(1,:ND,:ACC)][EXEC=>BEFORE][showDialogWindow=>false]', 'FunNSIEditFFiltered("V2_OVRN[PROC=>OVRN.PUL_OVR( 1, "||Str(:ND)||","||Str(:ACC)||")][EXEC=>BEFORE]", 5 ,"nd="||Str(:ND)  )', 0);
  bars_metabase.add_column(l_tabid, 16, 'NLS', 'C', 'Гол.Рах.~відповідач', '1.5', null, 1, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, '', 'Sel027 ( hWndMDI, 2, :ND, Str( :RNK ),Str( :ACC )  ) ', 0);
  bars_metabase.add_column(l_tabid, 17, 'DAY', 'N', '%%~День~плат.', '.3', null, 28, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 18, 'AVT', 'B', 'Автори~зован', '', null, 99, 0, 0, 0, 0, '', '', 1, 0, '', 1, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 19, 'PD', 'N', 'Ліміт~ від ЧКО~(%)', '.5', null, 29, 0, 0, 0, 0, '', '#0.00', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 20, 'ISP ', 'N', 'Відпов~вик', '.8', null, 40, 0, 0, 0, 1, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 21, 'METR', 'B', '+Дифер.~% ст', '.5', null, 23, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 22, 'IDR', 'N', '№ шк. ~Плав~%ст', '.5', null, 25, 0, 0, 0, 1, '', '', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 23, 'DT_SOS', 'C', 'Зміна~Стану', '1', null, 33, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 24, 'KF', 'C', 'Код~МФО', '1.5', null, 40, 0, 0, 0, 1, '', '', 0, 0, '', 1, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 25, 'MMETR', 'B', '+Макс. ставка при Дифер.~% ст', '.5', null, 24, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, '', '', 0);

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('CUSTOMER');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 10, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица CUSTOMER для описания сложного поля таблицы V1_OVRN.');
  end if;

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('CC_SOS');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'SOS');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 12, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица CC_SOS для описания сложного поля таблицы V1_OVRN.');
  end if;

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('STAFF$BASE');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ID');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 20, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица STAFF$BASE для описания сложного поля таблицы V1_OVRN.');
  end if;

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('INT_OVR_RANG');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ID');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 22, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица INT_OVR_RANG для описания сложного поля таблицы V1_OVRN.');
  end if;

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('BANKS_RU');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'MFO');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 24, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица BANKS_RU для описания сложного поля таблицы V1_OVRN.');
  end if;

  -- добавляем описание сортировки
  bars_metabase.add_sortorder(l_tabid, 7, 1, 'ASC ');

  -- добавляем описание процедур
  bars_metabase.add_actiontbl(l_tabid, 'UPDATE', 'OVRN.ADD_master (:ND, :ACC, :CC_ID, :SDATE, :WDATE, :LIMIT, :IR0, :IR1 , :NLS, :KV, :DAY, :PD, :ISP, :METR, :IDR, NULL, :MMETR )');

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 1, 'Договірні Ліміти ОВР ', '', '', 'EACH', '', '', '', '', 'sPar=V3D_OVRN[ACCESSCODE=>1][PROC=>PUL.PUT ( ''ND'', :ND) ][EXEC=>BEFORE][showDialogWindow=>false]', 47);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 2, 'Графік загальних Лімітів ', '', '', 'EACH', '', '', '', '', 'sPar=V3_OVRN[NSIFUNCTION][ACCESSCODE=>0][PROC=>OVRN.PUL_OVR(1,:ND,:ACC)][EXEC=>BEFORE][showDialogWindow=>false]', 83);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 5, 'Перегляд рах., пов`язвних з Дог.', '', '', 'EACH', '', '', '', '', 'sPar=ACCOUNT1[CONDITIONS=>(ACCOUNT1.ACC in (select acc from nd_acc where ND =:ND))][ACCESSCODE=>1][showDialogWindow=>false]', 82);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 6, 'Проц/картка рах.консолідації', '', '', 'EACH', '', '', '', '', '/barsroot/viewaccounts/accountform.aspx?type=2'||chr(38)||'acc=:ACC'||chr(38)||'rnk='||chr(38)||'accessmode=1 ', 60);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 7, 'ДЕ-Авторизація угоди', 'OVRN.AUTOR( - :ND,:X)', ':X(SEM=Підстава,TYPE=S)', 'EACH', ':CC_ID , уч. :KOL  ?', 'ОК !', '', '', '', 71);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 8, 'Перегляд "Сірої зони" по  Дог.', '', '', 'EACH', '', '', '', '', 'sPar=VT_OVRN[CONDITIONS=>(VT_OVRN.ND = :ND) [ACCESSCODE=>1][showDialogWindow=>false]', 51);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 9, 'Закриття Угоди ', 'OVRN.CLS(:ND)', '', 'EACH', 'Виконати закриття угоди  :CC_ID , уч. :KOL ?', 'ОК !', '', '', '', 11);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 10, '0.БЭК-супровід. Фініш дня.', 'OVRN.background  ( 1,1, 0, DATETIME_Null ) ', '', 'ONCE', '', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 11, '1.БЭК-супровід. Старт дня.', 'OVRN.background  ( 1, 0, 0, DATETIME_Null ) ', '', 'ONCE', '', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 13, 'Дод.Інформація (в т.ч. для БКІ )', '', '', 'EACH', '', '', '', '', '/barsroot/CreditUi/NewCredit/?custtype=2'||chr(38)||'nd=:ND'||chr(38)||'tagOnly=true', 99);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 19, '2.*) Нарах. дох та витрат(%%, ком.) по 1 дог. за поточний період', 'OVRN.INTX(1, DATETIME_Null, :D, :ACC, 0) ', ':D(SEM=Вкл_ПО_дату,TYPE=D) ', 'EACH', '', '', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 20, '2.0) Нарахування дох та витрат (%%, комісія) за ПОТОЧНИЙ період', 'OVRN.INTX(1, DATETIME_Null, :D,0,0)', ':D(SEM=Вкл_ПО_дату,TYPE=D) ', 'ONCE', '', 'Виконано !', 'FunNSIEditF("OVR_INTX[NSIFUNCTION][PROC=>OVRN.INTX(0,:D,0,0)][PAR=>:D(SEM=Вкл_по_дату,TYPE=D)][EXEC=>BEFORE]",2) ', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 21, '2.1)Детальний по дням Протокол  нарахування за ПОТОЧНИЙ період', '', '', '', '', '', '', '', 'sPar=OVR_INTX[ACCESSCODE=>1][CONDITIONS=>(OVR_INTX.MOD1=1 and OVR_INTX.state = 0)]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 22, '2.2)Підсумковий за період Протокол нарахування  + Проводки', '', '', '', '', '', '', '', 'sPar=VX_OVRN[NSIFUNCTION][ACCESSCODE=>1][DESCR=>2.2)Підсумковий за період Протокол нарахування  + Проводки]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 30, '3.0) Нарахування дох та витрат (%%, комісія) за ДОВІЛЬНИЙ період', 'OVRN.INTX(0, :B, :D,0,0)', ':B(SEM=Вкл_З_дати,TYPE=D),:D(SEM=Вкл_ПО_дату,TYPE=D)', 'ONCE', '', 'Виконано !', 'FunNSIEditF("OVR_INTX[NSIFUNCTION][PROC=>OVRN.INTX(0,:D,0,0)][PAR=>:D(SEM=Вкл_по_дату,TYPE=D)][EXEC=>BEFORE]",2) ', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 31, '3.0`) Нарах. дох та витрат (%%, комі за ДОВІЛЬНИЙ період 1 Дог', 'OVRN.INTX( 0, :B, :D, :ACC, 0 )', ':B(SEM=Вкл_З_дати,TYPE=D),:D(SEM=Вкл_ПО_дату,TYPE=D)', 'EACH', '', 'Виконано !', 'FunNSIEditF("OVR_INTX[NSIFUNCTION][PROC=>OVRN.INTX(0,:D,0,0)][PAR=>:D(SEM=Вкл_по_дату,TYPE=D)][EXEC=>BEFORE]",2) ', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 33, '3.1)Детальний по дням Протокол  нарахування за ДОВІЛЬНИЙ період', '', '', '', '', '', '', '', 'sPar=OVR_INTX[ACCESSCODE=>1][CONDITIONS=>(OVR_INTX.MOD1=0)]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 34, '4.*) Нарах. дох та витрат з ПРОВОДКАМИ по 1 дог.за поточний період', 'OVRN.INTX(1, DATETIME_Null, :D, :ACC, 0) ; OVRN.INTB(1)', ':D(SEM=Вкл_ПО_дату,TYPE=D) ', 'EACH', 'Увага ! Ця дія  НЕзворотня ! Виконати ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 35, '5) Нарахування Відсотків,  Комісії, Пені', '', '', 'ONCE', '', '', '', '', 'sPar=V_INTEREST_CCK[NSIFUNCTION][ACCESSCODE=>2][PROC=>p_interest_cck1(18,:E)][PAR=>:E(SEM=Дата по,TYPE=D)][EXEC=>BEFORE][showDialogWindow=>false]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 90, '1.БЭК-супровід. Старт дня. 1 Дог.', 'OVRN.background  ( 1, 0, :ND,  DATETIME_Null ) ', '', 'EACH', '', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 91, '0.БЭК-супровід. Фініш дня 1 Дог', 'OVRN.background  ( 1,1, :ND, DATETIME_Null ) ', '', 'EACH', '', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 99, 'X. Повна очистка портфелю. ТЕСТ-РЕЖИМ до 16.08.2016.', 'OVRN.DEL_ALL ( 0 )', '', 'ONCE', 'Підтверджуєте  ПОВНЕ ВИЛУЧЕННЯ портфелю OVRN ?  ', 'Виконано !', '', '', '', null);

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 1, null, ':SOS = 12', 2, 'COLOR_Yellow');

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 2, null, ':SOS = 11', 2, 'COLOR_LightGray');

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 3, null, ':SOS = 13', 2, 'COLOR_Orchid');

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
