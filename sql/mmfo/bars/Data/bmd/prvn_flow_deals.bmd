set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'Таблиця КД та їх потоків-заголовки';
  l_tablinesdef := '';
  l_tabselect_statement := '';
  l_tabname     := 'PRVN_FLOW_DEALS';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 1, 'ACC', 'N', 'АСС~тіла', '', null, 21, 0, 0, 0, 1, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 2, 'DAT_ADD', 'D', 'Дата~внесення', '', null, 97, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 3, 'ID', 'N', 'Ід~в табл ~*Грош.потік', '', null, 35, 0, 1, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', 'FunNSIEditFFiltered("PRVN_FLOW_DETAILS",2," ID="||Str(:ID)||" and MDAT=to_date(''"||SalFmtFormatDateTime(:ZDAT,''dd/MM/yyyy'')||"'',''dd/mm/yyyy'')")', 0);
  bars_metabase.add_column(l_tabid, 4, 'IRR0', 'N', 'Eф.ст~по КД', '', null, 30, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 5, 'ND', 'N', 'Реф КД~в АБС~*його~*рахунки', '', null, 2, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', 'ShowAccList(0,AVIEW_ALL,AVIEW_ReadOnly|AVIEW_AllOptions, "a.ACC in (select acc from nd_acc where nd = :ND ) " )', 0);
  bars_metabase.add_column(l_tabid, 6, 'RNK', 'N', 'РНК~ позич.', '', null, 91, 0, 0, 0, 1, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 7, 'VIDD', 'N', 'Вид~КД', '', null, 96, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 8, 'WDATE', 'D', 'Дата~завершен~Початкова', '', null, 95, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 9, 'KV', 'N', 'Код~вал~рах', '', null, 20, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 10, 'PR_TR', 'B', 'Транш~лінія', '', null, 26, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 11, 'I_CR9', 'B', 'Відн~лінія', '', null, 25, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 12, 'IR', 'C', 'Ном.ст~по рах.', '', null, 31, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 13, 'OST/100', 'N', 'Залишок~рах~*Картка~SS', '', null, 50, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 14, 'ZDAT', 'D', 'Звітна~дата', '', null, 0, 0, 1, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 15, 'FL2', 'B', '% на~пот.день', '', null, 32, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 16, 'KV8', 'N', 'Код~вал~КД', '', null, 19, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 17, 'SDATE', 'D', 'Дата~Початку~*ГЛК/ГПК~* В архіві', '', null, 14, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', 'FunNSIEditFFiltered("CC_W_LIM_ARC",2," ND = " || Str( :ND)  ) ', 0);
  bars_metabase.add_column(l_tabid, 18, 'K', 'N', 'Коеф~`SS  :~Сум(`SS)~Угода+екв', '', null, 49, 0, 0, 0, 0, '', '#0.0000', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 19, 'OST8/100', 'N', 'Залишок~тіла КД~~LIM', '', null, 70, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 20, 'OSTQ/100', 'N', 'Зал~екв~рах~`SS', '', null, 51, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 21, 'OST8Q/100', 'N', 'Зал-екв~тіла КД~~`LIM', '', null, 71, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 22, 'TIP', 'C', 'Тип~Рах', '', null, 22, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 23, 'DAOS', 'D', 'Дата вiдкр~рах', '', null, 93, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 26, 'VAR_WDATE', 'D', 'Дата~заверш~*ГЛК/ГПК~*Поточні', '', null, 15, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', 'FunNSIEditFFiltered("CC_W_LIM",2," ND = " || Str( :ND)  ) ', 0);
  bars_metabase.add_column(l_tabid, 27, 'SN/100', 'N', 'Нарах~відсотки~~SN', '', null, 53, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 28, 'CR9/100', 'N', 'Невикорис~ліміт~9129~`CR9', '', null, 65, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 29, 'SPN/100', 'N', 'Простроч~нарах~відсотки~SPN+SLN', '', null, 62, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 30, 'SNO/100', 'N', 'Нарах~відклад~відсотки~SNO', '', null, 55, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 31, 'SN8/100', 'N', 'Пеня~~~`SN8', '', null, 64, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 32, 'SK0/100', 'N', 'Нарах.~місячна~комісія~`SK0', '', null, 54, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 33, 'SK9/100', 'N', 'Простроч~Нарахов~комісія~`SK9+SLK', '', null, 63, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 34, 'SDI/100', 'N', 'Дисконт~Премія~~SDI/SPI', '', null, 61, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 35, 'S36/100', 'N', 'Заг.Дох.~майбутніх~періодів~`3600', '', null, 60, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 36, 'SP/100', 'N', 'Залишок~рах~простр~SP', '', null, 52, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 37, 'DAZS', 'D', 'Дата ~ факт.закр~рахунку~ SS', '', null, 94, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 38, 'K1', 'N', 'Коеф~SS  :~Сум(SS)~Угода+вал', '', null, 48, 0, 0, 0, 0, '', '#0.0000', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 39, 'ADD2', 'B', 'Строрити~Грош.потік~по ID', '', null, 41, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 40, 'BAL0', 'B', 'Балансувати.~Грош.потік~по ND', '', null, 42, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 43, 'ZO', 'B', 'З корр~об', '', null, 36, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 44, 'SD1/100', 'N', 'SD1~Проц.дох.~з поч.року', '', null, 81, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 45, 'FV_REZB', 'N', 'Резерв по~ Бал.части КД~ Расчет~Finevare', '', null, 80, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 46, 'SD2/100', 'N', 'SD2~Аморт.дох.~з поч року', '', null, 82, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 47, 'SNA/100', 'N', 'SNA~НЕвизнані~дох.~', '', null, 83, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('ACCOUNTS');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 1, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица ACCOUNTS для описания сложного поля таблицы PRVN_FLOW_DEALS.');
  end if;

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('CUSTOMER');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 6, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица CUSTOMER для описания сложного поля таблицы PRVN_FLOW_DEALS.');
  end if;

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('CC_VIDD');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'VIDD');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 7, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица CC_VIDD для описания сложного поля таблицы PRVN_FLOW_DEALS.');
  end if;

  -- добавляем описание сортировки
  bars_metabase.add_sortorder(l_tabid, 5, 2, 'ASC ');

  -- добавляем описание сортировки
  bars_metabase.add_sortorder(l_tabid, 7, 1, 'ASC ');

  -- добавляем описание процедур
  bars_metabase.add_actiontbl(l_tabid, 'UPDATE', 'PRVN_FLOW.UPD0 ( 0, :ID, :ADD2, :BAL0, 0 , DATETIME_Null , :ZO )');

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, -1, 'Вилучення інф з таблиць PRVN_FLOW*', 'PRVN_FLOW.DEL0 (0)', '', 'ONCE', 'Вилучення інф з таблиць PRVN_FLOW* ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 0, 'Добавити НОВІ угоди по дату', 'PRVN_FLOW.ADD1( DATETIME_Null, 0, NUMBER_Null )', '', 'ONCE', 'Добавити Нові угоди по дату ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 10, '0.0.(-корр)Перерахунок Гр.потоків: Повний', 'PRVN_FLOW.ADD2( 0, 0 , DATETIME_Null,0) ', '', 'ONCE', 'Виконати ПОВНИЙ перерахугок Грошових потоків  ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 11, '0.1.(+корр)Перерахунок Гр.потоків: Повний', 'PRVN_FLOW.ADD2( 0, 0 , DATETIME_Null,1) ', '', 'ONCE', 'Виконати ПОВНИЙ перерахугок Грошових потоків  ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 12, '1.0.(-корр)Перерахунок Гр.потоків: МБК ', 'PRVN_FLOW.ADD2( 1500, 0 , DATETIME_Null,0) ', '', 'ONCE', 'Виконати перерахугок по МБК Грошових потоків  ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 13, '1.1.(+корр)Перерахунок Гр.потоків: МБК ', 'PRVN_FLOW.ADD2( 1500, 0 , DATETIME_Null,1) ', '', 'ONCE', 'Виконати перерахугок по МБК Грошових потоків  ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 14, '2.0.(-корр)Перерахунок Гр.потоків: КП-ЮО', 'PRVN_FLOW.ADD2( 20, 0 , DATETIME_Null,0) ', '', 'ONCE', 'Виконати перерахугок по КП-ЮО Грошових потоків  ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 15, '2.1.(+корр)Перерахунок Гр.потоків: КП-ЮО', 'PRVN_FLOW.ADD2( 20, 0 , DATETIME_Null,1) ', '', 'ONCE', 'Виконати перерахугок по КП-ЮО Грошових потоків  ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 16, '3.0.(-корр)Перерахунок Гр.потоків: КП-ФО', 'PRVN_FLOW.ADD2( 22, 0 , DATETIME_Null,0) ', '', 'ONCE', 'Виконати перерахугок по КП-ФО Грошових потоків  ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 17, '3.1.(+корр)Перерахунок Гр.потоків: КП-ФО', 'PRVN_FLOW.ADD2( 22, 0 , DATETIME_Null,1) ', '', 'ONCE', 'Виконати перерахугок по КП-ФО Грошових потоків  ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 20, 'Б.0.(-корр)Збалансувати різницю округлень', 'PRVN_FLOW.bal0 ( 0, 0,"", DATETIME_Null, 0) ', '', 'ONCE', 'Збалансувати різницю округлень ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 21, 'Б.1.(+корр)Збалансувати різницю округлень', 'PRVN_FLOW.bal0 ( 0, 0,"", DATETIME_Null, 1) ', '', 'ONCE', 'Збалансувати різницю округлень ?', 'Виконано !', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 99, '??? Версії основних SQL-пакетів', '', '', 'ONCE', '', '', 'FunNSIEditF("PRVN_PACKAGE", 2)', '', '', null);

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 0, null, '( :DAZS is not null and :ACC > 0 OR :TIP = ''SP ''  )', 2, 'COLOR_LightGray');

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 1, null, ':ACC is null ', 2, 'COLOR_Gray');

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'BAL0');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 3, l_newcolid, '1 = 1 ', 2, 'COLOR_Red');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'ADD2');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 4, l_newcolid, '1 = 1 ', 2, 'COLOR_Red');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'ID');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 5, l_newcolid, '1 = 1', 2, 'COLOR_Sky');
  end if;

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
