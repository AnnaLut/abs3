SET DEFINE OFF;
MERGE INTO BARS.CUSTOMER_FIELD A USING
 (SELECT
  'EDUCA' as TAG,
  'Освіта' as NAME,
  0 as B,
  0 as U,
  1 as F,
  'EDUCATION' as TABNAME,
  NULL as BYISP,
  'N' as TYPE,
  NULL as OPT,
  'ID' as TABCOLUMN_CHECK,
  NULL as SQLVAL,
  'KRED' as CODE,
  0 as NOT_TO_EDIT,
  NULL as HIST,
  292 as PARID,
  0 as U_NREZ,
  1 as F_NREZ,
  1 as F_SPD,
  NULL as CHKR,
  NULL as MASK
  FROM DUAL) B
ON (A.TAG = B.TAG)
WHEN NOT MATCHED THEN 
INSERT (
  TAG, NAME, B, U, F, 
  TABNAME, BYISP, TYPE, OPT, TABCOLUMN_CHECK, 
  SQLVAL, CODE, NOT_TO_EDIT, HIST, PARID, 
  U_NREZ, F_NREZ, F_SPD, CHKR, MASK)
VALUES (
  B.TAG, B.NAME, B.B, B.U, B.F, 
  B.TABNAME, B.BYISP, B.TYPE, B.OPT, B.TABCOLUMN_CHECK, 
  B.SQLVAL, B.CODE, B.NOT_TO_EDIT, B.HIST, B.PARID, 
  B.U_NREZ, B.F_NREZ, B.F_SPD, B.CHKR, B.MASK)
WHEN MATCHED THEN
UPDATE SET 
  A.NAME = B.NAME,
  A.B = B.B,
  A.U = B.U,
  A.F = B.F,
  A.TABNAME = B.TABNAME,
  A.BYISP = B.BYISP,
  A.TYPE = B.TYPE,
  A.OPT = B.OPT,
  A.TABCOLUMN_CHECK = B.TABCOLUMN_CHECK,
  A.SQLVAL = B.SQLVAL,
  A.CODE = B.CODE,
  A.NOT_TO_EDIT = B.NOT_TO_EDIT,
  A.HIST = B.HIST,
  A.PARID = B.PARID,
  A.U_NREZ = B.U_NREZ,
  A.F_NREZ = B.F_NREZ,
  A.F_SPD = B.F_SPD,
  A.CHKR = B.CHKR,
  A.MASK = B.MASK;

MERGE INTO BARS.CUSTOMER_FIELD A USING
 (SELECT
  'REMO ' as TAG,
  'Підтверджений дохід Боржника ' as NAME,
  0 as B,
  0 as U,
  1 as F,
  NULL as TABNAME,
  NULL as BYISP,
  'E' as TYPE,
  NULL as OPT,
  NULL as TABCOLUMN_CHECK,
  NULL as SQLVAL,
  'KRED' as CODE,
  0 as NOT_TO_EDIT,
  NULL as HIST,
  293 as PARID,
  0 as U_NREZ,
  1 as F_NREZ,
  1 as F_SPD,
  NULL as CHKR,
  NULL as MASK
  FROM DUAL) B
ON (A.TAG = B.TAG)
WHEN NOT MATCHED THEN 
INSERT (
  TAG, NAME, B, U, F, 
  TABNAME, BYISP, TYPE, OPT, TABCOLUMN_CHECK, 
  SQLVAL, CODE, NOT_TO_EDIT, HIST, PARID, 
  U_NREZ, F_NREZ, F_SPD, CHKR, MASK)
VALUES (
  B.TAG, B.NAME, B.B, B.U, B.F, 
  B.TABNAME, B.BYISP, B.TYPE, B.OPT, B.TABCOLUMN_CHECK, 
  B.SQLVAL, B.CODE, B.NOT_TO_EDIT, B.HIST, B.PARID, 
  B.U_NREZ, B.F_NREZ, B.F_SPD, B.CHKR, B.MASK)
WHEN MATCHED THEN
UPDATE SET 
  A.NAME = B.NAME,
  A.B = B.B,
  A.U = B.U,
  A.F = B.F,
  A.TABNAME = B.TABNAME,
  A.BYISP = B.BYISP,
  A.TYPE = B.TYPE,
  A.OPT = B.OPT,
  A.TABCOLUMN_CHECK = B.TABCOLUMN_CHECK,
  A.SQLVAL = B.SQLVAL,
  A.CODE = B.CODE,
  A.NOT_TO_EDIT = B.NOT_TO_EDIT,
  A.HIST = B.HIST,
  A.PARID = B.PARID,
  A.U_NREZ = B.U_NREZ,
  A.F_NREZ = B.F_NREZ,
  A.F_SPD = B.F_SPD,
  A.CHKR = B.CHKR,
  A.MASK = B.MASK;

MERGE INTO BARS.CUSTOMER_FIELD A USING
 (SELECT
  'NREMO' as TAG,
  'Непідтверджений дохід Боржника' as NAME,
  0 as B,
  0 as U,
  1 as F,
  NULL as TABNAME,
  NULL as BYISP,
  'E' as TYPE,
  NULL as OPT,
  NULL as TABCOLUMN_CHECK,
  NULL as SQLVAL,
  'KRED' as CODE,
  0 as NOT_TO_EDIT,
  NULL as HIST,
  294 as PARID,
  0 as U_NREZ,
  1 as F_NREZ,
  1 as F_SPD,
  NULL as CHKR,
  NULL as MASK
  FROM DUAL) B
ON (A.TAG = B.TAG)
WHEN NOT MATCHED THEN 
INSERT (
  TAG, NAME, B, U, F, 
  TABNAME, BYISP, TYPE, OPT, TABCOLUMN_CHECK, 
  SQLVAL, CODE, NOT_TO_EDIT, HIST, PARID, 
  U_NREZ, F_NREZ, F_SPD, CHKR, MASK)
VALUES (
  B.TAG, B.NAME, B.B, B.U, B.F, 
  B.TABNAME, B.BYISP, B.TYPE, B.OPT, B.TABCOLUMN_CHECK, 
  B.SQLVAL, B.CODE, B.NOT_TO_EDIT, B.HIST, B.PARID, 
  B.U_NREZ, B.F_NREZ, B.F_SPD, B.CHKR, B.MASK)
WHEN MATCHED THEN
UPDATE SET 
  A.NAME = B.NAME,
  A.B = B.B,
  A.U = B.U,
  A.F = B.F,
  A.TABNAME = B.TABNAME,
  A.BYISP = B.BYISP,
  A.TYPE = B.TYPE,
  A.OPT = B.OPT,
  A.TABCOLUMN_CHECK = B.TABCOLUMN_CHECK,
  A.SQLVAL = B.SQLVAL,
  A.CODE = B.CODE,
  A.NOT_TO_EDIT = B.NOT_TO_EDIT,
  A.HIST = B.HIST,
  A.PARID = B.PARID,
  A.U_NREZ = B.U_NREZ,
  A.F_NREZ = B.F_NREZ,
  A.F_SPD = B.F_SPD,
  A.CHKR = B.CHKR,
  A.MASK = B.MASK;

MERGE INTO BARS.CUSTOMER_FIELD A USING
 (SELECT
  'STAT ' as TAG,
  'Сімейний статус' as NAME,
  0 as B,
  0 as U,
  1 as F,
  'CIG_D08' as TABNAME,
  NULL as BYISP,
  'C' as TYPE,
  NULL as OPT,
  'ID' as TABCOLUMN_CHECK,
  NULL as SQLVAL,
  'KRED' as CODE,
  0 as NOT_TO_EDIT,
  NULL as HIST,
  295 as PARID,
  0 as U_NREZ,
  1 as F_NREZ,
  1 as F_SPD,
  NULL as CHKR,
  NULL as MASK
  FROM DUAL) B
ON (A.TAG = B.TAG)
WHEN NOT MATCHED THEN 
INSERT (
  TAG, NAME, B, U, F, 
  TABNAME, BYISP, TYPE, OPT, TABCOLUMN_CHECK, 
  SQLVAL, CODE, NOT_TO_EDIT, HIST, PARID, 
  U_NREZ, F_NREZ, F_SPD, CHKR, MASK)
VALUES (
  B.TAG, B.NAME, B.B, B.U, B.F, 
  B.TABNAME, B.BYISP, B.TYPE, B.OPT, B.TABCOLUMN_CHECK, 
  B.SQLVAL, B.CODE, B.NOT_TO_EDIT, B.HIST, B.PARID, 
  B.U_NREZ, B.F_NREZ, B.F_SPD, B.CHKR, B.MASK)
WHEN MATCHED THEN
UPDATE SET 
  A.NAME = B.NAME,
  A.B = B.B,
  A.U = B.U,
  A.F = B.F,
  A.TABNAME = B.TABNAME,
  A.BYISP = B.BYISP,
  A.TYPE = B.TYPE,
  A.OPT = B.OPT,
  A.TABCOLUMN_CHECK = B.TABCOLUMN_CHECK,
  A.SQLVAL = B.SQLVAL,
  A.CODE = B.CODE,
  A.NOT_TO_EDIT = B.NOT_TO_EDIT,
  A.HIST = B.HIST,
  A.PARID = B.PARID,
  A.U_NREZ = B.U_NREZ,
  A.F_NREZ = B.F_NREZ,
  A.F_SPD = B.F_SPD,
  A.CHKR = B.CHKR,
  A.MASK = B.MASK;

MERGE INTO BARS.CUSTOMER_FIELD A USING
 (SELECT
  'NAMEW' as TAG,
  'Найменування роботодавця' as NAME,
  0 as B,
  0 as U,
  1 as F,
  NULL as TABNAME,
  NULL as BYISP,
  'C' as TYPE,
  NULL as OPT,
  NULL as TABCOLUMN_CHECK,
  NULL as SQLVAL,
  'KRED' as CODE,
  0 as NOT_TO_EDIT,
  NULL as HIST,
  296 as PARID,
  0 as U_NREZ,
  1 as F_NREZ,
  1 as F_SPD,
  NULL as CHKR,
  NULL as MASK
  FROM DUAL) B
ON (A.TAG = B.TAG)
WHEN NOT MATCHED THEN 
INSERT (
  TAG, NAME, B, U, F, 
  TABNAME, BYISP, TYPE, OPT, TABCOLUMN_CHECK, 
  SQLVAL, CODE, NOT_TO_EDIT, HIST, PARID, 
  U_NREZ, F_NREZ, F_SPD, CHKR, MASK)
VALUES (
  B.TAG, B.NAME, B.B, B.U, B.F, 
  B.TABNAME, B.BYISP, B.TYPE, B.OPT, B.TABCOLUMN_CHECK, 
  B.SQLVAL, B.CODE, B.NOT_TO_EDIT, B.HIST, B.PARID, 
  B.U_NREZ, B.F_NREZ, B.F_SPD, B.CHKR, B.MASK)
WHEN MATCHED THEN
UPDATE SET 
  A.NAME = B.NAME,
  A.B = B.B,
  A.U = B.U,
  A.F = B.F,
  A.TABNAME = B.TABNAME,
  A.BYISP = B.BYISP,
  A.TYPE = B.TYPE,
  A.OPT = B.OPT,
  A.TABCOLUMN_CHECK = B.TABCOLUMN_CHECK,
  A.SQLVAL = B.SQLVAL,
  A.CODE = B.CODE,
  A.NOT_TO_EDIT = B.NOT_TO_EDIT,
  A.HIST = B.HIST,
  A.PARID = B.PARID,
  A.U_NREZ = B.U_NREZ,
  A.F_NREZ = B.F_NREZ,
  A.F_SPD = B.F_SPD,
  A.CHKR = B.CHKR,
  A.MASK = B.MASK;

MERGE INTO BARS.CUSTOMER_FIELD A USING
 (SELECT
  'EDRPO' as TAG,
  'Код ЄДРПОУ роботодавця' as NAME,
  0 as B,
  0 as U,
  1 as F,
  NULL as TABNAME,
  NULL as BYISP,
  'C' as TYPE,
  NULL as OPT,
  NULL as TABCOLUMN_CHECK,
  NULL as SQLVAL,
  'KRED' as CODE,
  0 as NOT_TO_EDIT,
  NULL as HIST,
  297 as PARID,
  0 as U_NREZ,
  1 as F_NREZ,
  1 as F_SPD,
  NULL as CHKR,
  NULL as MASK
  FROM DUAL) B
ON (A.TAG = B.TAG)
WHEN NOT MATCHED THEN 
INSERT (
  TAG, NAME, B, U, F, 
  TABNAME, BYISP, TYPE, OPT, TABCOLUMN_CHECK, 
  SQLVAL, CODE, NOT_TO_EDIT, HIST, PARID, 
  U_NREZ, F_NREZ, F_SPD, CHKR, MASK)
VALUES (
  B.TAG, B.NAME, B.B, B.U, B.F, 
  B.TABNAME, B.BYISP, B.TYPE, B.OPT, B.TABCOLUMN_CHECK, 
  B.SQLVAL, B.CODE, B.NOT_TO_EDIT, B.HIST, B.PARID, 
  B.U_NREZ, B.F_NREZ, B.F_SPD, B.CHKR, B.MASK)
WHEN MATCHED THEN
UPDATE SET 
  A.NAME = B.NAME,
  A.B = B.B,
  A.U = B.U,
  A.F = B.F,
  A.TABNAME = B.TABNAME,
  A.BYISP = B.BYISP,
  A.TYPE = B.TYPE,
  A.OPT = B.OPT,
  A.TABCOLUMN_CHECK = B.TABCOLUMN_CHECK,
  A.SQLVAL = B.SQLVAL,
  A.CODE = B.CODE,
  A.NOT_TO_EDIT = B.NOT_TO_EDIT,
  A.HIST = B.HIST,
  A.PARID = B.PARID,
  A.U_NREZ = B.U_NREZ,
  A.F_NREZ = B.F_NREZ,
  A.F_SPD = B.F_SPD,
  A.CHKR = B.CHKR,
  A.MASK = B.MASK;

MERGE INTO BARS.CUSTOMER_FIELD A USING
 (SELECT
  'MEMB ' as TAG,
  'Кількість осіб, що перебувають на утриманні боржника' as NAME,
  0 as B,
  0 as U,
  1 as F,
  NULL as TABNAME,
  NULL as BYISP,
  'N' as TYPE,
  NULL as OPT,
  NULL as TABCOLUMN_CHECK,
  NULL as SQLVAL,
  'KRED' as CODE,
  0 as NOT_TO_EDIT,
  NULL as HIST,
  298 as PARID,
  0 as U_NREZ,
  1 as F_NREZ,
  1 as F_SPD,
  'c_tag_customer(#(RNK),#(TAG),#(VAL))' as CHKR,
  NULL as MASK
  FROM DUAL) B
ON (A.TAG = B.TAG)
WHEN NOT MATCHED THEN 
INSERT (
  TAG, NAME, B, U, F, 
  TABNAME, BYISP, TYPE, OPT, TABCOLUMN_CHECK, 
  SQLVAL, CODE, NOT_TO_EDIT, HIST, PARID, 
  U_NREZ, F_NREZ, F_SPD, CHKR, MASK)
VALUES (
  B.TAG, B.NAME, B.B, B.U, B.F, 
  B.TABNAME, B.BYISP, B.TYPE, B.OPT, B.TABCOLUMN_CHECK, 
  B.SQLVAL, B.CODE, B.NOT_TO_EDIT, B.HIST, B.PARID, 
  B.U_NREZ, B.F_NREZ, B.F_SPD, B.CHKR, B.MASK)
WHEN MATCHED THEN
UPDATE SET 
  A.NAME = B.NAME,
  A.B = B.B,
  A.U = B.U,
  A.F = B.F,
  A.TABNAME = B.TABNAME,
  A.BYISP = B.BYISP,
  A.TYPE = B.TYPE,
  A.OPT = B.OPT,
  A.TABCOLUMN_CHECK = B.TABCOLUMN_CHECK,
  A.SQLVAL = B.SQLVAL,
  A.CODE = B.CODE,
  A.NOT_TO_EDIT = B.NOT_TO_EDIT,
  A.HIST = B.HIST,
  A.PARID = B.PARID,
  A.U_NREZ = B.U_NREZ,
  A.F_NREZ = B.F_NREZ,
  A.F_SPD = B.F_SPD,
  A.CHKR = B.CHKR,
  A.MASK = B.MASK;

MERGE INTO BARS.CUSTOMER_FIELD A USING
 (SELECT
  'TYPEW' as TAG,
  'Тип роботодавця' as NAME,
  0 as B,
  0 as U,
  1 as F,
  'EMPLOYER_TYPE' as TABNAME,
  NULL as BYISP,
  'C' as TYPE,
  NULL as OPT,
  'ID' as TABCOLUMN_CHECK,
  NULL as SQLVAL,
  'KRED' as CODE,
  0 as NOT_TO_EDIT,
  NULL as HIST,
  299 as PARID,
  0 as U_NREZ,
  1 as F_NREZ,
  1 as F_SPD,
  NULL as CHKR,
  NULL as MASK
  FROM DUAL) B
ON (A.TAG = B.TAG)
WHEN NOT MATCHED THEN 
INSERT (
  TAG, NAME, B, U, F, 
  TABNAME, BYISP, TYPE, OPT, TABCOLUMN_CHECK, 
  SQLVAL, CODE, NOT_TO_EDIT, HIST, PARID, 
  U_NREZ, F_NREZ, F_SPD, CHKR, MASK)
VALUES (
  B.TAG, B.NAME, B.B, B.U, B.F, 
  B.TABNAME, B.BYISP, B.TYPE, B.OPT, B.TABCOLUMN_CHECK, 
  B.SQLVAL, B.CODE, B.NOT_TO_EDIT, B.HIST, B.PARID, 
  B.U_NREZ, B.F_NREZ, B.F_SPD, B.CHKR, B.MASK)
WHEN MATCHED THEN
UPDATE SET 
  A.NAME = B.NAME,
  A.B = B.B,
  A.U = B.U,
  A.F = B.F,
  A.TABNAME = B.TABNAME,
  A.BYISP = B.BYISP,
  A.TYPE = B.TYPE,
  A.OPT = B.OPT,
  A.TABCOLUMN_CHECK = B.TABCOLUMN_CHECK,
  A.SQLVAL = B.SQLVAL,
  A.CODE = B.CODE,
  A.NOT_TO_EDIT = B.NOT_TO_EDIT,
  A.HIST = B.HIST,
  A.PARID = B.PARID,
  A.U_NREZ = B.U_NREZ,
  A.F_NREZ = B.F_NREZ,
  A.F_SPD = B.F_SPD,
  A.CHKR = B.CHKR,
  A.MASK = B.MASK;

COMMIT;
