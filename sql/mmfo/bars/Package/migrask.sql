
 
 PROMPT ===================================================================================== 
 PROMPT *** Run *** ========== Scripts /Sql/BARS/package/migrask.sql =========*** Run *** ===
 PROMPT ===================================================================================== 
 
  CREATE OR REPLACE PACKAGE BARS.MIGRASK 
is
  version_header  constant  varchar2(64) := 'version 2.12 08.07.2011 16:41';

  procedure create_tableS6_job;

  procedure create_tableS6     (p_open out number, p_code out number, p_bal number);

  procedure filling_params     (p_open out number, p_code out number, p_bal number);

  procedure filling_branchs    (p_open out number, p_code out number, p_bal number);

  procedure drop_customerS6    (p_open out number, p_code out number, p_bal number);

  procedure drop_customerUN    (p_open out number, p_code out number);

  procedure create_customerS6  (p_open out number, p_code out number, p_bal number);

  procedure create_customerUN  (p_open out number, p_code out number);

  procedure drop_userS6        (p_open out number, p_code out number, p_bal number);

  procedure drop_userUN        (p_open out number, p_code out number);

  procedure create_userS6      (p_open out number, p_code out number, p_bal number);

  procedure create_userUN      (p_open out number, p_code out number);

  procedure drop_accountS6     (p_open out number, p_code out number, p_bal number);

  procedure drop_accountUN     (p_open out number, p_code out number);

  procedure open_accountS6     (p_open out number, p_code out number, p_bal number);

  procedure open_accountUN     (p_open out number, p_code out number);

  procedure drop_branchs       (p_open out number, p_code out number, p_bal number);

  procedure create_userS5f     (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure create_userS6f     (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure create_customerS5f (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure create_customerS6f (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure open_accountS5f    (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure open_accountS6f    (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_accountS5f    (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_accountS6f    (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_customerS5f   (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_customerS6f   (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_userS5f       (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_userS6f       (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure copy_skarb5_tables (p_filial in varchar2);

  procedure copy_skarb6_tables (p_filial in varchar2);

  procedure load_skarb5_ostc   (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure load_skarb6_ostc   (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_skarb5_ostc   (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_skarb6_ostc   (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure fin_deblocking5f   (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure fin_deblocking6f   (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure open_3800_5f       (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure open_3800_6f       (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure grn11tocurrates;

  procedure pereocenka         (p_code in out number, p_errmask varchar2, p_datx date);

  procedure create_userShi     (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure create_customerShi (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure open_accountShi    (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_accountShi    (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_customerShi   (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_userShi       (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure copy_hitc_tables   (p_filial in varchar2);

  procedure copy_iniF_tables   (p_filial in varchar2);

  procedure load_hitc_ostc     (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_hitc_ostc     (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure fin_deblockinghi   (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure open_3800_hi       (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure balans_firstost    (p_open out number, p_code out number, p_bal number);

  procedure balans_firstostUN  (p_open out number, p_code out number);

  procedure load_obnls         (p_open out number, p_code out number, p_bal number);

  procedure load_obnlsUN       (p_open out number, p_code out number);

  procedure drop_obnlsUN       (p_open out number, p_code out number);

  procedure open_vplist        (p_open out number, p_code out number, p_bal number);

  procedure open_vplistUN      (p_open out number, p_code out number);

  procedure create_docum       (p_open out number, p_code out number, p_bal number);

  procedure create_documUN     (p_open out number, p_code out number);

  procedure open_proc_dr       (p_open out number, p_code out number, p_bal number);

  procedure open_proc_drUN     (p_open out number, p_code out number);

  procedure create_userUF      (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure create_customerUF  (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure open_accountUF     (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_accountUF     (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_customerUF    (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_userUF        (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure load_uniF_ostc     (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure drop_uniF_ostc     (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure fin_deblockingUF   (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure open_3800_UF       (p_filial in varchar2, p_open out number, p_code out number, p_datx date);

  procedure tableS6_stats;

  procedure tableCU_stats;

  procedure tableAC_stats;

  procedure open_proc_drm      (p_errmask in varchar2, p_open in out number, p_code in out number, p_bal number, p_branch in varchar2 default null);

  procedure get_account        (p_errmask in varchar2            ,
                                p_ob22    in char                ,  -- параметр ОБ22
                                p_branch  in accounts.branch%type,  -- подразделение
                                p_nbs     in accounts.nbs%type   ,  -- бал.счет
                                p_kv      in accounts.kv%type    ,  -- валюта
                                p_accmask in accounts.nls%type   ,  -- маска счета
                                p_accnum out accounts.nls%type);    -- номер счета

  procedure open_account       (p_errmask in varchar2                ,
                                p_mfo     in     accounts.kf%type    ,
                                p_branch  in     accounts.branch%type,
                                p_accnum  in     accounts.nls%type   ,
                                p_acccur  in     accounts.kv%type    ,
                                p_accname in     accounts.nms%type   ,
                                p_custid  in     accounts.rnk%type   ,
                                p_ob22    in     varchar2            ,
                                p_accid   out    accounts.acc%type   ,
                                p_opena   in out number              ,
                                p_codea   in out number);

  procedure fill_procdr        (p_errmask in varchar2                ,
                                p_bsd     in proc_dr$base.nbs%type   ,
                                p_bsn     in proc_dr$base.nbsn%type  ,
                                p_rezid   in proc_dr$base.rezid%type ,
                                p_io      in proc_dr$base.io%type    ,
                                p_kf      in proc_dr$base.kf%type    ,
                                p_branch  in proc_dr$base.branch%type,
                                p_code    in number                  ,
                                p_accnum  in proc_dr$base.g67%type);

  function get_alegrocode      (p_branch in branch.branch%type) return varchar2;

  function get_numob22         (p_ob22 in char) return varchar2;

  function valid_string        (p_str in varchar2) return varchar2;

  function valid_symbol        (p_str in varchar2) return varchar2;

  function kodobl              (p_mfo in varchar2) return char;

  function prov_bal            (p_mask varchar2, p_bal number) return number;

  function header_version      return varchar2;

  function body_version        return varchar2;

end migraSK;
/
CREATE OR REPLACE PACKAGE BODY BARS.MIGRASK 
as
  version_body  constant  varchar2(64) := 'version 2.A5 11.03.2013 11:57';

-- v.1.04 14.05.2009 19:05 - ┬ ёююс∙хэшх юс ю°шсъх яЁш шьяюЁЄх ъышхэЄют
--                           фюсртыхэ√ яюы  IdClient ш GROUP_C шч ЄрсышЎ√
--                           Clients ╤╩└╨┴р6

-- v.1.05 15.05.2009 10:17 - ╧Ёш "╬ЄърЄх: єфрыхэшх ъышхэЄют" єфры ■Єё  ╚
--                           "сЁрэўхт√х" (эхюсїюфшь√х фы  Offline) ъышхэЄ√

-- v.1.06 18.05.2009 17:28 - "╚ьяюЁЄ ёўхЄют" - яю 8-ьє ъырёёє ъЁюьх ёўхЄют
--                           эрыюуютюую єў╕Єр шьяюЁЄ Єё  ш ёўхЄр
--                           єяЁртыхэўхёъюую єў╕Єр

-- v.1.07 26.06.2009 12:55 - "╚ьяюЁЄ ёўхЄют" - фы  ёўхЄют 2605, 2625, 2655
--                           яЁюёЄрты хЄё  Єшя ёў╕Єр PK1

-- v.1.08 26.06.2009 15:50 - ╧ЁютхЁър эр срырэё яхЁхф ╚ьяюЁЄюь ёўхЄют

-- v.1.09 29.06.2009 10:27 - ─юсртыхэр юўшёЄър BPK_ACC яЁш ╬╥╩└╥х ёўхЄют

-- v.1.10 31.08.2009 17:27 - ╧ЁютхЁър эр срырэё яхЁхф ╚ьяюЁЄюь:
--                           яюфЁрчфхыхэшщ Їшышрыр, яюы№чютрЄхыхщ, ъышхэЄют,
--                           ёўхЄют

-- v.1.11 01.09.2009 14:39 - ╚ёяЁртыхэю INSERT branch_parameters --> tag='RNK'

-- v.1.12 02.09.2009 12:06 - ┬ "╚ьяюЁЄх ёўхЄют" фы  чръЁ√Є√ї ёўхЄют
--                           яЁюёЄрты хЄё  фрЄр чръЁ√Єш  ╤╩└╨┴р6

-- v.1.13 02.09.2009 14:11 - ╧Ёш юЄърЄх ёўхЄют "ёсЁрё√трхЄё " SEQUENCE
--                           S_ACCOUNTS

-- v.1.14 02.09.2009 17:18 - ─юсртыхэр ЁрсюЄр ё ЄрсышЎрьш яюфёшёЄхь√ эръюяыхэш 

-- v.1.15 03.09.2009 20:08 - ┬ ёїхьє ┴└╨╤р чруЁєцр■Єё  ЄрсышЎ√ ъЁхфшЄэюую
--                           яюЁЄЇхы  ╤╩└╨┴р6

-- v.1.16 04.09.2009 18:13 - ╠шуЁрЎш  яюы№чютрЄхыхщ: хёыш юъюэўрэшх ъюфр
--                           яюы№чютрЄхы  фы  шфхэЄшЇшърЎшш т ┴└╨╤х эх
--                           єърчрэю т ЄрсышЎх S6_USERMAP, Єю ъюф яюы№чютрЄхы 
--                           яЁюёЄрты хЄё  ёыхфє■∙шь юсЁрчюь:
--                           U<ъюф_юсырёЄш_2чэрър>_S<ыюушэ_╤╩└╨┴р6>
--                           шэрўх Єръ:
--                           U<ъюф_юсырёЄш_2чэрър>_<юъюэўрэшх_ъюфр_яюы№чютрЄхы >

-- v.1.17 08.09.2009 15:04 - Ёрё°шЁхэшх яюы  NKD т SPECPARAM фю 40 ёшьтюыют

-- v.1.18 09.09.2009 11:29 - ╚ьяюЁЄ ёўхЄют: хёыш фы  ёў╕Єр эх эрїюфшЄё 
--                           ёююЄтхЄёЄтш  фхярЁЄрьхэЄр ╤╩└╨┴р6 сЁрэўє └┴╤ ┴└╨╤
--                           (т branch_parameters), Єю сЁрэў яЁюёЄрты хЄё 
--                           Ёртэ√ь /╠╘╬/000000/ (Ёрэхх с√ыю /╠╘╬/)

-- v.1.19 17.09.2009 14:23 - ┬√сЁю°хэ√ ╨ютхэёъшх VIEW (яЁюсыхь√ ё ъюяхщърьш)

-- v.1.20 17.09.2009 16:48 - ╚чьхэхэ√ ъюф√ ╬╙ ёюуырёэю ёяЁртюўэшъє ╤схЁсрэър

-- v.1.21 19.09.2009 12:50 - ╧Ёш шьяюЁЄх яюы№чютрЄхыхщ т юъюэўрэшх ыюушэр
--                           ёючфртрхьюую яюы№чютрЄхы  схЁ╕Єё  эх ыюушэ
--                           яюы№чютрЄхы  т ╤╩└╨┴х6, р эюьхЁ шёяюыэшЄхы 

-- v.1.22 29.09.2009 12:55 - ╧Ёш шьяюЁЄх ёўхЄют яЁюёЄрты хЄё  тшф ёў╕Єр

-- v.1.23 29.09.2009 15:13 - ╙ ьхЄрыыют эх 3 чэрър, р 2 (ъръ ш є ы■сющ тры■Є√)

-- v.1.24 29.09.2009 15:38 - ┬ ёїхьє ┴└╨╤р фюяюыэшЄхы№эю чрЄ уштр■Єё  ЄрсышЎ√:
--                           OBNLS, DocParam_Y, EXT_SALDO, LockSaldo

-- v.1.25 06.10.2009 15:16 - ┬ шьяюЁЄх ёўхЄют фюсртыхэ ёяхЎярЁрьхЄЁ S260

-- v.1.26 12.10.2009 17:18 - ┬ шьяюЁЄх ъышхэЄют яЁютхЁ хЄё  фышэр
--                           ёъюьяюэютрээюую рфЁхёр, ш, хёыш юэр  сюы№°х
--                           фюяєёЄшьющ, Єю єёхърхЄё  фю ЁрчьхЁэюёЄш яюы  ADR
--                           ЄрсышЎ√ ъышхэЄют CUSTOMER

-- v.1.27 22.10.2009 17:34 - ╚ьяюЁЄ Єё  чръЁ√Є√х ёўхЄр ╤╩└╨┴р6, эю Єюы№ъю яю
--                           Єхь срырэёют√ь ёўхЄрь, яю ъюЄюЁ√ь шф╕Є юЄсюЁ
--                           шэЇюЁьрЎшш т эрыюуютю■

-- v.1.28 22.10.2009 18:28 - ╚ч эршьхэютрэшщ т√сЁрё√тр■Єё  "эхяхўрЄэ√х" ёшьтюы√

-- v.1.29 25.10.2009 19:40 - ┬√сЁю°хэю ёючфрэшх ЄрсышЎ√ S6_DOCUM_Y (юўхэ№ фюыую)

-- v.1.30 30.10.2009 17:21 - ─хЄрышчшЎш  ю°шсюъ яЁш чруЁєчъх юс·хъЄют ╤╩╨└┴р6
--                           т ёїхьє └┴╤ ┴└╨╤ ш яЁюяєёъ NULL-чэрўхэшщ т
--                           эхъюЄюЁ√ї яюы ї яЁш шьяюЁЄх фрээ√ї шч ЄрсышЎ, уфх
--                           ¤Єш яюы  юяшёрэ√ ъръ NOT NULL

-- v.1.31 30.10.2009 18:33 - ╧юых CRISK эх шьяюЁЄшЄё  шч ╤╩└╨┴р6

-- v.1.32 03.11.2009 14:28 - ╧юых CRISK (╩рЄхуюЁш  Ёшёър) т ЄрсышЎх ъышхэЄют
--                           └┴╤ ┴└╨╤ чряюыэ хЄё  эр юёэютрэшш чэрўхэш  яюы 
--                           Class (╘шэ ёЄрэ) ЄрсышЎ√ P__Clients ╤╩└╨┴р6

-- v.1.33 04.11.2009 15:42 - ╚ьяюЁЄ ёўхЄют: ёююс∙хэшх ьрёър-err(1) эх т√фр╕Єё 
--                           фы  ёўхЄют, ъюЄюЁ√х т ╤╩└╨┴х6 чръЁ√Є√

-- v.1.34 09.11.2009 17:06 - ╚ьяюЁЄ ъышхэЄют: хёыш шэёЄшЄєЎшюээ√щ ёхъЄюЁ
--                           ¤ъюэюьшъш (Clients.Sector) = null, Єю
--                           яЁхюсЁрчют√трхЄё  т 00000 фы  шёъы■ўхэш  ю°шсюъ

-- v.1.35 10.11.2009 21:13 - ─юсртыхэр фхЄрышчрЎш  ьхёЄюэрїюцфхэш  ю°шсюъ -
--                           dbms_utility.format_error_backtrace

-- v.1.36 12.11.2009 09:59 - ╚ьяюЁЄ ёўхЄют: яЁш яюшёъх фюяюыэшЄхы№э√ї
--                           ярЁрьхЄЁют шуэюЁшЁє■Єё  ъюэЎхт√х яЁюсхы√ т ёўхЄрї

-- v.1.37 16.11.2009 18:23 - ╚ьяюЁЄшЁє■Єё  ╥╬╦▄╩╬ Єх ╩ышхэЄ√ ш ╤ўхЄр, є ъюЄюЁ√ї
--                           яюых BIC шьххЄ чэрўхэшх Ёртэюх уыртэюьє ╠╘╬

-- v.1.38 24.11.2009 12:14 - ┬хчфх trimр■Єё  ёўхЄр; т ёїхьє ┴└╨╤р фюяюыэшЄхы№эю
--                           чрЄ уштр■Єё  ЄрсышЎ√ PercenVid ш PercenRate

-- v.1.39 02.12.2009 18:19 - ╚ьяюЁЄ ъышхэЄют: с√ыш яхЁхяєЄрэ√ ьхёЄрьш фрЄ√
--                           ЁхушёЄЁрЎшш т эрыюуютющ шэёяхъЎшш ш т
--                           рфьшэшёЄЁрЎшш, шёяЁртыхэю

-- v.1.40 06.12.2009 01:19 - ╧рЁє шэфхъёют ёЄЁюшышё№ эх яю Єхь яюы ь, шёяЁртыхэю

-- v.1.41 06.12.2009 01:38 - ╚ьяюЁЄ ёўхЄют: яЁюёЄрты хЄё  эхюсїюфшь√щ яЁшчэръ
--                           фы  эхяхЁхюЎхэштрхь√ї ёўхЄют (pos=2)

-- v.1.42 15.12.2009 19:49 - ┬ ёїхьє ┴└╨╤р фюяюыэшЄхы№эю чрЄ уштр■Єё  ЄрсышЎ√:
--                           DocParam, Certificates, VID_Contract

-- v.1.43 16.12.2009 16:19 - ╤сюЁ ёЄрЄшёЄшъш: Analyze Table ... чрьхэхэю эр
--                           dbms_stats.gather_table_stats

-- v.1.44 17.12.2009 15:08 - ╚ьяюЁЄ ъышхэЄют: фы  Їшч.ышЎ (яЁш эрышўшш
--                           шэЇюЁьрЎшш) шьяюЁЄ Єё  ЁхътшчшЄ√ - ╤хЁш  фюъєьхэЄр,
--                           ╣ фюъєьхэЄр, ─рЄ√ т√фрўш фюъєьхэЄр ш ═ршьхэютрэшх
--                           юЁурэшчрЎшш, т√фрт°хщ єфюёЄютхЁ ■∙шщ фюъєьхэЄ

-- v.2.01 03.02.2010 20:15 - ╚ьяюЁЄ шэЇюЁьрЎшш Їшышрыют ёю ╤╩└╨┴р5 ш ╤╩└╨┴р6:
--                           яюы№чютрЄхыш, ъышхэЄ√, ёўхЄр

-- v.2.02 08.02.2010 16:29 - ╧Ёш ьшуЁрЎшш Їшышрыр ёю ╤╩└╨┴р6 фюяюыэ хЄё  ALIEN -
--                           ёяЁртюўэшъ ъюэЄЁрухэЄют (ъышхэЄют фЁєушї срэъют)

-- v.2.03 10.02.2010 13:55 - ╧Ёш ьшуЁрЎшш ёўхЄют Їшышрыр ёю ╤╩└╨┴р6 шыш ╤╩└╨┴р5
--                           т ёыєўрх, хёыш т√ўшёыхээ√щ фы  юЄъЁ√Єш  ёў╕Є єцх
--                           юЄъЁ√Є, Єю юсэюты ■Єё  Єюы№ъю ярЁрьхЄЁ√ ёў╕Єр

-- v.2.04 10.02.2010 15:11 - ╧Ёш ьшуЁрЎшш ёўхЄют Їшышрыр ёю ╤╩└╨┴р6 шыш ╤╩└╨┴р5
--                           т яюых фрЄ√ яюёыхфэхую фтшцхэш  яю ёў╕Єє чрэюёшЄё 
--                           чэрўхэшх NULL

-- v.2.05 12.02.2010 18:28 - ╧Ёш юяырЄх ш юЄърЄх юёЄрЄъют єёЄрэртыштрхь
--                           яюёЁхфёЄтюь gl.pl_dat срэъютёъє■ фрЄє Ёртэющ фрЄх
--                           яхЁхтюфр Їшышрыр

-- v.2.06 13.02.2010 16:32 - ╧Ёш яхЁхюЄъЁ√Єшш 3800/3801 єёЄрэртыштрхь
--                           срэъютёъє■ фрЄє Ёртэющ фрЄх яхЁхтюфр Їшышрыр

-- v.2.07 16.02.2010 17:42 - ╧Ёш ЁрчтюЁрўштрэшш юёЄрЄъют ёўхЄют Їшышрыют
--                           єўшЄ√трхЄё  ёяхЎюсЁрсюЄър ёўхЄют рєъЎшюэют

-- v.2.08 16.02.2010 20:22 - ╧Ёш ьшуЁрЎшш ъышхэЄют Їшышрыр ёю ╤╩└╨┴р5
--                           чряюыэ хЄё  ■Ёшфшўхёъшщ рфЁхё

-- v.2.09 17.02.2010 18:53 - ╧Ёш ьшуЁрЎшш яюы№чютрЄхыхщ ╤╩└╨┴р6 юсЁхчр■Єё 
--                           яЁюсхы√ т яюых шфхэЄшЇшърЄюЁр ъы■ўр

-- v.2.10 18.02.2010 18:26 - ╠шуЁрЎшш Їшышрыют: ╠╘╬ яхЁхтюфшьюую Їшышрыр
--                           єфры хЄё  шч ЄрсышЎ LKL_RRP ш BANK_ACC

-- v.2.11 18.02.2010 18:45 - ╧юёых ьшуЁрЎшш ╤╩└╨┴р6 шыш ьшуЁрЎшш Їшышрыют
--                           яЁюёЄрты хь уЁштэє яю тёхь сЁрэўрь т cur_rates$base

-- v.2.12 23.02.2010 16:33 - ┴рырэёют√щ ёў╕Є схЁ╕Єё  эх шч юЄфхы№эюую яюы  т
--                           ╤╩└╨┴х6, ╤╩└╨┴х6(Ї), ╤╩└╨┴х5(Ї), р яЁ ью шч
--                           ышЎхтюую ёў╕Єр

-- v.2.13 23.02.2010 17:23 - ╠шуЁрЎш  Їшышрыют ёю ╤╩└╨┴р5, ╤╩└╨┴р6 - эют√х
--                           ёўхЄр юЄъЁ√тр■Єё  ё фрЄющ юЄъЁ√Єш  Ёртэющ фрЄх
--                           яхЁхтюфр Їшышрыр

-- v.2.14 23.02.2010 18:02 - ╧Ёш ьшуЁрЎшш ёўхЄют Їшышрыют ёю ╤╩└╨┴р5, ╤╩└╨┴р6
--                           ёўхЄр 1001..., 1101..., 1011... чрьхэ ■ё  эр
--                                 1002..., 1102..., 1012... ёююЄтхЄёЄтхээю

-- v.2.15 24.02.2010 18:29 - ╠шуЁрЎш  Їшышрыют. ╧юёых яєэъЄр "╟руЁєчър юёЄрЄъют
--                           яю ёўхЄрь Їшышрыр" ртЄюьрЄшўхёъш т√яюыэ хЄё 
--                           яхЁхюЎхэър чр фрЄє ьшуЁрЎшш

-- v.2.16 25.02.2010 12:53 - ╚ёяюы№чютрэшх тёяюьюурЄхы№э√ї ЄрсышЎ ╤╩└╨┴р6 фы 
--                           Ёх°хэш  тючьюцэющ яЁюсыхь√ "ъюяххъ". ┼ёыш Єрър 
--                           яЁюсыхьр хёЄ№, Єю т ёїхьх MsSql ╤╩└╨┴р6 эхюсїюфшью
--                           ёючфрЄ№ °хёЄ№ яЁхфёЄртыхэшщ (юяшёрэ√ эшцх):

--                           --view DOCUM_VIEW

--                           select
--                             ID_OPER                 ,
--                             ID_DOCUM                ,
--                             KB_A                    ,
--                             KK_A                    ,
--                             KB_B                    ,
--                             KK_B                    ,
--                             D_K                     ,
--                             SUMMA*100         SUMMA ,
--                             VID                     ,
--                             SKO                     ,
--                             ND                      ,
--                             I_VA                    ,
--                             DA_OD                   ,
--                             DA                      ,
--                             DA_DOC                  ,
--                             NK_A                    ,
--                             NK_B                    ,
--                             NP                      ,
--                             VS_REC                  ,
--                             KOD_NP                  ,
--                             KOD_A                   ,
--                             KOD_B                   ,
--                             NPACH                   ,
--                             REE_COUNT               ,
--                             DB_S                    ,
--                             KR_S                    ,
--                             CUR_VS*100000000  CUR_VS,
--                             GROUP_U                 ,
--                             STATUS                  ,
--                             NF_IN                   ,
--                             NPP_IN                  ,
--                             ERR_IN                  ,
--                             SP_ZAP                  ,
--                             NF_OUT                  ,
--                             NPP_OUT                 ,
--                             ERR_OUT                 ,
--                             OPER_N                  ,
--                             DA_FACT                 ,
--                             PStatus                 ,
--                             DA_MB                   ,
--                             ISP_OWNER               ,
--                             ID_PARENT               ,
--                             ID_RULE                 ,
--                             TAG                     ,
--                             DA_REC                  ,
--                             NO_ARX
--                           from DOCUM;

--                           --view DOCUM_Y_VIEW

--                           select
--                             ID_OPER                 ,
--                             ID_DOCUM                ,
--                             KB_A                    ,
--                             KK_A                    ,
--                             KB_B                    ,
--                             KK_B                    ,
--                             D_K                     ,
--                             SUMMA*100         SUMMA ,
--                             VID                     ,
--                             SKO                     ,
--                             ND                      ,
--                             I_VA                    ,
--                             DA_OD                   ,
--                             DA                      ,
--                             DA_DOC                  ,
--                             NK_A                    ,
--                             NK_B                    ,
--                             NP                      ,
--                             VS_REC                  ,
--                             KOD_NP                  ,
--                             KOD_A                   ,
--                             KOD_B                   ,
--                             NPACH                   ,
--                             REE_COUNT               ,
--                             DB_S                    ,
--                             KR_S                    ,
--                             CUR_VS*100000000  CUR_VS,
--                             GROUP_U                 ,
--                             STATUS                  ,
--                             NF_IN                   ,
--                             NPP_IN                  ,
--                             ERR_IN                  ,
--                             SP_ZAP                  ,
--                             NF_OUT                  ,
--                             NPP_OUT                 ,
--                             ERR_OUT                 ,
--                             OPER_N                  ,
--                             DA_FACT                 ,
--                             PStatus                 ,
--                             DA_MB                   ,
--                             ISP_OWNER               ,
--                             ID_PARENT               ,
--                             ID_RULE                 ,
--                             TAG                     ,
--                             DA_REC
--                           from DOCUM_Y;

--                           --view HIST_PR_VIEW

--                           select
--                             PercenRate              ,
--                             DA                      ,
--                             Percen*100000000  Percen,
--                             ISP_Modify              ,
--                             D_Modify
--                           from HIST_PR;

--                           --view SALDO_VIEW

--                           select
--                             NLS             ,
--                             KSS             ,
--                             GROUP_U         ,
--                             I_VA            ,
--                             OSN             ,
--                             PS              ,
--                             VID             ,
--                             SIO             ,
--                             DEPART          ,
--                             NK              ,
--                             ISP_OWNER       ,
--                             ABON            ,
--                             DOP             ,
--                             DCL             ,
--                             DAPP            ,
--                             ISH*100    ISH  ,
--                             ISH_V*100  ISH_V,
--                             LIMIT*100  LIMIT,
--                             REE_FLAG        ,
--                             REE_DATE        ,
--                             NLS_ALT         ,
--                             TYPE            ,
--                             SUB_NLS         ,
--                             BIC             ,
--                             IdContract      ,
--                             BalS            ,
--                             D_MODIFY        ,
--                             VSH*100    VSH  ,
--                             VSH_V*100  VSH_V,
--                             PlanAcc
--                           from SALDO;

--                           -- view LockSaldo_VIEW

--                           select
--                             D_MODIFY    ,
--                             DaAutoUnLock,
--                             DaDocLock   ,
--                             DaDocUnLock ,
--                             DaLock      ,
--                             DaUnLock    ,
--                             DocLock     ,
--                             DocUnLock   ,
--                             GROUP_U     ,
--                             I_VA        ,
--                             ISP_Lock    ,
--                             ISP_UnLock  ,
--                             Motive      ,
--                             NLS         ,
--                             SumLock*100  SumLock
--                           from LockSaldo;

--                           --view OBNLS_VIEW

--                           select
--                             DA              ,
--                             NLS             ,
--                             GROUP_U         ,
--                             I_VA            ,
--                             DOS*100    DOS  ,
--                             KOS*100    KOS  ,
--                             DOS_V*100  DOS_V,
--                             KOS_V*100  KOS_V
--                           from OBNLS;

-- v.2.17 01.03.2010 20:06 - ╠шуЁрЎш  Їшышрыют ё ╒╚╥╓р (эрўрыю)

-- v.2.18 05.03.2010 17:47 - ╩юяшш ЄрсышЎ яю Їшышрырь фхыр■Єё  Єюы№ъю яЁш
--                           ═┼╧╙╤╥╬╠ чэрўхэшш ъюфр Їшышрыр

-- v.2.19 06.03.2010 14:18 - ┬ "╟ряюыэхэшш ярЁрьхЄЁют Їшышрыр" шч рэъхЄ√ т
--                           ╤╩└╨┴х6 чрэюёшь рфЁхё, ╘╚╬ ЁєъютюфшЄхы  ш ╘╚╬
--                           уыртэюую сєїурыЄхЁр

-- v.2.20 10.03.2010 16:44 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р6: шёяЁртыхэр юяшёър т
--                           шьяюЁЄх ёўхЄют, ёт чрээр  ё уЁєяяющ єў╕Єр

-- v.2.21 12.03.2010 15:53 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р6: т ЁхътшчшЄрї ъышхэЄр
--                           чряюыэ хЄё  ■Ёшфшўхёъшщ рфЁхё

-- v.2.22 13.03.2010 13:15 - ╚ч· Є ъюф яЁюЎхфєЁ√ шьяюЁЄр яюфЁрчфхыхэшщ Їшышрыр,
--                           яюёъюы№ъє эршьхэютрэш  сЁрэўхщ ш чэрўхэш  ярЁрьхЄЁр
--                           B040 чряюыэ хЄё  ёъЁшяЄюь эр юёэютрэшш шэЇюЁьрЎшш
--                           яЁхфюёЄртыхээющ ─хярЁЄрьхэЄюь шэЇюЁьрЄшчрЎшш

-- v.2.23 13.03.2010 21:58 - ┬ючьюцэю ёююЄтхЄёЄтшх эхёъюы№ъшї фхярЁЄрьхэЄют
--                           ╤╩└╨┴р6 юфэюьє сЁрэўє ┴└╨╤р: т ЄрсышЎх
--                           BRANCH_PARAMETERS Є║у DEPARTS6, хёыш эхёъюы№ъю
--                           фхярЁЄрьхэЄют, Єю юэш яхЁхўшёы ■Єё  ўхЁхч чря Єє■
--                           схч ╧╨╬┴┼╦ют

-- v.2.24 15.03.2010 12:11 - ╠шуЁрЎш  Їшышрыют: фрЄр юЄъЁ√Єш  ёўхЄют ёЄртшЄё 
--                           эр 4-х фэ  ьхэ№°х Ёхры№эющ фрЄ√ яхЁхтюфр Їшышрыр т
--                           ┴└╨╤ (фы  єёЄЁрэхэш  яЁюсыхь ё эрыюуютющ);
--                           т ёююс∙хэш ї ъышхэЄрь юс юЄъЁ√Єшш эют√ї ёўхЄют
--                           єърч√трхЄё  фрЄр ттюфр т фхщёЄтшх ¤Єшї ёўхЄют эр
--                           7-№ фэхщ сюы№°х фрЄ√ юЄъЁ√Єш  ёў╕Єр

-- v.2.25 17.03.2010 16:10 - Trigger TIU_ACCOUNT67 юЄъы■ўрхЄё  яЁш юЄъЁ√Єшш
--                           ёўхЄют ш юёэютэюую ╤╩└╨┴р6 ш ьшуЁшЁєхь√ї Їшышрыют

-- v.2.26 18.03.2010 12:45 - ─юсртыхэ яєэъЄ ьшуЁрЎшш юёэютэюую ╤╩└╨┴р6
--                           "╬ЄъЁ√Єшх ёўхЄют Ёрёїюфют ш чряюыэхэшх PROC_DR"

-- v.2.27 18.03.2010 15:25 - ─юсртыхэ√ яєэъЄ√ ьшуЁрЎшш юёэютэюую ╤╩└╨┴р6:
--                           "┴рырэёшЁютър эрўры№э√ї юёЄрЄъют"
--                           "╟руЁєчър юсюЁюЄют ш юёЄрЄъют ё эрўрыр уюфр"
--                           "╧хЁхюЄъЁ√Єшх тры■Єэ√ї яючшЎшщ ш чряюыэхэшх VP_LIST"
--                           "╚ьяюЁЄ фюъєьхэЄют ё эрўрыр уюфр"

-- v.2.28 19.03.2010 16:14 - ╠шуЁрЎш  Їшышрыр ╒╚╥╓: Ёхрышчютрэ√ яєэъЄ√
--                           "╟руЁєчър юёЄрЄъют яю ёўхЄрь Їшышрыр" ш
--                           "╬╥╩└╥: юёЄрЄъют яю ёўхЄрь Їшышрыр"

-- v.2.29 24.03.2010 14:54 - ─юсртыхэю юЄъЁ√Єшх ёўхЄют яЁюЎхэЄэ√ї Ёрёїюфют яЁш
--                           ьшуЁрЎшш Їшышрыют ёю ╤╩└╨┴р5, ╤╩└╨┴р6, ╒╚╥╓р

-- v.2.30 26.03.2010 10:02 - ╠шуЁрЎш  Їшышрыют: шчьхэхэшх яєэъЄют чруЁєчъш
--                           юёЄрЄъют яю ёўхЄрь Їшышрыр ш юЄърЄр чруЁєчъш
--                           юёЄрЄъют фы  юсхёяхўхэш  яЁртшы№э√ї фхщёЄтшщ ё
--                           эхяхЁхюЎхэштрхь√ьш ёўхЄрьш

-- v.2.31 27.03.2010 16:53 - ╠шуЁрЎш  Їшышрыр ╒╚╥╓: шчьхэхэшх яЁюЎхфєЁ√ чруЁєчъш
--                           юёЄрЄъют шч-чр ёяхЎшЇшъш ърёёют√ї фюъєьхэЄют ш
--                           фюъєьхэЄют яю ёўхЄрь 9-ую ъырёёр

-- v.2.32 27.03.2010 20:07 - ╠шуЁрЎш  юёэютэюую ╤╩└╨┴р6: яЁш шьяюЁЄх ъышхэЄют
--                           фы  Їшч.ышЎ яЁюшёїюфшЄ ъюЁЁхъЄшЁютър фрЄ√ Ёюцфхэш ,
--                           хёыш юэр эхъюЁЁхъЄэр

-- v.2.33 29.03.2010 19:17 - ╠шуЁрЎш  юёэютэюую ╤╩└╨┴р6: ЁхрэшьшЁютрэр юсЁрсюЄър
--                           ярЁрьхЄЁр S240 яЁш шьяюЁЄх ёўхЄют

-- v.2.34 06.04.2010 18:00 - ╠шуЁрЎш  Їшышрыют, юЄъЁ√Єшх ёўхЄют: хёыш Єхъє∙р 
--                           ёшёЄхьэр  фрЄр ьхэ№°х фрЄ√ ьшуЁрЎшш, Єю фрЄр
--                           юЄъЁ√Єш  ёўхЄют єёЄрэртыштрхЄё  Ёртэющ фрЄх
--                           ьшуЁрЎшш-4 фэ , шэрўх яЁюёЄю Ёртэющ фрЄх ьшуЁрЎшш

-- v.2.35 06.04.2010 18:06 - ╧Ёш ьшуЁрЎшш ёўхЄют юёэютэюую ╤╩└╨┴р6 юЄъы■ўр■Єё 
--                           ЄЁшуухЁр tbu_accounts_tax ш tai_accounts_tax

-- v.2.36 07.04.2010 13:16 - ╙ёъюЁхэшх шьяюЁЄр эхюсїюфшь√ї юс·хъЄют шч ╤╩└╨┴р6
--                           чр ёў╕Є чрфрэш  (JOBр) фы  эхюёэютэ√ї ЄрсышЎ

-- v.2.37 09.04.2010 12:29 - ╠шуЁрЎш  Їшышрыют, чруЁєчър юёЄрЄъют яю ёўхЄрь
--                           Їшышрыр: т Їрщы TRANSIT.DBF фюсртыхэю яюых KV
--                           (тры■Єр). ┼ёыш яюых KV яєёЄю, Єю юяырЄр яю ёў╕Єє т
--                           яюых TRANSIT яЁюшчтюфшЄё  яю тёхь тры■Єрь фы 
--                           срырэёютюую ёў╕Єр шч яюы  BALS

-- v.2.38 12.04.2010 10:02 - ╬ЄъЁ√Єшх ёўхЄют: яЁшчэръ эхяхЁхюЎхэштрхь√ї ёўхЄют
--                           єёЄрэртыштрхЄё  Єюы№ъю фы  срырэёют√ї ёўхЄют 9809 ш
--                           9910 (яЁш эрышўшш ёююЄтхЄёЄтє■∙хую яЁшчэрър тю
--                           тїюфэющ шэЇюЁьрЎшш)

-- v.2.39 14.04.2010 18:21 - ╙ыєў°хэшх ЁрсюЄ√ ё ъюэЄхъёЄрьш яЁш ьшуЁрЎшш
--                           Їшышрыют (юЄъЁ√Єшх ёўхЄют яю ьрёърь)

-- v.2.40 26.04.2010 11:23 - ╚ьяюЁЄ ъышхэЄют: юЁурэ т√фрўш фюъєьхэЄр юсЁхчрхЄё 
--                           фю 50-Єш ёшьтюыют (яю фышэх яюы  т ЄрсышЎх PERSON)

-- v.2.41 30.04.2010 19:20 - ╚ьяюЁЄ ёўхЄют Їшышрыют: хёыш т√ўшёыхээ√щ яю ьрёъх
--                           ёў╕Є єцх ёє∙хёЄтє■хЄ, Єю ¤Єюьє ёў╕Єє т Ўшъых
--                           рЁшЇьхЄшўхёъш фюсрты хЄё  1 фю Єхї яюЁ, яюър эх
--                           сєфхЄ эрщфхэ эєцэ√щ ётюсюфэ√щ ёў╕Є

-- v.2.42 13.05.2010 16:10 - ╚ьяюЁЄ ёўхЄют: яЁюЎхэЄэ√х ърЁЄюўъш чряюыэ ■Єё 
--                           ╥╬╦▄╩╬ фы  ёўхЄют 2-ую, 3-ую, 9-ую ъырёёют

-- v.2.43 02.06.2010 16:33 - ╙ёютх°хэёЄтютрэшх ёючфрэш  ЄрсышЎ яю ышэъє шч
--                           юёэютэюую ╤╩└╨┴р6

-- v.2.44 03.06.2010 14:03 - ┬ ёїхьє ┴└╨╤р фюяюыэшЄхы№эю чрЄ уштрeЄё  ЄрсышЎр
--                           ClientTies шч юёэютэюую ╤╩└╨┴р6

-- v.2.45 07.06.2010 21:40 - ╚чьхэхэш  яю Ёхчєы№ЄрЄрь тэхфЁхэш  т ╫хЁэютЎрї

-- v.2.46 24.06.2010 16:54 - ╧Ёш шьяюЁЄх ёўхЄют рфхътрЄэю чряюыэ хЄё  яюых VID
--                           (╩юф тшфр ёў╕Єр) т ърЁЄюўъх ёў╕Єр

-- v.2.47 07.07.2010 13:34 - ╧Ёш юЄърЄх (єфрыхэшш) ъышхэЄют т ьшуЁрЎшш Їшышрыют
--                           т єёыютшх фюсртыхэю ╠╘╬ Їшышрыр

-- v.2.48 09.07.2010 15:02 - ╠шуЁрЎш  Їшышрыют: хёыш яЁш шьяюЁЄх ёўхЄют эх
--                           эрщфхэ эш юфшэ ъышхэЄ яхЁхтюфшьюую Їшышрыр, Єю ┬╤┼
--                           ёўхЄр сєфєЄ яЁшт чрэ√ ъ ъышхэЄє ё ьшэшьры№э√ь
--                           ЁхушёЄЁрЎшюээ√ь эюьхЁюь

-- v.2.49 22.07.2010 09:59 - ╠шуЁрЎш  Їшышрыют: яЁш шьяюЁЄх ёўхЄют фы  ёююс∙хэшщ
--                           юс юЄъЁ√Єшш ёўхЄют т эрыюуютю■ (@F) тьхёЄю ъюфр
--                           юяхЁрЎшш 1 (юЄъЁ√Єшх) ёЄртшЄё  ъюф юяхЁрЎшш 5
--                           (юЄъЁ√Єю эх яю шэшЎшрЄштх ъышхэЄр)

-- v.2.50 28.07.2010 18:04 - ╠шуЁрЎш  Їшышрыют: яЁш юЄърЄх фюъєьхэЄют яю
--                           ЁрчтюЁюЄє юёЄрЄъют т юяхЁрЎшш BAK Їыру 38
--                           (┴хчръЎхяЄэюх ёяшёрэшх) ёЄртшЄё  Ёртэ√ь 1

-- v.2.51 02.08.2010 17:45 - ╠шуЁрЎш  Їшышрыр ╒╚╥╓: яЁш шьяюЁЄх ёўхЄют т√фр╕Єё 
--                           ю°шсър, хёыш ёў╕Є эх яЁшт чрэ эш ъ юфэюьє
--                           чршьяюЁЄшЁютрээюьє Ёрэхх ъышхэЄє

-- v.2.52 03.08.2010 16:33 - ╠шуЁрЎш  Їшышрыр ╒╚╥╓: яЁш ЁрчсыюъшЁютъх ёўхЄют
--                           єўшЄ√трхЄё  яЁшчэръ рЁхёЄр ёў╕Єр т ╒╚╥╓х

-- v.2.53 06.08.2010 15:17 - ╠шуЁрЎш  Їшышрыют: юЄъЁ√Єшх ёўхЄют Ёрёїюфют ш
--                           чряюыэхэшх ёююЄтхЄёЄтє■∙хую ёяЁртюўэшър -
--                           фхЄрышчрЎш  ёююс∙хэшщ юс ю°шсърї

-- v.2.54 10.08.2010 20:24 - ╠шуЁрЎш  юёэютэюую ╤╩└╨┴р6, шьяюЁЄ ъышхэЄют:
--                           юяЄшьшчрЎш  яюшёър чршьяюЁЄшЁютрээ√ї Ёрэхх ъышхэЄют
--                           ш т√сюЁър ╬─═╬├╬ BIC-рфЁхёр (яЁш эрышўшш >1)

-- v.2.55 11.08.2010 14:56 - ╠шуЁрЎш  юёэютэюую ╤╩└╨┴р6, шьяюЁЄ ёўхЄют:
--                           эхсюы№°р  юяЄшьшчрЎш 

-- v.2.56 12.08.2010 18:30 - ─хЄрышчрЎш  ю°шсъш, хёыш эх эрщфхэ ёў╕Є Ёрёїюфют
--                           яЁш т√яюыэхэшш яєэъЄр ьшуЁрЎшш "╬ЄъЁ√Єшх ёўхЄют
--                           %% Ёрёїюфют ш чряюыэхэшх PROC_DR"

-- v.2.57 12.08.2010 18:55 - ╬Єъы■ўрхЄё  ЄЁшуухЁ TIU_OPER_INFDOC яЁш т√яюыэхэшш
--                           яєэъЄр ьшуЁрЎшш "╚ьяюЁЄ фюъєьхэЄют ё эрўрыр уюфр"

-- v.2.58 13.08.2010 17:38 - ┬ яєэъЄх ьшуЁрЎшш "╬ЄъЁ√Єшх ёўхЄют %% Ёрёїюфют ш
--                           чряюыэхэшх PROC_DR" єЄюўэхэю єёыютшх т√сюЁъш
--                           срырэёют√ї ёўхЄют фы  тшфют тъырфют

-- v.2.59 18.08.2010 13:06 - ╙ёъюЁхэшх яЁюЎхёёр юЄъЁ√Єш  ёўхЄют

-- v.2.60 01.09.2010 19:02 - ╠шуЁрЎш  Їшышрыют: шчьхэхэш  т юсэютыхэшш
--                           ьрЄхЁшрышчютрээюую яЁхфёЄртыхэш  MV_neruxomi

-- v.2.61 20.09.2010 12:43 - ╠шуЁрЎш  ╤╩└╨┴р6: яЁш шьяюЁЄх ъышхэЄют яєёЄющ ъюф
--                           ёЄЁрэ√ чрьхэ хЄё  эр 804

-- v.2.62 07.10.2010 17:36 - ╬Єъы■ўхэшх/тъы■ўхэшх рыхЁЄхЁр фы  єёъюЁхэш  ЁрсюЄ√

-- v.2.63 13.10.2010 18:05 - ─ы  єёъюЁхэш  ьшуЁрЎшш ёўхЄют ╤╩└╨┴р6 ярЁрьхЄЁ
--                           уЁєяя√ фюёЄєяр ёЄртшЄё  null тьхёЄю 0

-- v.2.64 14.10.2010 11:16 - ╠шуЁрЎш  ╤╩└╨┴р6: яЁш шьяюЁЄх ёўхЄют юсЁхчрхЄё 
--                           тЁхь  т фрЄх юЄъЁ√Єш  ёў╕Єр

-- v.2.65 26.10.2010 15:49 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р5: яЁш шьяюЁЄх ъышхэЄют
--                           ъюЁюЄъюх эршьхэютрэшх т√сшЁрхЄё  шч яюы  NAME_S

-- v.2.66 05.11.2010 16:23 - ╧Ёш шьяюЁЄх ёўхЄют єфры ■Єё  тючьюцэ√х яЁюсхы√ шч
--                           трцэюую ярЁрьхЄЁр ёў╕Єр ╬┴22;
--                           ьшуЁрЎш  ╤╩└╨┴р6: яЁш шьяюЁЄх ёўхЄют т√яюыэ хЄё 
--                           рэрышч эр фышэє ёў╕Єр (эх сюы№°х 14-Єш чэръют)

-- v.2.67 25.11.2010 19:01 - ╠шуЁрЎш  Їшышрыют ёю ╤╩└╨┴р5 шыш ╤╩└╨┴р6: яЁш
--                           шьяюЁЄх ёўхЄют т SHABLON.dbf т ьрёъх ёў╕Єр ьюцэю
--                           шёяюы№чютрЄ№ ёшьтюы R, ъюЄюЁ√щ юсючэрўрхЄ тшф
--                           ъюэЄЁрухэЄр т ╤╩└╨┴х (эряЁшьхЁ, 3 - ■Ё.ышЎю, 5 -
--                           Їшч.ышЎю). ┬шф ъюэЄЁрухэЄр т√сшЁрхЄё  шч яюы 
--                           GROUP_C ЄрсышЎ√ Clients (╤╩└╨┴6) шыш CLIENT
--                           (╤╩└╨┴5)

-- v.2.68 30.11.2010 18:37 - ╠шуЁрЎш  Їшышрыют: ёючфрэшх ьрЄхЁшрышчютрээюую
--                           яЁхфёЄртыхэш  MV_neruxomi т√эхёэю т яЁюЎхфєЁє

-- v.2.69 01.12.2010 18:19 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р5: эюьхЁ ЄхыхЇюэр
--                           юсЁхчрхЄё  фю 20-Єш ёшьтюыют;
--                           ьшуЁрЎш  Їшышрыют: фюяюыэшЄхы№эю шьяюЁЄшЁє■Єё 
--                           ёўхЄр 8-ую ъырёёр, ъюЄюЁ√х эрўшэр■Єё  эр 890 шыш
--                           891;
--                           ьшуЁрЎш  юёэютэюую ╤╩└╨┴р6 ш Їшышрыют: т√яюыэхэ√
--                           єЄюўэхэш  яю ярЁрьхЄЁрь шьяюЁЄшЁєхь√ї ъышхэЄют

-- v.2.70 03.12.2010 18:15 - ╠шуЁрЎш  юёэютэюую ╤╩└╨┴р6 ш Їшышрыют: яєёЄюх
--                           чэрўхэшх яюы  GROUP_U яЁшЁртэштрхЄё  ъ 0 (эєы■)

-- v.2.71 06.12.2010 17:25 - ╠шуЁрЎш  юёэютэюую ╤╩└╨┴р6: шчьхэхэш  яюф ╠╙╦▄╥╚╠╘╬

-- v.2.72 07.12.2010 13:25 - ╤сюЁ ёЄрЄшёЄшъш фы  єёъюЁхэш  яЁюЎхёёр ьшуЁрЎшш
--                           т√эхёхэ т JOB√

-- v.2.73 10.12.2010 15:17 - ╠шуЁрЎш  Їшышрыют: фы  ЇюЁьшЁютрэш  Їрщыр т
--                           эрыюуютє■ (юс тэют№ юЄъЁ√Є√ї ёўхЄрї) фы  ёў╕Єр
--                           ёЄртшЄё  Єшя юяхЁрЎшш 6 (юЄъЁ√Є яю шэшЎшрЄштх
--                           срэър) тьхёЄю 5 (чръЁ√Є яю шэшЎшрЄштх срэър)

-- v.2.74 13.12.2010 16:13 - ╠шуЁрЎш  Їшышрыют: яЁш юЄърЄх ёўхЄют єфры ■Єё 
--                           ёююЄтхЄёЄтє■∙шх чряшёш шч ЄрсышЎ√ REE_TMP

-- v.2.75 10.01.2011 15:35 - ─юсртыхэ√ яЁюЎхфєЁ√ ьшуЁрЎшш уюыютэюую
--                           юсыєяЁртыхэш  ё Unicorn

-- v.2.76 18.01.2011 18:29 - ╧Ёш шьяюЁЄх ёўхЄют шч Unicorn т фюя.ярЁрьхЄЁ√ ёў╕Єр
--                           яюьх∙рхЄё  фрЄр эрўрыр фюуютюЁр

-- v.2.77 19.01.2011 16:06 - ╧Ёш чруЁєчъх юсюЁюЄют ш юёЄрЄъют шч Unicorn
--                           ЇюЁьшЁютрэшх SALDOB т√яюыэ хЄё  JOBюь

-- v.2.78 01.02.2011 10:06 - ╧Ёш ьшуЁрЎшш ъышхэЄют ш ёўхЄют фрээ√х т√сшЁр■Єё  чр
--                           фтр ърыхэфрЁэ√ї уюфр (тъы■ўр  Єхъє∙шщ)

-- v.2.79 07.02.2011 13:58 - ╚ьяюЁЄ ёўхЄют шч Unicorn: шёяЁртыхэр ю°шсър яЁш
--                           ЇюЁьшЁютрэшш яЁюЎхэЄэющ ърЁЄюўъш ёў╕Єр;
--                           шьяюЁЄ ъышхэЄют шч Unicorn: т эхюсїюфшь√ї яюы ї шыш
--                           фюя.ЁхътшчшЄрї ёюїЁрэ ■Єё  яюыэюх эршьхэютрэшх ш
--                           рфЁхё ъышхэЄр

-- v.2.80 16.02.2011 12:50 - ╚ьяюЁЄ ъышхэЄют шч Unicorn: шёяЁртыхэр ю°шсър яЁш
--                           ёючфрэшш ъышхэЄют фы  сЁрэўхщ (BRANCH<->RNK), ¤Єю
--                           эхюсїюфшью єўхёЄ№ яЁш ёючфрэшш яЁюЎхфєЁ√ шьяюЁЄр
--                           ъышхэЄют фы  ьшуЁрЎшш Їшышрыр ё Unicorn

-- v.2.81 18.02.2011 12:37 - ╧Ёш шьяюЁЄх яюы№чютрЄхыхщ тю ┬╤┼╒ ьшуЁрЎш ї Ёюы№ яю
--                           єьюыўрэш■ фр╕Єё  эх START1, р BARS_CONNECT

-- v.2.82 16.03.2011 17:29 - ╠шуЁрЎш  юёэютэюую ╤╩└╨┴р6 ш Їшышрыют: яЁш шьяюЁЄх
--                           ъышхэЄют чрэюёшЄё  ярЁрьхЄЁ K050

-- v.2.83 28.04.2011 11:37 - ╠шуЁрЎш  Їшышрыют ё Unicorn (т яЁюЎхёёх, х∙╕ эрфю
--                           эряшёрЄ№ 1.75 яЁюЎхфєЁ√)

-- v.2.84 02.06.2011 15:41 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р5: єЄюўэхэшх юяЁхфхыхэш 
--                           ярЁрьхЄЁр K050 (сыруюфрЁэюёЄш ─эхяЁюяхЄЁютёъє)

-- v.2.85 03.06.2011 12:07 - ╚чьхэхэр ьрёър ёў╕Єр яЁш яюшёъх/юЄъЁ√Єшш ёўхЄют
--                           яЁюЎхэЄэ√ї Ёрёїюфют фы  фхяючшЄют

-- v.2.86 06.06.2011 18:11 - ╨рчьхЁэюёЄ№ ъюфр ALEGRO фы  сЁрэўр тЄюЁюую єЁютэ 
--                           єтхышўхэр ё фтєї фю ЄЁ╕ї

-- v.2.87 10.06.2011 12:38 - ╠шуЁрЎш  Їшышрыют ё Unicorn яюўЄш фюфхырэр
--                           (юёЄрышё№ ╥╬╦▄╩╬ ёўхЄр)

-- v.2.88 30.06.2011 18:38 - ╠шуЁрЎш  Їшышрыют ё Unicorn фюфхырэр (beta-тхЁёш )

-- v.2.89 06.07.2011 13:23 - ╧Ёш шьяюЁЄх ЄрсышЎ√ ContractEVT шч юёэютэюую
--                           ╤╩└╨┴р6 т ёїхьє ┴└╨╤р фрээ√х шч эх╕ эх уЁєчшышё№,
--                           хёыш т яюых IdContract с√ыш чэрўхэш  NULL;
--                           яхЁхфхырэ ёсюЁ ёЄрЄшёЄшъш (эр Analyze Table ...)

-- v.2.90 08.07.2011 16:24 - ╧Ёш шьяюЁЄх ёўхЄют тшф ёў╕Єр яЁюёЄрты хЄё  яю
--                           эрышўш■ срырэёютюую ёў╕Єр т ЄрсышЎх DPA_NBS

-- v.2.91 08.07.2011 16:45 - ┬ ьшуЁрЎш■ Їшышрыют ё Unicorn фюсртыхэю ъюяшЁютрэшх
--                           т рЁїштэ√х ЄрсышЎ√

-- v.2.92 12.07.2011 14:06 - ╠шуЁрЎш  ═└─╨└ юёэютэр  ш ═└─╨└ Їшышры√

-- v.2.93 28.07.2011 16:28 - ┬ю ┬╤┼ ьшуЁрЎшш фюсртыхэ т√чют яЁюЎхфєЁ√
--                           ъюЁЁхъЄшЁютъш accounts яю saldoa, saldob

-- v.2.94 09.08.2011 14:13 - ╠шуЁрЎш  ═└─╨└ - фюсртыхэ√ ╠╘╬ ═└─╨└

-- v.2.95 09.08.2011 17:34 - ╠шуЁрЎш  Їшышрыр ╒╚╥╓: фюсртыхэ ярЁрьхЄЁ S240

-- v.2.96 23.08.2011 11:44 - ╠шуЁрЎш  Їшышрыют: єЄюўэхэшх Їырур юяырЄ√ яЁш
--                           ЁрчтюЁюЄх юёЄръют

-- v.2.97 12.09.2011 12:47 - ╠шуЁрЎш  Їшышрыр ═└─╨└: яЁш шьяюЁЄх ъышхэЄют
--                           ёюїЁрэ хЄё  ЁхушёЄЁрЎшюээ√щ эюьхЁ ъышхэЄр (RNK) т
--                           Їшышрых

-- v.2.98 13.09.2011 17:32 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р5: яЁш шьяюЁЄх ъышхэЄют
--                           шч SPECPARA.dbf схЁ╕Єё  ярЁрьхЄЁ S240

-- v.2.99 14.09.2011 16:59 - ╧Ёш ьшуЁрЎшш ёўхЄют Їшышрыют ёўхЄр
--                           1001..., 1101..., 1011... чрьхэ ■ё  эр
--                           1002..., 1102..., 1012... ёююЄтхЄёЄтхээю

-- v.2.9A 19.09.2011 16:46 - ╧Ёш ьшуЁрЎшш ёўхЄют Їшышрыют ═└─╨└ схЁ╕Єё 
--                           юЁшушэры№эюх эршьхэютрэшх ёўхЄр (р эх шч DEPO.DBF)

-- v.2.9B 20.09.2011 18:09 - ╠шуЁрЎш  ╤╩└╨┴р6: яЁш шьяюЁЄх ёўхЄют єўшЄ√трхЄё 
--                           ЁрчьхЁэюёЄ№ ярЁрьхЄЁр S182

-- v.2.9C 27.09.2011 10:45 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р6: єўЄхэр юёюсхээюёЄ№
--                           ╦№тютр т уЁєяярї єў╕Єр

-- v.2.9D 05.10.2011 13:18 - ╠шуЁрЎш  Їшышрыют: яЁш чруЁєчъх юёЄрЄъют
--                           фюяєёърхЄё  "ъЁрёэюх" ёры№фю эр ёўхЄрї 2625

-- v.2.9E 10.10.2011 14:53 - ╠шуЁрЎш  ╤╩└╨┴р6: фюсртыхэю юЄъы■ўхэшх ЄЁшуухЁют
--                           яЁш шьяюЁЄх ёўхЄют ш чруЁєчъх фюъєьхэЄют + ёсюЁ
--                           ёЄрЄшёЄшъш эр ЄрсышЎх ъєЁёют тры■Є

-- v.2.9F 17.10.2011 17:56 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р6: єўЄхэр юёюсхээюёЄ№
--                           ╦№тютр т уЁєяярї єў╕Єр (эют√х фрээ√х)

-- v.2.9G 20.10.2011 18:52 - ╠шуЁрЎш  Їшышрыр ═└─╨└: єЄюўэхэшх єьюыўрЄхы№э√ї
--                           чэрўхэшх яЁш шьяюЁЄх ъышхэЄют ш ёўхЄют

-- v.2.9H 05.11.2011 12:42 - ╠шуЁрЎш  ╤╩└╨┴р6: ёяхЎшЇшър ьшуЁрЎшш яюы№чютрЄхыхщ
--                           фы  ╦єурэёър

-- v.2.9I 14.11.2011 19:24 - ╠шуЁрЎш  Їшышрыр ═└─╨└: шёъы■ўхэю юЄъЁ√Єшх ёўхЄют
--                           Ёрёїюфют (7-щ ъырёё) фы  Їшч.ышЎ; шьяюЁЄшЁє■Єё 
--                           ёўхЄр, ъюЄюЁ√х чръЁ√Є√, эю тю тїюфэюь Їрщых хёЄ№
--                           юёЄрЄюъ

-- v.2.9J 22.11.2011 19:18 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р6: єўЄхэр юёюсхээюёЄ№
--                           ╦№тютр т уЁєяярї єў╕Єр схч є∙хЁср юёЄры№э√ь
--                           юсырёЄ ь

-- v.2.9K 07.12.2011 19:08 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р5: яЁш шьяюЁЄх ъышхэЄют
--                           яЁш яєёЄюь чэрўхэшш ярЁрьхЄЁр K050 єёЄрэртыштрхЄё 
--                           єьюыўрЄхы№эюх чэрўхэшх яюы  SED = '00  '

-- v.2.9L 11.12.2011 21:05 - ╠шуЁрЎш  Їшышрыр ═└─╨└: яЁш шьяюЁЄх ъышхэЄют
--                           ЁхушёЄЁрЎшюээ√щ эюьхЁ ъышхэЄр т√ўшёы хЄё , р эх
--                           схЁ╕Єё  шч шэЇюЁьрЎшш ═└─╨└; яЁш шьяюЁЄх ёўхЄют
--                           ёўхЄр юЄъЁ√тр■Єё  ╥╬╦▄╩╬ яю ёююЄтхЄёЄтш■ т
--                           DEPO.DBF, яЁш юЄёєЄёЄтшш ёююЄтхЄёЄтш  т√фр╕Єё 
--                           ю°шсър

-- v.2.9M 15.12.2011 17:39 - ╠шуЁрЎш  Їшышрыют: шёяЁртыхэю яюыєўхэшх ъюфр
--                           юсырёЄш фы  ╒ьхы№эшЎъюую; ьюцэю т ьрёъх ёў╕Єр
--                           шёяюы№чютрЄ№ FF, FFF ш FFFF (ўхЄ√Ёх чэрър ёфхырэю
--                           яю яЁю№сх ╦№тютр), ёююЄтхЄёЄтхээю Ёрё°шЁшЄ№ яюых FF
--                           т FILIAL.DBF (FF  Character  4)

-- v.2.9N 16.12.2011 17:20 - ╠шуЁрЎш  Їшышрыр Unicorn ш ═└─╨└: ёў╕Є эрўшёыхээ√ї
--                           яЁюЎхэЄют т ърЁЄюўъх юёэютэюую ёў╕Єр ═┼
--                           чряюыэ хЄё , хёыш юэ эх эрщфхэ (Ёрэхх ёЄртшыё 
--                           ёюсёЄтхээю юёэютэющ ёў╕Є)

-- v.2.9O 20.12.2011 12:52 - ╠шуЁрЎш  Їшышрыр ═└─╨└: фюсртыхэ шьяюЁЄ ярЁрьхЄЁр
--                           K050 фы  ъышхэЄют ш ярЁрьхЄЁют S260 ш SHTAR фы 
--                           ёўхЄют; т ьшуЁрЎшш Їшышрыют ё Ёрчэ√ї ёшёЄхь
--                           ьюфхЁэшчшЁютрэ√ юЄърЄ√ ёўхЄют ш ъышхэЄют

-- v.2.9P 11.01.2012 19:47 - ╠шуЁрЎш  Їшышрыр ═└─╨└: шьяюЁЄ Єё  ъышхэЄ√, є
--                           ъюЄюЁ√ї хёЄ№ фрЄр чръЁ√Єш 

-- v.2.9Q 12.01.2012 14:59 - ╠шуЁрЎш  Їшышрыют: яЁш шьяюЁЄх ёўхЄют чэрўхэш 
--                           ярЁрьхЄЁют S180 ш S240 ьхэ ■Єё  ё 8 эр B, ё 9 эр C

-- v.2.9R 18.01.2012 20:00 - ╠шуЁрЎш  Їшышрыр ═└─╨└: яЁш шьяюЁЄх ёўхЄют
--                           фюсртыхэр яЁютхЁър сЁрэўр фы  ╙╞┼ юЄъЁ√Єюую ёў╕Єр

-- v.2.9S 24.01.2012 12:56 - ╠шуЁрЎш  Їшышрыют: яЁш шьяюЁЄх ёўхЄют чэрўхэшх
--                           ярЁрьхЄЁр S080 Ёртэюх '0' чрьхэ хЄё  эр яєёЄюх

-- v.2.9T 02.02.2012 20:42 - ╠шуЁрЎш  Їшышрыр ═└─╨└: яЁш шьяюЁЄх ёўхЄют чэрўхэш 
--                           ёяхЎярЁрьхЄЁют чрэюё Єё  Єюы№ъю яЁш юЄъЁ√Єшш ═╬┬█╒
--                           ёўхЄют, яЁш юсэютыхэшш ЁхътшчшЄют єцх ёє∙хёЄтє■∙шї
--                           ёўхЄют чрэюё Єё  ═╬┬█┼ чэрўхэш  ёяхЎярЁрьхЄЁют
--                           Єюы№ъю фы  ╧╙╤╥█╒ чэрўхэшщ

-- v.2.9U 08.02.2012 11:34 - ╠шуЁрЎш  Їшышрыр ═└─╨└: яЁш шьяюЁЄх ёўхЄют
--                           яЁюЎхэЄэ√х ърЁЄюўъш ёючфр■Єё  ╥╬╦▄╩╬ фы  срырэёют√ї
--                           ёўхЄют, є ъюЄюЁ√ї яюых PRC=1 т ЄрсышЎх PS

-- v.2.9V 13.02.2012 17:41 - ╠шуЁрЎш  Їшышрыр UNICORN: шёяЁртыхэшх юяшёюъ

-- v.2.9W 14.02.2012 16:15 - ╠шуЁрЎш  Їшышрыют: єяюЁ фюўхэшх ртЄюьрЄшўхёъюую
--                           ёсюЁр ёЄрЄшёЄшъш; яЁш яютЄюЁэюь шьяюЁЄх ъышхэЄют
--                           ЁхътшчшЄ√ ъюэЄЁрухэЄют юсэюты ■Єё 

-- v.2.9X 16.02.2012 17:37 - ╠шуЁрЎш  Їшышрыют: шёяЁртыхэю юяЁхфхыхэшх
--                           єьюыўрЄхы№эюую шёяюыэшЄхы  яЁш ьшуЁрЎшш ъышхэЄют ш
--                           ёўхЄют

-- v.2.9Y 17.02.2012 18:30 - ╠шуЁрЎш  Їшышрыют UNICORN, ╤╩└╨┴6, ═└─╨└: ¤ыхьхэЄ√
--                           рфЁхёр чряшё√тр■Єё  т ЄрсышЎє customer_address

-- v.2.9Z 05.03.2012 18:12 - ╠шуЁрЎш  Їшышрыют ╤╩└╨┴6, ╤╩└╨┴5, ╒╚╥╓, UNICORN:
--                           яЁш шьяюЁЄх яюы№чютрЄхыхщ Ёхрышчютрэр тючьюцэюёЄ№
--                           "чрърч√трЄ№" ъюф ш ыюушэ яюы№чютрЄхы  т └┴╤ ┴└╨╤
--                           (яЁш єёыютшш чряюыэхэш  ёяЁртюўэшър "╤ююЄтхЄёЄтшх
--                           яюы№чютрЄхыхщ Їшышрыр ш яюы№чютрЄхыхщ └┴╤ ┴└╨╤")

-- v.2.A0 15.03.2012 15:48 - ╠шуЁрЎш  Їшышрыют ╤╩└╨┴6, ╤╩└╨┴5, ╒╚╥╓, UNICORN:
--                           яЁш шьяюЁЄх ёўхЄют (юЄъЁ√Єшх яю ьрёъх) єёЄЁрэхэр
--                           тючьюцэр  ю°шсър яЁш чряшёш тЁхьхээющ ьрёъш т
--                           ЄрсышЎє NLSMASK

-- v.2.A1 20.04.2012 14:30 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р6: эх шьяюЁЄшЁютрышё№
--                           ёўхЄр яЁш шї юЄёєЄёЄтшш т P__SALDO.dbf (єёЄЁрэхэю)

-- v.2.A2 26.04.2012 17:41 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р6: яюфъюЁЁхъЄшЁютрэр
--                           яЁюЎхфєЁр сыюъшЁютъш рЁхёЄютрээ√ї ёўхЄют

-- v.2.A3 14.05.2012 18:06 - ╠шуЁрЎш  Їшышрыр ═└─╨└: яЁш ╧╬┬╥╬╨═╬╠ шьяюЁЄх
--                           ёўхЄют яЁюЎхэЄэ√х ърЁЄюўъш ёючфр■Єё  ╥╬╦▄╩╬ фы 
--                           ═╬┬█╒ ёўхЄют (Є.х. ъюЄюЁ√х эх юЄъЁ√трышё№ Ёрэхх)

-- v.2.A4 25.05.2012 15:17 - ╠шуЁрЎш  Їшышрыр ёю ╤╩└╨┴р6: яютЄюЁэю
--                           яюфъюЁЁхъЄшЁютрэр яЁюЎхфєЁр сыюъшЁютъш рЁхёЄютрээ√ї
--                           ёўхЄют (єўЄхэю, ўЄю т фрээ√ї шч ╤╩└╨┴р6 ёў╕Є
--                           яЁхфёЄртыхэ ┴┼╟ ъюэЄЁюы№эюую ЁрчЁ фр)

-- v.2.A5 11.03.2013 11:57 - ┬√сЁю°хэ т√чют p_rev_ob

  procedure create_tableS6_job
  is
    type       cur is ref cursor;
    cur_       cur;
    sql_       varchar2(4000);

    CUR_VS_    number(26,8);
    DA_        date;
    DA_OD_     date;
    GROUP_U_   number;
    I_VA_      number;
    ID_DOCUM_  number;
    ID_OPER_   number;
    NLS_       varchar2(25);
    SumLock_   number(20,2);
    SUMMA_     number(20,2);
    DOS_       number(20,2);
    KOS_       number(20,2);
    DOS_V_     number(20,2);
    KOS_V_     number(20,2);
    Job_       number;

  begin

    bars_alerter(0);

    begin
      execute immediate 'create table            "S6_Credit_Percent"     as select * from "Credit_Percent"@skarb     where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_Credit_Percent"        select * from "Credit_Percent"@skarb     where trim("IdContract") is not null';
      commit;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(29): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            "S6_Credit_NLS"         as select * from "Credit_NLS"@skarb         where 1=0';
      begin
        execute immediate 'alter table "S6_Credit_NLS" modify "IdContract" NULL';
      exception when OTHERS then
        null;
      end;
      execute immediate 'insert /*+APPEND*/ into "S6_Credit_NLS"            select * from "Credit_NLS"@skarb                  ';
      commit;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(30): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            "S6_MailNLS"            as select * from "MailNLS"@skarb            where 1=0';
      begin
        execute immediate 'alter table "S6_MailNLS" modify OKPO NULL';
      exception when OTHERS then
        null;
      end;
      begin
        execute immediate 'alter table "S6_MailNLS" modify NAME NULL';
      exception when OTHERS then
        null;
      end;
      execute immediate 'insert /*+APPEND*/ into "S6_MailNLS"               select * from "MailNLS"@skarb                     ';
      commit;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(31): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            "S6_ContractEVT"        as select * from "ContractEVT"@skarb        where 1=0';
      begin
        execute immediate 'alter table "S6_ContractEVT" modify "IdContract" NULL';
      exception when OTHERS then
        null;
      end;
      execute immediate 'insert /*+APPEND*/ into "S6_ContractEVT"           select * from "ContractEVT"@skarb                 ';
      commit;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(32): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            S6_DOCUM                as select * from "DOCUM"@skarb              where 1=0';
      begin
        execute immediate 'alter table S6_DOCUM modify DB_S NULL';
      exception when OTHERS then
        null;
      end;
      begin
        execute immediate 'alter table S6_DOCUM modify KR_S NULL';
      exception when OTHERS then
        null;
      end;
      execute immediate 'insert /*+APPEND*/ into S6_DOCUM                   select * from "DOCUM"@skarb                       ';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            S6_DOCUM_Y              as select * from "DOCUM_Y"@skarb            where 1=0';
      begin
        execute immediate 'alter table S6_DOCUM_Y modify DB_S NULL';
      exception when OTHERS then
        null;
      end;
      begin
        execute immediate 'alter table S6_DOCUM_Y modify KR_S NULL';
      exception when OTHERS then
        null;
      end;
      execute immediate 'insert /*+APPEND*/ into S6_DOCUM_Y                 select * from "DOCUM_Y"@skarb                     ';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            S6_OBNLS                as select * from OBNLS@skarb                where 1=0';
      execute immediate 'insert /*+APPEND*/ into S6_OBNLS                   select * from OBNLS@skarb                         ';
      commit;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            "S6_DocParam"           as select * from "DocParam"@skarb           where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_DocParam"              select * from "DocParam"@skarb                    ';
      commit;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            "S6_DocParam_Y"         as select * from "DocParam_Y"@skarb         where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_DocParam_Y"            select * from "DocParam_Y"@skarb                  ';
      commit;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(37): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            S6_EXT_SALDO            as select * from EXT_SALDO@skarb            where 1=0';
      execute immediate 'insert /*+APPEND*/ into S6_EXT_SALDO               select * from EXT_SALDO@skarb                     ';
      commit;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(38): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            "S6_LockSaldo"          as select * from "LockSaldo"@skarb          where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_LockSaldo"             select * from "LockSaldo"@skarb                   ';
      commit;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(39): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            "S6_ContractPr"         as select * from "ContractPr"@skarb         where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_ContractPr"            select * from "ContractPr"@skarb                  ';
      commit;
    exception when OTHERS then
      bars_audit.warning('create_tableS6 - warn(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            "S6_VID_Contract"       as select ID         ,
                                                                                   NAME       ,
                                                                                   "StrPercen",
                                                                                   D_RETURN   ,
                                                                                   VID_KRED
                                                                                     from "VID_Contract"@skarb       where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_VID_Contract"          select ID         ,
                                                                                   NAME       ,
                                                                                   "StrPercen",
                                                                                   D_RETURN   ,
                                                                                   VID_KRED
                                                                                     from "VID_Contract"@skarb                ';
      commit;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(41): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            "S6_PercenRate"         as select * from "PercenRate"@skarb         where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_PercenRate"            select * from "PercenRate"@skarb                  ';
      commit;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(42): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate 'create table            "S6_PercenVid"          as select * from "PercenVid"@skarb          where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_PercenVid"             select * from "PercenVid"@skarb                   ';
      commit;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(43): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

--  create INDEXes

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_ContractEVT_Id" on "S6_ContractEVT"
              (BIC,"IdContract")
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(44): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_ContractEVT_Id1" on "S6_ContractEVT"
              (BIC,rtrim("IdContract"))
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(45): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_ContractEVT_Id2" on "S6_ContractEVT"
              (BIC,"Id")
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(46): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_Credit_Percent_Id" on "S6_Credit_Percent"
              (BIC,"IdContract")
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(47): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_Credit_Percent_Id1" on "S6_Credit_Percent"
              (BIC,rtrim("IdContract"))
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(48): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate '
              CREATE INDEX XIE_S6_OBNLS on S6_OBNLS
              (NLS,I_VA,GROUP_U)
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(49): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_ContractPr_Id" on "S6_ContractPr"
              (BIC,"IdContract")
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.warning('create_tableS6 - warn(50): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_ContractPr_Id1" on "S6_ContractPr"
              (BIC,rtrim("IdContract"))
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.warning('create_tableS6 - warn(51): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate '
              CREATE INDEX XIE_S6_DOCUM ON S6_DOCUM
              (ID_OPER,DA_OD,ID_DOCUM)
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(52): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate '
              CREATE INDEX XIE_S6_DOCUM_Y ON S6_DOCUM_Y
              (ID_OPER,DA_OD,ID_DOCUM)
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(53): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate '
              CREATE INDEX I1_S6DY ON S6_DOCUM_Y
              (DA_MB)
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(54): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate '
              CREATE INDEX I2_S6DY ON S6_DOCUM_Y
              (DA)
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(55): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

    begin
      execute immediate '
              CREATE INDEX I3_S6DY ON "S6_DocParam_Y"
              (ID_OPER,"Param")
              LOGGING
              NOPARALLEL';
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(56): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;

--  ёючфрэшх фюяюыэшЄхы№э√ї ЄрсышЎ фы  Ёх°хэш  тючьюцэющ яЁюсыхь√ "ъюяххъ"

    begin
      execute immediate 'drop table S6_DOCUM_VIEW';
    exception when OTHERS then
      if sqlcode=-942 then
        null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_DOCUM_Y_VIEW';
    exception when OTHERS then
      if sqlcode=-942 then
        null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_LockSaldo_VIEW"';
    exception when OTHERS then
      if sqlcode=-942 then
        null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_OBNLS_VIEW';
    exception when OTHERS then
      if sqlcode=-942 then
        null;
      end if;
    end;

    begin
      execute immediate 'create table S6_DOCUM_VIEW       as select * from DOCUM_VIEW@skarb';
      commit;
    exception when OTHERS then
      null;
    end;
    begin
      execute immediate 'create table S6_DOCUM_Y_VIEW     as select * from DOCUM_Y_VIEW@skarb';
      commit;
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'create table "S6_LockSaldo_VIEW" as select * from "LockSaldo_VIEW"@skarb';
      commit;
    exception when OTHERS then
      null;
    end;
    begin
      execute immediate 'create table S6_OBNLS_VIEW       as select * from OBNLS_VIEW@skarb';
      commit;
    exception when OTHERS then
      null;
    end;

--  юсэютыхэшх яюыхщ ё "яЁюярт°хщ" (ъюяхщъш) фЁюсэющ ўрёЄ№■

    if f_tableexists('"S6_LockSaldo_VIEW"')=1 then

      sql_:='select NLS ,
                    I_VA,
                    "SumLock"
             from   "S6_LockSaldo_VIEW"';
      open cur_ for sql_;
      loop
        fetch cur_ into NLS_ ,
                        I_VA_,
                        SumLock_;
        exit when cur_%notfound;

        execute immediate 'update "S6_LockSaldo"
                           set    "SumLock"='||to_char(SumLock_)||'/100
                           where  NLS='''||NLS_||''' and
                                  I_VA='||to_char(I_VA_);
      end loop;
      close cur_;
      commit;

    end if;

    if f_tableexists('S6_DOCUM_VIEW')=1 then

      sql_:='select ID_OPER     ,
                    trunc(DA_OD),
                    ID_DOCUM    ,
                    SUMMA       ,
                    CUR_VS
             from   S6_DOCUM_VIEW';
      open cur_ for sql_;
      loop
        fetch cur_ into ID_OPER_ ,
                        DA_OD_   ,
                        ID_DOCUM_,
                        SUMMA_   ,
                        CUR_VS_;
        exit when cur_%notfound;

        execute immediate 'update S6_DOCUM
                           set    SUMMA='||to_char(SUMMA_)||'/100,
                                  CUR_VS='||to_char(CUR_VS_)||'/100000000
                           where  ID_OPER='||to_char(ID_OPER_)||'        and
                                  trunc(DA_OD)=to_date('''||DA_OD_||''') and
                                  ID_DOCUM='||to_char(ID_DOCUM_);
      end loop;
      close cur_;
      commit;

    end if;

    if f_tableexists('S6_DOCUM_Y_VIEW')=1 then

      sql_:='select ID_OPER     ,
                    trunc(DA_OD),
                    ID_DOCUM    ,
                    SUMMA       ,
                    CUR_VS
             from   S6_DOCUM_Y_VIEW';
      open cur_ for sql_;
      loop
        fetch cur_ into ID_OPER_ ,
                        DA_OD_   ,
                        ID_DOCUM_,
                        SUMMA_   ,
                        CUR_VS_;
        exit when cur_%notfound;

        execute immediate 'update S6_DOCUM_Y
                           set    SUMMA='||to_char(SUMMA_)||'/100,
                                  CUR_VS='||to_char(CUR_VS_)||'/100000000
                           where  ID_OPER='||to_char(ID_OPER_)||'        and
                                  trunc(DA_OD)=to_date('''||DA_OD_||''') and
                                  ID_DOCUM='||to_char(ID_DOCUM_);
      end loop;
      close cur_;
      commit;

    end if;

    if f_tableexists('S6_OBNLS_VIEW')=1 then

      sql_:='select trunc(DA),
                    NLS      ,
                    GROUP_U  ,
                    I_VA     ,
                    DOS      ,
                    KOS      ,
                    DOS_V    ,
                    KOS_V
             from   S6_OBNLS_VIEW';
      open cur_ for sql_;
      loop
        fetch cur_ into DA_     ,
                        NLS_    ,
                        GROUP_U_,
                        I_VA_   ,
                        DOS_    ,
                        KOS_    ,
                        DOS_V_  ,
                        KOS_V_;
        exit when cur_%notfound;

        execute immediate 'update S6_OBNLS
                           set    DOS  ='||to_char(DOS_  )||'/100,
                                  KOS  ='||to_char(KOS_  )||'/100,
                                  DOS_V='||to_char(DOS_V_)||'/100,
                                  KOS_V='||to_char(KOS_V_)||'/100
                           where  trunc(DA)=to_date('''||DA_||''')               and
                                  NLS='''||NLS_||'''                             and
                                  mod(nvl(GROUP_U,0),10)='||to_char(GROUP_U_)||' and
                                  I_VA='||to_char(I_VA_);
      end loop;
      close cur_;
      commit;

    end if;

--  чряєёъ JOBр ёЄрЄшёЄшъш ЄрсышЎ шч ╤╩└╨┴р6 + cur_rates$base

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tables6_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('create_tableS6 - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

    bars_alerter(1);

  end create_tableS6_job;

--

  procedure create_tableS6 (p_open out number, p_code out number, p_bal number)
  is
    type         cur is ref cursor;
    cur_         cur;
    sql_         varchar2(4000);

    DA_          date;
    GROUP_U_     number;
    I_VA_        number;
    ISH_         number(20,2);
    ISH_V_       number(20,2);
    KSS_         char(1);
    LIMIT_       number(20,2);
    NLS_         varchar2(25);
    Percen_      number(26,8);
    PercenRate_  number;
    VSH_         number(20,2);
    VSH_V_       number(20,2);

    Job_         NUMBER;

  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    begin
      execute immediate 'DROP INDEX "XIE_S6_ChargePr"          ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_ChargePr1"         ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX XIE_S6_HIST_PR             ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_Contract"          ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX XIE_S6_P__SALDO            ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX XIE_S6_SALDO               ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX XIE_S6_SALDO1              ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_Clients"           ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_ClientTies"        ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_Target"            ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_Contract_Id"       ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_Contract_Id1"      ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_ContractEVT_Id"    ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_ContractEVT_Id1"   ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_ContractEVT_Id2"   ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_Credit_Percent_Id" ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_Credit_Percent_Id1"';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX XIE_S6_OBNLS               ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_ContractPr_Id"     ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_ContractPr_Id1"    ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX "XIE_S6_Certificates"      ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX XIE_S6_DOCUM               ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DROP INDEX XIE_S6_DOCUM_Y             ';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'drop table "S6_Addresses"             ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_ChargePr"              ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_Clients"               ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_ClientTies"            ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_P__Clients"            ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_Contract"              ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop view  "S6_Contract_V"            ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_DEPARTAMENT             ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_FORM_XOZ                ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_HIST_PR                 ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_P__SALDO                ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_SALDO                   ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_SETUP_BANK              ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_SWIFT_BIC               ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_Target"                ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_USERS                   ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_Credit_Percent"        ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_Credit_NLS"            ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_MailNLS"               ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_ContractEVT"           ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_DOCUM                   ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_DOCUM_Y                 ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_OBNLS                   ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_DocParam"              ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_DocParam_Y"            ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_EXT_SALDO               ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_LockSaldo"             ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_ContractPr"            ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_VID_Contract"          ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_PercenRate"            ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_PercenVid"             ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table "S6_Certificates"          ';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;

--  чряєёъ JOBр фы  шьяюЁЄр тёяюьюурЄхы№э√ї ЄрсышЎ

    BEGIN
      DBMS_JOB.SUBMIT (job       => Job_                         ,
                       what      => 'migraSK.create_tables6_job;',
                       next_date => sysdate                      ,
                       interval  => null                         ,
                       no_parse  => FALSE);
    exception when others then
      bars_audit.error('create_tableS6 - err(0): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    END;

--  шьяюЁЄ юёэютэ√ї ЄрсышЎ

    begin
      execute immediate 'create table            "S6_Addresses"          as select * from "Addresses"@skarb          where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_Addresses"             select * from "Addresses"@skarb                   ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            "S6_Certificates"       as select * from "Certificates"@skarb       where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_Certificates"          select * from "Certificates"@skarb                ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            "S6_ChargePr"           as select * from "ChargePr"@skarb           where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_ChargePr"              select * from "ChargePr"@skarb                    ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            "S6_Clients"            as select * from "Clients"@skarb            where 1=0';
      begin
        execute immediate 'alter table "S6_Clients" modify "IdCode" NULL';
      exception when OTHERS then
        null;
      end;
      begin
        execute immediate 'alter table "S6_Clients" modify "Name" NULL';
      exception when OTHERS then
        null;
      end;
      execute immediate 'insert /*+APPEND*/ into "S6_Clients"               select * from "Clients"@skarb                     ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            "S6_ClientTies"         as select * from "ClientTies"@skarb         where 1=0';
      begin
        execute immediate 'alter table "S6_ClientTies" modify "IdCode" NULL';
      exception when OTHERS then
        null;
      end;
      execute immediate 'insert /*+APPEND*/ into "S6_ClientTies"            select * from "ClientTies"@skarb                  ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(54): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            "S6_P__Clients"         as select * from "P__Clients"@skarb         where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_P__Clients"            select * from "P__Clients"@skarb                  ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            "S6_Contract"           as select * from "Contract"@skarb           where 1=0';
      begin
        execute immediate 'alter table "S6_Contract" modify "IdContract" NULL';
      exception when OTHERS then
        null;
      end;
      execute immediate 'insert /*+APPEND*/ into "S6_Contract"              select * from "Contract"@skarb                    ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            S6_DEPARTAMENT          as select * from DEPARTAMENT@skarb          where 1=0';
      execute immediate 'insert /*+APPEND*/ into S6_DEPARTAMENT             select * from DEPARTAMENT@skarb                   ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            S6_FORM_XOZ             as select * from FORM_XOZ@skarb             where 1=0';
      execute immediate 'insert /*+APPEND*/ into S6_FORM_XOZ                select * from FORM_XOZ@skarb                      ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(8): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            S6_HIST_PR              as select * from HIST_PR@skarb              where 1=0';
      execute immediate 'insert /*+APPEND*/ into S6_HIST_PR                 select * from HIST_PR@skarb                       ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            S6_P__SALDO             as select * from P__SALDO@skarb             where 1=0';
      execute immediate 'insert /*+APPEND*/ into S6_P__SALDO                select * from P__SALDO@skarb             where trim(NLS) is not null';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            S6_SALDO                as select * from SALDO@skarb                where 1=0';
      begin
        execute immediate 'alter table S6_SALDO modify "IdContract" NULL';
      exception when OTHERS then
        null;
      end;
      execute immediate 'insert /*+APPEND*/ into S6_SALDO                   select * from SALDO@skarb                where trim(NLS) is not null';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            S6_SETUP_BANK           as select * from SETUP_BANK@skarb           where 1=0';
      execute immediate 'insert /*+APPEND*/ into S6_SETUP_BANK              select * from SETUP_BANK@skarb                    ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            S6_SWIFT_BIC            as select * from SWIFT_BIC@skarb            where 1=0';
      execute immediate 'insert /*+APPEND*/ into S6_SWIFT_BIC               select * from SWIFT_BIC@skarb                     ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(13): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

    begin
      execute immediate 'create table            "S6_Target"             as select * from "Target"@skarb             where 1=0';
      execute immediate 'insert /*+APPEND*/ into "S6_Target"                select * from "Target"@skarb                      ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(14): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

--  фы  ёютьхёЄшьюёЄш ёю ёЄрЁ√ьш тхЁёш ьш ╤╩└╨┴р6
    begin
      begin
        execute immediate 'alter table "S6_Target" add S260 varchar2(2)';
      exception when OTHERS then
        null;
      end;
      execute immediate 'comment on column "S6_Target".S260 IS ''─юсртыхэю яЁш ьшуЁрЎшш т └┴╤ ┴└╨╤''';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'create table            S6_USERS                as select * from USERS@skarb                where 1=0';
      execute immediate 'insert /*+APPEND*/ into S6_USERS                   select * from USERS@skarb                         ';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      if sqlcode=-955 then
        p_open:=p_open+1;
      else
        bars_audit.error('create_tableS6 - err(15): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code:=p_code+1;
      end if;
    end;

--  create  INDEXes

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_ChargePr" ON "S6_ChargePr"
              (NLS,I_VA)
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(16): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_ChargePr1" ON "S6_ChargePr"
              (trim(NLS),I_VA)
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(17): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate '
              CREATE INDEX XIE_S6_HIST_PR ON S6_HIST_PR
              ("PercenRate")
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(18): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_Contract" ON "S6_Contract"
              (BIC,"IdClient",GROUP_C)
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(19): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate '
              CREATE INDEX XIE_S6_P__SALDO ON S6_P__SALDO
              (NLS,I_VA,GROUP_U)
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate '
              CREATE INDEX XIE_S6_SALDO ON S6_SALDO
              (BIC,NLS,I_VA,GROUP_U)
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate '
              CREATE INDEX XIE_S6_SALDO1 ON S6_SALDO
              (BIC,trim(NLS),I_VA,GROUP_U)
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_Clients" on "S6_Clients"
              (BIC,"IdClient",GROUP_C)
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_ClientTies" on "S6_ClientTies"
              (BIC,"IdClient",GROUP_C)
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(55): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_Target" on "S6_Target"
              ("Id")
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_Contract_Id" on "S6_Contract"
              (BIC,"IdContract")
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(25): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_Contract_Id1" on "S6_Contract"
              (BIC,rtrim(nvl("IdContract",''NULL'')))
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate 'create or replace view "S6_Contract_V" as
              select   "IdClient"                                         ,
                       GROUP_C                                            ,
                       min(rtrim(nvl("IdContract",''NULL''))) "IdContract",
                       min(C_RISK)       C_RISK
              from     "S6_Contract"
              group by "IdClient",
                       GROUP_C';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

    begin
      execute immediate '
              CREATE INDEX "XIE_S6_Certificates" on "S6_Certificates"
              (BIC,"IdClient",GROUP_C)
              LOGGING
              NOPARALLEL';
      p_open:=p_open+1;
    exception when OTHERS then
      bars_audit.error('create_tableS6 - err(28): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code:=p_code+1;
    end;

--  ёючфрэшх фюяюыэшЄхы№э√ї ЄрсышЎ фы  Ёх°хэш  тючьюцэющ яЁюсыхь√ "ъюяххъ"

    begin
      execute immediate 'drop table S6_HIST_PR_VIEW';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;
    begin
      execute immediate 'drop table S6_SALDO_VIEW';
    exception when OTHERS then
      if sqlcode=-942 then
         null;
      end if;
    end;

    begin
      execute immediate 'create table S6_HIST_PR_VIEW     as select * from HIST_PR_VIEW@skarb';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      null;
    end;
    begin
      execute immediate 'create table S6_SALDO_VIEW       as select * from SALDO_VIEW@skarb';
      commit;
      p_open:=p_open+1;
    exception when OTHERS then
      null;
    end;

--  юсэютыхэшх яюыхщ ё "яЁюярт°хщ" (ъюяхщъш) фЁюсэющ ўрёЄ№■

    if f_tableexists('S6_SALDO_VIEW')=1 then

      sql_:='select ISH    ,
                    ISH_V  ,
                    LIMIT  ,
                    VSH    ,
                    VSH_V  ,
                    NLS    ,
                    KSS    ,
                    GROUP_U,
                    I_VA
             from   S6_SALDO_VIEW';
      open cur_ for sql_;
      loop
        fetch cur_ into ISH_    ,
                        ISH_V_  ,
                        LIMIT_  ,
                        VSH_    ,
                        VSH_V_  ,
                        NLS_    ,
                        KSS_    ,
                        GROUP_U_,
                        I_VA_;
        exit when cur_%notfound;

        execute immediate 'update S6_SALDO
                           set    ISH  ='||to_char(ISH_)  ||'/100,
                                  ISH_V='||to_char(ISH_V_)||'/100,
                                  LIMIT='||to_char(LIMIT_)||'/100,
                                  VSH  ='||to_char(VSH_)  ||'/100,
                                  VSH_V='||to_char(VSH_V_)||'/100
                           where  NLS='''||NLS_||'''                             and
                                  KSS='''||KSS_||'''                             and
                                  mod(nvl(GROUP_U,0),10)='||to_char(GROUP_U_)||' and
                                  I_VA='||to_char(I_VA_);
      end loop;
      close cur_;
      commit;

    end if;

    if f_tableexists('S6_HIST_PR_VIEW')=1 then

      sql_:='select "PercenRate",
                    trunc(DA)   ,
                    "Percen"
             from   S6_HIST_PR_VIEW';
      open cur_ for sql_;
      loop
        fetch cur_ into PercenRate_,
                        DA_        ,
                        Percen_;
        exit when cur_%notfound;

        execute immediate 'update S6_HIST_PR
                           set    "Percen"='||to_char(Percen_)||'/100000000
                           where  "PercenRate"='||to_char(PercenRate_)||' and
                                  trunc(DA)=to_date('''||DA_||''')';
      end loop;
      close cur_;
      commit;

    end if;

--  ёсюЁ ёЄрЄшёЄшъш яю тёяюьюурЄхы№э√ь ЄрсышЎрь S6

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tables6_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('create_tableS6 - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

    bars_alerter(1);

  end create_tableS6;

--

  procedure filling_params (p_open out number, p_code out number, p_bal number)
  is
    mfo_     varchar2(12);
    mfot_    varchar2(12);
    ADRESS_  varchar2(60);  -- params$base.ADDRESS
    FIO_1_   varchar2(40);  -- params$base.BOSS
    FIO_2_   varchar2(40);  -- params$base.ACCMAN
  begin

    bars_alerter(0);

    execute immediate 'select to_char(C_MFO),
                              trim(substr(C_ADRESS,1,50)),
                              C_FIO_1                    ,
                              C_FIO_2
                       from   S6_SETUP_BANK
                       where  rownum=1'
                       into   mfo_   ,
                              ADRESS_,
                              FIO_1_ ,
                              FIO_2_;

    select min(kf) into mfot_ from params$base;

    p_open := 0;
    p_code := 0;

    for k in (select par,
                     replace(val ,mfot_,mfo_) val,
                     replace(comm,mfot_,mfo_) comm
              from   params$base
              where  kf=mfot_)
    loop
      begin
        insert
        into   params$base (par ,
                            val ,
                            comm,
                            kf)
                    values (k.par ,
                            k.val ,
                            k.comm,
                            mfo_);
         p_open := p_open+SQL%rowcount;
      EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
        begin
          update params$base
          set    val=k.val,
                 comm=k.comm
          where  kf=mfo_ and
                 par=k.par;
          p_open := p_open+SQL%rowcount;
        EXCEPTION WHEN OTHERS THEN
          null;
        end;
      end;
    end loop;

    update params$base
    set    val=ADRESS_
    where  par='ADDRESS' and kf=mfo_;

    update params$base
    set    val=FIO_1_
    where  par='BOSS' and kf=mfo_;

    update params$base
    set    val=FIO_2_
    where  par='ACCMAN' and kf=mfo_;

    commit;

    bars_alerter(1);

  end filling_params;

--

  procedure filling_branchs (p_open out number, p_code out number, p_bal number)
  is
/*
    type     cur is ref cursor;
    cur_     cur;
    sql_     varchar2(4000);
    mfo_     varchar2(12);
    branch_  branch_parameters.branch%type;
    name_    varchar2(120);
    b040_    varchar2(20);
*/
  begin

    p_open := 0;
    p_code := 0;

/*
    goto nobal1; -- ¤Єр яЁюЎхфєЁр эх эєцэр, яюёъюы№ъє эршьхэютрэшх сЁрэўхщ ш
                 -- чэрўхэшх ярЁрьхЄЁр B040 чряюыэ хЄё  ёъЁшяЄюь эр юёэютрэшш
                 -- шэЇюЁьрЎшш яЁхфюёЄртыхээющ ─хярЁЄрьхэЄюь шэЇюЁьрЄшчрЎшш

    execute immediate 'select C_MFO from S6_SETUP_BANK where rownum=1' into mfo_;

    p_code := migraSK.prov_bal('',p_bal);

    if p_code>0 then
      goto nobal1;
    end if;

--  for k in (select '/'||mfo_||'/'||decode(DEPART,'0','',
--                   substr('000000'||to_char(DEPART),-6)||'/') branch,
--                   NAM_DEPART                                 name,
--                   KL_OBU                                     b040
--            from   S6_DEPARTAMENT)

    sql_:='select p.branch                           branch,
                  migraSK.valid_symbol(d.NAM_DEPART) name  ,
                  migraSK.valid_symbol(d.KL_OBU)     b040
           from   S6_DEPARTAMENT    d,
                  branch_parameters p
           where  p.tag=''DEPARTS6''      and
                  p.val=to_char(d.DEPART) and
                  bc.extract_mfo(p.branch)='''||mfo_||'''';

    open cur_ for sql_;
    loop
      fetch cur_ into branch_,
                      name_  ,
                      b040_;
      exit when cur_%notfound;

--  for k in (select p.branch     branch,
--                   d.NAM_DEPART name  ,
--                   d.KL_OBU     b040
--            from   S6_DEPARTAMENT    d,
--                   branch_parameters p
--            where  p.tag='DEPARTS6'        and
--                   p.val=to_char(d.DEPART) and
--                   bc.extract_mfo(p.branch)=mfo_)
--
--  loop
      BEGIN
        insert
        into   branch (branch,
                       name  ,
                       b040)
               values (branch_,
                       name_  ,
                       b040_);
        p_open := p_open+SQL%rowcount;
      EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
        update branch
        set    name=name_,
               b040=b040_
        where  branch=branch_;
        p_open := p_open+SQL%rowcount;
                WHEN OTHERS THEN
        bars_audit.error('filling_branchs - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := 1;
      END;
    end loop;
    close cur_;
    commit;

<<nobal1>> null;

*/

  end filling_branchs;

--

  procedure drop_customerS6 (p_open out number, p_code out number, p_bal number)
  is
    mfo_     varchar2(12);
    rnkmax_  number;
    Job_     number;
  begin

    bars_alerter(0);

    execute immediate 'select C_MFO from S6_SETUP_BANK where rownum=1' into mfo_;

    p_open := 0;
    p_code := 0;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_customerS6 - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  delete from TABLEs

    begin
      bc.subst_mfo(mfo_);
      delete from customerw          where rnk            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from customerw_update   where rnk            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from person             where rnk            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from corps_acc          where rnk            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from corps              where rnk            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from customer_address   where rnk            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from CC_DEAL            where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from CC_SWTRACE         where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(8): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from CUSTBANK           where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from CUSTCOUNT          where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete
                         from   CUSTOMER_REL
                         where  RNK in (select rnk
                                        from   customer
                                        where  (notes=''Imported from SKARB6'' or
                                                notes=''BRANCH<->RNK'') and
                                               bc.extract_mfo(branch)='''||mfo_||''')';
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from CUST_NAL           where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from CUST_ZAY           where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(13): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_AGREEMENTS     where CUST_ID        in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(14): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_DEPOSIT        where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(15): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_DEPOSIT_CLOS   where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(16): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_INHERITORS     where INHERIT_CUSTID in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(17): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_JOBS_LOG       where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(18): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_TECHACCOUNTS   where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(19): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from DPT_TRUSTEE        where RNK_TR         in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from DPT_TRUSTEE        where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL           where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL_UPDATE    where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  delete from E_DEAL             where RNK            in (select rnk from customer where notes='Imported from SKARB6' and kf=mfo_);
    begin
      bc.subst_mfo(mfo_);
      delete from FINMON_QUE         where RNK_A          in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from FINMON_QUE         where RNK_B          in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(25): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from KL_CUSTOMER_PARAMS where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from RNK_REKV           where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    delete from SOCIAL_CONTRACTS   where RNK            in (select rnk from customer where notes='Imported from SKARB6' and bc.extract_mfo(branch)=mfo_);
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6 - err(67): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    delete from SOCIAL_TRUSTEE     where RNK            in (select rnk from customer where notes='Imported from SKARB6' and bc.extract_mfo(branch)=mfo_);
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6 - err(68): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    delete from SOCIAL_TRUSTEE     where TRUST_RNK      in (select rnk from customer where notes='Imported from SKARB6' and bc.extract_mfo(branch)=mfo_);
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6 - err(69): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
    begin
      bc.subst_mfo(mfo_);
      delete from SURVEY_SESSION     where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(28): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_REG_DIRS        where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(29): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_SB_TELEX        where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(30): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from TOP_CONTRACTS      where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(31): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    delete from TRUSTEE            where RNK            in (select rnk from customer where notes='Imported from SKARB6' and bc.extract_mfo(branch)=mfo_);
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6 - err(32): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
    begin
      bc.subst_mfo(mfo_);
      delete from ZAYAVKA            where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from ZAY_COMISS         where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from CUSTOMER_UPDATE    where RNK            in (select rnk from customer where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    commit;  -- ьюцхЄ яюьюцхЄ

    begin
      delete from customer           where (notes='Imported from SKARB6' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_;
      p_open := p_open+SQL%rowcount;
    exception when OTHERS then
      bars_audit.error('drop_customerS6 - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_customerS6 - err(37): '||sqlerrm||' - '||k.table_name||', '||k.constraint_name);
        p_code := p_code+1;
      end;
    end loop;

    commit;

--  recreate customer SEQUENCE

    select nvl(max(rnk),0)+1 into rnkmax_ from customer;

    execute immediate 'DROP SEQUENCE S_CUSTOMER';
    execute immediate 'CREATE SEQUENCE S_CUSTOMER
                       START WITH '||rnkmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_CUSTOMER TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_CUSTOMER

    sys.utl_recomp.recomp_serial('BARS');

--  чруыє°ър юЄ "шэтрышфшЁютрэш " яръхЄр (эш їхЁр эх ЁрсюЄрхЄ)

--  begin
--    rnkmax_ := null;
--  exception when others then
--    null;
--  end;

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ъышхэЄют (CUSTOMER ш ёт чрээ√х)

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tableCU_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('drop_customerS6 - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

    bars_alerter(1);

  end drop_customerS6;

--

  procedure drop_customerUN (p_open out number, p_code out number)
  is
    mfo_     varchar2(12);
    rnkmax_  number;
    Job_     number;
  begin

    bars_alerter(0);

    mfo_ := f_ourmfo_g;

    p_open := 0;
    p_code := 0;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_customerUN - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  delete from TABLEs

    begin
      bc.subst_mfo(mfo_);
      delete from customerw          where rnk            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from customerw_update   where rnk            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from person             where rnk            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from corps_acc          where rnk            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from corps              where rnk            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from customer_address   where rnk            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from CC_DEAL            where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from CC_SWTRACE         where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(8): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from CUSTBANK           where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from CUSTCOUNT          where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete
                         from   CUSTOMER_REL
                         where  RNK in (select rnk
                                        from   customer
                                        where  (notes=''Imported from Unicorn'' or
                                                notes=''BRANCH<->RNK'') and
                                               bc.extract_mfo(branch)='''||mfo_||''')';
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from CUST_NAL           where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from CUST_ZAY           where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(13): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_AGREEMENTS     where CUST_ID        in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(14): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_DEPOSIT        where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(15): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_DEPOSIT_CLOS   where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(16): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_INHERITORS     where INHERIT_CUSTID in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(17): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_JOBS_LOG       where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(18): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_TECHACCOUNTS   where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(19): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from DPT_TRUSTEE        where RNK_TR         in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from DPT_TRUSTEE        where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL           where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL_UPDATE    where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  delete from E_DEAL             where RNK            in (select rnk from customer where notes='Imported from SKARB6' and kf=mfo_);
    begin
      bc.subst_mfo(mfo_);
      delete from FINMON_QUE         where RNK_A          in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from FINMON_QUE         where RNK_B          in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(25): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from KL_CUSTOMER_PARAMS where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from RNK_REKV           where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SURVEY_SESSION     where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(28): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_REG_DIRS        where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(29): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_SB_TELEX        where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(30): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from TOP_CONTRACTS      where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(31): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from ZAYAVKA            where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from ZAY_COMISS         where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from CUSTOMER_UPDATE    where RNK            in (select rnk from customer where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    commit;  -- ьюцхЄ яюьюцхЄ

    begin
      delete from customer           where (notes='Imported from Unicorn' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_;
      p_open := p_open+SQL%rowcount;
    exception when OTHERS then
      bars_audit.error('drop_customerUN - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_customerUN - err(37): '||sqlerrm||' - '||k.table_name||', '||k.constraint_name);
        p_code := p_code+1;
      end;
    end loop;

    commit;

--  recreate customer SEQUENCE

    select nvl(max(rnk),0)+1 into rnkmax_ from customer;

    execute immediate 'DROP SEQUENCE S_CUSTOMER';
    execute immediate 'CREATE SEQUENCE S_CUSTOMER
                       START WITH '||rnkmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_CUSTOMER TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_CUSTOMER

    sys.utl_recomp.recomp_serial('BARS');

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ъышхэЄют (CUSTOMER ш ёт чрээ√х)

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tableCU_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('drop_customerUN - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

    bars_alerter(1);

  end drop_customerUN;

--

  procedure create_customerS6 (p_open out number, p_code out number, p_bal number)
  is
    type        cur is ref cursor;
    cur_        cur;
    sql_        varchar2(32000);
    rnk_        number;
    fl_         number;
    mfog_       varchar2(12);
    ispg_       varchar2(32);

    TAXF_       varchar2(12);
    DATEON_     date;
    DATEA_      date;
    DATET_      date;
    BDAY_       date;
    FS_         varchar2(3);
    SED_        char(4);
    NMK_        varchar2(70);
    IDCLIENT_   number;
    GROUP_C_    number;
    OKPO_       varchar2(12);
    COUNTRY_    number;
    CREG_       number;
    CDST_       number;
    PRINSIDER_  number;
    ISP_        number;
    NMKK_       varchar2(38);
    OE_         varchar2(5);
    CODCAGENT_  number;
    ISE_        varchar2(5);
    SEX_        number;
--  MB_         varchar2(3);
    TGR_        number;
    CUSTTYPE_   number;
    VED_        varchar2(5);
    ND_         varchar2(10);
    CRISK_      number;
    PHONE_      varchar2(20);
    POSTIND_    varchar2(10);
    OBLAST_     varchar2(40);
    RAYON_      varchar2(25);
    CITY_       varchar2(40);
    STREET_     varchar2(40);
    HOUSE_      varchar2(20);
    KVARTIRA_   varchar2(20);
    TEL_        varchar2(20);
    EMAIL_      varchar2(100);
    SAB_        varchar2(6);
    STMT_       number;
    RGADM_      varchar2(30);
    MFO_        varchar2(12);
    BIC_        varchar2(12);

    l_rnk       number;
    l_okpo      varchar2(14);
    l_branch    varchar2(30);
    l_ins_      number;

    adr_        customer.adr%type;
    len_adr_    number;
    len_raz_    number;

    Ser_        person.ser%type;
    Numdoc_     person.numdoc%type;
    PDate_      person.pdate%type;
    Organ_      person.organ%type;
    Orgao_      person.organ%type;
    i_          int;
    len_organ_  number;

    Job_        number;
    K050_       char(3);

  begin

    bars_alerter(0);

    execute immediate 'select C_MFO from S6_SETUP_BANK where rownum=1' into mfog_;

    l_ins_ := 0;
    p_open := 0;
    p_code := migraSK.prov_bal('create_customerS6',p_bal);

    if p_code>0 then
      goto nobal3;
    end if;

    select data_length
    into   len_adr_
    from   user_tab_columns
    where  table_name='CUSTOMER' and
           column_name='ADR';

    select data_length
    into   len_organ_
    from   user_tab_columns
    where  table_name='PERSON' and
           column_name='ORGAN';

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=mfog_                  and
           logname like 'U'||migraSK.kodobl(mfog_)||'_%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=mfog_ and
             logname like 'U'||migraSK.kodobl(mfog_)||'_%';
    end if;

--  └э  for Offline

    begin
      for c in (select branch,
                       name
                from   branch
                where  branch like '/'||mfog_||'/%'
                order  by branch)
      loop
        begin
          bc.subst_branch(c.branch);
          begin
            select rnk
            into   l_rnk
            from   customer
            where  branch=c.branch and
                   notes='BRANCH<->RNK';
          exception when no_data_found then

--          select s_customer.nextval
--          into   l_rnk
--          from   dual;

            execute immediate 'select s_customer.nextval from dual'           into l_rnk;
            execute immediate 'select c_id from S6_SETUP_BANK where rownum<2' into l_okpo;

            insert
            into   customer (rnk      ,
                             tgr      ,
                             custtype ,
                             codcagent,
                             okpo     ,
                             country  ,
                             nmk      ,
                             nmkk     ,
                             notes    ,
                             ise      ,
                             fs       ,
                             oe       ,
                             ved      ,
                             sed      ,
                             k050     ,
                             branch)
                     values (l_rnk                    ,
                             1                        ,
                             1                        ,
                             1                        ,
                             l_okpo                   ,
                             804                      ,
                             trim(substr(c.name,1,70)),
                             trim(substr(c.name,1,38)),
                             'BRANCH<->RNK'           ,
                             '12201'                  ,
                             '31'                     ,
                             '96130'                  ,
                             '65120'                  ,
                             '80  '                   ,
                             '610'                    ,
                             c.branch);
--          p_open := p_open+1;
          end;

          begin
--          select branch
--          into   l_branch
--          from   branch_parameters
--          where  tag='RNK' and
--                 branch=c.branch;
            update branch_parameters
            set    val=to_char(l_rnk)
            where  tag='RNK' and
                   branch=c.branch;

            if SQL%ROWCOUNT=0 then
--        exception when no_data_found then
             insert
             into   branch_parameters (branch,
                                       tag   ,
                                       val)
                               values (c.branch,
                                       'RNK'   ,
                                       to_char(l_rnk));
            end if;
          end;
        exception when others then
          bc.set_context;
        end;
        bc.set_context;
      end loop;
    end;

    commit;

    select count(*)
    into   p_open
    from   customer
    where  notes='BRANCH<->RNK';

--  IdNal --> c_dst
--  IdReg --> c_reg

    MFO_ := null; -- эр ¤Єющ їхЁэх чрфтрЄЁрштрыю ъышхэЄют

    sql_:='select distinct
                  TAXF     ,
                  DATEON   ,
                  DATEA    ,
                  DATET    ,
                  BDAY     ,
                  FS       ,
                  SED      ,
                  K050     ,
                  NMK      ,
                  IDCLIENT ,
                  GROUP_C  ,
                  OKPO     ,
                  COUNTRY  ,
                  CDST     ,
                  CREG     ,
                  PRINSIDER,
                  ISP      ,
                  NMKK     ,
                  OE       ,
                  CODCAGENT,
                  ISE      ,
                  SEX      ,
                  TGR      ,
                  CUSTTYPE ,
                  VED      ,
                  ND       ,
                  CRISK    ,
                  PHONE    ,
                  POSTIND  ,
                  OBLAST   ,
                  RAYON    ,
                  CITY     ,
                  STREET   ,
                  HOUSE    ,
                  KVARTIRA ,
                  TEL      ,
                  EMAIL    ,
                  SAB      ,
                  STMT     ,
                  RGADM    ,
                --MFO      ,
                  BIC
          from    (select distinct
                        --"Address"     ,                                                                    -- └фЁхёр                                  int
                        --B010          ,                                                                    -- ╚фхэЄшЇшърЄюЁ срэър ъюэЄЁрухэЄр         varchar(10)
                        --BIC           ,                                                                    -- ┴рэъ                                    int
                        --"Budget"      ,                                                                    -- ┴■фцхЄ                                  tinyint
                        --"Class"       ,                                                                    -- ╘шэ ёЄрэ                                char(1)
                          to_char(c."CodNal")                                                    TAXF     ,  -- ╩юф яырЄэшър яюфрЄъiт                   smallint
                        --"D_Close"     ,                                                                    -- ─рЄр чръЁшЄЄ                            smalldatetime
                        --D_D1          ,                                                                    -- ╧рЁрьхЄЁ ╧юыэюЄр шфхэЄшЇ. ъышхэЄр       char(1)
                        --"D_Modify"    ,                                                                    -- ─рЄр ьюфшЇiърЎi┐                        smalldatetime
                          nvl(c."D_Open",add_months(trunc(sysdate,''YEAR''),-12))                DATEON   ,  -- ─рЄр Ёх║ёЄЁрЎi┐                         smalldatetime
                          c."D_RegSa"                                                            DATEA    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т рфьiэiёЄЁрЎi┐         smalldatetime
                          c."D_RegSti"                                                           DATET    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т яюфрЄъютiщ iэёяхъЎi┐  smalldatetime
                          c."DateBirth"                                                          BDAY     ,  -- ─рЄр эрЁюфцхээ                          smalldatetime
                        --"Description" ,                                                                    -- ╟руры№эi тiфюьюёЄi                      varchar(2000)
                        --"Doc_Modify"  ,                                                                    -- ─юъєьхэЄ_юс?ЁєэЄєтрээ                   int
                          nvl(nullif(substr(''00''||to_char(c."FormPrivat"),-2),''99''),''ZZ'')  FS       ,  -- ╘юЁьр тырёэюёЄi                         tinyint
                          substr(''00''||to_char(fx.K051),-2)||''  ''                            SED      ,  -- ╘юЁьр уюёяюфрЁ■трээ                     char(4)
                          (select K050
                           from   sp_k050
                           where  k051=c."FormXoz" and
                                  rownum<2)                                                      K050     ,  -- ярЁрьхЄЁ K050                           char(3)
--                        substr(''000''||to_char(c."FormXoz"),-3)                               K050     ,  -- ярЁрьхЄЁ K050                           char(3)
                          migraSK.valid_symbol(
                          trim(substr(trim(nvl(c."FullName",c."Name")),1,70)))                   NMK      ,  -- ╧ютэх эрщьхэєтрээ                       varchar(150)
                        --"Fund"        ,                                                                    -- ╤ЄрЄєЄэшщ Їюэф                          decimal(16,2)
                        --GROUP_C       ,                                                                    -- ═юьхЁ Ёх║ёЄЁє                           tinyint
                          c."IdClient"                                                           IDCLIENT ,  -- ╩юф                                     int
                          c.GROUP_C                                                              GROUP_C  ,  -- ╩юф+                                    int
                          migraSK.valid_symbol(c."IdCode")                                       OKPO     ,  -- IфхэЄшЇiърЎiщэшщ ъюф                    varchar(10)
                        --"IdCorpClient",                                                                    -- ╩юф ъюЁяюЁрЄштэюую ъыi║эЄр              int
                        --"IdCorpDepart",                                                                    -- ╩юф єёЄрэютш ъюЁяюЁрЄштэюую ъыi║эЄр     int
--                        c."IdCountry"                                                          COUNTRY  ,  -- ╩Ёр┐эр                                  smallint
                          nvl(nullif(nvl(c."IdCountry",0),0),804)                                COUNTRY  ,  -- ╩Ёр┐эр                                  smallint
                          c."IdNal"                                                              CDST     ,  -- ╧юфрЄъютр iэёяхъЎi                      tinyint
                          c."IdReg"                                                              CREG     ,  -- ╨хуiюэ                                  tinyint
                          decode(nvl(c."Insider",99),21,2,22,3,23,5,30,4,c."Insider")            PRINSIDER,  -- IэёрщфхЁ                                tinyint
--                        c.ISP_OWNER                                                            ISP      ,  -- ╩юф ъюЁшёЄєтрўр                         smallint
                          nvl(u.UBARS,'||ispg_||')                                               ISP      ,  -- ╩юф ъюЁшёЄєтрўр                         smallint
                        --K013          ,                                                                    -- ╧рЁрьхЄЁ K013                           char(1)
                        --K014          ,                                                                    -- ╧рЁрьхЄЁ K014                           char(1)
                        --K015          ,                                                                    -- ╧рЁрьхЄЁ K015                           char(1)
                        --"KeySearch"   ,                                                                    -- ╩ы■ў яю°єъє                             varchar(40)
                        --"Ministry"    ,                                                                    -- ╠iэiёЄхЁёЄтю/тiфюьёЄтю                  smallint
                          migraSK.valid_symbol(
                          trim(substr(trim(nvl(c."Name",c."FullName")),1,38)))                   NMKK     ,  -- ╩юЁюЄъх эрщьхэєтрээ                     varchar(40)
                        --"NumberAdm"   ,                                                                    -- ═юьхЁ Ёi°хээ                            varchar(20)
                          substr(''00000''||to_char(c."Otrasl"),-5)                              OE       ,  -- ├рыєч№                                  int
                        --c."Rezident"                                                           REZIDENT ,  -- ╨хчшфхэЄэiёЄ№                           tinyint
                          decode(c."Rezident",0,
                          decode(decode(c."TypeClient",0,3,1,2,1),3,6,2,4,2),
                          decode(decode(c."TypeClient",0,3,1,2,1),3,5,2,3,1))                    CODCAGENT,  -- ╒рЁръЄхЁшёЄшър
                          substr(''00000''||nvl(to_char(trim(c."Sector")),''''),-5)              ISE      ,  -- IэёЄшЄ.ёхъЄюЁ хъюэюьiъш                 int
                          c."Sex"                                                                SEX      ,  -- ╤ЄрЄ№                                   tinyint
--                        to_char(c."SmBusines")                                                 MB       ,  -- ═рыхцэiёЄ№ фю ьрыюую сiчэхёє (╩140)     tinyint
                          decode(nvl(c."TinKey",0),0,3,4,2,c."TinKey")                           TGR      ,  -- ╥шя фхЁцЁх║ёЄЁє                         tinyint
                          decode(substr(''00''||to_char(fx.K051),-2),''91'',3,
                                 decode(c."TypeClient",0,3,1,2,1))                               CUSTTYPE ,  -- ╥шя ъыi║эЄр                             tinyint
                          substr(''00000''||to_char(c."VidEco"),-5)                              VED      ,  -- ┬шф хъюэюь.фi ы№эюёЄi                   int
                        --"Working"     ,                                                                    -- ╩iы№ъiёЄ№ яЁрЎ■■ўшї                     int
--                        trim(substr(co."IdContract",1,10))                                     ND       ,
--                        co.C_RISK                                                              CRISK    ,
                          migraSK.valid_symbol((select TRIM(SUBSTR("IdContract",1,10))
                                                from   "S6_Contract_V"
                                                where  "IdClient"=c."IdClient" and
                                                       group_c=c.group_c))                       ND       ,
--                        (select c_risk
--                         from   "S6_Contract_V"
--                         where  "IdClient"=c."IdClient" and
--                                group_c=c.group_c)                                             CRISK    ,
                          decode(pc."Class",''└'',1,
                                            ''┴'',2,
                                            ''┬'',3,
                                            ''├'',4,
                                            ''─'',5,null)                                        CRISK    ,
                          migraSK.valid_symbol(ad."Phone")                                       PHONE    ,  -- ╥хыхЇюэ                                 varchar(20)
                          migraSK.valid_symbol(ad."PostInd")                                     POSTIND  ,  -- ╧ю°Єютшщ iэфхъё                         varchar(10)
                          migraSK.valid_symbol(ad."Region")                                      OBLAST   ,  -- ╬сырёЄ№                                 varchar(40)
                          migraSK.valid_symbol(ad."Rayon")                                       RAYON    ,  -- ╨рщюэ                                   varchar(25)
                          migraSK.valid_symbol(ad."City")                                        CITY     ,  -- ╠iёЄю, эрёхы.яєэъЄ                      varchar(40)
                          migraSK.valid_symbol(ad."Street")                                      STREET   ,  -- ┬єышЎ                                   varchar(40)
                          migraSK.valid_symbol(ad."House")                                       HOUSE    ,  -- ─iь                                     varchar(20)
                          migraSK.valid_symbol(ad."Apartment")                                   KVARTIRA ,  -- ╩трЁЄшЁр                                varchar(20)
                          migraSK.valid_symbol(ad."Phone")                                       TEL      ,  -- ╥хыхЇюэ                                 varchar(20)
                          migraSK.valid_symbol(ad."EMail")                                       EMAIL    ,  -- ┼ыхъЄЁюээр рфЁхёр                       varchar(10)
                          NVL(ad."TypeAddress",0)                                                TA       ,
                          null /* gu."Iden"                     */                               SAB      ,  -- SAB
                          null /* decode(gu."Iden",null,null,5) */                               STMT     ,
                          null /* rc."NumberAdm"                */                               RGADM    ,
--                        trim(substr(ca."CodeBank",1,12))                                       MFO      ,
                          migraSK.valid_symbol(sw.BIC_IN)                                        BIC
                   from   "S6_Clients"            c ,
                          "S6_P__Clients"         pc,
                        --"S6_Contract_V"         co,
                          "S6_Addresses"          ad,
                        --S6_REG_C                rc,
                        --S6_GROUP_U              gu,
                        --"S6_ClientsAddBankInfo" ca,
                          (select BIC,BIC_IN
                           from   S6_SWIFT_BIC
                           where  BIC='||mfog_||' and
                                  rownum<2)       sw,
                          S6_FORM_XOZ             fx,
                          USERS_SKARB6_BARS       u
                   where  c.BIC='||mfog_||'             and
                          c."IdClient"=pc."IdClient"(+) and
                          c.GROUP_C=pc.GROUP_C(+)       and
                          c.BIC=pc.BIC(+)               and
                        --c."IdClient"=co."IdClient"(+) and
                        --c.GROUP_C=co.GROUP_C(+)       and
                          c.ISP_OWNER=u.USKARB6(+)      and
                          c."Address"=ad."Id"(+)        and
                          ad.BIC(+)=c.BIC               and
                          c."D_Close" is null           and
                        --c.GROUP_C=rc.ID(+)            and
                        --rc.ID=gu.GROUP_C(+)           and
                        --c."IdClient"=ca."IdClient"(+) and
                        --c.GROUP_C=ca.GROUP_C(+)       and
                          c.BIC=sw.BIC(+)               and
                          c."FormXoz"=fx.ID(+)
                          /* and c."IdClient"=2 */
                  )
          where   (IDCLIENT,GROUP_C,TA) in
                  (select IDCLIENT,GROUP_C,min(TA) from (
                   select distinct
                        --"Address"     ,                                                                    -- └фЁхёр                                  int
                        --B010          ,                                                                    -- ╚фхэЄшЇшърЄюЁ срэър ъюэЄЁрухэЄр         varchar(10)
                        --BIC           ,                                                                    -- ┴рэъ                                    int
                        --"Budget"      ,                                                                    -- ┴■фцхЄ                                  tinyint
                        --"Class"       ,                                                                    -- ╘шэ ёЄрэ                                char(1)
                          to_char(c."CodNal")                                                    TAXF     ,  -- ╩юф яырЄэшър яюфрЄъiт                   smallint
                        --"D_Close"     ,                                                                    -- ─рЄр чръЁшЄЄ                            smalldatetime
                        --D_D1          ,                                                                    -- ╧рЁрьхЄЁ ╧юыэюЄр шфхэЄшЇ. ъышхэЄр       char(1)
                        --"D_Modify"    ,                                                                    -- ─рЄр ьюфшЇiърЎi┐                        smalldatetime
                          c."D_Open"                                                             DATEON   ,  -- ─рЄр Ёх║ёЄЁрЎi┐                         smalldatetime
                          c."D_RegSa"                                                            DATEA    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т рфьiэiёЄЁрЎi┐         smalldatetime
                          c."D_RegSti"                                                           DATET    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т яюфрЄъютiщ iэёяхъЎi┐  smalldatetime
                          c."DateBirth"                                                          BDAY     ,  -- ─рЄр эрЁюфцхээ                          smalldatetime
                        --"Description" ,                                                                    -- ╟руры№эi тiфюьюёЄi                      varchar(2000)
                        --"Doc_Modify"  ,                                                                    -- ─юъєьхэЄ_юс?ЁєэЄєтрээ                   int
                          nvl(nullif(substr(''00''||to_char(c."FormPrivat"),-2),''99''),''ZZ'')  FS       ,  -- ╘юЁьр тырёэюёЄi                         tinyint
                          substr(''00''||to_char(fx.K051),-2)||''  ''                            SED      ,  -- ╘юЁьр уюёяюфрЁ■трээ                     char(4)
                          (select K050
                           from   sp_k050
                           where  k051=c."FormXoz" and
                                  rownum<2)                                                      K050     ,  -- ярЁрьхЄЁ K050                           char(3)
--                        substr(''000''||to_char(c."FormXoz"),-3)                               K050     ,  -- ярЁрьхЄЁ K050                           char(3)
                          migraSK.valid_symbol(
                          trim(substr(trim(nvl(c."FullName",c."Name")),1,70)))                   NMK      ,  -- ╧ютэх эрщьхэєтрээ                       varchar(150)
                        --"Fund"        ,                                                                    -- ╤ЄрЄєЄэшщ Їюэф                          decimal(16,2)
                        --GROUP_C       ,                                                                    -- ═юьхЁ Ёх║ёЄЁє                           tinyint
                          c."IdClient"                                                           IDCLIENT ,  -- ╩юф                                     int
                          c.GROUP_C                                                              GROUP_C  ,  -- ╩юф+                                    int
                          migraSK.valid_symbol(c."IdCode")                                       OKPO     ,  -- IфхэЄшЇiърЎiщэшщ ъюф                    varchar(10)
                        --"IdCorpClient",                                                                    -- ╩юф ъюЁяюЁрЄштэюую ъыi║эЄр              int
                        --"IdCorpDepart",                                                                    -- ╩юф єёЄрэютш ъюЁяюЁрЄштэюую ъыi║эЄр     int
                          c."IdCountry"                                                          COUNTRY  ,  -- ╩Ёр┐эр                                  smallint
                          c."IdNal"                                                              CDST     ,  -- ╧юфрЄъютр iэёяхъЎi                      tinyint
                          c."IdReg"                                                              CREG     ,  -- ╨хуiюэ                                  tinyint
                          decode(nvl(c."Insider",99),21,2,22,3,23,5,30,4,c."Insider")            PRINSIDER,  -- IэёрщфхЁ                                tinyint
--                        c.ISP_OWNER                                                            ISP      ,  -- ╩юф ъюЁшёЄєтрўр                         smallint
                          nvl(u.UBARS,'||ispg_||')                                               ISP      ,  -- ╩юф ъюЁшёЄєтрўр                         smallint
                        --K013          ,                                                                    -- ╧рЁрьхЄЁ K013                           char(1)
                        --K014          ,                                                                    -- ╧рЁрьхЄЁ K014                           char(1)
                        --K015          ,                                                                    -- ╧рЁрьхЄЁ K015                           char(1)
                        --"KeySearch"   ,                                                                    -- ╩ы■ў яю°єъє                             varchar(40)
                        --"Ministry"    ,                                                                    -- ╠iэiёЄхЁёЄтю/тiфюьёЄтю                  smallint
                          migraSK.valid_symbol(
                          trim(substr(trim(nvl(c."Name",c."FullName")),1,38)))                   NMKK     ,  -- ╩юЁюЄъх эрщьхэєтрээ                     varchar(40)
                        --"NumberAdm"   ,                                                                    -- ═юьхЁ Ёi°хээ                            varchar(20)
                          substr(''00000''||to_char(c."Otrasl"),-5)                              OE       ,  -- ├рыєч№                                  int
                        --c."Rezident"                                                           REZIDENT ,  -- ╨хчшфхэЄэiёЄ№                           tinyint
                          decode(c."Rezident",0,
                          decode(decode(c."TypeClient",0,3,1,2,1),3,6,4),
                          decode(decode(c."TypeClient",0,3,1,2,1),3,5,3))                        CODCAGENT,  -- ╒рЁръЄхЁшёЄшър
                          substr(''00000''||nvl(to_char(trim(c."Sector")),''''),-5)              ISE      ,  -- IэёЄшЄ.ёхъЄюЁ хъюэюьiъш                 int
                          c."Sex"                                                                SEX      ,  -- ╤ЄрЄ№                                   tinyint
--                        to_char(c."SmBusines")                                                 MB       ,  -- ═рыхцэiёЄ№ фю ьрыюую сiчэхёє (╩140)     tinyint
                          decode(nvl(c."TinKey",0),0,3,4,2,c."TinKey")                           TGR      ,  -- ╥шя фхЁцЁх║ёЄЁє                         tinyint
                          decode(c."TypeClient",0,3,1,2,1)                                       CUSTTYPE ,  -- ╥шя ъыi║эЄр                             tinyint
                          substr(''00000''||to_char(c."VidEco"),-5)                              VED      ,  -- ┬шф хъюэюь.фi ы№эюёЄi                   int
                        --"Working"     ,                                                                    -- ╩iы№ъiёЄ№ яЁрЎ■■ўшї                     int
--                        trim(substr(co."IdContract",1,10))                                     ND       ,
--                        co.C_RISK                                                              CRISK    ,
                          migraSK.valid_symbol(
                          (select TRIM(SUBSTR("IdContract",1,10))
                           from   "S6_Contract_V"
                           where  "IdClient"=c."IdClient" and
                                  group_c=c.group_c))                                            ND       ,
--                        (select c_risk
--                         from   "S6_Contract_V"
--                         where  "IdClient"=c."IdClient" and
--                                group_c=c.group_c)                                             CRISK    ,
                          decode(pc."Class",''└'',1,
                                            ''┴'',2,
                                            ''┬'',3,
                                            ''├'',4,
                                            ''─'',5,null)                                        CRISK    ,
                          migraSK.valid_symbol(ad."Phone")                                       PHONE    ,  -- ╥хыхЇюэ                                 varchar(20)
                          migraSK.valid_symbol(ad."PostInd")                                     POSTIND  ,  -- ╧ю°Єютшщ iэфхъё                         varchar(10)
                          migraSK.valid_symbol(ad."Region")                                      OBLAST   ,  -- ╬сырёЄ№                                 varchar(40)
                          migraSK.valid_symbol(ad."Rayon")                                       RAYON    ,  -- ╨рщюэ                                   varchar(25)
                          migraSK.valid_symbol(ad."City")                                        CITY     ,  -- ╠iёЄю, эрёхы.яєэъЄ                      varchar(40)
                          migraSK.valid_symbol(ad."Street")                                      STREET   ,  -- ┬єышЎ                                   varchar(40)
                          migraSK.valid_symbol(ad."House")                                       HOUSE    ,  -- ─iь                                     varchar(20)
                          migraSK.valid_symbol(ad."Apartment")                                   KVARTIRA ,  -- ╩трЁЄшЁр                                varchar(20)
                          migraSK.valid_symbol(ad."Phone")                                       TEL      ,  -- ╥хыхЇюэ                                 varchar(20)
                          migraSK.valid_symbol(ad."EMail")                                       EMAIL    ,  -- ┼ыхъЄЁюээр рфЁхёр                       varchar(20)
                          NVL(ad."TypeAddress",0)                                                TA       ,
                          null /* gu."Iden"                     */                               SAB      ,  -- SAB
                          null /* decode(gu."Iden",null,null,5) */                               STMT     ,
                          null /* rc."NumberAdm"                */                               RGADM    ,
--                        trim(substr(ca."CodeBank",1,12))                                       MFO      ,
                          migraSK.valid_symbol(sw.BIC_IN)                                        BIC
                   from   "S6_Clients"            c ,
                          "S6_P__Clients"         pc,
                        --"S6_Contract_V"         co,
                          "S6_Addresses"          ad,
                        --S6_REG_C                rc,
                        --S6_GROUP_U              gu,
                        --"S6_ClientsAddBankInfo" ca,
                          (select BIC,BIC_IN
                           from   S6_SWIFT_BIC
                           where  BIC='||mfog_||' and
                                  rownum<2)       sw,
                          S6_FORM_XOZ             fx,
                          USERS_SKARB6_BARS       u
                   where  c.BIC='||mfog_||'             and
                          c."IdClient"=pc."IdClient"(+) and
                          c.GROUP_C=pc.GROUP_C(+)       and
                          c.BIC=pc.BIC(+)               and
                        --c."IdClient"=co."IdClient"(+) and
                        --c.GROUP_C=co.GROUP_C(+)       and
                          c.ISP_OWNER=u.USKARB6(+)      and
                          c."Address"=ad."Id"(+)        and
                          ad.BIC(+)=c.BIC               and
                          c."D_Close" is null           and
                        --c.GROUP_C=rc.ID(+)            and
                        --rc.ID=gu.GROUP_C(+)           and
                        --c."IdClient"=ca."IdClient"(+) and
                        --c.GROUP_C=ca.GROUP_C          and
                          c.BIC=sw.BIC(+)               and
                          c."FormXoz"=fx.ID(+)
                  ) group by IDCLIENT,GROUP_C)';

--  bars_audit.info(substr(sql_,00001,03000));
--  bars_audit.info(substr(sql_,03001,03000));
--  bars_audit.info(substr(sql_,06001,03000));
--  bars_audit.info(substr(sql_,09001,03000));
--  bars_audit.info(substr(sql_,12001,03000));
--  bars_audit.info(substr(sql_,15001,03000));
--  bars_audit.info(substr(sql_,18001,03000));

    open cur_ for sql_;

    loop
      fetch cur_ into TAXF_     ,
                      DATEON_   ,
                      DATEA_    ,
                      DATET_    ,
                      BDAY_     ,
                      FS_       ,
                      SED_      ,
                      K050_     ,
                      NMK_      ,
                      IDCLIENT_ ,
                      GROUP_C_  ,
                      OKPO_     ,
                      COUNTRY_  ,
                      CDST_     ,
                      CREG_     ,
                      PRINSIDER_,
                      ISP_      ,
                      NMKK_     ,
                      OE_       ,
                      CODCAGENT_,
                      ISE_      ,
                      SEX_      ,
                    --MB_       ,
                      TGR_      ,
                      CUSTTYPE_ ,
                      VED_      ,
                      ND_       ,
                      CRISK_    ,
                      PHONE_    ,
                      POSTIND_  ,
                      OBLAST_   ,
                      RAYON_    ,
                      CITY_     ,
                      STREET_   ,
                      HOUSE_    ,
                      KVARTIRA_ ,
                      TEL_      ,
                      EMAIL_    ,
                      SAB_      ,
                      STMT_     ,
                      RGADM_    ,
                    --MFO_      ,
                      BIC_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

--    select s_customer.nextval into RNK_ from dual;

--    select min(rnk)
--    into   rnk_
--    from   customerw
--    where  tag='RNKS6'              and
--           value=to_char(IDCLIENT_) and
--           kf=mfog_;

--    begin
--      select c.rnk
--      into   rnk_
--      from   customerw w,
--             customer  c
--      where  w.tag='RNKS6'                                 and
--             w.value=to_char(IDCLIENT_)||to_char(GROUP_C_) and
--             w.rnk=c.rnk                                   and
--             bc.extract_mfo(c.branch)=mfog_                and
--             rownum<2;
--    exception when no_data_found then
--      rnk_ := null;
--    end;

      begin
        select rnk
        into   rnk_
        from   customerw
        where  tag='RNKS6'                                 and
               value=to_char(IDCLIENT_)||to_char(GROUP_C_) and
               rownum<2;
      exception when no_data_found then
        rnk_ := null;
      end;

      if rnk_ is not null then
        fl_ := 1;
        p_open := p_open+1;
      else
        fl_ := 0;
      end if;

      if fl_=0 then

        bc.subst_mfo(mfog_);

        RNK_ := null;

        begin

          select length(OBLAST_||' '||
                        RAYON_ ||' '||
                        CITY_  ||' '||
                        STREET_||' '||
                        HOUSE_ ||' '||
                        KVARTIRA_)-len_adr_
          into   len_raz_
          from   dual;

          if len_raz_>0 and length(CITY_)>=len_raz_ then
            CITY_ := trim(substr(CITY_,1,length(CITY_)-len_raz_));
          else
            if len_raz_>0 and length(STREET_)>=len_raz_ then
              STREET_ := trim(substr(STREET_,1,length(STREET_)-len_raz_));
            end if;
          end if;

          kl.setCustomerAttr(RNK_                  ,   -- Rnk_ IN OUT customer.rnk%type        -- Customer number
                             CUSTTYPE_             ,   -- Custtype_   customer.custtype%type   -- ╥шя ъышхэЄр: 1-срэъ, 2-■Ё.ышЎю, 3-Їшч.ышЎю
                             ND_                   ,   -- Nd_         customer.nd%type         -- ╣ фюуютюЁр
                             NMK_                  ,   -- Nmk_        customer.nmk%type        -- ═ршьхэютрэшх ъышхэЄр
                             null                  ,   -- Nmkv_       customer.nmkv%type       -- ═ршьхэютрэшх ъышхэЄр ьхцфєэрЁюфэюх
                             NMKK_                 ,   -- Nmkk_       customer.nmkk%type       -- ═ршьхэютрэшх ъышхэЄр ъЁрЄъюх
                             trim(
              /*FGOBL*/      OBLAST_||' '||
              /*FGDST*/      RAYON_ ||' '||
              /*FGTWN*/      CITY_  ||' '||
              /*FGADR(+3)*/  STREET_||' '||
                             HOUSE_ ||' '||
                             KVARTIRA_)            ,  -- Adr_        customer.adr%type        -- └фЁхё ъышхэЄр
                             CODCAGENT_            ,  -- Codcagent_  customer.codcagent%type  -- ╒рЁръЄхЁшёЄшър
                             COUNTRY_              ,  -- Country_    customer.country%type    -- ╤ЄЁрэр
                             PRINSIDER_            ,  -- Prinsider_  customer.prinsider%type  -- ╧Ёшчэръ шэёрщфхЁр
                             TGR_                  ,  -- Tgr_        customer.tgr%type        -- ╥шя уюё.ЁххёЄЁр
                             OKPO_                 ,  -- Okpo_       customer.okpo%type       -- ╬╩╧╬
                             STMT_                 ,  -- Stmt_       customer.stmt%type       -- ╘юЁьрЄ т√яшёъш
                             SAB_                  ,  -- Sab_        customer.sab%type        -- ▌ы.ъюф
                             DATEON_               ,  -- DateOn_     customer.date_on%type    -- ─рЄр ЁхушёЄЁрЎшш
                             TAXF_                 ,  -- Taxf_       customer.taxf%type       -- ═рыюуют√щ ъюф
                             CREG_                 ,  -- CReg_       customer.c_reg%type      -- ╩юф юсы.═╚
                             CDST_                 ,  -- CDst_       customer.c_dst%type      -- ╩юф Ёрщюэ.═╚
                             null                  ,  -- Adm_        customer.adm%type        -- └фьшэ.юЁурэ
                             null                  ,  -- RgTax_      customer.rgtax%type      -- ╨ху эюьхЁ т ═╚
                             RGADM_                ,  -- RgAdm_      customer.rgadm%type      -- ╨ху эюьхЁ т └фь.
                             DATET_                ,  -- DateT_      customer.datet%type      -- ─рЄр Ёху т ═╚
                             DATEA_                ,  -- DateA_      customer.datea%type      -- ─рЄр Ёху. т рфьшэшёЄЁрЎшш
                             ISE_                  ,  -- Ise_        customer.ise%type        -- ╚эёЄ. ёхъ. ¤ъюэюьшъш
                             FS_                   ,  -- Fs_         customer.fs%type         -- ╘юЁьр ёюсёЄтхээюёЄш
                             OE_                   ,  -- Oe_         customer.oe%type         -- ╬ЄЁрёы№ ¤ъюэюьшъш
                             VED_                  ,  -- Ved_        customer.ved%type        -- ┬шф ¤ъ. фх Єхы№эюёЄш
                             SED_                  ,  -- Sed_        customer.sed%type        -- ╘юЁьр їюч щёЄтютрэш 
                             'Imported from SKARB6',  -- Notes_      customer.notes%type      -- ╧Ёшьхўрэшх
                             null                  ,  -- Notesec_    customer.notesec%type    -- ╧Ёшьхўрэшх фы  ёыєцс√ схчюярёэюёЄш
                             CRISK_                ,  -- CRisk_      customer.crisk%type      -- ╩рЄхуюЁш  Ёшёър
                             null                  ,  -- Pincode_    customer.pincode%type    --
                             null                  ,  -- RnkP_       customer.rnkp%type       -- ╨ху. эюьхЁ їюыфшэур
                             null                  ,  -- Lim_        customer.lim%type        -- ╦шьшЄ ърёё√
                             null                  ,  -- NomPDV_     customer.nompdv%type     -- ╣ т ЁххёЄЁх яырЄ. ╧─┬
                             '9'                   ,  -- MB_         customer.mb%type         -- ╧Ёшэрфы. ьрыюьє сшчэхёє
                             null                  ,  -- BC_         customer.bc%type         -- ╧Ёшчэръ ═┼ъышхэЄр срэър
                             '/'||mfog_||'/'       ,  -- Tobo_       customer.tobo%type       -- ╩юф схчсрырэёютюую юЄфхыхэш 
                    /* 2 */  ISP_                     -- Isp_        customer.isp%type        -- ╠хэхфцхЁ ъышхэЄр (юЄтхЄ. шёяюыэшЄхы№)
                            );
          begin
            kl.setCustomerEN(RNK_ ,  -- customer.rnk%type
                             ISE_ ,  -- customer.ise%type
                             FS_  ,  -- customer.fs%type
                             VED_ ,  -- customer.ved%type
                             OE_  ,  -- customer.oe%type
                             K050_,  -- customer.k050%type
                             SED_);  -- customer.sed%type
          exception when others then
            bars_audit.error('create_customerS6 - err(1): ' ||sqlerrm||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            fl_ := 1;
            p_code := p_code+1;
            bc.set_context;
            goto custplus;
          end;

          fl_ := 0;
          p_open := p_open+1;
          l_ins_ := l_ins_+1;
        exception when others then
          bars_audit.error('create_customerS6 - err(0): ' ||sqlerrm||' - '  ||Chr(13)||Chr(10)||
                           'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                           'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                           'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                           'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                           'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                           'ADRES     = '||trim(OBLAST_ ||' '||
                                                RAYON_  ||' '||
                                                CITY_   ||' '||
                                                STREET_ ||' '||
                                                HOUSE_  ||' '||
                                                KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                           'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                           'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                           'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                           'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                           'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                           'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                           'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                           'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                           'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                           'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                           'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                           'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                           'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                           'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                           'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                           'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                           'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                           'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                           'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                           'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                         'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                           'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                           'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                           'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          fl_ := 1;
          p_code := p_code+1;
          bc.set_context;
        end;

      end if;

<<custplus>> null;

      if fl_=0 then
        if CUSTTYPE_=1 then
          begin
            kl.setBankAttr(RNK_,  -- Rnk_    NUMBER,
                           MFO_,  -- Mfo_    VARCHAR2,
                           BIC_,  -- Bic_    VARCHAR2,
                           null,  -- BicAlt_ VARCHAR2,
                           null,  -- Rating_ VARCHAR2,
                           null,  -- Kod_b_  NUMBER,
                           null,  -- Ruk_    VARCHAR2,
                           TEL_,  -- TelR_   VARCHAR2,
                           null,  -- Buh_    VARCHAR2,
                           null   -- TelB_   VARCHAR2
                          );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6 - err(2): ' ||sqlerrm||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=2 then
          begin
            kl.setCorpAttr(RNK_  ,  -- Rnk_    NUMBER,
                           NMK_  ,  -- Nmku_   VARCHAR2,
                           null  ,  -- Ruk_    VARCHAR2,
                           TEL_  ,  -- TelR_   VARCHAR2,
                           null  ,  -- Buh_    VARCHAR2,
                           null  ,  -- TelB_   VARCHAR2,
                           null  ,  -- TelFax_ varchar2,
                           EMAIL_,  -- EMail_  varchar2,
                           null     -- SealId_ number
                          );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6 - err(3): ' ||sqlerrm||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=3 then
--        ЁшїЄютър фрЄ√ Ёюцфхэш 
          BDAY_ := CorrectBdayOkpo(BDAY_,OKPO_);
          begin
            execute immediate 'select substr(trim("Series"),-2)         ,
                                      substr(trim("Number"),-6)         ,
                                      trim(substr(trim("WhatDist"),
                                           1,'||to_char(len_organ_)||')),
                                      "DateDist"
                               from   "S6_Certificates"
                               where  BIC='||mfog_||'                     and
                                      "IdClient"='||to_char(IDCLIENT_)||' and
                                      GROUP_C='   ||to_char(GROUP_C_) ||' and
                                      rownum<2'
                               into   Ser_   ,
                                      Numdoc_,
                                      Organ_ ,
                                      PDate_;
          exception when no_data_found then
            Ser_    := null;
            Numdoc_ := null;
            Organ_  := null;
            PDate_  := null;
          end;
          if Ser_ is null and Numdoc_ is null and Organ_ is not null then
            Orgao_ := Organ_;
            i_     := instr(Organ_,' ');
            If i_>2 then
              Ser_   := Substr(Substr(Organ_,1,i_-1),-2);
              Organ_ := Trim(Substr(Organ_,i_+1));
              i_     := instr(Organ_,' ');
              If i_=7 then
                Numdoc_ := Substr(Organ_,1,6);
                Organ_  := Trim(Substr(Organ_,i_+1));
              Else
                Ser_    := null;
                Organ_  := Orgao_;
              End If;
            End If;
          end if;
          begin
            kl.setPersonAttr(RNK_   ,  -- Rnk_    NUMBER,
                             SEX_   ,  -- Sex_    CHAR,
                             1      ,  -- Passp_  NUMBER,
                 /* null */  Ser_   ,  -- Ser_    VARCHAR2,
                 /* null */  Numdoc_,  -- Numdoc_ VARCHAR2,
                 /* null */  PDate_ ,  -- PDate_  DATE,
                 /* null */  Organ_ ,  -- Organ_  VARCHAR2,
                             BDAY_  ,  -- BDay_   DATE,
                             null   ,  -- BPlace_ VARCHAR2,
                             null   ,  -- TelD_   VARCHAR2,
                             TEL_      -- TelW_   VARCHAR2
                             );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6 - err(4): ' ||sqlerrm||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

--      kl.setCustomerRekv(RNK_,  -- Rnk_     INTEGER,
--                         null,  -- LimKass_ NUMBER,
--                         null,  -- AdrAlt_  VARCHAR2,
--                         null   -- NomDog_  VARCHAR2
--                        );

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_                                 ,  -- Rnk_ INTEGER,
                                  'RNKS6'                              ,  -- Tag_ VARCHAR2,
                                  to_char(IDCLIENT_)||to_char(GROUP_C_),  -- Val_ VARCHAR2,
                                  0                                       -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6 - err(5): ' ||sqlerrm||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGOBL',  -- Tag_ VARCHAR2,
                                  OBLAST_,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6 - err(6): ' ||sqlerrm||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGDST',  -- Tag_ VARCHAR2,
                                  RAYON_ ,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6 - err(10): '||sqlerrm||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGTWN',  -- Tag_ VARCHAR2,
                                  CITY_  ,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6 - err(11): '||sqlerrm||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_           ,     -- Rnk_ INTEGER,
                                  'FGADR'        ,     -- Tag_ VARCHAR2,
                                  Trim(STREET_||' '||  -- Val_ VARCHAR2,
                                       HOUSE_ ||' '||
                                       KVARTIRA_),
                                  0                    -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6 - err(12): '||sqlerrm||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

/*      kl.setCustomerTrustee(-- Id_            INTEGER,
                              -- Rnk_           INTEGER,
                              -- Fio_           VARCHAR2,
                              -- Pasport_       VARCHAR2,
                              -- BDate_         DATE,
                              -- EDate_         DATE,
                              -- Document_      VARCHAR2,
                              -- Notary_name_   varchar2,
                              -- Notary_region_ varchar2,
                              -- Trust_regnum_  varchar2,
                              -- Trust_regdat_  date,
                              -- Okpo_          varchar2,
                              -- Doc_type_      integer,
                              -- Doc_serial_    varchar2,
                              -- Doc_number_    varchar2,
                              -- Doc_date_      date,
                              -- Doc_issuer_    varchar2,
                              -- Birthday_      date,
                              -- Birthplace_    varchar2,
                              -- TypeId_        number,
                              -- DocTypeId_     number,
                              -- Position_      varchar2,
                              -- FirstName_     varchar2,
                              -- MiddleName_    varchar2,
                              -- LastName_      varchar2,
                              -- Sex_           char,
                              -- Tel_           varchar2,
                              -- SignPrivs_     number,
                              -- NameR_         varchar2,
                              -- SignId_        number
                             );
*/
        bc.set_context;
      end if;
      if fl_=0 then
         commit;
      else
         rollback;
      end if;

--    if l_ins_>0 and mod(l_ins_,10000)=0 then

--      ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ъышхэЄют (CUSTOMER ш ёт чрээ√х)

--      BEGIN
--        DBMS_JOB.SUBMIT (job       => Job_                    ,
--                         what      => 'migraSK.tableCU_stats;',
--                         next_date => sysdate                 ,
--                         interval  => null                    ,
--                         no_parse  => FALSE);
--      exception when others then
--        bars_audit.error('create_customerS6 - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--      END;

--    end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

<<nobal3>> null;

    bars_alerter(1);

  end create_customerS6;

--

  procedure create_customerUN (p_open out number, p_code out number)
  is
    type        cur is ref cursor;
    cur_        cur;
    sql_        varchar2(32000);
    rnk_        number;
    fl_         number;
    mfog_       varchar2(12);
    ispg_       varchar2(32);

    TAXF_       varchar2(12);
    DATEON_     date;
    DATEA_      date;
    DATET_      date;
    BDAY_       date;
    FS_         varchar2(3);
--  K050_       varchar2(3);
    SED_        char(4);
    NMK_        varchar2(70);
    IDCLIENT_   number;
    GROUP_C_    number;
    OKPO_       varchar2(12);
    COUNTRY_    number;
    CDST_       number;
    CREG_       number;
    PRINSIDER_  number;
    ISP_        number;
    NMKK_       varchar2(38);
    OE_         varchar2(5);
    CODCAGENT_  number;
    ISE_        varchar2(5);
    SEX_        number;
    TGR_        number;
    CUSTTYPE_   number;
    VED_        varchar2(5);
    ND_         varchar2(10);
    CRISK_      number;
    PHONE_      varchar2(20);
    POSTIND_    varchar2(10);
    OBLAST_     varchar2(40);
    RAYON_      varchar2(25);
    CITY_       varchar2(40);
    STREET_     varchar2(80);
    HOUSE_      varchar2(20);
    KVARTIRA_   varchar2(20);
--  TEL_        varchar2(20);
    SAB_        varchar2(6);
    STMT_       number;
    RGTAX_      varchar2(30);
    RGADM_      varchar2(30);
    MFO_        varchar2(12);
    ADM_        varchar2(70);
    PINCODE_    varchar2(10);
    LIM_        number;
--  MB_         varchar2(1);
    NOMPDV_     varchar2(9);

    NMKU_       varchar2(250);
    RUK_        varchar2(70);
    TELR_       varchar2(20);
    BUH_        varchar2(70);
    TELB_       varchar2(20);
    DOV_        varchar2(35);
    BDOV_       date;
    EDOV_       date;
    PASSP_      number(1);
    SER_        varchar2(10);
    NUMDOC_     varchar2(20);
    PDATE_      date;
    ORGAN_      varchar2(50);
    BPLACE_     varchar2(70);
    TELD_       varchar2(20);
    TELW_       varchar2(20);
    EMAIL_      varchar2(100);
    TEL_FAX_    varchar2(20);
    BIC_        varchar2(12);

    l_rnk       number;
    l_okpo      varchar2(14);
    l_branch    varchar2(30);
    l_ins_      number;

    adr_        customer.adr%type;
    len_adr_    number;
    len_raz_    number;

--  Ser_        person.ser%type;
--  Numdoc_     person.numdoc%type;
--  PDate_      person.pdate%type;
--  Organ_      person.organ%type;
--  Orgao_      person.organ%type;
--  i_          int;
    len_organ_  number;

    Job_        number;

  begin

    tokf;
    l_okpo := f_ourokpo;
    toroot;

    bars_alerter(0);

    mfog_ := f_ourmfo_g;

    l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    select data_length
    into   len_adr_
    from   user_tab_columns
    where  table_name='CUSTOMER' and
           column_name='ADR';

    select data_length
    into   len_organ_
    from   user_tab_columns
    where  table_name='PERSON' and
           column_name='ORGAN';

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=mfog_                  and
           logname like 'U'||migraSK.kodobl(mfog_)||'_%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=mfog_ and
             logname like 'U'||migraSK.kodobl(mfog_)||'_%';
    end if;

--  └э  for Offline

    begin
      for c in (select branch,
                       name
                from   branch
                where  branch like '/'||mfog_||'/%'
                order  by branch)
      loop
        begin
          bc.subst_branch(c.branch);
          begin
            select rnk
            into   l_rnk
            from   customer
            where  branch=c.branch and
                   notes='BRANCH<->RNK';
          exception when no_data_found then

--          select s_customer.nextval
--          into   l_rnk
--          from   dual;

            execute immediate 'select s_customer.nextval from dual' into l_rnk;

            insert
            into   customer (rnk      ,
                             tgr      ,
                             custtype ,
                             codcagent,
                             okpo     ,
                             country  ,
                             nmk      ,
                             nmkk     ,
                             notes    ,
                             ise      ,
                             fs       ,
                             oe       ,
                             ved      ,
                             sed      ,
                             k050     ,
                             branch)
                     values (l_rnk                    ,
                             1                        ,
                             1                        ,
                             1                        ,
                             l_okpo                   ,
                             804                      ,
                             trim(substr(c.name,1,70)),
                             trim(substr(c.name,1,38)),
                             'BRANCH<->RNK'           ,
                             '12201'                  ,
                             '31'                     ,
                             '96130'                  ,
                             '65120'                  ,
                             '80  '                   ,
                             '610'                    ,
                             c.branch);
          end;

          begin
            update branch_parameters
            set    val=to_char(l_rnk)
            where  tag='RNK' and
                   branch=c.branch;

            if SQL%ROWCOUNT=0 then
             insert
             into   branch_parameters (branch,
                                       tag   ,
                                       val)
                               values (c.branch,
                                       'RNK'   ,
                                       to_char(l_rnk));
            end if;
          end;
        exception when others then
          null;
        end;
        bc.set_context;
      end loop;
    end;

    commit;

    select count(*)
    into   p_open
    from   customer
    where  notes='BRANCH<->RNK';

    MFO_ := null; -- эр ¤Єющ їхЁэх чрфтрЄЁрштрыю ъышхэЄют

    sql_:='select distinct
                  c.TAXF                                                                        TAXF     ,  -- ╩юф яырЄэшър яюфрЄъiт
                  nvl(c.DATE_ON,add_months(trunc(sysdate,''YEAR''),-12))                        DATEON   ,  -- ─рЄр Ёх║ёЄЁрЎi┐
                  c.DATEA                                                                       DATEA    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т рфьiэiёЄЁрЎi┐
                  c.DATET                                                                       DATET    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т яюфрЄъютiщ iэёяхъЎi┐
                  c.BDAY                                                                        BDAY     ,  -- ─рЄр эрЁюфцхээ 
                  nvl(nullif(substr(''00''||trim(c.FS),-2),''99''),''ZZ'')                      FS       ,  -- ╘юЁьр тырёэюёЄi
--                substr(ltrim(c.SED),1,3)                                                      K050     ,
--                (select k051 from sp_k050 where k050=substr(ltrim(c.SED),1,3))                SED      ,
                  substr(nvl(ltrim(c.SED),''00'')||''    '',1,4)                                SED      ,  -- ╘юЁьр уюёяюфрЁ■трээ 
                  migraSK.valid_symbol(trim(substr(trim(nvl(c.NMK,c.NMKK)),1,70)))              NMK      ,  -- ╧ютэх эрщьхэєтрээ 
                  c.RNK                                                                         IDCLIENT ,  -- ╩юф
                  0                                                                             GROUP_C  ,  -- ╩юф+
                  migraSK.valid_symbol(c.OKPO)                                                  OKPO     ,  -- IфхэЄшЇiърЎiщэшщ ъюф
                  nvl(nullif(nvl(c.COUNTRY,0),0),804)                                           COUNTRY  ,  -- ╩Ёр┐эр
                  nullif(c.C_DST,0)                                                             CDST     ,  -- ╧юфрЄъютр iэёяхъЎi 
                  nullif(c.C_REG,0)                                                             CREG     ,  -- ╨хуiюэ
                  c.PRINSIDER                                                                   PRINSIDER,  -- IэёрщфхЁ
                  nvl(u.UBARS,'||ispg_||')                                                      ISP      ,  -- ╩юф ъюЁшёЄєтрўр
                  migraSK.valid_symbol(trim(substr(trim(nvl(c.NMKK,c.NMK)),1,38)))              NMKK     ,  -- ╩юЁюЄъх эрщьхэєтрээ 
                  substr(''00000''||trim(c.OE),-5)                                              OE       ,  -- ├рыєч№
                  decode(c.CUSTTYPE,0,decode(c.COUNTRY,804,5,6),1,decode(c.COUNTRY,804,3,4),0)  CODCAGENT,  -- ╒рЁръЄхЁшёЄшър
                  substr(''00000''||trim(c.ISE),-5)                                             ISE      ,  -- IэёЄшЄ.ёхъЄюЁ хъюэюьiъш
                  decode(c.SEX,''0'',''2'',''1'',''1'',''0'')                                   SEX      ,  -- ╤ЄрЄ№
                  nullif(c.TGR,0)                                                               TGR      ,  -- ╥шя фхЁцЁх║ёЄЁє
                  decode(c.CUSTTYPE,1,2,0,3,1)                                                  CUSTTYPE ,  -- ╥шя ъыi║эЄр
                  substr(''00000''||trim(c.VED),-5)                                             VED      ,  -- ┬шф хъюэюь.фi ы№эюёЄi
                  c.ND                                                                          ND       ,
                  decode(c.CRISK,1,1,2,2,3,3,4,4,5,5,null)                                      CRISK    ,
                  migraSK.valid_symbol(nvl(c.TELR,nvl(c.TELB,nvl(c.TELD,nvl(c.TELW,'''')))))    PHONE    ,  -- ╥хыхЇюэ             --varchar(20)
                  c.POSTIND                                                                     POSTIND  ,  -- ╧ю°Єютшщ iэфхъё     --varchar(10)
                  c.OBLAST                                                                      OBLAST   ,  -- ╬сырёЄ№             --varchar(40)
                  c.RAYON                                                                       RAYON    ,  -- ╨рщюэ               --varchar(25)
                  c.CITY                                                                        CITY     ,  -- ╠iёЄю, эрёхы.яєэъЄ  --varchar(40)
                  c.STREET                                                                      STREET   ,  -- ┬єышЎ               --varchar(40)
                  ''''                                                                          HOUSE    ,  -- ─iь                 --varchar(20)
                  ''''                                                                          KVARTIRA ,  -- ╩трЁЄшЁр            --varchar(20)
                  null                                                                          SAB      ,
                  0                                                                             STMT     ,
                  c.RGTAX                                                                       RGTAX    ,
                  c.RGADM                                                                       RGADM    ,
                  c.ADM                                                                         ADM      ,
                  null                                                                          PINCODE  ,
                  null                                                                          LIM      ,
--                c.MB                                                                          MB       ,
                  c.NOMPDV                                                                      NOMPDV   ,
                  c.NMKU                                                                        NMKU     ,
                  c.RUK                                                                         RUK      ,
                  c.TELR                                                                        TELR     ,
                  c.BUH                                                                         BUH      ,
                  c.TELB                                                                        TELB     ,
                  c.DOV                                                                         DOV      ,
                  c.BDOV                                                                        BDOV     ,
                  c.EDOV                                                                        EDOV     ,
                  decode(nvl(c.PASSP,0),0,1,2,1,6,1,7,1,5,2,8,3,-1)                             PASSP    ,
                  c.SER                                                                         SER      ,
                  c.NUMDOC                                                                      NUMDOC   ,
                  c.PDATE                                                                       PDATE    ,
                  c.ORGAN                                                                       ORGAN    ,
                  c.BPLACE                                                                      BPLACE   ,
                  c.TELD                                                                        TELD     ,
                  c.TELW                                                                        TELW     ,
                  c.EMAIL                                                                       EMAIL    ,  -- ┼ыхъЄЁюээр рфЁхёр   --varchar(10)
                  c.TEL_FAX                                                                     TEL_FAX  ,
                  c.adr                                                                         ADR      ,
                  null                                                                          BIC
           from   S6_UN_CLIOUT      c,
                  USERS_SKARB6_BARS u
           where  c.ISP=u.USKARB6(+) and
                  c.DATE_OFF is null';

    open cur_ for sql_;

    loop
      fetch cur_ into TAXF_     ,
                      DATEON_   ,
                      DATEA_    ,
                      DATET_    ,
                      BDAY_     ,
                      FS_       ,
--                    K050_     ,
                      SED_      ,
                      NMK_      ,
                      IDCLIENT_ ,
                      GROUP_C_  ,
                      OKPO_     ,
                      COUNTRY_  ,
                      CDST_     ,
                      CREG_     ,
                      PRINSIDER_,
                      ISP_      ,
                      NMKK_     ,
                      OE_       ,
                      CODCAGENT_,
                      ISE_      ,
                      SEX_      ,
                      TGR_      ,
                      CUSTTYPE_ ,
                      VED_      ,
                      ND_       ,
                      CRISK_    ,
                      PHONE_    ,
                      POSTIND_  ,
                      OBLAST_   ,
                      RAYON_    ,
                      CITY_     ,
                      STREET_   ,
                      HOUSE_    ,
                      KVARTIRA_ ,
                      SAB_      ,
                      STMT_     ,
                      RGTAX_    ,
                      RGADM_    ,
                      ADM_      ,
                      PINCODE_  ,
                      LIM_      ,
--                    MB_       ,
                      NOMPDV_   ,
                      NMKU_     ,
                      RUK_      ,
                      TELR_     ,
                      BUH_      ,
                      TELB_     ,
                      DOV_      ,
                      BDOV_     ,
                      EDOV_     ,
                      PASSP_    ,
                      SER_      ,
                      NUMDOC_   ,
                      PDATE_    ,
                      ORGAN_    ,
                      BPLACE_   ,
                      TELD_     ,
                      TELW_     ,
                      EMAIL_    ,
                      TEL_FAX_  ,
                      adr_      ,
                      BIC_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        select rnk
        into   rnk_
        from   customerw
        where  tag='RNKUN'                                 and
               value=to_char(IDCLIENT_)||to_char(GROUP_C_) and
               rownum<2;
      exception when no_data_found then
        rnk_ := null;
      end;

      if rnk_ is not null then
        fl_ := 1;
        p_open := p_open+1;
      else
        fl_ := 0;
      end if;

      if fl_=0 then

        bc.subst_mfo(mfog_);

        RNK_ := null;

        begin

          select length(trim(OBLAST_||' '||
                             RAYON_ ||' '||
                             CITY_  ||' '||
                             STREET_||' '||
                             HOUSE_ ||' '||
                             KVARTIRA_))-len_adr_
          into   len_raz_
          from   dual;

          if len_raz_>0 and length(CITY_)>=len_raz_ then
            CITY_ := trim(substr(CITY_,1,length(CITY_)-len_raz_));
          else
            if len_raz_>0 and length(STREET_)>=len_raz_ then
              STREET_ := trim(substr(STREET_,1,length(STREET_)-len_raz_));
            end if;
          end if;

          if adr_ is null then
            adr_ := trim(
     /*FGOBL*/      OBLAST_||' '||
     /*FGDST*/      RAYON_ ||' '||
     /*FGTWN*/      CITY_  ||' '||
     /*FGADR(+3)*/  STREET_||' '||
                    HOUSE_ ||' '||
                    KVARTIRA_);
          end if;

          kl.setCustomerAttr(RNK_                   ,  -- Rnk_ IN OUT customer.rnk%type        -- Customer number
                             CUSTTYPE_              ,  -- Custtype_   customer.custtype%type   -- ╥шя ъышхэЄр: 1-срэъ, 2-■Ё.ышЎю, 3-Їшч.ышЎю
                             ND_                    ,  -- Nd_         customer.nd%type         -- ╣ фюуютюЁр
                             NMK_                   ,  -- Nmk_        customer.nmk%type        -- ═ршьхэютрэшх ъышхэЄр
                             null                   ,  -- Nmkv_       customer.nmkv%type       -- ═ршьхэютрэшх ъышхэЄр ьхцфєэрЁюфэюх
                             NMKK_                  ,  -- Nmkk_       customer.nmkk%type       -- ═ршьхэютрэшх ъышхэЄр ъЁрЄъюх
                             adr_                   ,  -- Adr_        customer.adr%type        -- └фЁхё ъышхэЄр
                             CODCAGENT_             ,  -- Codcagent_  customer.codcagent%type  -- ╒рЁръЄхЁшёЄшър
                             COUNTRY_               ,  -- Country_    customer.country%type    -- ╤ЄЁрэр
                             PRINSIDER_             ,  -- Prinsider_  customer.prinsider%type  -- ╧Ёшчэръ шэёрщфхЁр
                             TGR_                   ,  -- Tgr_        customer.tgr%type        -- ╥шя уюё.ЁххёЄЁр
                             OKPO_                  ,  -- Okpo_       customer.okpo%type       -- ╬╩╧╬
                             STMT_                  ,  -- Stmt_       customer.stmt%type       -- ╘юЁьрЄ т√яшёъш
                             SAB_                   ,  -- Sab_        customer.sab%type        -- ▌ы.ъюф
                             DATEON_                ,  -- DateOn_     customer.date_on%type    -- ─рЄр ЁхушёЄЁрЎшш
                             TAXF_                  ,  -- Taxf_       customer.taxf%type       -- ═рыюуют√щ ъюф
                             CREG_                  ,  -- CReg_       customer.c_reg%type      -- ╩юф юсы.═╚
                             CDST_                  ,  -- CDst_       customer.c_dst%type      -- ╩юф Ёрщюэ.═╚
                             ADM_                   ,  -- Adm_        customer.adm%type        -- └фьшэ.юЁурэ
                             RGTAX_                 ,  -- RgTax_      customer.rgtax%type      -- ╨ху эюьхЁ т ═╚
                             RGADM_                 ,  -- RgAdm_      customer.rgadm%type      -- ╨ху эюьхЁ т └фь.
                             DATET_                 ,  -- DateT_      customer.datet%type      -- ─рЄр Ёху т ═╚
                             DATEA_                 ,  -- DateA_      customer.datea%type      -- ─рЄр Ёху. т рфьшэшёЄЁрЎшш
                             ISE_                   ,  -- Ise_        customer.ise%type        -- ╚эёЄ. ёхъ. ¤ъюэюьшъш
                             FS_                    ,  -- Fs_         customer.fs%type         -- ╘юЁьр ёюсёЄтхээюёЄш
                             OE_                    ,  -- Oe_         customer.oe%type         -- ╬ЄЁрёы№ ¤ъюэюьшъш
                             VED_                   ,  -- Ved_        customer.ved%type        -- ┬шф ¤ъ. фх Єхы№эюёЄш
                             SED_                   ,  -- Sed_        customer.sed%type        -- ╘юЁьр їюч щёЄтютрэш 
                             'Imported from Unicorn',  -- Notes_      customer.notes%type      -- ╧Ёшьхўрэшх
                             null                   ,  -- Notesec_    customer.notesec%type    -- ╧Ёшьхўрэшх фы  ёыєцс√ схчюярёэюёЄш
                             CRISK_ /* null */      ,  -- CRisk_      customer.crisk%type      -- ╩рЄхуюЁш  Ёшёър
                             PINCODE_               ,  -- Pincode_    customer.pincode%type    --
                             null                   ,  -- RnkP_       customer.rnkp%type       -- ╨ху. эюьхЁ їюыфшэур
                             LIM_                   ,  -- Lim_        customer.lim%type        -- ╦шьшЄ ърёё√
                             NOMPDV_                ,  -- NomPDV_     customer.nompdv%type     -- ╣ т ЁххёЄЁх яырЄ. ╧─┬
                             '9'                    ,  -- MB_         customer.mb%type         -- ╧Ёшэрфы. ьрыюьє сшчэхёє
                             null                   ,  -- BC_         customer.bc%type         -- ╧Ёшчэръ ═┼ъышхэЄр срэър
                             '/'||mfog_||'/'        ,  -- Tobo_       customer.tobo%type       -- ╩юф схчсрырэёютюую юЄфхыхэш 
                    /* 2 */  ISP_                      -- Isp_        customer.isp%type        -- ╠хэхфцхЁ ъышхэЄр (юЄтхЄ. шёяюыэшЄхы№)
                            );
          fl_ := 0;
          p_open := p_open+1;
          l_ins_ := l_ins_+1;
        exception when others then
          bars_audit.error('create_customerUN - err(1): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                           'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                           'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                           'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                           'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                           'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                           'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                           'ADRES     = '||trim(OBLAST_ ||' '||
                                                RAYON_  ||' '||
                                                CITY_   ||' '||
                                                STREET_ ||' '||
                                                HOUSE_  ||' '||
                                                KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                           'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                           'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                           'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                           'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                           'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                           'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                           'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                           'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                           'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                           'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                           'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                           'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                           'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                           'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                           'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                           'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                           'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                           'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                           'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                           'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                         'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                           'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                           'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                           'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          fl_ := 1;
          p_code := p_code+1;
          bc.set_context;
        end;

      end if;

      if fl_=0 then
        if CUSTTYPE_=1 then
          begin
            kl.setBankAttr(RNK_ ,  -- Rnk_    NUMBER,
                           MFO_ ,  -- Mfo_    VARCHAR2,
                           BIC_ ,  -- Bic_    VARCHAR2,
                           null ,  -- BicAlt_ VARCHAR2,
                           null ,  -- Rating_ VARCHAR2,
                           null ,  -- Kod_b_  NUMBER,
                           RUK_ ,  -- Ruk_    VARCHAR2,
                           TELR_,  -- TelR_   VARCHAR2,
                           BUH_ ,  -- Buh_    VARCHAR2,
                           TELB_   -- TelB_   VARCHAR2
                          );
            if NMKU_ is not null then
              begin
                update customerw
                set    value=NMKU_
                where  tag='FIRMA' and
                       rnk=RNK_;
                if sql%rowcount=0 then
                  begin
                    insert
                    into   customerw (rnk,
                                      tag,
                                      value)
                              values (RNK_   ,
                                      'FIRMA',
                                      NMKU_);
                  exception when OTHERS then
                    null;
                  end;
                end if;
              end;
            end if;
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUN - err(2): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=2 then
          begin
            kl.setCorpAttr(RNK_    ,  -- Rnk_    NUMBER,
                           NMKU_   ,  -- Nmku_   VARCHAR2,
                           RUK_    ,  -- Ruk_    VARCHAR2,
                           TELR_   ,  -- TelR_   VARCHAR2,
                           BUH_    ,  -- Buh_    VARCHAR2,
                           TELB_   ,  -- TelB_   VARCHAR2,
                           TEL_FAX_,  -- TelFax_ varchar2,
                           EMAIL_  ,  -- EMail_  varchar2,
                           null       -- SealId_ number
                          );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUN - err(3): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=3 then
--        ЁшїЄютър фрЄ√ Ёюцфхэш 
          BDAY_ := CorrectBdayOkpo(BDAY_,OKPO_);
          begin
            kl.setPersonAttr(RNK_   ,  -- Rnk_    NUMBER,
                             SEX_   ,  -- Sex_    CHAR,
                             1      ,  -- Passp_  NUMBER,
                 /* null */  SER_   ,  -- Ser_    VARCHAR2,
                 /* null */  NUMDOC_,  -- Numdoc_ VARCHAR2,
                 /* null */  PDATE_ ,  -- PDate_  DATE,
                 /* null */  ORGAN_ ,  -- Organ_  VARCHAR2,
                             BDAY_  ,  -- BDay_   DATE,
                             BPLACE_,  -- BPlace_ VARCHAR2,
                             TELD_  ,  -- TelD_   VARCHAR2,
                             TELW_     -- TelW_   VARCHAR2
                             );
            if NMKU_ is not null then
              begin
                update customerw
                set    value=NMKU_
                where  tag='FIRMA' and
                       rnk=RNK_;
                if sql%rowcount=0 then
                  begin
                    insert
                    into   customerw (rnk,
                                      tag,
                                      value)
                              values (RNK_   ,
                                      'FIRMA',
                                      NMKU_);
                  exception when OTHERS then
                    null;
                  end;
                end if;
              end;
            end if;
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUN - err(4): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

--      kl.setCustomerRekv(RNK_,  -- Rnk_     INTEGER,
--                         null,  -- LimKass_ NUMBER,
--                         null,  -- AdrAlt_  VARCHAR2,
--                         null   -- NomDog_  VARCHAR2
--                        );

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_                                 ,  -- Rnk_ INTEGER,
                                  'RNKUN'                              ,  -- Tag_ VARCHAR2,
                                  to_char(IDCLIENT_)||to_char(GROUP_C_),  -- Val_ VARCHAR2,
                                  0                                       -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUN - err(5): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGOBL',  -- Tag_ VARCHAR2,
                                  OBLAST_,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUN - err(6): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGDST',  -- Tag_ VARCHAR2,
                                  RAYON_ ,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUN - err(10): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGTWN',  -- Tag_ VARCHAR2,
                                  CITY_  ,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUN - err(11): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_           ,     -- Rnk_ INTEGER,
                                  'FGADR'        ,     -- Tag_ VARCHAR2,
                                  trim(STREET_||' '||  -- Val_ VARCHAR2,
                                       HOUSE_ ||' '||
                                       KVARTIRA_),
                                  0                    -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUN - err(12): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        bc.set_context;
      end if;
      if fl_=0 then
         commit;
      else
         rollback;
      end if;

--    if l_ins_>0 and mod(l_ins_,10000)=0 then

--      ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ъышхэЄют (CUSTOMER ш ёт чрээ√х)

--      BEGIN
--        DBMS_JOB.SUBMIT (job       => Job_                    ,
--                         what      => 'migraSK.tableCU_stats;',
--                         next_date => sysdate                 ,
--                         interval  => null                    ,
--                         no_parse  => FALSE);
--      exception when others then
--        bars_audit.error('create_customerUN - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--      END;

--    end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(1);

  end create_customerUN;

--

  procedure create_userS6 (p_open out number, p_code out number, p_bal number)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    mfo_      varchar2(12);
    id_       staff$base.id%type;
    idugo_    staff$base.id%type;
    on_       int;

    ISP_      number;
    TABN_     varchar2(10);
    FIO_      varchar2(40);
    logname_  varchar2(30);
    branch_   varchar2(30);
  begin

    bars_alerter(0);

    execute immediate 'select C_MFO from S6_SETUP_BANK where rownum=1' into mfo_;

    p_open := 0;
    p_code := migraSK.prov_bal('create_userS6',p_bal);

    if p_code>0 then
      goto nobal2;
    end if;

    sql_:='select u.ISP                                                                     ISP    ,
                  trim(substr(trim(u.IKEY),-6))                                             TABN   ,
                  nvl(migraSK.valid_symbol(u.FIO),''яюы№чютрЄхы№ эх шфхэЄшЇшЎшЁютрэ'')      FIO    ,
                  ''U'||migraSK.kodobl(mfo_)||'_''||nvl(m.USERSUFFIX,''S''||to_char(u.ISP)) logname,
                  nvl((select branch
                       from   branch_parameters
                       where  tag=''DEPARTS6''                                        and
                              (val=to_char(nvl(u.DEPART,0))                        or
                               instr(val,to_char(nvl(u.DEPART,0))||'','')=1        or
                               instr(val,'',''||to_char(nvl(u.DEPART,0))||'','')>1 or
                               (instr(val,'',''||to_char(nvl(u.DEPART,0)))=
                                length(val)-length(to_char(nvl(u.DEPART,0))) and
                                instr(val,'',''||to_char(nvl(u.DEPART,0)))>0))        and
                              rownum<2),''/''||'''||mfo_||'''||''/'')                       branch
           from   S6_USERS   u,
                  S6_USERMAP m
           where  m.ISPS6(+)=u.ISP';

    open cur_ for sql_;

    loop

      fetch cur_ into ISP_    ,
                      TABN_   ,
                      FIO_    ,
                      logname_,
                      branch_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      if f_ourmfo_g='304665' then -- фы  ╦єурэёър
        if ISP_ not in (1,2,13,28,100) then
          id_ := ISP_;
        else
          id_ := case when ISP_=1  then
                   141
                      when ISP_=2  then
                   142
                      when ISP_=13 then
                   143
                      when ISP_=28 then
                   144
                 else
                   145
                 end;
        end if;
      else
        select min(num)
        into   id_
        from   conductor
        where  num not in (select id from staff$base) and
               num<(select max(id) from staff$base);
      end if;

--    loop
--      select s_staff.nextval into id_ from dual;
--      begin
--        select 1 into on_ from staff$base where id=id_;
--      exception when no_data_found then
--        exit;
--      end;
--    end loop;

      begin

        begin
          select id
          into   idugo_
          from   staff$base
          where  logname=logname_;
        exception when no_data_found then
          idugo_ := null;
        end;

        if idugo_ is null then

          begin
            execute immediate 'drop user '||logname_;
          exception when OTHERS then
            bars_audit.warning('create_userS6 - warn(1): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--          p_code := p_code+1;
          end;

          bc.subst_branch(branch_);

          begin
            BARS_USERADM.create_user(
                                     FIO_             ,  -- p_usrfio      in  staff$base.fio%type
                                     TABN_            ,  -- p_usrtabn     in  staff$base.tabn%type
                                     0                ,  -- p_usrtype     in  staff$base.clsid%type
                                     1                ,  -- p_usraccown   in  staff$base.type%type
                                     branch_          ,  -- p_usrbranch   in  varchar2
                                     0                ,  -- p_usrusearc   in  staff$base.usearc%type
                                     0                ,  -- p_usrusegtw   in  staff$base.usegtw%type
                                     'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
                                     logname_         ,  -- p_reclogname  in  staff$base.logname%type
                                     'qwerty'         ,  -- p_recpasswd   in  varchar2
                                     null             ,  -- p_recappauth  in  varchar2
                                     null             ,  -- p_recprof     in  varchar2
                                     'BARS_CONNECT'   ,  -- p_recdefrole  in  varchar2
                                     null             ,  -- p_recrsgrp    in  varchar2
                                     id_                 -- p_usrid       in  staff$base.id%type default null
                                    );
          exception when OTHERS then
            bars_audit.error('create_userS6 - err(1): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;

        else

          begin
            execute immediate 'create user '||logname_||' identified by qwerty';
          exception when OTHERS then
            bars_audit.warning('create_userS6 - warn(2): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--          p_code := p_code+1;
          end;

          bc.subst_branch(branch_);

          begin
            BARS_USERADM.alter_user(idugo_           ,
                                    FIO_             ,  -- p_usrfio      in  staff$base.fio%type
                                    TABN_            ,  -- p_usrtabn     in  staff$base.tabn%type
                                    0                ,  -- p_usrtype     in  staff$base.clsid%type
                                    1                ,  -- p_usraccown   in  staff$base.type%type
                                    branch_          ,  -- p_usrbranch   in  varchar2
                                    0                ,  -- p_usrusearc   in  staff$base.usearc%type
                                    0                ,  -- p_usrusegtw   in  staff$base.usegtw%type
                                    'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
                                  --logname_         ,  -- p_reclogname  in  staff$base.logname%type
                                    'qwerty'         ,  -- p_recpasswd   in  varchar2
                                    null             ,  -- p_recappauth  in  varchar2
                                    null             ,  -- p_recprof     in  varchar2
                                    'BARS_CONNECT'   ,  -- p_recdefrole  in  varchar2
                                    null                -- p_recrsgrp    in  varchar2
                                   );
          exception when OTHERS then
            bars_audit.error('create_userS6 - err(2): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;

        end if;

        bc.set_context;

        delete
        from   USERS_SKARB6_BARS
        where  KF=mfo_ and
               USKARB6=ISP_;
        insert
        into   USERS_SKARB6_BARS (KF     ,
                                  USKARB6,
                                  UBARS)
                          values (mfo_,
                                  ISP_,
                                  nvl(idugo_,id_));
        commit;

        p_open := p_open+1;

      exception when OTHERS then

        bars_audit.error('create_userS6 - err(3): ('||logname_||') branch='||branch_||', '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;

      end;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

<<nobal2>> null;

    bars_alerter(1);

  end create_userS6;

--

  procedure create_userUN (p_open out number, p_code out number)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    mfo_      varchar2(12);
    id_       staff$base.id%type;
    idugo_    staff$base.id%type;
    on_       int;

    ISP_      number;
    TABN_     varchar2(10);
    FIO_      varchar2(40);
    logname_  varchar2(30);
    branch_   varchar2(30);
  begin

    bars_alerter(0);

    mfo_ := f_ourmfo_g;

    p_open := 0;
    p_code := 0;

    sql_:='select u.ISP                                                                     ISP    ,
                  trim(substr(trim(u.IKEY),-6))                                             TABN   ,
                  nvl(migraSK.valid_symbol(u.FIO),''яюы№чютрЄхы№ эх шфхэЄшЇшЎшЁютрэ'')      FIO    ,
                  ''U'||migraSK.kodobl(mfo_)||'_''||nvl(m.USERSUFFIX,''S''||to_char(u.ISP)) logname,
                  nvl(u.BRANCH,''/''||'''||mfo_||'''||''/'')                                branch
           from   S6_UN_USERS u,
                  S6_USERMAP  m
           where  m.ISPS6(+)=u.ISP';

    open cur_ for sql_;

    loop

      fetch cur_ into ISP_    ,
                      TABN_   ,
                      FIO_    ,
                      logname_,
                      branch_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      select min(num)
      into   id_
      from   conductor
      where  num not in (select id from staff$base) and
             num<(select max(id) from staff$base);

      begin

        begin
          select id
          into   idugo_
          from   staff$base
          where  logname=logname_;
        exception when no_data_found then
          idugo_ := null;
        end;

        if idugo_ is null then

          begin
            execute immediate 'drop user '||logname_;
          exception when OTHERS then
            bars_audit.warning('create_userUN - warn(1): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          end;

          bc.subst_branch(branch_);

          begin
            BARS_USERADM.create_user(FIO_             ,  -- p_usrfio      in  staff$base.fio%type
                                     TABN_            ,  -- p_usrtabn     in  staff$base.tabn%type
                                     0                ,  -- p_usrtype     in  staff$base.clsid%type
                                     1                ,  -- p_usraccown   in  staff$base.type%type
                                     branch_          ,  -- p_usrbranch   in  varchar2
                                     0                ,  -- p_usrusearc   in  staff$base.usearc%type
                                     0                ,  -- p_usrusegtw   in  staff$base.usegtw%type
                                     'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
                                     logname_         ,  -- p_reclogname  in  staff$base.logname%type
                                     'qwerty'         ,  -- p_recpasswd   in  varchar2
                                     null             ,  -- p_recappauth  in  varchar2
                                     null             ,  -- p_recprof     in  varchar2
                                     'BARS_CONNECT'   ,  -- p_recdefrole  in  varchar2
                                     null             ,  -- p_recrsgrp    in  varchar2
                                     id_                 -- p_usrid       in  staff$base.id%type default null
                                    );
          exception when OTHERS then
            bars_audit.error('create_userUN - err(1): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;

        else

          begin
            execute immediate 'create user '||logname_||' identified by qwerty';
          exception when OTHERS then
            bars_audit.warning('create_userUN - warn(2): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--          p_code := p_code+1;
          end;

          bc.subst_branch(branch_);

          begin

            BARS_USERADM.alter_user(idugo_           ,
                                    FIO_             ,  -- p_usrfio      in  staff$base.fio%type
                                    TABN_            ,  -- p_usrtabn     in  staff$base.tabn%type
                                    0                ,  -- p_usrtype     in  staff$base.clsid%type
                                    1                ,  -- p_usraccown   in  staff$base.type%type
                                    branch_          ,  -- p_usrbranch   in  varchar2
                                    0                ,  -- p_usrusearc   in  staff$base.usearc%type
                                    0                ,  -- p_usrusegtw   in  staff$base.usegtw%type
                                    'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
                                  --logname_         ,  -- p_reclogname  in  staff$base.logname%type
                                    'qwerty'         ,  -- p_recpasswd   in  varchar2
                                    null             ,  -- p_recappauth  in  varchar2
                                    null             ,  -- p_recprof     in  varchar2
                                    'BARS_CONNECT'   ,  -- p_recdefrole  in  varchar2
                                    null                -- p_recrsgrp    in  varchar2
                                   );
          exception when OTHERS then
            bars_audit.error('create_userUN - err(2): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;

        end if;

        bc.set_context;

        delete
        from   USERS_SKARB6_BARS
        where  KF=mfo_ and
               USKARB6=ISP_;
        insert
        into   USERS_SKARB6_BARS (KF     ,
                                  USKARB6,
                                  UBARS)
                          values (mfo_,
                                  ISP_,
                                  nvl(idugo_,id_));
        commit;

        p_open := p_open+1;

      exception when OTHERS then

        bars_audit.error('create_userUN - err(3): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;

      end;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(1);

  end create_userUN;

--

  procedure drop_userS6 (p_open out number, p_code out number, p_bal number)
  is
    mfo_  varchar2(12);
    id_   staff$base.id%type;
  begin

    bars_alerter(0);

    execute immediate 'select C_MFO from S6_SETUP_BANK where rownum=1' into mfo_;

    p_open := 0;
    p_code := 0;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_userS6 - err(0): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    for k in (SELECT id
              from   staff$base
              where  bc.extract_mfo(branch)=mfo_ and
--                   tabn like mfo_||'%'
                     logname like 'U'||migraSK.kodobl(mfo_)||'_%')
    loop
      begin
        delete
        from   USERS_SKARB6_BARS
        where  kf=mfo_ and
               ubars=k.id;
        BARS_USERADM.drop_user(k.id);
        delete
        from   staff$base
        where  id=k.id;
        p_open := p_open+SQL%rowcount;
        commit;
      exception when OTHERS then
        bars_audit.error('drop_userS6 - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_userS6 - err(2): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    bars_alerter(1);

  end drop_userS6;

--

  procedure drop_userUN (p_open out number, p_code out number)
  is
    mfo_  varchar2(12);
    id_   staff$base.id%type;
  begin

    bars_alerter(0);

    mfo_ := f_ourmfo_g;

    p_open := 0;
    p_code := 0;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_userUN - err(0): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    for k in (SELECT id
              from   staff$base
              where  bc.extract_mfo(branch)=mfo_ and
--                   tabn like mfo_||'%'
                     logname like 'U'||migraSK.kodobl(mfo_)||'_%')
    loop
      begin
        delete
        from   USERS_SKARB6_BARS
        where  kf=mfo_ and
               ubars=k.id;
        BARS_USERADM.drop_user(k.id);
        delete
        from   staff$base
        where  id=k.id;
        p_open := p_open+SQL%rowcount;
        commit;
      exception when OTHERS then
        bars_audit.error('drop_userUN - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_userUN - err(2): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    bars_alerter(1);

  end drop_userUN;

--

  procedure drop_accountS6 (p_open out number, p_code out number, p_bal number)
  is
    mfo_     varchar2(12);
    accmax_  number;
    Job_     number;
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    execute immediate 'select C_MFO from S6_SETUP_BANK where rownum=1' into mfo_;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_accountS6 - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  delete from TABLEs

    begin
      bc.subst_mfo(mfo_);
      delete from accounts_update           where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from saldoa                    where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from specparam                 where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from specparam_int             where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from specparam_update          where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from rko_lst                   where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_deposit               where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(8): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_deposit               where acc_d      in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_deposit_clos          where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_deposit_clos          where acc_d      in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_techaccounts          where dpt_acc    in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_techaccounts          where tech_acc   in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(13): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from DPT_VIDD                  where ACC7       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(14): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL                  where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(15): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL                  where ACC2       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(16): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL_UPDATE           where ACC2       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(17): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL_UPDATE           where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(18): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from DPU_VIDD                  where ACC7       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(19): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_RATN                  where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_RATN_ARC              where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_ACCN                  where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_ACCN                  where ACRA       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_ACCN                  where ACRB       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from KLPACC                    where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(25): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from ND_ACC                    where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from NLK_REF                   where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from OPLDOK                    where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(28): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from PAWN_ACC                  where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(29): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from PEREKR_J                  where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(30): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from PEREKR_J                  where ACCS       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(31): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from RKO_LST                   where ACC2       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(32): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from RKO_LST                   where ACCD       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from RKO_LST                   where ACC1       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SALDOA_TURN_QUEUE         where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SALDOB                    where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_950                    where NOSTRO_ACC in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(37): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_950D                   where CONTRA_ACC in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(38): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_ACC_SPARAM             where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(39): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_JOURNAL                where ACCD       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_JOURNAL                where ACCK       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(41): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_STMT_INFO              where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(42): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from TMP_INTARC                where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(43): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from TMP_INTPAY                where ACCA       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(44): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from TMP_INTPAY                where ACC        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(45): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from TTS                       where S6201      in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(46): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from TTS                       where S7201      in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(47): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC3801    in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(48): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC_RRS    in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(49): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC_RRR    in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(50): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC_RRD    in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(51): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC6204    in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(52): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC3800    in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(53): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acce                      where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(54): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acci                      where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(55): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from accountsw                 where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(56): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acc_over                  where acc_8000   in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(57): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acc_over                  where acc_9129   in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(58): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acc_sob                   where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(59): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acc_tarif                 where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(60): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from bank_acc                  where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(61): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from cc_accp                   where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(62): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from cc_accp                   where accs       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(63): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from cc_add                    where accs       in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(64): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from bpk_acc                   where acc_pk     in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(65): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from BARSAQ.AQ_SUBSCRIBERS_ACC where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag=''RNKS6'') and bc.extract_mfo(branch)='''||mfo_||''')';
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(66): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from accounts_all              where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(67): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(mfo_);
--    delete from ACCM_QUEUE_BALANCES       where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6 - err(68): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(mfo_);
--    delete from ACCM_SNAP_BALANCES        where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6 - err(69): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(mfo_);
--    delete from ACCM_AGG_MONBALS          where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6 - err(70): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(mfo_);
--    delete from ACCM_LIST_CORRDOCS        where acc        in (select acc from accounts where ostc=0 and rnk in (select rnk from customerw where tag='RNKS6') and bc.extract_mfo(branch)=mfo_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6 - err(71): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;

    commit;  -- ьюцхЄ яюьюцхЄ

    begin
      bc.subst_mfo(mfo_);
      delete from accounts                  where rnk        in (select rnk from customerw where tag='RNKS6') and ostc=0 and bc.extract_mfo(branch)=mfo_;
      p_open := p_open+SQL%rowcount;
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6 - err(72): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_accountS6 - err(73): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    commit;

--  recreate accounts SEQUENCE

    select nvl(max(acc),0)+1 into accmax_ from accounts;

    execute immediate 'DROP SEQUENCE S_ACCOUNTS';
    execute immediate 'CREATE SEQUENCE S_ACCOUNTS
                       START WITH '||accmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_ACCOUNTS TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_ACCOUNTS

    sys.utl_recomp.recomp_serial('BARS');

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ёўхЄют (ACCOUNTS ш ёт чрээ√х)

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tableAC_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('drop_accountS6 - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

    bars_alerter(1);

  end drop_accountS6;

--

  procedure drop_accountUN (p_open out number, p_code out number)
  is
    mfo_     varchar2(12);
    accmax_  number;
    Job_     number;
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    mfo_ := f_ourmfo_g;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_accountUN - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  delete from TABLEs

    begin
      bc.subst_mfo(mfo_);
      delete from accounts_update           where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from saldoa                    where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from specparam                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from specparam_int             where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from specparam_update          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from rko_lst                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_deposit               where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(8): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_deposit               where acc_d      in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_deposit_clos          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_deposit_clos          where acc_d      in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_techaccounts          where dpt_acc    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_techaccounts          where tech_acc   in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(13): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from DPT_VIDD                  where ACC7       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(14): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(15): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL                  where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(16): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL_UPDATE           where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(17): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL_UPDATE           where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(18): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from DPU_VIDD                  where ACC7       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(19): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_RATN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_RATN_ARC              where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_ACCN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_ACCN                  where ACRA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_ACCN                  where ACRB       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from KLPACC                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(25): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from ND_ACC                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from NLK_REF                   where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from OPLDOK                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(28): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from PAWN_ACC                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(29): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from PEREKR_J                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(30): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from PEREKR_J                  where ACCS       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(31): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from RKO_LST                   where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(32): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from RKO_LST                   where ACCD       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from RKO_LST                   where ACC1       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SALDOA_TURN_QUEUE         where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SALDOB                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_950                    where NOSTRO_ACC in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(37): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_950D                   where CONTRA_ACC in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(38): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_ACC_SPARAM             where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(39): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_JOURNAL                where ACCD       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_JOURNAL                where ACCK       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(41): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_STMT_INFO              where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(42): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from TMP_INTARC                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(43): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from TMP_INTPAY                where ACCA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(44): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from TMP_INTPAY                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(45): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from TTS                       where S6201      in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(46): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from TTS                       where S7201      in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(47): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC3801    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(48): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC_RRS    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(49): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC_RRR    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(50): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC_RRD    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(51): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC6204    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(52): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC3800    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(53): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acce                      where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(54): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acci                      where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(55): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from accountsw                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(56): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acc_over                  where acc_8000   in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(57): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acc_over                  where acc_9129   in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(58): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acc_sob                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(59): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acc_tarif                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(60): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from bank_acc                  where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(61): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from cc_accp                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(62): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from cc_accp                   where accs       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(63): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from cc_add                    where accs       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(64): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from bpk_acc                   where acc_pk     in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(65): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from BARSAQ.AQ_SUBSCRIBERS_ACC where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag=''RNKUN'') and ostc=0 and bc.extract_mfo(branch)='''||mfo_||''')';
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(66): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from accounts_all              where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(67): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

    commit;  -- ьюцхЄ яюьюцхЄ

    begin
      bc.subst_mfo(mfo_);
      delete from accounts                  where rnk        in (select rnk from customerw where tag='RNKUN') and ostc=0 and bc.extract_mfo(branch)=mfo_;
      p_open := p_open+SQL%rowcount;
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUN - err(72): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_accountUN - err(73): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    commit;

--  recreate accounts SEQUENCE

    select nvl(max(acc),0)+1 into accmax_ from accounts;

    execute immediate 'DROP SEQUENCE S_ACCOUNTS';
    execute immediate 'CREATE SEQUENCE S_ACCOUNTS
                       START WITH '||accmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_ACCOUNTS TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_ACCOUNTS

    sys.utl_recomp.recomp_serial('BARS');

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ёўхЄют (ACCOUNTS ш ёт чрээ√х)

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tableAC_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('drop_accountUN - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

    bars_alerter(1);

  end drop_accountUN;

--

  procedure drop_branchs (p_open out number, p_code out number, p_bal number)
  is
    mfo_   varchar2(12);
  begin

    bars_alerter(0);

    execute immediate 'select C_MFO from S6_SETUP_BANK where rownum=1' into mfo_;
    p_open := 0;

    for k in (select branch
              from   branch
              where  bc.extract_mfo(branch)=mfo_)
    loop
      BEGIN
        delete
        from   branch
        where  branch=k.branch;
        p_open := p_open+SQL%rowcount;
      EXCEPTION WHEN OTHERS THEN
        null;
      END;
    end loop;
    p_code := 0;
    commit;

    bars_alerter(1);

  end drop_branchs;

--

  procedure open_accountS6 (p_open out number, p_code out number, p_bal number)
  is
    fl_          number;
    type         cur is ref cursor;
    cur_         cur;
    sql_         varchar2(32000);
    accR_        number;
    ACRA_        number;
    ACRB_        number;
    ACRdb_       number;
    ACRkr_       number;
    ndz_         number;
    mfog_        varchar2(12);
    id_          number;
    acc_3800_    number;
    acc_3801_    number;
    acc_6204_    number;
    ostc_3800_   number;
    ostc_3801_   number;
    ispg_        varchar(32);
    kvv_         accounts.kv%type;
    NLS_3800_    accounts.nls%type;
    NLS_3801_    accounts.nls%type;

    rnk_         customer.rnk%type;
    DAPP_        date;
    daos_        date;
    dazs_        date;
    kv_          accounts.kv%type;
    isp_         number;
    nbs_         char(4);
    tip_         char(3);
    vid_         number;
    ostc_        number;
    ostq_        number;
    lim_         number;
    nms_         varchar2(70);
    nls_         varchar2(64);
    nlsalt_      accounts.nlsalt%type;
    branch_      accounts.branch%type;
    OB22_        SPECPARAM_INT.ob22%type;
    OB88_        SPECPARAM_INT.ob88%type;
    P080_        SPECPARAM_INT.P080%type;
    MFO_         SPECPARAM_INT.MFO%type;
    R020_FA_     SPECPARAM_INT.R020_FA%type;
    R011_        SPECPARAM.R011%type;
    R013_        SPECPARAM.R013%type;
    S240_        SPECPARAM.S240%type;
    S080_        SPECPARAM.S080%type;
    S180_        SPECPARAM.S180%type;
    S190_        SPECPARAM.S190%type;
    S181_        SPECPARAM.S181%type;
    S260_        SPECPARAM.S260%type;
    S200_        SPECPARAM.S200%type;
    S120_        SPECPARAM.S120%type;
    S031_        SPECPARAM.S031%type;
    S182_        SPECPARAM.S182%type;
--  S130_        SPECPARAM.S130%type;
    S090_        date;
    NKD_         SPECPARAM.NKD%type;
    IR_          int_ratn.ir%type;
    bdat_        int_ratn.bdat%type;
    pap_         ps.pap%type;
    serv_db_s_   accounts.nls%type;
    serv_kr_s_   accounts.nls%type;
    serv_i_va_   accounts.kv%type;
    NLSs6_       varchar2(64);
    I_VAs6_      number;
    PercenRate_  number;
    flS6_        number;
    open_        number;
    s7_          number;
    s8_          number;
    s9_          number;
    l_ins_       number;
    len_S080_    varchar2(4);
    len_S182_    varchar2(4);
    mrnk_        varchar2(32);

    pos_         number;
    Job_         number;

  begin

--  bars_audit.info('open_accountS6 - p_bal='||p_bal);

    bars_alerter(0);

    gl.frcvr := 1;

    execute immediate 'select C_MFO from S6_SETUP_BANK where rownum=1' into mfog_;

    l_ins_ := 0;
    p_open := 0;
    p_code := migraSK.prov_bal('open_accountS6',p_bal);

--  bars_audit.info('open_accountS6 - p_code='||p_code);

    if p_code>0 then
      goto nobal4;
    end if;

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=mfog_                  and
           logname like 'U'||migraSK.kodobl(mfog_)||'_%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=mfog_ and
             logname like 'U'||migraSK.kodobl(mfog_)||'_%';
    end if;

    select to_char(min(rnk))
    into   mrnk_
    from   customer
    where  date_off is null;

    select to_char(data_length)
    into   len_S080_
    from   user_tab_columns
    where  table_name='SPECPARAM' and
           column_name='S080';

    select to_char(data_length)
    into   len_S182_
    from   user_tab_columns
    where  table_name='SPECPARAM' and
           column_name='S182';

--  bars_audit.info('open_accountS6 - ispg_='||ispg_);

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tai_accounts_tax disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbu_accounts_tax disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbu_accounts_1004 disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbu_accounts_dazs disable';
    exception when OTHERS then
      null;
    end;

    sql_:='select distinct  /* to ACCOUNTS */
                  nvl(cw.rnk,'||mrnk_||')                                                                                                                rnk      ,
                  s.DAPP                                                                                                                                 DAPP     ,
                  s.DCL                                                                                                                                  dazs     ,
                  trunc(s.DOP)                                                                                                                           daos     ,
                  s.I_VA                                                                                                                                 kv       ,
                  nvl(u.UBARS,'||ispg_||')                                                                                                               isp      ,
                  substr(s.NLS,1,4)                                                                                                                      nbs      ,
                  decode(s.ps,98,decode(substr(s.NLS,1,4),''9809'',2,''9910'',2,1),1)                                                                    pos      ,
                  decode(s.I_VA,980,s.ISH*100,s.ISH_V*100)                                                                                               ostc     ,
                  s.ISH*100                                                                                                                              ostq     ,
                  s.LIMIT*100                                                                                                                            lim      ,
                  (case when substr(s.NLS,1,2)=''25''                       then
                     11
                        when substr(s.NLS,1,4) in (''2610'',
                                                   ''2612'',
                                                   ''2615'',
                                                   ''2630'',
                                                   ''2635'',
                                                   ''2651'',
                                                   ''2652'',
                                                   ''1510'',
                                                   ''1511'',
                                                   ''1512'',
                                                   ''1515'',
                                                   ''1610'',
                                                   ''1611'',
                                                   ''1612'',
                                                   ''1615'')                then
                     4
                        when substr(s.NLS,1,4) in (''1500'',
                                                   ''1600'')                then
                     10
                        when substr(s.NLS,1,2) in (''20'',
                                                   ''21'',
                                                   ''22'',
                                                   ''27'')                  then
                     6
                        when substr(s.NLS,1,4)=''9802''                     then
                     5
                        when substr(s.NLS,1,4) in (''4310'',
                                                   ''4430'',
                                                   ''4432'',
                                                   ''4438'',
                                                   ''4439'',
                                                   ''4530'',
                                                   ''4532'',
                                                   ''4538'',
                                                   ''4539'')                then
                     8
                        when substr(s.NLS,1,4) in (select nbs from dpa_nbs) then
                     3
                   else
                     0
                   end)                                                                                                                                  vid      ,
                  migraSK.valid_symbol(
                  trim(substr(nvl(s.NK,''эх юяЁхфхыхэю''),1,70)))                                                                                        nms      ,
                  trim(substr(s.NLS,1,4)||s.KSS||substr(s.NLS,5))                                                                                        nls      ,
                  trim(substr(s.NLS_ALT,1,14))                                                                                                           nlsalt   ,
                  nvl((select branch
                       from   branch_parameters
                       where  tag=''DEPARTS6''                                        and
                              (val=to_char(nvl(s.DEPART,0))                        or
                               instr(val,to_char(nvl(s.DEPART,0))||'','')=1        or
                               instr(val,'',''||to_char(nvl(s.DEPART,0))||'','')>1 or
                               (instr(val,'',''||to_char(nvl(s.DEPART,0)))=
                                length(val)-length(to_char(nvl(s.DEPART,0))) and
                                instr(val,'',''||to_char(nvl(s.DEPART,0)))>0))        and
                              rownum<2),''/''||'''||mfog_||'''||''/000000/'')                                                                            branch   ,
                  /* to SPECPARAM_INT */
                  substr(''00''||trim(p.OB22),-2)                                                                                                        OB22     ,
                  p.OB88                                                                                                                                 OB88     ,
                  p.P080                                                                                                                                 P080     ,
                  to_char(p.MFO)                                                                                                                         MFO      ,
                  p.R020_FA                                                                                                                              R020_FA  ,
                  /* to SPECPARAM */
                  trim(p.R011)                                                                                                                           R011     ,
                  trim(p.R013)                                                                                                                           R013     ,
                  decode(upper(trim(p.S240)),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(trim(p.S240)))    S240     ,
                  nullif(substr(to_char(co.C_RISK),1,'||len_S080_||'),''0'')                                                                             S080     ,
                  decode(upper(trim(co.TERM)),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(trim(co.TERM)))  S180     ,
                  trim(co.PROLONG)                                                                                                                       S190     ,
                  to_char(t.S181)                                                                                                                        S181     ,
                  t.S260                                                                                                                                 S260     ,
                  to_char(co.SOURCE)                                                                                                                     S200     ,
                  to_char(co.EMIS)                                                                                                                       S120     ,
                  to_char(co.V_MAIN)                                                                                                                     S031     ,
                  substr(to_char(co.T_KR),1,'||len_S182_||')                                                                                             S182     ,
                  co.D_DIST                                                                                                                              S090     ,
                  migraSK.valid_symbol(
                  rtrim(substr(nvl(co."IdContract",''NULL''),1,40)))                                                                                     NKD      ,
                  /* to INT_RATN */
                  ps.pap                                                                                                                                 pap      ,
                  trim(s.NLS)                                                                                                                            NLSs6    ,
                  s.I_VA                                                                                                                                 I_VAs6
           from   customerw         cw,
                  S6_SALDO          s ,
                  "S6_Clients"      c ,
                  "S6_Contract"     co,
                  "S6_Target"       t ,
                  S6_P__SALDO       p ,
                  USERS_SKARB6_BARS u ,
                  ps
           where  cw.tag(+)=''RNKS6''                                                                          and
                  to_number(cw.value(+))=c."IdClient"*10+c.GROUP_C                                             and
                  c."IdClient"=co."IdClient"                                                                   and
                  c.GROUP_C=co.GROUP_C                                                                         and
                  s.BIC='||mfog_||'                                                                            and
                  c.BIC=co.BIC                                                                                 and
                  s.BIC=co.BIC                                                                                 and
                  upper(rtrim(nvl(co."IdContract",''NULL'')))= upper(rtrim(nvl(s."IdContract",''NULL'')))      and
                  (s.DCL is null                                                          or
                   (s.DCL is not null and s.DCL>=add_months(trunc(sysdate,''YEAR''),-12)) or
                   (s.DCL is not null and substr(s.NLS,1,4) in (select NBS
                                                                from   DPA_NBS)))                              and
                  s.ISP_OWNER=u.USKARB6(+)                                                                     and
                  co."Target"=t."Id"(+)                                                                        and
                  trim(s.NLS)=trim(p.NLS(+))                                                                   and
                  s.I_VA=p.I_VA(+)                                                                             and
                  mod(nvl(nullif(s.GROUP_U,'||mfog_||'),0),10)=mod(nvl(nullif(p.GROUP_U(+),'||mfog_||'),0),10) and
                  ((mod(nvl(nullif(s.GROUP_U,'||mfog_||'),0),10)=0 and substr(s.NLS,1,1)<>''8'') or
                   (mod(nvl(nullif(s.GROUP_U,'||mfog_||'),0),10) in (1,2) and substr(s.NLS,1,1)=''8''))        and
                  substr(s.NLS,1,4)=ps.nbs(+)
           order  by substr(s.NLS,1,4) desc';
    open cur_ for sql_;

    LOOP

      fetch cur_ into rnk_      ,
                      DAPP_     ,
                      dazs_     ,
                      daos_     ,
                      kv_       ,
                      isp_      ,
                      nbs_      ,
                      pos_      ,
                      ostc_     ,
                      ostq_     ,
                      lim_      ,
                      vid_      ,
                      nms_      ,
                      nls_      ,
                      nlsalt_   ,
                      branch_   ,
                      OB22_     ,
                      OB88_     ,
                      P080_     ,
                      MFO_      ,
                      R020_FA_  ,
                      R011_     ,
                      R013_     ,
                      S240_     ,
                      S080_     ,
                      S180_     ,
                      S190_     ,
                      S181_     ,
                      S260_     ,
                      S200_     ,
                      S120_     ,
                      S031_     ,
                      S182_     ,
                    --S130_     ,
                      S090_     ,
                      NKD_      ,
                    --IR_       ,
                    --bdat_     ,
                      pap_      ,
                    --serv_db_s_,
                    --serv_kr_s_,
                    --serv_i_va_,
                      NLSs6_    ,
                      I_VAs6_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      if length(nls_)>14 then
        bars_audit.error('open_accountS6 - err(0): фышэр ёў╕Єр сюы№°х 14, '||Chr(13)||Chr(10)||
                         'branch = '||branch_||', '                        ||Chr(13)||Chr(10)||
                         'NLS = '   ||nls_   ||', '                        ||Chr(13)||Chr(10)||
                         'KV = '    ||kv_);
        p_code := p_code+1;
        fl_ := 1;
        goto kakaxer;
      end if;

--    bars_audit.info('open_accountS6 - nls='||nls_||'('||kv_||') Fetch Ok');

      begin
        execute immediate '
                select bdat        ,
                       "PercenRate",
                       serv_db_s   ,
                       serv_kr_s   ,
                       serv_i_va
                from   (select nvl(DA,bankdate)             bdat     ,
                               "PercenRate"                          ,
                               trim(substr(serv_db_s,1,14)) serv_db_s,
                               trim(substr(serv_kr_s,1,14)) serv_kr_s,
                               serv_i_va                    serv_i_va
                        from   "S6_ChargePr"
                        where  trim(NLS)='''||NLSs6_||''' and
                               I_VA='||I_VAs6_||'
                        order  by 1 desc, 2 desc)
                where   rownum<2'
--              where   bdat=(select max(DA)                   !!¤Єю  !!
--                            from   "S6_ChargePr"             !!Єю   !!
--                            where  NLS='''||NLSs6_||''' and  !!цх   !!
--                                   I_VA='||I_VAs6_||')'      !!ёрьюх!!
                into    bdat_      ,
                        PercenRate_,
                        serv_db_s_ ,
                        serv_kr_s_ ,
                        serv_i_va_;

        execute immediate '
                select p."Percen"
                from   S6_HIST_PR p
                where  p."PercenRate"='||PercenRate_||' and
                       p.DA=(select max(DA)
                             from   S6_HIST_PR
                             where  "PercenRate"=p."PercenRate")'
                into   IR_;
      exception when no_data_found then
        bdat_       := null;
      --PercenRate_ := null;
        serv_db_s_  := null;
        serv_kr_s_  := null;
        serv_i_va_  := null;
        IR_         := null;
      end;

      fl_ := 0;

      bc.subst_branch(branch_);
/*
      begin
        select acc
        into   accR_
        from   accounts
--      where  nls=vkrzn(substr(mfog_,1,5),nls_) and kv=kv_;
        where  nls=nls_ and kv=kv_;
      exception when no_data_found then
        accR_ := null;
                when OTHERS then
        if dazs_ is null then
          bars_audit.error('open_accountS6 - err(7): ' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                            'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                            'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                            'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          p_code := p_code+1;
        else
          bars_audit.warning('open_accountS6 - warn(7): ' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                               'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                               'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                               'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        end if;
        fl_ := 1;
        goto kakaxer;
      end;
*/
--    if accR_ is null then
      ndz_ := null;
      --1. OP_REG_ex
      begin

        tip_ := 'ODB';

        if    substr(nls_,1,3)='100' and substr(nls_,1,4)<>'1007' then
          if kv_=980 then
            tip_ := 'KAS';
          else
            tip_ := 'KAV';
          end if;
        elsif substr(nls_,1,3) in ('604','603','602') and kv_=980 then
            tip_ := 'SD ';
        elsif substr(nls_,1,4) in ('2625','2605','2655') then
            tip_ := 'PK1';
        end if;

        OP_REG_exfl(99     ,  -- mod_       INTEGER,   -- Opening mode :
                    null   ,  -- p1_        INTEGER,   -- 1st Par      :
                    0      ,  -- p2_        INTEGER,   -- 2nd Par      :
                    null   ,  -- p3_        INTEGER,   -- 3rd Par (Grp):
                    ndz_   ,  -- p4_ IN OUT INTEGER,   -- 4th Par      :
                    rnk_   ,  -- rnk_       INTEGER,   -- Customer number
                    nls_   ,  -- p_nls_     VARCHAR2,  -- Account  number
                    kv_    ,  -- kv_        SMALLINT,  -- Currency code
                    nms_   ,  -- nms_       VARCHAR2,  -- Account name
                    tip_   ,  -- tip_       CHAR,      -- Account type
           /* 2 */  isp_   ,  -- isp_       SMALLINT,
                    accR_  ,  -- accR_  OUT INTEGER,
                    '1'    ,  -- nbsnull_   VARCHAR2 DEFAULT '1',
                    null   ,  -- pap_       NUMBER   DEFAULT NULL,
        /* null */  vid_   ,  -- vid_       NUMBER   DEFAULT NULL,
        /* null */  pos_   ,  -- pos_       NUMBER   DEFAULT NULL,
                    null   ,  -- sec_       NUMBER   DEFAULT NULL,
                    null   ,  -- seci_      NUMBER   DEFAULT NULL,
                    null   ,  -- seco_      NUMBER   DEFAULT NULL,
                    0      ,  -- blkd_      NUMBER   DEFAULT NULL,
                    0      ,  -- blkk_      NUMBER   DEFAULT NULL,
        /* lim_ */  null   ,  -- lim_       NUMBER   DEFAULT NULL,
                    null   ,  -- ostx_      VARCHAR2 DEFAULT NULL,
                    nlsalt_,  -- nlsalt_    VARCHAR2 DEFAULT NULL,
                    branch_,  -- tobo_      VARCHAR2 DEFAULT NULL,
                    null   ,  -- accc_      NUMBER   DEFAULT NULL,
                    0);       -- fl_        NUMBER   DEFAULT NULL,
        l_ins_ := l_ins_+1;
      exception when others then
        if dazs_ is null then
          bars_audit.error('open_accountS6 - err(1): ' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                            'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                            'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                            'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          p_code := p_code+1;
          fl_ := 1;
        else
--        bars_audit.warning('open_accountS6 - warn(1): '||sqlerrm||', '||Chr(13)||Chr(10)||
--                                            'branch = '||branch_||', '||Chr(13)||Chr(10)||
--                                            'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
--                                            'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          if substr(sqlerrm,1,20)='ORA-20097: CAC-00005' then
            fl_ := 0;
          else
            fl_ := 1;
          end if;
        end if;
      end;
--    end if;

      if fl_=0 then
        if accR_ is not null then
          select count(*)
          into   flS6_
          from   accountsw
          where  acc=accR_ and
                 tag='IMPS6';
          if flS6_=0 then
            update accounts
            set    dapp=dapp_,
                   dazs=dazs_,
                   daos=daos_,
                   ostc=ostc_,
                   ostb=ostc_,
                   ostq=ostq_,
                   pos=pos_  ,
                   rnk=rnk_
            where  acc=accR_;
            begin
              update accounts
              set    nbs=nbs_
              where  acc=accR_;
            EXCEPTION WHEN OTHERS THEN
              bars_audit.error('open_accountS6 - err(7): ' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                                'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                                'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
--            fl_ := 1;
            end;

            begin
               insert
               into   saldoa (acc ,
                              fdat,
                              pdat,
                              ostf,
                              dos ,
                              kos)
                      values (accR_   ,
                              gl.bdate,
                              dapp_   ,
                              ostc_   ,
                              0       ,
                              0);
            EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
               update saldoa
               set    pdat=dapp_,
                      ostf=ostc_,
                      dos=0     ,
                      kos=0
               where  acc=accR_ and
                      fdat=gl.bdate;
            end;

            begin
              insert
              into   accountsw (acc,
                                tag,
                                value)
                        values (accR_  ,
                                'IMPS6',
                                'Imported from SKARB6');
            exception when others then
              bars_audit.error('open_accountS6 - err(2): ' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                                'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;

            --2. INSERT or UPDATE SPECPARAM_INT

            if fl_=0 then
              begin
                insert
                into SPECPARAM_INT (acc    ,
                                    p080   ,
                                    ob22   ,
                                    mfo    ,
                                    r020_fa,
                                    ob88)
                            values (accR_   ,
                                    P080_   ,
                                    OB22_   ,
                                    MFO_    ,
                                    R020_FA_,
                                    OB88_);
              EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                begin
                  update SPECPARAM_INT
                  set    p080=P080_      ,
                         ob22=OB22_      ,
                         mfo=MFO_        ,
                         r020_fa=R020_FA_,
                         ob88=OB88_
                  where  acc=accR_;
                EXCEPTION WHEN OTHERS THEN
                  bars_audit.error('open_accountS6 - err(3u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                    'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                    'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                    'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                  p_code := p_code+1;
                  fl_ := 1;
                end;
                        WHEN OTHERS THEN
                bars_audit.error('open_accountS6 - err(3): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                p_code := p_code+1;
                fl_ := 1;
              end;
            end if;

            --3. INSERT or UPDATE SPECPARAM

            if fl_ = 0 then
              begin
                insert
                into   SPECPARAM (acc ,
                                  R011,
                                  R013,
                                  S240,
                                  S080,
                                  S180,
                                  S190,
                                  S181,
                                  S260,
                                  S200,
                                  S120,
                                  S031,
                                  S182,
--                                S130,
--                                S090,
                                  NKD)
                          values (accR_,
                                  R011_,
                                  R013_,
                                  S240_,
                                  S080_,
                                  S180_,
                                  S190_,
                                  S181_,
                                  S260_,
                                  S200_,
                                  S120_,
                                  S031_,
                                  S182_,
--                                S130_,
--                                S090_,
                                  NKD_);
              EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                begin
                  update SPECPARAM
                  set    R011=R011_,
                         R013=R013_,
                         S240=S240_,
                         S080=S080_,
                         S180=S180_,
                         S190=S190_,
                         S181=S181_,
                         S260=S260_,
                         S200=S200_,
                         S120=S120_,
                         S031=S031_,
                         S182=S182_,
--                       S130=S130_,
--                       S090=S090_,
                         NKD=NKD_
                  where  acc=accR_;
                EXCEPTION WHEN OTHERS THEN
                  bars_audit.error('open_accountS6 - err(4u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                    'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                    'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                    'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                  p_code := p_code+1;
                  fl_ := 1;
                end;
                        WHEN OTHERS THEN
                bars_audit.error('open_accountS6 - err(4): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                p_code := p_code+1;
                fl_ := 1;
              end;
            end if;

            if substr(nls_,1,1) in ('2','3','9') then

--            ╧ЁюЎхэЄэ√х ърЁЄюўъш

              if fl_=0 then
                begin
                  select acc
                  into   ACRdb_
                  from   accounts
                  where  nls=serv_db_s_ and kv=serv_i_va_;
                exception when no_data_found then
                  ACRdb_ := null;
                end;
                begin
                  select acc
                  into   ACRkr_
                  from   accounts
                  where  nls=serv_kr_s_ and kv=serv_i_va_;
                exception when no_data_found then
                  ACRkr_ := null;
                end;

                if ACRdb_ is not null and ACRkr_ is not null then
                  if substr(serv_db_s_,1,4)>substr(serv_kr_s_,1,4) then
                    if substr(serv_kr_s_,1,4)='3800' then
                      ACRA_ := null;
                    else
                      ACRA_ := ACRkr_;
                    end if;
                    if substr(serv_db_s_,1,4)='3800' then
                      ACRB_ := null;
                    else
                      ACRB_ := ACRdb_;
                    end if;
                  else
                    if substr(serv_db_s_,1,4)='3800' then
                      ACRA_ := null;
                    else
                      ACRA_ := ACRdb_;
                    end if;
                    if substr(serv_kr_s_,1,4)='3800' then
                      ACRB_ := null;
                    else
                      ACRB_ := ACRkr_;
                    end if;
                  end if;
                else
                  if ACRdb_ is null and ACRkr_ is not null then
                    if substr(serv_kr_s_,1,1)>'2' then
                      if substr(serv_kr_s_,1,4)='3800' then
                        ACRB_ := null;
                      else
                        ACRB_ := ACRkr_;
                      end if;
                      ACRA_ := null;
                    else
                      if substr(serv_kr_s_,1,4)='3800' then
                        ACRA_ := null;
                      else
                        ACRA_ := ACRkr_;
                      end if;
                      ACRB_ := null;
                    end if;
                  end if;
                  if ACRdb_ is not null and ACRkr_ is null then
                    if substr(serv_db_s_,1,1)>'2' then
                      if substr(serv_db_s_,1,1)='3800' then
                        ACRB_ := null;
                      else
                        ACRB_ := ACRdb_;
                      end if;
                      ACRA_ := null;
                    else
                      if substr(serv_db_s_,1,1)='3800' then
                        ACRA_ := null;
                      else
                        ACRA_ := ACRdb_;
                      end if;
                      ACRB_ := null;
                    end if;
                  end if;
                  if ACRdb_ is null and ACRkr_ is null then
                    ACRA_ := null;
                    ACRB_ := null;
                  end if;
                end if;

                if IR_ is not null /* and ACRA_ is not null */ then

                  if pap_=1 then
                     id_ := 0;
                  else
                     id_ := 1;
                  end if;

--                4. INSERT or UPDATE INT_ACCN

                  begin
                    insert
                    into   INT_ACCN (ACC    ,  -- accR_
                                     ID     ,  -- id_
                                     METR   ,  -- 0
--                                   BASEM  ,
                                     BASEY  ,  -- 0
                                     FREQ   ,  -- 1
--                                   STP_DAT,
                                     ACR_DAT,  -- bankdate
--                                   APL_DAT,  -- bankdate-1
--                                   TT     ,
                                     ACRA   ,  -- ???
                                     ACRB
--                                   S      ,
--                                   TTB    ,
--                                   KVB    ,
--                                   NLSB   ,
--                                   MFOB   ,
--                                   NAMB   ,
--                                   NAZN   ,
--                                   IO     ,
--                                   BRANCH    -- branch_
                                    )
                             values (accR_     ,
                                     id_       ,
                                     0         ,
--                                   null      ,
                                     0         ,
                                     1         ,
--                                   null      ,
                                     bankdate  ,
--                                   bankdate-1,
--                                   null      ,
                                     ACRA_     ,  -- ACRA ???
                                     ACRB_
--                                   null      ,
--                                   null      ,
--                                   null      ,
--                                   null      ,
--                                   null      ,
--                                   null      ,
--                                   null      ,
--                                   null      ,
--                                   branch_
                                    );
                  EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                    update INT_ACCN
                    set    METR   =0         ,
--                         BASEM  =null      ,
                           BASEY  =0         ,
                           FREQ   =1         ,
--                         STP_DAT=null      ,
                           ACR_DAT=bankdate  ,
--                         APL_DAT=bankdate-1,
--                         TT     =null      ,
                           ACRA   =ACRA_     ,  -- ???
                           ACRB   =ACRB_
--                         S      =null      ,
--                         TTB    =null      ,
--                         KVB    =null      ,
--                         NLSB   =null      ,
--                         MFOB   =null      ,
--                         NAMB   =null      ,
--                         NAZN   =null      ,
--                         IO     =null      ,
--                         BRANCH =branch_
                    where  acc=accR_ and
                           id=id_;
                            WHEN OTHERS THEN
                    bars_audit.error('open_accountS6 - err(5): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                     'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                     'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                     'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                    p_code := p_code+1;
                    fl_ := 1;
                  end;

--                5. INSERT or UPDATE INT_RATN

                  if fl_=0 then
                    begin
                      insert
                      into   INT_RATN (acc   ,
                                       id    ,
                                       BDAT  ,
                                       IR    ,
                                       BR    ,
                                       OP    ,
                                       IDU --,
--                                     BRANCH
                                      )
                               values (accR_,
                                       id_  ,
                                       bdat_,
                                       IR_  ,
                                       null ,
                                       null ,
                                       1  --,
--                                     branch_
                                      );
                    EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                      update INT_RATN
                      set    IR=IR_ ,
                             BR=null,
                             OP=null,
                             IDU=1 --,
--                           BRANCH=branch_
                      where  acc=accR_ and
                             id=id_    and
                             BDAT=bdat_;
                              WHEN OTHERS THEN
                      bars_audit.error('open_accountS6 - err(6):' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                                       'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                       'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                       'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                      p_code := p_code+1;
                      fl_ := 1;
                    end;
                  end if;
                end if;
              end if;
            end if;
          end if;
        end if;
      end if;

<<kakaxer>> null;

      bc.set_context;

      if fl_=0 then
        commit;
        p_open := p_open+1;
      else
        rollback;
      end if;

      open_ := p_open;

      if l_ins_>0 and mod(l_ins_,10000)=0 then

--      ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ёўхЄют (ACCOUNTS ш ёт чрээ√х)

        BEGIN
          DBMS_JOB.SUBMIT (job       => Job_                    ,
                           what      => 'migraSK.tableAC_stats;',
                           next_date => sysdate                 ,
                           interval  => null                    ,
                           no_parse  => FALSE);
        exception when others then
          bars_audit.error('open_accountS6 - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        END;

      end if;

      p_open := open_;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    begin
      execute immediate 'alter trigger tbu_accounts_dazs enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbu_accounts_1004 enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbu_accounts_tax enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tai_accounts_tax enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 enable';
    exception when OTHERS then
      null;
    end;

    gl.frcvr := 0;

--  уЁштэр яю тёхь сЁрэўрь т cur_rates$base

    migraSK.grn11tocurrates;

    tokf;
    begin
--    Єхї.яхЁхюЎхэър фы  яхўрЄш яхЁтюэрўры№эюую срырэёр эр фрЄє ьшуЁрЎшш
--    p_rev_ob(gl.BD);
      migraSK.pereocenka(p_code,'open_accountS6 - err',gl.BD);
    exception when OTHERS then
      bars_audit.error('open_accountS6 - err(Z): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    end;
    toroot;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM enable';
    exception when OTHERS then
      null;
    end;

--  яхЁхъы■ўхэшх эр яхўрЄ№ срырэёр яю SALDOA+SALDOB(2)
    UPDATE zapros
    set    FORM_PROC='P_BAL(USER_ID,:sFdat1)'
    where  kodz=15;
    commit;

<<nobal4>> null;

    bars_alerter(1);

  end open_accountS6;

--

  procedure open_accountUN (p_open out number, p_code out number)
  is
    fl_        number;
    type       cur is ref cursor;
    cur_       cur;
    sql_       varchar2(32000);
    accR_      number;
    ndz_       number;
    mfog_      varchar2(12);
    id_        number;
    ispg_      varchar(32);
    kvv_       accounts.kv%type;

    rnk_       customer.rnk%type;
    DAPP_      date;
    daos_      date;
    dazs_      date;
    kv_        accounts.kv%type;
    isp_       number;
    nbs_       char(4);
    tip_       char(3);
    vid_       number;
    ostc_      number;
    ostq_      number;
    lim_       number;
    OSTX_      number;
    nms_       varchar2(70);
    nls_       varchar2(64);
    nlsalt_    accounts.nlsalt%type;
    branch_    accounts.branch%type;
    OB22_      SPECPARAM_INT.ob22%type;
    OB88_      SPECPARAM_INT.ob88%type;
    P080_      SPECPARAM_INT.P080%type;
    MFO_       SPECPARAM_INT.MFO%type;
    R020_FA_   SPECPARAM_INT.R020_FA%type;
    R011_      SPECPARAM.R011%type;
    R013_      SPECPARAM.R013%type;
    S240_      SPECPARAM.S240%type;
    S080_      SPECPARAM.S080%type;
    S180_      SPECPARAM.S180%type;
    S190_      SPECPARAM.S190%type;
    S181_      SPECPARAM.S181%type;
--  S260_      SPECPARAM.S260%type;
    S200_      SPECPARAM.S200%type;
    S230_      SPECPARAM.S230%type;
    S120_      SPECPARAM.S120%type;
    S031_      SPECPARAM.S031%type;
    S182_      SPECPARAM.S182%type;
    R014_      SPECPARAM.R014%type;
    K072_      SPECPARAM.K072%type;
    S130_      SPECPARAM.S130%type;
    S250_      SPECPARAM.S250%type;
    S090_      date;
    NKD_       SPECPARAM.NKD%type;
    IR_        int_ratn.ir%type;
    BDAT_      int_ratn.bdat%type;
    PAP_       ps.pap%type;
    flUN_      number;
    open_      number;
    s7_        number;
    s8_        number;
    s9_        number;
    l_ins_     number;
    mrnk_      varchar2(32);

    NLSNPROC_  accounts.nls%type;
    NLSDR_     accounts.nls%type;
    acra_      accounts.acc%type;
    acrb_      accounts.acc%type;
    DADN_      date;
    DADK_      date;

    pos_       number;
    Job_       number;

  begin

    bars_alerter(0);

    gl.frcvr := 1;

    mfog_ := f_ourmfo_g;

    l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=mfog_                  and
           logname like 'U'||migraSK.kodobl(mfog_)||'_%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=mfog_ and
             logname like 'U'||migraSK.kodobl(mfog_)||'_%';
    end if;

    select to_char(min(rnk))
    into   mrnk_
    from   customer
    where  date_off is null;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tai_accounts_tax disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbu_accounts_tax disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbu_accounts_1004 disable';
    exception when OTHERS then
      null;
    end;

    sql_:='select distinct  /* to ACCOUNTS */
                  nvl(cw.rnk,'||mrnk_||')                                                                                                  RNK     ,
                  s.DAPP                                                                                                                   DAPP    ,
                  s.DAZS                                                                                                                   DAZS    ,
                  s.DAOS                                                                                                                   DAOS    ,
                  s.KV                                                                                                                     KV      ,
                  nvl(u.UBARS,'||ispg_||')                                                                                                 ISP     ,
                  substr(s.NLS,1,4)                                                                                                        NBS     ,
                  1                                                                                                                        POS     ,
                  s.OSTC*100                                                                                                               OSTC    ,
                  s.OSTQ*100                                                                                                               OSTQ    ,
                  0                                                                                                                        LIM     ,
                  null                                                                                                                     OSTX    ,
                  (case when substr(s.NLS,1,2)=''25''                       then
                     11
                        when substr(s.NLS,1,4) in (''2610'',
                                                   ''2612'',
                                                   ''2615'',
                                                   ''2630'',
                                                   ''2635'',
                                                   ''2651'',
                                                   ''2652'',
                                                   ''1510'',
                                                   ''1511'',
                                                   ''1512'',
                                                   ''1515'',
                                                   ''1610'',
                                                   ''1611'',
                                                   ''1612'',
                                                   ''1615'')                then
                     4
                        when substr(s.NLS,1,4) in (''1500'',
                                                   ''1600'')                then
                     10
                        when substr(s.NLS,1,2) in (''20'',
                                                   ''21'',
                                                   ''22'',
                                                   ''27'')                  then
                     6
                        when substr(s.NLS,1,4)=''9802''                     then
                     5
                        when substr(s.NLS,1,4) in (''4310'',
                                                   ''4430'',
                                                   ''4432'',
                                                   ''4438'',
                                                   ''4439'',
                                                   ''4530'',
                                                   ''4532'',
                                                   ''4538'',
                                                   ''4539'')                then
                     8
                        when substr(s.NLS,1,4) in (select nbs from dpa_nbs) then
                     3
                   else
                     0
                   end)                                                                                                                    VID     ,
                  migraSK.valid_symbol(
                  trim(substr(nvl(s.NMS,''эх юяЁхфхыхэю''),1,70)))                                                                         NMS     ,
                  s.NLS                                                                                                                    NLS     ,
                  trim(substr(s.NLSALT,1,14))                                                                                              NLSALT  ,
                  s.BRANCH                                                                                                                 BRANCH  ,
                  /* to SPECPARAM_INT */
                  substr(''00''||s.OB22,-2)                                                                                                OB22    ,
                  s.OB88                                                                                                                   OB88    ,
                  s.P080                                                                                                                   P080    ,
                  s.MFO                                                                                                                    MFO     ,
                  s.R020_FA                                                                                                                R020_FA ,
                  /* to SPECPARAM */
                  s.R011                                                                                                                   R011    ,
                  s.R013                                                                                                                   R013    ,
                  nullif(s.S080,''0'')                                                                                                     S080    ,
--                decode(upper(s.S180),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(s.S180))  S180    ,
--                s.S181                                                                                                                   S181    ,
                  s.S190                                                                                                                   S190    ,
                  s.S200                                                                                                                   S200    ,
                  s.S230                                                                                                                   S230    ,
                  decode(upper(s.S240),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(s.S240))  S240    ,
                  s.S120                                                                                                                   S120    ,
                  s.S130                                                                                                                   S130    ,
                  s.S250                                                                                                                   S250    ,
                  s.S031                                                                                                                   S031    ,
                  s.S182                                                                                                                   S182    ,
                  s.R014                                                                                                                   R014    ,
                  s.K072                                                                                                                   K072    ,
                  s.S090                                                                                                                   S090    ,
--                s.S260                                                                                                                   S260    ,
                  s.BDAT                                                                                                                   BDAT    ,
                  s.PR                                                                                                                     IR      ,
                  ps.pap                                                                                                                   PAP     ,
                  n.NLSNPROC                                                                                                               NLSNPROC,
                  n.NLSDR                                                                                                                  NLSDR   ,
                  s.DADN                                                                                                                   DADN    ,
                  s.DADK                                                                                                                   DADK
           from   customerw                                             cw,
--                S6_UN_ALCOUT                                          s ,
                  (select *
                   from   S6_UN_ALCOUT s
                   where  (s.nls,s.kv) in (select nls,kv
                                           from   (select nls,kv,count(*)
                                                   from   S6_UN_ALCOUT
                                                   group  by nls,kv
                                                   having count(*)>1)) and
                          nvl(s.dazs,trunc(sysdate)+36524)=
                          (select max(nvl(dazs,trunc(sysdate)+36524))
                           from   S6_UN_ALCOUT where nls=s.nls and kv=s.kv)
                  union all
                   select *
                   from   S6_UN_ALCOUT
                   where  (nls,kv) not in (select nls,kv
                                           from   (select nls,kv,count(*)
                                                   from   S6_UN_ALCOUT
                                                   group  by nls,kv
                                                   having count(*)>1))) s ,
                  S6_UN_CLIOUT                                          c ,
                  S6_UN_ALNLSN                                          n ,
                  USERS_SKARB6_BARS                                     u ,
                  ps
           where  cw.tag(+)=''RNKUN''                                                        and
                  to_number(cw.value(+))=c.RNK*10                                            and
                  (s.DAZS is null                                                           or
                   (s.DAZS is not null and s.DAZS>=add_months(trunc(sysdate,''YEAR''),-12)) or
                   (s.DAZS is not null and substr(s.NLS,1,4) in (select NBS from  DPA_NBS))) and
                  s.ISP=u.USKARB6(+)                                                         and
                  substr(s.NLS,1,4)=ps.nbs(+)                                                and
                  n.nls(+)=s.nls                                                             and
                  n.kv(+)=s.kv                                                               and
                  c.rnk=s.rnk
           order  by substr(s.NLS,1,4) desc';
    open cur_ for sql_;

    NKD_ := null;

    LOOP

      S180_ := null;
      S181_ := null;

      fetch cur_ into RNK_     ,
                      DAPP_    ,
                      DAZS_    ,
                      DAOS_    ,
                      KV_      ,
                      ISP_     ,
                      NBS_     ,
                      POS_     ,
                      OSTC_    ,
                      OSTQ_    ,
                      LIM_     ,
                      OSTX_    ,
                      VID_     ,
                      NMS_     ,
                      NLS_     ,
                      NLSALT_  ,
                      BRANCH_  ,
                      OB22_    ,
                      OB88_    ,
                      P080_    ,
                      MFO_     ,
                      R020_FA_ ,
                      R011_    ,
                      R013_    ,
                      S080_    ,
--                    S180_    ,
--                    S181_    ,
                      S190_    ,
                      S200_    ,
                      S230_    ,
                      S240_    ,
                      S120_    ,
                      S130_    ,
                      S250_    ,
                      S031_    ,
                      S182_    ,
                      R014_    ,
                      K072_    ,
                      S090_    ,
--                    S260_    ,
                      BDAT_    ,
                      IR_      ,
                      PAP_     ,
                      NLSNPROC_,
                      NLSDR_   ,
                      DADN_    ,
                      DADK_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      if length(nls_)>14 then
        bars_audit.error('open_accountUN - err(0): фышэр ёў╕Єр сюы№°х 14, '||Chr(13)||Chr(10)||
                         'branch = '||branch_||', '                        ||Chr(13)||Chr(10)||
                         'NLS = '   ||nls_   ||', '                        ||Chr(13)||Chr(10)||
                         'KV = '    ||kv_);
        p_code := p_code+1;
        fl_ := 1;
        goto kakaxer;
      end if;

      fl_ := 0;

      bc.subst_branch(branch_);

      ndz_ := null;
      --1. OP_REG_ex
      begin

        tip_ := 'ODB';

        if    substr(nls_,1,3)='100' and substr(nls_,1,4)<>'1007' then
          if kv_=980 then
            tip_ := 'KAS';
          else
            tip_ := 'KAV';
          end if;
        elsif substr(nls_,1,3) in ('604','603','602') and kv_=980 then
            tip_ := 'SD ';
        elsif substr(nls_,1,4) in ('2625','2605','2655') then
            tip_ := 'PK1';
        end if;

        OP_REG_exfl(99     ,  -- mod_       INTEGER,   -- Opening mode :
                    null   ,  -- p1_        INTEGER,   -- 1st Par      :
                    0      ,  -- p2_        INTEGER,   -- 2nd Par      :
                    null   ,  -- p3_        INTEGER,   -- 3rd Par (Grp):
                    ndz_   ,  -- p4_ IN OUT INTEGER,   -- 4th Par      :
                    RNK_   ,  -- rnk_       INTEGER,   -- Customer number
                    NLS_   ,  -- p_nls_     VARCHAR2,  -- Account  number
                    KV_    ,  -- kv_        SMALLINT,  -- Currency code
                    NMS_   ,  -- nms_       VARCHAR2,  -- Account name
                    TIP_   ,  -- tip_       CHAR,      -- Account type
                    ISP_   ,  -- isp_       SMALLINT,
                    accR_  ,  -- accR_  OUT INTEGER,
                    '1'    ,  -- nbsnull_   VARCHAR2 DEFAULT '1',
                    null   ,  -- pap_       NUMBER   DEFAULT NULL,
                    VID_   ,  -- vid_       NUMBER   DEFAULT NULL,
                    POS_   ,  -- pos_       NUMBER   DEFAULT NULL,
                    null   ,  -- sec_       NUMBER   DEFAULT NULL,
                    null   ,  -- seci_      NUMBER   DEFAULT NULL,
                    null   ,  -- seco_      NUMBER   DEFAULT NULL,
                    0      ,  -- blkd_      NUMBER   DEFAULT NULL,
                    0      ,  -- blkk_      NUMBER   DEFAULT NULL,
                    LIM_   ,  -- lim_       NUMBER   DEFAULT NULL,
                    OSTX_  ,  -- ostx_      VARCHAR2 DEFAULT NULL,
                    NLSALT_,  -- nlsalt_    VARCHAR2 DEFAULT NULL,
                    BRANCH_,  -- tobo_      VARCHAR2 DEFAULT NULL,
                    null   ,  -- accc_      NUMBER   DEFAULT NULL,
                    0);       -- fl_        NUMBER   DEFAULT NULL,
        l_ins_ := l_ins_+1;
      exception when others then
        if dazs_ is null then
          bars_audit.error('open_accountUN - err(1): ' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                            'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                            'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                            'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          p_code := p_code+1;
          fl_ := 1;
        else
--        bars_audit.warning('open_accountS6 - warn(1): '||sqlerrm||', '||Chr(13)||Chr(10)||
--                                            'branch = '||branch_||', '||Chr(13)||Chr(10)||
--                                            'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
--                                            'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          if substr(sqlerrm,1,20)='ORA-20097: CAC-00005' then
            fl_ := 0;
          else
            fl_ := 1;
          end if;
        end if;
      end;
--    end if;

      if fl_=0 then
        if accR_ is not null then
          select count(*)
          into   flUN_
          from   accountsw
          where  acc=accR_ and
                 tag='IMPUN';
          if flUN_=0 then
            update accounts
            set    dapp=dapp_,
                   dazs=dazs_,
                   daos=daos_,
                   ostc=ostc_,
                   ostb=ostc_,
                   ostq=ostq_,
                   pos=pos_  ,
                   rnk=rnk_
            where  acc=accR_;
            begin
              update accounts
              set    nbs=nbs_
              where  acc=accR_;
            EXCEPTION WHEN OTHERS THEN
              bars_audit.error('open_accountUN - err(7): ' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                                'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                                'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
--            fl_ := 1;
            end;

            begin
               insert
               into   saldoa (acc ,
                              fdat,
                              pdat,
                              ostf,
                              dos ,
                              kos)
                      values (accR_   ,
                              gl.bdate,
                              dapp_   ,
                              ostc_   ,
                              0       ,
                              0);
            EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
               update saldoa
               set    pdat=dapp_,
                      ostf=ostc_,
                      dos=0     ,
                      kos=0
               where  acc=accR_ and
                      fdat=gl.bdate;
            end;

            begin
              insert
              into   accountsw (acc,
                                tag,
                                value)
                        values (accR_  ,
                                'IMPUN',
                                'Imported from Unicorn');
            exception when others then
              bars_audit.error('open_accountUN - err(2): ' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                                'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;

            --2. INSERT or UPDATE SPECPARAM_INT

            if fl_=0 then
              begin
                insert
                into SPECPARAM_INT (acc    ,
                                    p080   ,
                                    ob22   ,
                                    mfo    ,
                                    r020_fa,
                                    ob88   ,
                                    deb02  ,
                                    deb03)
                            values (accR_   ,
                                    P080_   ,
                                    OB22_   ,
                                    MFO_    ,
                                    R020_FA_,
                                    OB88_   ,
                                    DADN_   ,
                                    DADK_);
              EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                begin
                  update SPECPARAM_INT
                  set    p080=P080_      ,
                         ob22=OB22_      ,
                         mfo=MFO_        ,
                         r020_fa=R020_FA_,
                         ob88=OB88_      ,
                         deb02=DADN_     ,
                         deb03=DADK_
                  where  acc=accR_;
                EXCEPTION WHEN OTHERS THEN
                  bars_audit.error('open_accountUN - err(3u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                    'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                    'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                    'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                  p_code := p_code+1;
                  fl_ := 1;
                end;
                        WHEN OTHERS THEN
                bars_audit.error('open_accountUN - err(3): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                p_code := p_code+1;
                fl_ := 1;
              end;
            end if;

            --3. INSERT or UPDATE SPECPARAM

            if DADK_ is not null then
              update accounts
              set    mdate=DADK_
              where  acc=accR_;
              if DADN_ is not null then
                S180_ := fs180(accR_,null,null,DADN_);
                begin
                  select s181
                  into   S181_
                  from   kl_s180
                  where  s180=S180_;
                exception when no_data_found then
                  null;
                end;
                begin
                  insert
                  into   accountsw (acc,
                                    tag,
                                    value)
                            values (accR_ ,
                                    'DADN',
                                    to_char(DADN_,'DD/MM/YYYY'));
                exception when others then
                  null;
                end;
              end if;
            end if;

            if fl_ = 0 then
              begin
                insert
                into   SPECPARAM (acc ,
                                  R011,
                                  R013,
                                  S240,
                                  S080,
                                  S180,
                                  S190,
                                  S181,
--                                S260,
                                  S200,
                                  S120,
                                  S031,
                                  S182,
                                  S130,
                                  S090,
                                  NKD)
                          values (accR_,
                                  R011_,
                                  R013_,
                                  S240_,
                                  S080_,
                                  S180_,
                                  S190_,
                                  S181_,
--                                S260_,
                                  S200_,
                                  S120_,
                                  S031_,
                                  S182_,
                                  S130_,
                                  S090_,
                                  NKD_);
              EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                begin
                  update SPECPARAM
                  set    R011=R011_,
                         R013=R013_,
                         S240=S240_,
                         S080=S080_,
                         S180=S180_,
                         S190=S190_,
                         S181=S181_,
--                       S260=S260_,
                         S200=S200_,
                         S120=S120_,
                         S031=S031_,
                         S182=S182_,
                         S130=S130_,
                         S090=S090_,
                         NKD=NKD_
                  where  acc=accR_;
                EXCEPTION WHEN OTHERS THEN
                  bars_audit.error('open_accountUN - err(4u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                    'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                    'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                    'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                  p_code := p_code+1;
                  fl_ := 1;
                end;
                        WHEN OTHERS THEN
                bars_audit.error('open_accountUN - err(4): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                p_code := p_code+1;
                fl_ := 1;
              end;
            end if;

            if substr(nls_,1,1) in ('2','3','9') then

--            ╧ЁюЎхэЄэ√х ърЁЄюўъш ???

              if fl_=0 then

                if IR_ is not null then

                  if pap_=1 then
                     id_ := 0;
                  else
                     id_ := 1;
                  end if;

                  if NLSNPROC_ is not null then
                    begin
                      select acc
                      into   acra_
                      from   accounts
                      where  nls=NLSNPROC_ and
                             kv=kv_;
                    exception when no_data_found then
                      acra_ := null;
                    end;
                  else
                    acra_ := null;
                  end if;

                  if NLSDR_ is not null then
                    begin
                      select acc
                      into   acrb_
                      from   accounts
                      where  nls=NLSDR_ and
                             kv=980;
                    exception when no_data_found then
                      acrb_ := null;
                    end;
                  else
                    acrb_ := null;
                  end if;

--                4. INSERT or UPDATE INT_ACCN

                  begin
                    insert
                    into   INT_ACCN (ACC    ,  -- accR_
                                     ID     ,  -- id_
                                     METR   ,  -- 0
                                     BASEY  ,  -- 0
                                     FREQ   ,  -- 1
                                     ACR_DAT,  -- bankdate
                                     ACRA   ,  -- ???
                                     ACRB)
                             values (accR_   ,
                                     id_     ,
                                     0       ,
                                     0       ,
                                     1       ,
                                     bankdate,
                                     acra_   ,
                                     acrb_);
                  EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                    update INT_ACCN
                    set    METR=0          ,
                           BASEY=0         ,
                           FREQ=1          ,
                           ACR_DAT=bankdate,
                           ACRA=acra_      ,
                           ACRB=acrb_
                    where  acc=accR_ and
                           id=id_;
                            WHEN OTHERS THEN
                    bars_audit.error('open_accountUN - err(5): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                     'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                     'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                     'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                    p_code := p_code+1;
                    fl_ := 1;
                  end;

--                5. INSERT or UPDATE INT_RATN

                  if fl_=0 then
                    begin
                      insert
                      into   INT_RATN (acc ,
                                       id  ,
                                       BDAT,
                                       IR  ,
                                       IDU
                                      )
                               values (accR_              ,
                                       id_                ,
                                       nvl(BDAT_,gl.bdate),
                                       IR_                ,
                                       1
                                      );
                    EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                      update INT_RATN
                      set    IR=IR_ ,
                             BR=null,
                             OP=null,
                             IDU=1
                      where  acc=accR_ and
                             id=id_    and
                             BDAT=BDAT_;
                              WHEN OTHERS THEN
                      bars_audit.error('open_accountUN - err(6):' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                                       'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                       'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                       'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                      p_code := p_code+1;
                      fl_ := 1;
                    end;
                  end if;
                end if;
              end if;
            end if;
          end if;
        end if;
      end if;

<<kakaxer>> null;

      bc.set_context;

      if fl_=0 then
        commit;
        p_open := p_open+1;
      else
        rollback;
      end if;

      open_ := p_open;

      if l_ins_>0 and mod(l_ins_,10000)=0 then

--      ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ёўхЄют (ACCOUNTS ш ёт чрээ√х)

        BEGIN
          DBMS_JOB.SUBMIT (job       => Job_                    ,
                           what      => 'migraSK.tableAC_stats;',
                           next_date => sysdate                 ,
                           interval  => null                    ,
                           no_parse  => FALSE);
        exception when others then
          bars_audit.error('open_accountUN - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        END;

      end if;

      p_open := open_;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    begin
      execute immediate 'alter trigger tbu_accounts_1004 enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbu_accounts_tax enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tai_accounts_tax enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 enable';
    exception when OTHERS then
      null;
    end;

    gl.frcvr := 0;

--  уЁштэр яю тёхь сЁрэўрь т cur_rates$base

    migraSK.grn11tocurrates;

    bars_alerter(1);

  end open_accountUN;

--

  procedure create_userS5f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    id_       staff$base.id%type;
    idugo_    staff$base.id%type;
    ISP_      number;
    TABN_     varchar2(10);
    FIO_      varchar2(40);
    logname_  varchar2(30);
    branch_   varchar2(30);
    fi3_      char(3);
    mfo_      varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    mfo_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),-4,3),
                              min(branch)
                       from   s6_s5_filial'
                       into   fi3_   ,
                              branch_;

    sql_:='select u.ISP                                                                       ISP    ,
                  trim(substr(u.INDKEY,-6))                                                   TABN   ,
                  nvl(migraSK.valid_symbol(u.FIO),''яюы№чютрЄхы№ эх шфхэЄшЇшЎшЁютрэ'')        FIO    ,
                  nvl(m.logname,''U'||migraSK.kodobl(mfo_)||'_'||fi3_||'_S''||to_char(u.ISP)) logname,
                  m.id
           from   S6_S5_USERS u,
                  s6_usermap  m
           where  m.isps6(+)=u.ISP and
                  m.filial(+)='''||p_filial||'''';

    open cur_ for sql_;

    loop

      fetch cur_ into ISP_    ,
                      TABN_   ,
                      FIO_    ,
                      logname_,
                      id_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin

        begin
          select id
          into   idugo_
          from   staff$base
          where  logname=logname_;
        exception when no_data_found then
          idugo_ := null;
        end;

        if idugo_ is null then

          begin
            execute immediate 'drop user '||logname_;
          exception when OTHERS then
            bars_audit.warning('create_userS5f - warn(0): ISP='||to_char(ISP_)||', LOGIN='||logname_||' - '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--          p_code := p_code+1;
          end;

          if id_ is null then

            select min(num)
            into   id_
            from   conductor
            where  num not in (select id from staff$base);

          end if;

          bc.subst_branch(branch_);

          begin
            BARS_USERADM.create_user(FIO_             ,  -- p_usrfio      in  staff$base.fio%type
                                     TABN_            ,  -- p_usrtabn     in  staff$base.tabn%type
                                     0                ,  -- p_usrtype     in  staff$base.clsid%type
                                     1                ,  -- p_usraccown   in  staff$base.type%type
                                     branch_          ,  -- p_usrbranch   in  varchar2
                                     0                ,  -- p_usrusearc   in  staff$base.usearc%type
                                     0                ,  -- p_usrusegtw   in  staff$base.usegtw%type
                                     'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
                                     logname_         ,  -- p_reclogname  in  staff$base.logname%type
                                     'qwerty'         ,  -- p_recpasswd   in  varchar2
                                     null             ,  -- p_recappauth  in  varchar2
                                     null             ,  -- p_recprof     in  varchar2
                                     'BARS_CONNECT'   ,  -- p_recdefrole  in  varchar2
                                     null             ,  -- p_recrsgrp    in  varchar2
                                     id_                 -- p_usrid       in  staff$base.id%type default null
                                    );

            bc.set_context;

            delete
            from   USERS_SKARB6_BARS
            where  KF=mfo_      and
                   USKARB6=ISP_ and
                   filial=p_filial;
            insert
            into   USERS_SKARB6_BARS (KF     ,
                                      USKARB6,
                                      UBARS  ,
                                      filial)
                              values (mfo_,
                                      ISP_,
                                      id_ ,
                                      p_filial);
            commit;

            p_open := p_open+1;

          exception when OTHERS then
            bars_audit.error('create_userS5f - err(1): ISP='||to_char(ISP_)||', LOGIN='||logname_||' - '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;

        else -- user єцх хёЄ№

          bars_audit.error('create_userS6f - err(2): ISP='||to_char(ISP_)||', LOGIN='||logname_||' - фєсышЁютрэшх ыюушэр ё єцх ёє∙хёЄтє■∙шь');
          p_code := p_code+1;

        end if;

--    exception when OTHERS then

--      bars_audit.error('create_userS5f - err(3): ISP='||to_char(ISP_)||', LOGIN='||logname_||' - '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--      p_code := p_code+1;

      end;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(1);

  end create_userS5f;

--

  procedure create_userS6f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    id_       staff$base.id%type;
    idugo_    staff$base.id%type;
    ISP_      number;
    TABN_     varchar2(10);
    FIO_      varchar2(40);
    logname_  varchar2(30);
    branch_   varchar2(30);
    fi3_      char(3);
    mfo_      varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    mfo_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),-4,3),
                              min(branch)
                       from   s6_s6_filial'
                       into   fi3_   ,
                              branch_;

    sql_:='select u.ISP                                                                       ISP    ,
                  trim(substr(u.IKEY,-6))                                                     TABN   ,
                  nvl(migraSK.valid_symbol(u.FIO),''яюы№чютрЄхы№ эх шфхэЄшЇшЎшЁютрэ'')        FIO    ,
                  nvl(m.logname,''U'||migraSK.kodobl(mfo_)||'_'||fi3_||'_S''||to_char(u.ISP)) logname,
                  m.id
           from   S6_S6_USERS u,
                  s6_usermap  m
           where  m.isps6(+)=u.ISP and
                  m.filial(+)='''||p_filial||'''';

    open cur_ for sql_;

    loop

      fetch cur_ into ISP_    ,
                      TABN_   ,
                      FIO_    ,
                      logname_,
                      id_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin

        begin
          select id
          into   idugo_
          from   staff$base
          where  logname=logname_;
        exception when no_data_found then
          idugo_ := null;
        end;

        if idugo_ is null then

          begin
            execute immediate 'drop user '||logname_;
          exception when OTHERS then
            bars_audit.warning('create_userS6f - warn(0): ISP='||to_char(ISP_)||', LOGIN='||logname_||' - '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--          p_code := p_code+1;
          end;

          if id_ is null then

            select min(num)
            into   id_
            from   conductor
            where  num not in (select id from staff$base);

          end if;

          bc.subst_branch(branch_);

          begin
            BARS_USERADM.create_user(FIO_,               -- p_usrfio      in  staff$base.fio%type
                                     TABN_,              -- p_usrtabn     in  staff$base.tabn%type
                                     0,                  -- p_usrtype     in  staff$base.clsid%type
                                     1,                  -- p_usraccown   in  staff$base.type%type
                                     branch_,            -- p_usrbranch   in  varchar2
                                     0,                  -- p_usrusearc   in  staff$base.usearc%type
                                     0,                  -- p_usrusegtw   in  staff$base.usegtw%type
                                     'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
                                     logname_,           -- p_reclogname  in  staff$base.logname%type
                                     'qwerty',           -- p_recpasswd   in  varchar2
                                     null,               -- p_recappauth  in  varchar2
                                     null,               -- p_recprof     in  varchar2
                                     'BARS_CONNECT',     -- p_recdefrole  in  varchar2
                                     null,               -- p_recrsgrp    in  varchar2
                                     id_                 -- p_usrid       in  staff$base.id%type default null
                                    );

            bc.set_context;

            delete
            from   USERS_SKARB6_BARS
            where  KF=mfo_      and
                   USKARB6=ISP_ and
                   filial=p_filial;
            insert
            into   USERS_SKARB6_BARS (KF     ,
                                      USKARB6,
                                      UBARS  ,
                                      filial)
                              values (mfo_,
                                      ISP_,
                                      id_ ,
                                      p_filial);
            commit;

            p_open := p_open+1;

          exception when OTHERS then
            bars_audit.error('create_userS6f - err(1): ISP='||to_char(ISP_)||', LOGIN='||logname_||' - '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;

        else -- user єцх хёЄ№

--        begin
--          execute immediate 'create user '||logname_||' identified by qwerty';
--        exception when OTHERS then
--          bars_audit.warning('create_userS6f - warn(3): ISP='||to_char(ISP_)||' ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
----        p_code := p_code+1;
--        end;

--        bc.subst_branch(branch_);

--        begin
--          BARS_USERADM.alter_user(idugo_           ,
--                                  FIO_             ,  -- p_usrfio      in  staff$base.fio%type
--                                  TABN_            ,  -- p_usrtabn     in  staff$base.tabn%type
--                                  0                ,  -- p_usrtype     in  staff$base.clsid%type
--                                  1                ,  -- p_usraccown   in  staff$base.type%type
--                                  branch_          ,  -- p_usrbranch   in  varchar2
--                                  0                ,  -- p_usrusearc   in  staff$base.usearc%type
--                                  0                ,  -- p_usrusegtw   in  staff$base.usegtw%type
--                                  'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
--                                --logname_         ,  -- p_reclogname  in  staff$base.logname%type
--                                  'qwerty'         ,  -- p_recpasswd   in  varchar2
--                                  null             ,  -- p_recappauth  in  varchar2
--                                  null             ,  -- p_recprof     in  varchar2
--                                  'BARS_CONNECT'   ,  -- p_recdefrole  in  varchar2
--                                  null                -- p_recrsgrp    in  varchar2
--                                 );
--        exception when OTHERS then
--          bars_audit.error('create_userS6f - err(4): ISP='||to_char(ISP_)||' ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--          p_code := p_code+1;
--        end;

          bars_audit.error('create_userS6f - err(2): ISP='||to_char(ISP_)||', LOGIN='||logname_||' - фєсышЁютрэшх ыюушэр ё єцх ёє∙хёЄтє■∙шь');
          p_code := p_code+1;

        end if;

--    exception when OTHERS then

--      bars_audit.error('create_userS6f - err(3): ISP='||to_char(ISP_)||', LOGIN='||logname_||' - '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--      p_code := p_code+1;

      end;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(1);

  end create_userS6f;

--

  procedure create_customerS5f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type        cur is ref cursor;
    cur_        cur;
    sql_        varchar2(32000);
    rnk_        number;
    fl_         number;
    ispg_       varchar2(32);

    TAXF_       varchar2(12);
    DATEON_     date;
    DATEA_      date;
    DATET_      date;
    BDAY_       date;
    FS_         varchar2(3);
    SED_        char(4);
    NMK_        varchar2(70);
    IDCLIENT_   number;
    GROUP_C_    number;
    OKPO_       varchar2(12);
    COUNTRY_    number;
    CREG_       number;
    CDST_       number;
    PRINSIDER_  number;
    ISP_        number;
    NMKK_       varchar2(38);
    OE_         varchar2(5);
    CODCAGENT_  number;
    ISE_        varchar2(5);
    SEX_        number;
    TGR_        number;
    CUSTTYPE_   number;
    VED_        varchar2(5);
    ND_         varchar2(10);
    CRISK_      number;
    PHONE_      varchar2(20);
    POSTIND_    varchar2(10);
    OBLAST_     varchar2(40);
    RAYON_      varchar2(25);
    CITY_       varchar2(40);
    STREET_     varchar2(40);
    HOUSE_      varchar2(20);
    KVARTIRA_   varchar2(20);
    TEL_        varchar2(20);
    EMAIL_      varchar2(100);
    SAB_        varchar2(6);
    STMT_       number;
    RGADM_      varchar2(30);
    MFO_        varchar2(12);
    BIC_        varchar2(12);

--  l_ins_      number;

    SERIA_      VARCHAR2(10);
    NOMBER_     VARCHAR2(20);
    ORGAN_      VARCHAR2(50);
    DOTE_       date;

    fi3_        char(3);
    Adr_        customer.adr%type;
    K050_       char(3);
    MFOg_       varchar2(12);

  begin

    bars_alerter(0);

--  l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),-4,3)
                       from   s6_s5_filial'
                       into   fi3_;

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=MFOg_                              and
           logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=MFOg_ and
             logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%';
      if ispg_ is null then
        select to_char(min(id))
        into   ispg_
        from   staff$base
        where  bc.extract_mfo(branch)=MFOg_ and
               tabn is not null;
        if ispg_ is null then
          select to_char(min(id))
          into   ispg_
          from   staff$base
          where  bc.extract_mfo(branch)=MFOg_;
        end if;
      end if;
    end if;

    MFO_ := null;

    sql_:='select distinct
                  TAXF     ,
                  DATEON   ,
                  DATEA    ,
                  DATET    ,
                  BDAY     ,
                  FS       ,
                  SED      ,
                  K050     ,
                  NMK      ,
                  IDCLIENT ,
                  GROUP_C  ,
                  OKPO     ,
                  COUNTRY  ,
                  CDST     ,
                  CREG     ,
                  PRINSIDER,
                  ISP      ,
                  NMKK     ,
                  OE       ,
                  CODCAGENT,
                  ISE      ,
                  SEX      ,
                  TGR      ,
                  CUSTTYPE ,
                  VED      ,
                  ND       ,
                  CRISK    ,
                  PHONE    ,
                  POSTIND  ,
                  OBLAST   ,
                  RAYON    ,
                  CITY     ,
                  STREET   ,
                  HOUSE    ,
                  KVARTIRA ,
                  TEL      ,
                  EMAIL    ,
                  SAB      ,
                  STMT     ,
                  RGADM    ,
                  BIC      ,
                  SERIA    ,
                  NOMBER   ,
                  ORGAN    ,
                  DOTE     ,
                  Adr
           from   (select distinct
                          to_char(c.C_NALOG)                                            TAXF     ,  -- ╩юф яырЄэшър яюфрЄъiт                   smallint
                          nvl(c.D_CREATE,add_months(trunc(sysdate,''YEAR''),-12))       DATEON   ,  -- ─рЄр Ёх║ёЄЁрЎi┐                         smalldatetime
                          c.D_REG_SA                                                    DATEA    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т рфьiэiёЄЁрЎi┐         smalldatetime
                          c.D_REG_STI                                                   DATET    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т яюфрЄъютiщ iэёяхъЎi┐  smalldatetime
                          c.B_DATE                                                      BDAY     ,  -- ─рЄр эрЁюфцхээ                          smalldatetime
                          decode(substr(''00''||to_char(c.F_PRIVAT),-2),''99'',''ZZ'',
                                 substr(''00''||to_char(c.F_PRIVAT),-2))                FS       ,  -- ╘юЁьр тырёэюёЄi                         tinyint
                          nvl(k.K051,''00'')||''  ''                                    SED      ,  -- ╘юЁьр уюёяюфрЁ■трээ                     char(4)
                          substr(''000''||to_char(c.K050),-3)                           K050     ,  -- ╧рЁрьхЄЁ K050                           char(3)
                          trim(substr(c.NAME,1,70))                                     NMK      ,  -- ╧ютэх эрщьхэєтрээ                       varchar(150)
                          c.CLI_KOD                                                     IDCLIENT ,  -- ╩юф                                     int
                          c.GROUP_C                                                     GROUP_C  ,  -- ╩юф+                                    int
                          trim(substr(migraSK.valid_symbol(c.ID),1,10))                 OKPO     ,  -- IфхэЄшЇiърЎiщэшщ ъюф                    varchar(10)
                          nvl(nullif(nvl(c.COUNTRY,0),0),804)                           COUNTRY  ,  -- ╩Ёр┐эр                                  smallint
                          mod(c.C_DST,100)                                              CDST     ,  -- ╧юфрЄъютр iэёяхъЎi                      tinyint
                          trunc(c.C_DST/100)                                            CREG     ,  -- ╨хуiюэ                                  tinyint
                          decode(nvl(c.INSIDER,99),21,2,22,3,23,5,30,4,c.INSIDER)       PRINSIDER,  -- IэёрщфхЁ                                tinyint
                          nvl(u.UBARS,'||ispg_||')                                      ISP      ,  -- ╩юф ъюЁшёЄєтрўр                         smallint
                          trim(substr(c.NAME_S,1,38))                                   NMKK     ,  -- ╩юЁюЄъх эрщьхэєтрээ                     varchar(40)
                          substr(''00000''||to_char(c.OTRASL),-5)                       OE       ,  -- ├рыєч№                                  int
                          decode(c.REZIDENT,0,decode(c.GROUP_C,3,4,5,6,2),c.GROUP_C)    CODCAGENT,  -- ╒рЁръЄхЁшёЄшър
                          substr(''00000''||nvl(to_char(trim(c.SECTOR)),''''),-5)       ISE      ,  -- IэёЄшЄ.ёхъЄюЁ хъюэюьiъш                 int
                          null                                                          SEX      ,  -- ╤ЄрЄ№                                   tinyint
                          decode(nvl(c.TIN_KEY,0),0,3,c.TIN_KEY)                        TGR      ,  -- ╥шя фхЁцЁх║ёЄЁє                         tinyint
                          decode(k.K051,''91'',3,decode(c.GROUP_C,3,2,5,3,4,2,6,3,1))   CUSTTYPE ,  -- ╥шя ъыi║эЄр                             tinyint
                          substr(''00000''||to_char(c.VID_ECO),-5)                      VED      ,  -- ┬шф хъюэюь.фi ы№эюёЄi                   int
                          to_char(c.CLI_KOD)                                            ND       ,
                          decode(c.CLASS,''└'',1,
                                         ''┴'',2,
                                         ''┬'',3,
                                         ''├'',4,
                                         ''─'',5,null)                                  CRISK    ,
                          trim(substr(trim(migraSK.valid_symbol(c.PHONE)),1,20))        PHONE    ,  -- ╥хыхЇюэ                                 varchar(20)
                          null                                                          POSTIND  ,  -- ╧ю°Єютшщ iэфхъё                         varchar(10)
                          null                                                          OBLAST   ,  -- ╬сырёЄ№                                 varchar(40)
                          null                                                          RAYON    ,  -- ╨рщюэ                                   varchar(25)
                          null                                                          CITY     ,  -- ╠iёЄю, эрёхы.яєэъЄ                      varchar(40)
                          null                                                          STREET   ,  -- ┬єышЎ                                   varchar(40)
                          null                                                          HOUSE    ,  -- ─iь                                     varchar(20)
                          null                                                          KVARTIRA ,  -- ╩трЁЄшЁр                                varchar(20)
                          trim(substr(trim(migraSK.valid_symbol(c.PHONE)),1,20))        TEL      ,  -- ╥хыхЇюэ                                 varchar(20)
                          trim(substr(trim(migraSK.valid_symbol(c.E_MAIL)),1,100))      EMAIL    ,  -- ┼ыхъЄЁюээр рфЁхёр                       varchar(100)
                          null                                                          SAB      ,  -- SAB
                          null                                                          STMT     ,
                          null                                                          RGADM    ,
                          null                                                          BIC      ,
                          c.P_SERIA                                                     SERIA    ,  -- ╤хЁш  ярёяюЁЄр
                          c.P_NUMBER                                                    NOMBER   ,  -- ═юьхЁ ярёяюЁЄр
                          trim(substr(c.P_GIVE,1,50))                                   ORGAN    ,  -- ╩хь т√фрэ
                          c.P_DATE                                                      DOTE     ,  -- ╩юуфр т√фрэ
                          c.ADRESS                                                      Adr
                   from   S6_S5_CLIENT                           c,
                          (select K051,
                                  substr(K050,1,3) K050
                           from   KL_K050
                           where  k051 is not null
                          union all
                           select k051,
                                  substr(K050,1,3) K050
                           from   KL_K051
                           where  k050 in (select k050
                                           from   kl_k050
                                           where  k051 is null)) k,
                          USERS_SKARB6_BARS                      u
                   where  substr(k.K050(+),1,3)=
--                        substr(''00''||to_char(nvl(c.k050,0)),-3) and
                          substr(''000''||to_char(c.K050),-3)       and
                          c.ISP=u.USKARB6(+)                        and
                          u.FILIAL(+)='''||p_filial||''')
           order  by IDCLIENT,GROUP_C';

--  bars_audit.info('create_customerS5f - sql_='||substr(sql_,   1,3000));
--  bars_audit.info('create_customerS5f - sql_='||substr(sql_,3001,3000));
--  bars_audit.info('create_customerS5f - sql_='||substr(sql_,6001,3000));
--  bars_audit.info('create_customerS5f - sql_='||substr(sql_,9001,3000));

    open cur_ for sql_;

    loop
      fetch cur_ into TAXF_     ,
                      DATEON_   ,
                      DATEA_    ,
                      DATET_    ,
                      BDAY_     ,
                      FS_       ,
                      SED_      ,
                      K050_     ,
                      NMK_      ,
                      IDCLIENT_ ,
                      GROUP_C_  ,
                      OKPO_     ,
                      COUNTRY_  ,
                      CDST_     ,
                      CREG_     ,
                      PRINSIDER_,
                      ISP_      ,
                      NMKK_     ,
                      OE_       ,
                      CODCAGENT_,
                      ISE_      ,
                      SEX_      ,
                      TGR_      ,
                      CUSTTYPE_ ,
                      VED_      ,
                      ND_       ,
                      CRISK_    ,
                      PHONE_    ,
                      POSTIND_  ,
                      OBLAST_   ,
                      RAYON_    ,
                      CITY_     ,
                      STREET_   ,
                      HOUSE_    ,
                      KVARTIRA_ ,
                      TEL_      ,
                      EMAIL_    ,
                      SAB_      ,
                      STMT_     ,
                      RGADM_    ,
                      BIC_      ,
                      SERIA_    ,
                      NOMBER_   ,
                      ORGAN_    ,
                      DOTE_     ,
                      Adr_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        select c.rnk
        into   rnk_
        from   customerw w,
               customer  c
        where  w.tag='RS6S5'                                                    and
               w.value=to_char(IDCLIENT_)||to_char(GROUP_C_)||to_char(p_filial) and
               w.rnk=c.rnk                                                      and
               bc.extract_mfo(c.branch)=MFOg_                                   and
               rownum<2;
      exception when no_data_found then
        RNK_ := null;
      end;

      bc.subst_mfo(MFOg_);

      begin

        kl.setCustomerAttr(RNK_,                     -- Rnk_  IN OUT customer.rnk%type        -- Customer number
                           CUSTTYPE_,                -- Custtype_    customer.custtype%type   -- ╥шя ъышхэЄр: 1-срэъ, 2-■Ё.ышЎю, 3-Їшч.ышЎю
                           ND_,                      -- Nd_          customer.nd%type         -- ╣ фюуютюЁр
                           NMK_,                     -- Nmk_         customer.nmk%type        -- ═ршьхэютрэшх ъышхэЄр
                           null,                     -- Nmkv_        customer.nmkv%type       -- ═ршьхэютрэшх ъышхэЄр ьхцфєэрЁюфэюх
                           NMKK_,                    -- Nmkk_        customer.nmkk%type       -- ═ршьхэютрэшх ъышхэЄр ъЁрЄъюх
                           Adr_,                     -- Adr_         customer.adr%type        -- └фЁхё ъышхэЄр
                           CODCAGENT_,               -- Codcagent_   customer.codcagent%type  -- ╒рЁръЄхЁшёЄшър
                           COUNTRY_,                 -- Country_     customer.country%type    -- ╤ЄЁрэр
                           PRINSIDER_,               -- Prinsider_   customer.prinsider%type  -- ╧Ёшчэръ шэёрщфхЁр
                           TGR_,                     -- Tgr_         customer.tgr%type        -- ╥шя уюё.ЁххёЄЁр
                           OKPO_,                    -- Okpo_        customer.okpo%type       -- ╬╩╧╬
                           STMT_,                    -- Stmt_        customer.stmt%type       -- ╘юЁьрЄ т√яшёъш
                           SAB_,                     -- Sab_         customer.sab%type        -- ▌ы.ъюф
                           DATEON_,                  -- DateOn_      customer.date_on%type    -- ─рЄр ЁхушёЄЁрЎшш
                           TAXF_,                    -- Taxf_        customer.taxf%type       -- ═рыюуют√щ ъюф
                           CREG_,                    -- CReg_        customer.c_reg%type      -- ╩юф юсы.═╚
                           CDST_,                    -- CDst_        customer.c_dst%type      -- ╩юф Ёрщюэ.═╚
                           null,                     -- Adm_         customer.adm%type        -- └фьшэ.юЁурэ
                           null,                     -- RgTax_       customer.rgtax%type      -- ╨ху эюьхЁ т ═╚
                           RGADM_,                   -- RgAdm_       customer.rgadm%type      -- ╨ху эюьхЁ т └фь.
                           DATET_,                   -- DateT_       customer.datet%type      -- ─рЄр Ёху т ═╚
                           DATEA_,                   -- DateA_       customer.datea%type      -- ─рЄр Ёху. т рфьшэшёЄЁрЎшш
                           ISE_,                     -- Ise_         customer.ise%type        -- ╚эёЄ. ёхъ. ¤ъюэюьшъш
                           FS_,                      -- Fs_          customer.fs%type         -- ╘юЁьр ёюсёЄтхээюёЄш
                           OE_,                      -- Oe_          customer.oe%type         -- ╬ЄЁрёы№ ¤ъюэюьшъш
                           VED_,                     -- Ved_         customer.ved%type        -- ┬шф ¤ъ. фх Єхы№эюёЄш
                           SED_,                     -- Sed_         customer.sed%type        -- ╘юЁьр їюч щёЄтютрэш 
                           'Imported from SKARB5f',  -- Notes_       customer.notes%type      -- ╧Ёшьхўрэшх
                           null,                     -- Notesec_     customer.notesec%type    -- ╧Ёшьхўрэшх фы  ёыєцс√ схчюярёэюёЄш
                           CRISK_, /* null */        -- CRisk_       customer.crisk%type      -- ╩рЄхуюЁш  Ёшёър
                           null,                     -- Pincode_     customer.pincode%type    --
                           null,                     -- RnkP_        customer.rnkp%type       -- ╨ху. эюьхЁ їюыфшэур
                           null,                     -- Lim_         customer.lim%type        -- ╦шьшЄ ърёё√
                           null,                     -- NomPDV_      customer.nompdv%type     -- ╣ т ЁххёЄЁх яырЄ. ╧─┬
                           '9',                      -- MB_          customer.mb%type         -- ╧Ёшэрфы. ьрыюьє сшчэхёє
                           null,                     -- BC_          customer.bc%type         -- ╧Ёшчэръ ═┼ъышхэЄр срэър
                           '/'||MFOg_||'/',          -- Tobo_        customer.tobo%type       -- ╩юф схчсрырэёютюую юЄфхыхэш 
                           ISP_                      -- Isp_         customer.isp%type        -- ╠хэхфцхЁ ъышхэЄр (юЄтхЄ. шёяюыэшЄхы№)
                          );
        begin
          kl.setCustomerEN(RNK_ ,  -- customer.rnk%type
                           ISE_ ,  -- customer.ise%type
                           FS_  ,  -- customer.fs%type
                           VED_ ,  -- customer.ved%type
                           OE_  ,  -- customer.oe%type
                           K050_,  -- customer.k050%type
                           SED_);  -- customer.sed%type
        exception when others then
          bars_audit.error('create_customerS5f - err(1): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                           'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                           'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                           'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                           'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                           'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                           'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                           'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                           'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                           'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                           'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                           'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                           'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                           'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                           'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                           'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                           'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                           'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                           'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                           'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                           'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                           'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                           'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                           'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                           'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                           'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                           'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                           'CLI_KOD   = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                           'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                           'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          fl_ := 1;
          p_code := p_code+1;
          bc.set_context;
          goto custplus;
        end;

        fl_ := 0;
        p_open := p_open+1;
--      l_ins_ := l_ins_+1;
      exception when others then
        bars_audit.error('create_customerS5f - err(0): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                         'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                         'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                         'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                         'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                         'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                         'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                         'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                         'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                         'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                         'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                         'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                         'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                         'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                         'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                         'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                         'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                         'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                         'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                         'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                         'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                         'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                         'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                         'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                         'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                         'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                         'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                         'CLI_KOD   = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                         'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                         'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        fl_ := 1;
        p_code := p_code+1;
        bc.set_context;
      end;

<<custplus>> null;

      if fl_=0 then
        if CUSTTYPE_=1 then
          begin
            kl.setBankAttr(RNK_,  -- Rnk_    NUMBER,
                           MFO_,  -- Mfo_    VARCHAR2,
                           BIC_,  -- Bic_    VARCHAR2,
                           null,  -- BicAlt_ VARCHAR2,
                           null,  -- Rating_ VARCHAR2,
                           null,  -- Kod_b_  NUMBER,
                           null,  -- Ruk_    VARCHAR2,
                           TEL_,  -- TelR_   VARCHAR2,
                           null,  -- Buh_    VARCHAR2,
                           null   -- TelB_   VARCHAR2
                          );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS5f - err(2): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'CLI_KOD   = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=2 then
          begin
            kl.setCorpAttr(RNK_  ,  -- Rnk_    NUMBER,
                           NMK_  ,  -- Nmku_   VARCHAR2,
                           null  ,  -- Ruk_    VARCHAR2,
                           TEL_  ,  -- TelR_   VARCHAR2,
                           null  ,  -- Buh_    VARCHAR2,
                           null  ,  -- TelB_   VARCHAR2,
                           null  ,  -- TelFax_ varchar2,
                           EMAIL_,  -- EMail_  varchar2,
                           null     -- SealId_ number
                          );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS5f - err(3): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'CLI_KOD   = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=3 then
          begin
            kl.setPersonAttr(RNK_   ,  -- Rnk_    NUMBER,
                             SEX_   ,  -- Sex_    CHAR,
                             1      ,  -- Passp_  NUMBER,
                             SERIA_ ,  -- Ser_    VARCHAR2,
                             NOMBER_,  -- Numdoc_ VARCHAR2,
                             DOTE_  ,  -- PDate_  DATE,
                             ORGAN_ ,  -- Organ_  VARCHAR2,
                             BDAY_  ,  -- BDay_   DATE,
                             null   ,  -- BPlace_ VARCHAR2,
                             null   ,  -- TelD_   VARCHAR2,
                             TEL_      -- TelW_   VARCHAR2
                             );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS5f - err(4): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'CLI_KOD   = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_             ,  -- Rnk_ INTEGER,
                                  'RS6S5'          ,  -- Tag_ VARCHAR2,
                                  to_char(IDCLIENT_)||
                                  to_char(GROUP_C_) ||
                                  to_char(p_filial),  -- Val_ VARCHAR2,
                                  0                   -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS5f - err(5): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'CLI_KOD   = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        bc.set_context;
      end if;

      if fl_=0 then
         commit;
      else
         rollback;
      end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(1);

  end create_customerS5f;

--

  procedure create_customerS6f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type        cur is ref cursor;
    cur_        cur;
    sql_        varchar2(32000);
    rnk_        number;
    fl_         number;
    ispg_       varchar2(32);

    TAXF_       varchar2(12);
    DATEON_     date;
    DATEA_      date;
    DATET_      date;
    BDAY_       date;
    FS_         varchar2(3);
    SED_        char(4);
    NMK_        varchar2(70);
    IDCLIENT_   number;
    GROUP_C_    number;
    OKPO_       varchar2(12);
    COUNTRY_    number;
    CREG_       number;
    CDST_       number;
    PRINSIDER_  number;
    ISP_        number;
    NMKK_       varchar2(38);
    OE_         varchar2(5);
    CODCAGENT_  number;
    ISE_        varchar2(5);
    SEX_        number;
--  MB_         varchar2(3);
    TGR_        number;
    CUSTTYPE_   number;
    VED_        varchar2(5);
    ND_         varchar2(10);
    CRISK_      number;
    PHONE_      varchar2(20);
    POSTIND_    varchar2(10);
    OBLAST_     varchar2(40);
    RAYON_      varchar2(25);
    CITY_       varchar2(40);
    STREET_     varchar2(40);
    HOUSE_      varchar2(20);
    KVARTIRA_   varchar2(20);
    TEL_        varchar2(20);
    EMAIL_      varchar2(100);
    SAB_        varchar2(6);
    STMT_       number;
    RGADM_      number;
    MFO_        varchar2(12);
    BIC_        varchar2(12);

    l_rnk       number;
    l_branch    varchar2(30);
--  l_ins_      number;

    adr_        customer.adr%type;
    len_adr_    number;
    len_raz_    number;

    Ser_        person.ser%type;
    Numdoc_     person.numdoc%type;
    PDate_      person.pdate%type;
    Organ_      person.organ%type;
    Orgao_      person.organ%type;
    i_          int;
    len_organ_  number;

    fi3_        char(3);
    K050_       char(3);
    MFOg_       varchar2(12);
    sthokv_     varchar2(960);

  begin

    bars_alerter(0);

--  l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),-4,3)
                       from   s6_s6_filial'
                       into   fi3_;

    select data_length
    into   len_adr_
    from   user_tab_columns
    where  table_name='CUSTOMER' and
           column_name='ADR';

    select data_length
    into   len_organ_
    from   user_tab_columns
    where  table_name='PERSON' and
           column_name='ORGAN';

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=MFOg_                              and
           logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=MFOg_ and
             logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%';
      if ispg_ is null then
        select to_char(min(id))
        into   ispg_
        from   staff$base
        where  bc.extract_mfo(branch)=MFOg_ and
               tabn is not null;
        if ispg_ is null then
          select to_char(min(id))
          into   ispg_
          from   staff$base
          where  bc.extract_mfo(branch)=MFOg_;
        end if;
      end if;
    end if;

    begin
      execute immediate 'create or replace view S6_S6_CONTRACT_V as
              select   IDCLIENT                        ,
                       GROUP_C                         ,
                       min(trim(IDCONTRACT)) IDCONTRACT,
                       min(C_RISK)           C_RISK
              from     S6_S6_CONTRACT
              group by IDCLIENT,
                       GROUP_C';
    exception when OTHERS then
      null;
    end;

    MFO_ := null;

    sql_:='select distinct
                  TAXF     ,
                  DATEON   ,
                  DATEA    ,
                  DATET    ,
                  BDAY     ,
                  FS       ,
                  SED      ,
                  K050     ,
                  NMK      ,
                  IDCLIENT ,
                  GROUP_C  ,
                  OKPO     ,
                  COUNTRY  ,
                  CDST     ,
                  CREG     ,
                  PRINSIDER,
                  ISP      ,
                  NMKK     ,
                  OE       ,
                  CODCAGENT,
                  ISE      ,
                  SEX      ,
                  TGR      ,
                  CUSTTYPE ,
                  VED      ,
                  ND       ,
                  CRISK    ,
                  PHONE    ,
                  POSTIND  ,
                  OBLAST   ,
                  RAYON    ,
                  CITY     ,
                  STREET   ,
                  HOUSE    ,
                  KVARTIRA ,
                  TEL      ,
                  EMAIL    ,
                  SAB      ,
                  STMT     ,
                  RGADM    ,
                  BIC
           from   (select distinct
                          to_char(c.CODNAL)                                                    TAXF     ,  -- ╩юф яырЄэшър яюфрЄъiт                   smallint
                          nvl(c.D_OPEN,add_months(trunc(sysdate,''YEAR''),-12))                DATEON   ,  -- ─рЄр Ёх║ёЄЁрЎi┐                         smalldatetime
                          c.D_REGSA                                                            DATEA    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т рфьiэiёЄЁрЎi┐         smalldatetime
                          c.D_REGSTI                                                           DATET    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т яюфрЄъютiщ iэёяхъЎi┐  smalldatetime
                          c.DATEBIRTH                                                          BDAY     ,  -- ─рЄр эрЁюфцхээ                          smalldatetime
                          nvl(nullif(substr(''00''||to_char(c.FORMPRIVAT),-2),''99''),''ZZ'')  FS       ,  -- ╘юЁьр тырёэюёЄi                         tinyint
                          substr(''00''||to_char(fx.K051),-2)||''  ''                          SED      ,  -- ╘юЁьр уюёяюфрЁ■трээ                     char(4)
                          substr(''000''||to_char(c."FORMXOZ"),-3)                             K050     ,  -- ярЁрьхЄЁ K050                           char(3)
                          migraSK.valid_symbol(trim(substr(nvl(c.FULLNAME,c.NAME),1,70)))      NMK      ,  -- ╧ютэх эрщьхэєтрээ                       varchar(150)
                          c.IDCLIENT                                                           IDCLIENT ,  -- ╩юф                                     int
                          c.GROUP_C                                                            GROUP_C  ,  -- ╩юф+                                    int
                          migraSK.valid_symbol(c.IDCODE)                                       OKPO     ,  -- IфхэЄшЇiърЎiщэшщ ъюф                    varchar(10)
                          c.IDCOUNTRY                                                          COUNTRY  ,  -- ╩Ёр┐эр                                  smallint
                          c.IDNAL                                                              CDST     ,  -- ╧юфрЄъютр iэёяхъЎi                      tinyint
                          c.IDREG                                                              CREG     ,  -- ╨хуiюэ                                  tinyint
                          decode(nvl(c.INSIDER,99),21,2,22,3,23,5,30,4,c.INSIDER)              PRINSIDER,  -- IэёрщфхЁ                                tinyint
                          nvl(u.UBARS,'||ispg_||')                                             ISP      ,  -- ╩юф ъюЁшёЄєтрўр                         smallint
                          migraSK.valid_symbol(trim(substr(nvl(c.NAME,c.FULLNAME),1,38)))      NMKK     ,  -- ╩юЁюЄъх эрщьхэєтрээ                     varchar(40)
                          substr(''00000''||to_char(c.OTRASL),-5)                              OE       ,  -- ├рыєч№                                  int
                          decode(c.REZIDENT,0,
                          decode(decode(c.TYPECLIENT,0,3,1,2,1),3,6,2,4,2),
                          decode(decode(c.TYPECLIENT,0,3,1,2,1),3,5,2,3,1))                    CODCAGENT,  -- ╒рЁръЄхЁшёЄшър
                          substr(''00000''||nvl(to_char(trim(c.SECTOR)),''''),-5)              ISE      ,  -- IэёЄшЄ.ёхъЄюЁ хъюэюьiъш                 int
                          c.SEX                                                                SEX      ,  -- ╤ЄрЄ№                                   tinyint
                          decode(nvl(c.TINKEY,0),0,3,4,2,c.TINKEY)                             TGR      ,  -- ╥шя фхЁцЁх║ёЄЁє                         tinyint
                          decode(substr(''00''||to_char(fx.K051),-2),''91'',3,
                                 decode(c.TYPECLIENT,0,3,1,2,1))                               CUSTTYPE ,  -- ╥шя ъыi║эЄр                             tinyint
                          substr(''00000''||to_char(c.VIDECO),-5)                              VED      ,  -- ┬шф хъюэюь.фi ы№эюёЄi                   int
                          migraSK.valid_symbol((select TRIM(SUBSTR(IDCONTRACT,1,10))
                                                from   S6_S6_CONTRACT_V
                                                where  IDCLIENT=c.IDCLIENT and
                                                       group_c=c.group_c))                     ND       ,
                          decode(pc.CLASS,''└'',1,
                                          ''┴'',2,
                                          ''┬'',3,
                                          ''├'',4,
                                          ''─'',5,null)                                        CRISK    ,
                          migraSK.valid_symbol(ad.PHONE)                                       PHONE    ,  -- ╥хыхЇюэ                                 varchar(20)
                          migraSK.valid_symbol(ad.POSTIND)                                     POSTIND  ,  -- ╧ю°Єютшщ iэфхъё                         varchar(10)
                          migraSK.valid_symbol(ad.REGION)                                      OBLAST   ,  -- ╬сырёЄ№                                 varchar(40)
                          migraSK.valid_symbol(ad.RAYON)                                       RAYON    ,  -- ╨рщюэ                                   varchar(25)
                          migraSK.valid_symbol(ad.CITY)                                        CITY     ,  -- ╠iёЄю, эрёхы.яєэъЄ                      varchar(40)
                          migraSK.valid_symbol(ad.STREET)                                      STREET   ,  -- ┬єышЎ                                   varchar(40)
                          migraSK.valid_symbol(ad.HOUSE)                                       HOUSE    ,  -- ─iь                                     varchar(20)
                          migraSK.valid_symbol(ad.APARTMENT)                                   KVARTIRA ,  -- ╩трЁЄшЁр                                varchar(20)
                          migraSK.valid_symbol(ad.PHONE)                                       TEL      ,  -- ╥хыхЇюэ                                 varchar(20)
                          migraSK.valid_symbol(ad.EMAIL)                                       EMAIL    ,  -- ┼ыхъЄЁюээр рфЁхёр                       varchar(20)
                          NVL(ad.TYPEADDRES,0)                                                 TA       ,
                          null                                                                 SAB      ,  -- SAB
                          null                                                                 STMT     ,
                          null                                                                 RGADM    ,
                          migraSK.valid_symbol(sw.BIC_IN)                                      BIC
                   from   S6_S6_CLIENTS     c ,
                          S6_S6_P__CLIENTS  pc,
                          S6_S6_ADDRESSES   ad,
                          S6_S6_SWIFT_BIC   sw,
                          S6_S6_FORM_XOZ    fx,
                          USERS_SKARB6_BARS u
                   where  c.BIC='||p_filial||'           and
                          c.IDCLIENT=pc.IDCLIENT(+)      and
                          c.GROUP_C=pc.GROUP_C(+)        and
                          c.BIC=pc.BIC(+)                and
                          c.ISP_OWNER=u.USKARB6(+)       and
                          u.FILIAL(+)='''||p_filial||''' and
                          c.ADDRESS=ad.ID(+)             and
                          ad.BIC(+)='||p_filial||'       and
                          c.D_CLOSE is null              and
                          c.BIC=sw.BIC(+)                and
                          c.FORMXOZ=fx.ID(+))
           where  (IDCLIENT,GROUP_C,TA) in
                  (select IDCLIENT,GROUP_C,min(TA) from (
                   select distinct
                          to_char(c.CODNAL)                                                    TAXF     ,  -- ╩юф яырЄэшър яюфрЄъiт                   smallint
                          c.D_OPEN                                                             DATEON   ,  -- ─рЄр Ёх║ёЄЁрЎi┐                         smalldatetime
                          c.D_REGSA                                                            DATEA    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т рфьiэiёЄЁрЎi┐         smalldatetime
                          c.D_REGSTI                                                           DATET    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т яюфрЄъютiщ iэёяхъЎi┐  smalldatetime
                          c.DATEBIRTH                                                          BDAY     ,  -- ─рЄр эрЁюфцхээ                          smalldatetime
                          nvl(nullif(substr(''00''||to_char(c.FORMPRIVAT),-2),''99''),''ZZ'')  FS       ,  -- ╘юЁьр тырёэюёЄi                         tinyint
                          substr(''00''||to_char(fx.K051),-2)                                  SED      ,  -- ╘юЁьр уюёяюфрЁ■трээ                     char(3)
                          substr(''000''||to_char(c."FORMXOZ"),-3)                             K050     ,  -- ярЁрьхЄЁ K050                           char(3)
                          migraSK.valid_symbol(trim(substr(nvl(c.FULLNAME,c.NAME),1,70)))      NMK      ,  -- ╧ютэх эрщьхэєтрээ                       varchar(150)
                          c.IDCLIENT                                                           IDCLIENT ,  -- ╩юф                                     int
                          c.GROUP_C                                                            GROUP_C  ,  -- ╩юф+                                    int
                          migraSK.valid_symbol(c.IDCODE)                                       OKPO     ,  -- IфхэЄшЇiърЎiщэшщ ъюф                    varchar(10)
                          c.IDCOUNTRY                                                          COUNTRY  ,  -- ╩Ёр┐эр                                  smallint
                          c.IDNAL                                                              CDST     ,  -- ╧юфрЄъютр iэёяхъЎi                      tinyint
                          c.IDREG                                                              CREG     ,  -- ╨хуiюэ                                  tinyint
                          decode(nvl(c.INSIDER,99),21,2,22,3,23,5,30,4,c.INSIDER)              PRINSIDER,  -- IэёрщфхЁ                                tinyint
                          nvl(u.UBARS,'||ispg_||')                                             ISP      ,  -- ╩юф ъюЁшёЄєтрўр                         smallint
                          migraSK.valid_symbol(trim(substr(nvl(c.NAME,c.FULLNAME),1,38)))      NMKK     ,  -- ╩юЁюЄъх эрщьхэєтрээ                     varchar(40)
                          substr(''00000''||to_char(c.OTRASL),-5)                              OE       ,  -- ├рыєч№                                  int
                          decode(c.REZIDENT,0,
                          decode(decode(c.TYPECLIENT,0,3,1,2,1),3,6,4),
                          decode(decode(c.TYPECLIENT,0,3,1,2,1),3,5,3))                        CODCAGENT,  -- ╒рЁръЄхЁшёЄшър
                          substr(''00000''||nvl(to_char(trim(c.SECTOR)),''''),-5)              ISE      ,  -- IэёЄшЄ.ёхъЄюЁ хъюэюьiъш                 int
                          c.SEX                                                                SEX      ,  -- ╤ЄрЄ№                                   tinyint
                          decode(nvl(c.TINKEY,0),0,3,4,2,c.TINKEY)                             TGR      ,  -- ╥шя фхЁцЁх║ёЄЁє                         tinyint
                          decode(c.TYPECLIENT,0,3,1,2,1)                                       CUSTTYPE ,  -- ╥шя ъыi║эЄр                             tinyint
                          substr(''00000''||to_char(c.VIDECO),-5)                              VED      ,  -- ┬шф хъюэюь.фi ы№эюёЄi                   int
                          migraSK.valid_symbol((select TRIM(SUBSTR(IDCONTRACT,1,10))
                                                from   S6_S6_CONTRACT_V
                                                where  IDCLIENT=c.IDCLIENT and
                                                       group_c=c.group_c))                     ND       ,
                          decode(pc.CLASS,''└'',1,
                                          ''┴'',2,
                                          ''┬'',3,
                                          ''├'',4,
                                          ''─'',5,null)                                        CRISK    ,
                          migraSK.valid_symbol(ad.PHONE)                                       PHONE    ,  -- ╥хыхЇюэ                                 varchar(20)
                          migraSK.valid_symbol(ad.POSTIND)                                     POSTIND  ,  -- ╧ю°Єютшщ iэфхъё                         varchar(10)
                          migraSK.valid_symbol(ad.REGION)                                      OBLAST   ,  -- ╬сырёЄ№                                 varchar(40)
                          migraSK.valid_symbol(ad.RAYON)                                       RAYON    ,  -- ╨рщюэ                                   varchar(25)
                          migraSK.valid_symbol(ad.CITY)                                        CITY     ,  -- ╠iёЄю, эрёхы.яєэъЄ                      varchar(40)
                          migraSK.valid_symbol(ad.STREET)                                      STREET   ,  -- ┬єышЎ                                   varchar(40)
                          migraSK.valid_symbol(ad.HOUSE)                                       HOUSE    ,  -- ─iь                                     varchar(20)
                          migraSK.valid_symbol(ad.APARTMENT)                                   KVARTIRA ,  -- ╩трЁЄшЁр                                varchar(20)
                          migraSK.valid_symbol(ad.PHONE)                                       TEL      ,  -- ╥хыхЇюэ                                 varchar(20)
                          migraSK.valid_symbol(ad.EMAIL)                                       EMAIL    ,  -- ┼ыхъЄЁюээр рфЁхёр                       varchar(20)
                          NVL(ad.TYPEADDRES,0)                                                 TA       ,
                          null                                                                 SAB      ,  -- SAB
                          null                                                                 STMT     ,
                          null                                                                 RGADM    ,
                          migraSK.valid_symbol(sw.BIC_IN)                                      BIC
                   from   S6_S6_CLIENTS     c ,
                          S6_S6_P__CLIENTS  pc,
                          S6_S6_ADDRESSES   ad,
                          S6_S6_SWIFT_BIC   sw,
                          S6_S6_FORM_XOZ    fx,
                          USERS_SKARB6_BARS u
                   where  c.BIC='||p_filial||'           and
                          c.IDCLIENT=pc.IDCLIENT(+)      and
                          c.GROUP_C=pc.GROUP_C(+)        and
                          c.BIC=pc.BIC(+)                and
                          c.ISP_OWNER=u.USKARB6(+)       and
                          u.FILIAL(+)='''||p_filial||''' and
                          c.ADDRESS=ad.ID(+)             and
                          ad.BIC(+)='||p_filial||'       and
                          c.D_CLOSE is null              and
                          c.BIC=sw.BIC(+)                and
                          c.FORMXOZ=fx.ID(+)
                  )
           group  by IDCLIENT,GROUP_C)';

    open cur_ for sql_;

    loop
      fetch cur_ into TAXF_     ,
                      DATEON_   ,
                      DATEA_    ,
                      DATET_    ,
                      BDAY_     ,
                      FS_       ,
                      SED_      ,
                      K050_     ,
                      NMK_      ,
                      IDCLIENT_ ,
                      GROUP_C_  ,
                      OKPO_     ,
                      COUNTRY_  ,
                      CDST_     ,
                      CREG_     ,
                      PRINSIDER_,
                      ISP_      ,
                      NMKK_     ,
                      OE_       ,
                      CODCAGENT_,
                      ISE_      ,
                      SEX_      ,
                      TGR_      ,
                      CUSTTYPE_ ,
                      VED_      ,
                      ND_       ,
                      CRISK_    ,
                      PHONE_    ,
                      POSTIND_  ,
                      OBLAST_   ,
                      RAYON_    ,
                      CITY_     ,
                      STREET_   ,
                      HOUSE_    ,
                      KVARTIRA_ ,
                      TEL_      ,
                      EMAIL_    ,
                      SAB_      ,
                      STMT_     ,
                      RGADM_    ,
                      BIC_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        select c.rnk
        into   rnk_
        from   customerw w,
               customer  c
        where  w.tag='RS6S6'                                                    and
               w.value=to_char(IDCLIENT_)||to_char(GROUP_C_)||to_char(p_filial) and
               w.rnk=c.rnk                                                      and
               bc.extract_mfo(c.branch)=MFOg_                                   and
               rownum<2;
      exception when no_data_found then
        RNK_ := null;
      end;

      bc.subst_mfo(MFOg_);

      begin

        select length(OBLAST_||' '||
                      RAYON_ ||' '||
                      CITY_  ||' '||
                      STREET_||' '||
                      HOUSE_ ||' '||
                      KVARTIRA_)-len_adr_
        into   len_raz_
        from   dual;

        if len_raz_>0 and length(CITY_)>=len_raz_ then
          CITY_ := trim(substr(CITY_,1,length(CITY_)-len_raz_));
        else
          if len_raz_>0 and length(STREET_)>=len_raz_ then
            STREET_ := trim(substr(STREET_,1,length(STREET_)-len_raz_));
          end if;
        end if;

        kl.setCustomerAttr(RNK_                   ,  -- Rnk_ IN OUT customer.rnk%type        -- Customer number
                           CUSTTYPE_              ,  -- Custtype_   customer.custtype%type   -- ╥шя ъышхэЄр: 1-срэъ, 2-■Ё.ышЎю, 3-Їшч.ышЎю
                           ND_                    ,  -- Nd_         customer.nd%type         -- ╣ фюуютюЁр
                           NMK_                   ,  -- Nmk_        customer.nmk%type        -- ═ршьхэютрэшх ъышхэЄр
                           null                   ,  -- Nmkv_       customer.nmkv%type       -- ═ршьхэютрэшх ъышхэЄр ьхцфєэрЁюфэюх
                           NMKK_                  ,  -- Nmkk_       customer.nmkk%type       -- ═ршьхэютрэшх ъышхэЄр ъЁрЄъюх
                           trim(
            /*FGOBL*/      OBLAST_||' '||
            /*FGDST*/      RAYON_ ||' '||
            /*FGTWN*/      CITY_  ||' '||
            /*FGADR(+3)*/  STREET_||' '||
                           HOUSE_ ||' '||
                           KVARTIRA_)             ,  -- Adr_        customer.adr%type        -- └фЁхё ъышхэЄр
                           CODCAGENT_             ,  -- Codcagent_  customer.codcagent%type  -- ╒рЁръЄхЁшёЄшър
                           COUNTRY_               ,  -- Country_    customer.country%type    -- ╤ЄЁрэр
                           PRINSIDER_             ,  -- Prinsider_  customer.prinsider%type  -- ╧Ёшчэръ шэёрщфхЁр
                           TGR_                   ,  -- Tgr_        customer.tgr%type        -- ╥шя уюё.ЁххёЄЁр
                           OKPO_                  ,  -- Okpo_       customer.okpo%type       -- ╬╩╧╬
                           STMT_                  ,  -- Stmt_       customer.stmt%type       -- ╘юЁьрЄ т√яшёъш
                           SAB_                   ,  -- Sab_        customer.sab%type        -- ▌ы.ъюф
                           DATEON_                ,  -- DateOn_     customer.date_on%type    -- ─рЄр ЁхушёЄЁрЎшш
                           TAXF_                  ,  -- Taxf_       customer.taxf%type       -- ═рыюуют√щ ъюф
                           CREG_                  ,  -- CReg_       customer.c_reg%type      -- ╩юф юсы.═╚
                           CDST_                  ,  -- CDst_       customer.c_dst%type      -- ╩юф Ёрщюэ.═╚
                           null                   ,  -- Adm_        customer.adm%type        -- └фьшэ.юЁурэ
                           null                   ,  -- RgTax_      customer.rgtax%type      -- ╨ху эюьхЁ т ═╚
                           RGADM_                 ,  -- RgAdm_      customer.rgadm%type      -- ╨ху эюьхЁ т └фь.
                           DATET_                 ,  -- DateT_      customer.datet%type      -- ─рЄр Ёху т ═╚
                           DATEA_                 ,  -- DateA_      customer.datea%type      -- ─рЄр Ёху. т рфьшэшёЄЁрЎшш
                           ISE_                   ,  -- Ise_        customer.ise%type        -- ╚эёЄ. ёхъ. ¤ъюэюьшъш
                           FS_                    ,  -- Fs_         customer.fs%type         -- ╘юЁьр ёюсёЄтхээюёЄш
                           OE_                    ,  -- Oe_         customer.oe%type         -- ╬ЄЁрёы№ ¤ъюэюьшъш
                           VED_                   ,  -- Ved_        customer.ved%type        -- ┬шф ¤ъ. фх Єхы№эюёЄш
                           SED_                   ,  -- Sed_        customer.sed%type        -- ╘юЁьр їюч щёЄтютрэш 
                           'Imported from SKARB6f',  -- Notes_      customer.notes%type      -- ╧Ёшьхўрэшх
                           null                   ,  -- Notesec_    customer.notesec%type    -- ╧Ёшьхўрэшх фы  ёыєцс√ схчюярёэюёЄш
                           CRISK_                 ,  -- CRisk_      customer.crisk%type      -- ╩рЄхуюЁш  Ёшёър
                           null                   ,  -- Pincode_    customer.pincode%type    --
                           null                   ,  -- RnkP_       customer.rnkp%type       -- ╨ху. эюьхЁ їюыфшэур
                           null                   ,  -- Lim_        customer.lim%type        -- ╦шьшЄ ърёё√
                           null                   ,  -- NomPDV_     customer.nompdv%type     -- ╣ т ЁххёЄЁх яырЄ. ╧─┬
                           '9'                    ,  -- MB_         customer.mb%type         -- ╧Ёшэрфы. ьрыюьє сшчэхёє
                           null                   ,  -- BC_         customer.bc%type         -- ╧Ёшчэръ ═┼ъышхэЄр срэър
                           '/'||MFOg_||'/'        ,  -- Tobo_       customer.tobo%type       -- ╩юф схчсрырэёютюую юЄфхыхэш 
                           ISP_                      -- Isp_        customer.isp%type        -- ╠хэхфцхЁ ъышхэЄр (юЄтхЄ. шёяюыэшЄхы№)
                          );
        begin
          kl.setCustomerEN(RNK_ ,  -- customer.rnk%type
                           ISE_ ,  -- customer.ise%type
                           FS_  ,  -- customer.fs%type
                           VED_ ,  -- customer.ved%type
                           OE_  ,  -- customer.oe%type
                           K050_,  -- customer.k050%type
                           SED_);  -- customer.sed%type
        exception when others then
          bars_audit.error('create_customerS6f - err(1): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                           'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                           'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                           'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                           'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                           'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                           'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                           'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                           'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                           'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                           'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                           'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                           'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                           'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                           'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                           'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                           'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                           'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                           'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                           'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                           'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                           'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                           'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                           'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                           'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                           'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                           'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                           'IDCLIENT  = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                           'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                           'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          fl_ := 1;
          p_code := p_code+1;
          bc.set_context;
          goto custplus;
        end;

        fl_ := 0;
        p_open := p_open+1;
--      l_ins_ := l_ins_+1;
      exception when others then
        bars_audit.error('create_customerS6f - err(0): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                         'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                         'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                         'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                         'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                         'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                         'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                         'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                         'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                         'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                         'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                         'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                         'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                         'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                         'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                         'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                         'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                         'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                         'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                         'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                         'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                         'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                         'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                         'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                         'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                         'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                         'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                         'IDCLIENT  = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                         'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                         'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        fl_ := 1;
        p_code := p_code+1;
        bc.set_context;
      end;

<<custplus>> null;

      if fl_=0 then
        if CUSTTYPE_=1 then
          begin
            kl.setBankAttr(RNK_,  -- Rnk_    NUMBER,
                           MFO_,  -- Mfo_    VARCHAR2,
                           BIC_,  -- Bic_    VARCHAR2,
                           null,  -- BicAlt_ VARCHAR2,
                           null,  -- Rating_ VARCHAR2,
                           null,  -- Kod_b_  NUMBER,
                           null,  -- Ruk_    VARCHAR2,
                           TEL_,  -- TelR_   VARCHAR2,
                           null,  -- Buh_    VARCHAR2,
                           null   -- TelB_   VARCHAR2
                          );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6f - err(2): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'IDCLIENT  = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=2 then
          begin
            kl.setCorpAttr(RNK_  ,  -- Rnk_    NUMBER,
                           NMK_  ,  -- Nmku_   VARCHAR2,
                           null  ,  -- Ruk_    VARCHAR2,
                           TEL_  ,  -- TelR_   VARCHAR2,
                           null  ,  -- Buh_    VARCHAR2,
                           null  ,  -- TelB_   VARCHAR2,
                           null  ,  -- TelFax_ varchar2,
                           EMAIL_,  -- EMail_  varchar2,
                           null     -- SealId_ number
                          );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6f - err(3): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'IDCLIENT  = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=3 then
          begin
            execute immediate 'select substr(trim(SERIES),-2)                                 ,
                                      substr(trim("NUMBER"),-6)                               ,
                                      trim(substr(trim(WHATDIST),1,'||to_char(len_organ_)||')),
                                      DATEDIST
                               from   S6_S6_CERTIFICATES
                               where  BIC='||p_filial||'                and
                                      IDCLIENT='||to_char(IDCLIENT_)||' and
                                      GROUP_C=' ||to_char(GROUP_C_) ||' and
                                      rownum<2'
                               into   Ser_   ,
                                      Numdoc_,
                                      Organ_ ,
                                      PDate_;
          exception when no_data_found then
            Ser_    := null;
            Numdoc_ := null;
            Organ_  := null;
            PDate_  := null;
          end;
          if Ser_ is null and Numdoc_ is null and Organ_ is not null then
            Orgao_ := Organ_;
            i_     := instr(Organ_,' ');
            If i_>2 then
              Ser_   := Substr(Substr(Organ_,1,i_-1),-2);
              Organ_ := Trim(Substr(Organ_,i_+1));
              i_     := instr(Organ_,' ');
              If i_=7 then
                Numdoc_ := Substr(Organ_,1,6);
                Organ_  := Trim(Substr(Organ_,i_+1));
              Else
                Ser_    := null;
                Organ_  := Orgao_;
              End If;
            End If;
          end if;
          begin
            kl.setPersonAttr(RNK_,     -- Rnk_    NUMBER,
                             SEX_,     -- Sex_    CHAR,
                             1   ,     -- Passp_  NUMBER,
                 /* null */  Ser_   ,  -- Ser_    VARCHAR2,
                 /* null */  Numdoc_,  -- Numdoc_ VARCHAR2,
                 /* null */  PDate_ ,  -- PDate_  DATE,
                 /* null */  Organ_ ,  -- Organ_  VARCHAR2,
                             BDAY_,    -- BDay_   DATE,
                             null,     -- BPlace_ VARCHAR2,
                             null,     -- TelD_   VARCHAR2,
                             TEL_      -- TelW_   VARCHAR2
                             );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6f - err(4): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'IDCLIENT  = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_             ,  -- Rnk_ INTEGER,
                                  'RS6S6'          ,  -- Tag_ VARCHAR2,
                                  to_char(IDCLIENT_)||
                                  to_char(GROUP_C_) ||
                                  to_char(p_filial),  -- Val_ VARCHAR2,
                                  0                   -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6f - err(5): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'IDCLIENT  = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGOBL',  -- Tag_ VARCHAR2,
                                  OBLAST_,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6f - err(6): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'IDCLIENT  = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGDST',  -- Tag_ VARCHAR2,
                                  RAYON_ ,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6f - err(7): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'IDCLIENT  = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGTWN',  -- Tag_ VARCHAR2,
                                  CITY_  ,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6f - err(8): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'IDCLIENT  = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_           ,     -- Rnk_ INTEGER,
                                  'FGADR'        ,     -- Tag_ VARCHAR2,
                                  Trim(STREET_||' '||  -- Val_ VARCHAR2,
                                       HOUSE_ ||' '||
                                       KVARTIRA_),
                                  0                    -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerS6f - err(9): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'IDCLIENT  = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          if POSTIND_ is not null or
             OBLAST_  is not null or
             RAYON_   is not null or
             CITY_    is not null or
             STREET_  is not null then
            sthokv_ := STREET_||','||HOUSE_||' ът.'||KVARTIRA_;
            if substr(sthokv_,-4)=' ът.' then
              sthokv_ := substr(sthokv_,1,length(sthokv_)-4);
            end if;
            if substr(sthokv_,-1)=',' then
              sthokv_ := substr(sthokv_,1,length(sthokv_)-1);
            end if;
            sthokv_ := trim(substr(sthokv_,1,100));

            begin
              update customer_address
              set    COUNTRY=COUNTRY_                 ,
                     zip=POSTIND_                     ,
                     domain=trim(substr(OBLAST_,1,30)),
                     region=RAYON_                    ,
                     locality=trim(substr(CITY_,1,30)),
                     address=sthokv_
              where  rnk=RNK_ and
                     type_id=1;
              if SQL%rowcount=0 then
                insert
                into   customer_address (rnk     ,
                                         type_id ,
                                         COUNTRY ,
                                         zip     ,
                                         domain  ,
                                         region  ,
                                         locality,
                                         address)
                                 values (RNK_                      ,
                                         1                         ,
                                         COUNTRY_                  ,
                                         POSTIND_                  ,
                                         trim(substr(OBLAST_,1,30)),
                                         RAYON_                    ,
                                         trim(substr(CITY_,1,30))  ,
                                         sthokv_);
              end if;
              fl_ := 0;
            exception when others then
              bars_audit.error('create_customerS6f - err(10): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                               'RNK       = '||RNK_            ||', '||Chr(13)||Chr(10)||
                               'CUSTTYPE  = '||CUSTTYPE_       ||', '||Chr(13)||Chr(10)||
                               'ND        = '||ND_             ||', '||Chr(13)||Chr(10)||
                               'NMK       = '||NMK_            ||', '||Chr(13)||Chr(10)||
                               'NMKK      = '||NMKK_           ||', '||Chr(13)||Chr(10)||
                               'CODCAGENT = '||CODCAGENT_      ||', '||Chr(13)||Chr(10)||
                               'COUNTRY   = '||COUNTRY_        ||', '||Chr(13)||Chr(10)||
                               'PRINSIDER = '||PRINSIDER_      ||', '||Chr(13)||Chr(10)||
                               'TGR       = '||TGR_            ||', '||Chr(13)||Chr(10)||
                               'OKPO      = '||OKPO_           ||', '||Chr(13)||Chr(10)||
                               'STMT      = '||STMT_           ||', '||Chr(13)||Chr(10)||
                               'SAB       = '||SAB_            ||', '||Chr(13)||Chr(10)||
                               'DATEON    = '||DATEON_         ||', '||Chr(13)||Chr(10)||
                               'TAXF      = '||TAXF_           ||', '||Chr(13)||Chr(10)||
                               'CDST      = '||CDST_           ||', '||Chr(13)||Chr(10)||
                               'CREG      = '||CREG_           ||', '||Chr(13)||Chr(10)||
                               'RGADM     = '||RGADM_          ||', '||Chr(13)||Chr(10)||
                               'DATET     = '||DATET_          ||', '||Chr(13)||Chr(10)||
                               'DATEA     = '||DATEA_          ||', '||Chr(13)||Chr(10)||
                               'ISE       = '||ISE_            ||', '||Chr(13)||Chr(10)||
                               'FS        = '||FS_             ||', '||Chr(13)||Chr(10)||
                               'OE        = '||OE_             ||', '||Chr(13)||Chr(10)||
                               'VED       = '||VED_            ||', '||Chr(13)||Chr(10)||
                               'SED       = '||SED_            ||', '||Chr(13)||Chr(10)||
                               'CRISK     = '||CRISK_          ||', '||Chr(13)||Chr(10)||
                               'ISP       = '||ISP_            ||', '||Chr(13)||Chr(10)||
                               'IDCLIENT  = '||IDCLIENT_       ||', '||Chr(13)||Chr(10)||
                               'GROUP_C   = '||GROUP_C_        ||', '||Chr(13)||Chr(10)||
                               'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
              bc.set_context;
            end;
          end if;
        end if;

        bc.set_context;
      end if;

      if fl_=0 then
         commit;
      else
         rollback;
      end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(1);

  end create_customerS6f;

--

  procedure open_accountS5f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    fl_          number;
    type         cur is ref cursor;
    cur_         cur;
    sql_         varchar2(32000);
    accR_        number;
    ACRA_        number;
    ACRB_        number;
    ACRdb_       number;
    ACRkr_       number;
    ndz_         number;
    id_          number;
    acc_3800_    number;
    acc_3801_    number;
    acc_6204_    number;
    ostc_3800_   number;
    ostc_3801_   number;
    ispg_        varchar(32);
    kvv_         accounts.kv%type;
    NLS_3800_    accounts.nls%type;
    NLS_3801_    accounts.nls%type;

    rnk_         customer.rnk%type;
    DAPP_        date;
    daos_        date;
    dazs_        date;
    kv_          accounts.kv%type;
    isp_         number;
    nbs_         char(4);
    tip_         char(3);
    vid_         number;
    ostc_        number;
    ostq_        number;
    lim_         number;
    nms_         varchar2(70);
    nls_         accounts.nls%type;
    nlsalt_      accounts.nlsalt%type;
    branch_      accounts.branch%type;
    OB22_        SPECPARAM_INT.ob22%type;
    OB88_        SPECPARAM_INT.ob88%type;
    P080_        SPECPARAM_INT.P080%type;
    MFO_         SPECPARAM_INT.MFO%type;
    R020_FA_     SPECPARAM_INT.R020_FA%type;
    R011_        SPECPARAM.R011%type;
    R013_        SPECPARAM.R013%type;
    S240_        SPECPARAM.S240%type;
    S080_        SPECPARAM.S080%type;
    S180_        SPECPARAM.S180%type;
    S190_        SPECPARAM.S190%type;
    S181_        SPECPARAM.S181%type;
    S260_        SPECPARAM.S260%type;
    S200_        SPECPARAM.S200%type;
    S120_        SPECPARAM.S120%type;
    S031_        SPECPARAM.S031%type;
    S182_        SPECPARAM.S182%type;
--  S130_        SPECPARAM.S130%type;
--  S090_        date;
    NKD_         SPECPARAM.NKD%type;
    IR_          int_ratn.ir%type;
    bdat_        int_ratn.bdat%type;
    pap_         ps.pap%type;
    serv_db_s_   accounts.nls%type;
    serv_kr_s_   accounts.nls%type;
    serv_i_va_   accounts.kv%type;
    NLSs6_       varchar2(15);
    I_VAs6_      number;
    PercenRate_  number;
    flS6_        number;
    open_        number;
    s7_          number;
    s8_          number;
    s9_          number;
--  l_ins_       number;
--  len_S080_    varchar2(4);
    mrnk_        varchar2(32);

    pos_         number;
    kfil_        number;
    newnls_      accounts.nls%type;
    nn_          int;
    ffff_        char(4);
    fff_         char(3);
    ff_          char(2);
    i_           int;
    group_c_     varchar2(2);
    OB22aaa_     varchar2(3);
    OB22aa_      varchar2(3);

    fi3_         char(3);
    ugosaldoa_   int;
    op_          int;

    Job_         number;
    MFOg_        varchar2(12);

  begin

    bars_alerter(0);

    gl.frcvr := 1;

--  l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),-4,3)
                       from   s6_s5_filial'
                       into   fi3_;

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=MFOg_                              and
           logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=MFOg_ and
             logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%';
      if ispg_ is null then
        select to_char(min(id))
        into   ispg_
        from   staff$base
        where  bc.extract_mfo(branch)=MFOg_ and
               tabn is not null;
        if ispg_ is null then
          select to_char(min(id))
          into   ispg_
          from   staff$base
          where  bc.extract_mfo(branch)=MFOg_;
        end if;
      end if;
    end if;

    select to_char(min(c.rnk))
    into   mrnk_
    from   customer  c,
           customerw w
    where  c.date_off is null              and
           c.notes='Imported from SKARB5f' and
           w.rnk=c.rnk                     and
           substr(w.value,-6)=p_filial;

    if mrnk_ is null then
      select min(rnk)
      into   mrnk_
      from   customer
      where  date_off is null and
             notes='Imported from SKARB6';
    end if;

--  select to_char(data_length)
--  into   len_S080_
--  from   user_tab_columns
--  where  table_name='SPECPARAM' and
--         column_name='S080';

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 disable';
    exception when OTHERS then
      null;
    end;

    sql_:='select distinct  /* to ACCOUNTS */
                  nvl(cw.rnk,'||mrnk_||')                                                                                                              rnk    ,
                  null                                                                                                                                 DAPP   ,
                  null                                                                                                                                 dazs   ,
                  to_date('''||p_datx||''')-4                                                                                                          daos   ,
                  s.I_VA                                                                                                                               kv     ,
                  nvl(u.UBARS,'||ispg_||')                                                                                                             isp    ,
--                substr(''0000''||to_char(s.BLS),-4)                                                                                                  nbs    ,
                  substr(to_char(s.NLS),1,4)                                                                                                           nbs    ,
--                decode(s.PS,98,2,1)                                                                                                                  pos    ,
                  decode(s.PS,98,decode(substr(to_char(s.NLS),1,4),''9809'',2,''9910'',2,1),1)                                                         pos    ,
                  0                                                                                                                                    ostc   ,
                  0                                                                                                                                    ostq   ,
                  s.LIMIT                                                                                                                              lim    ,
--                nvl(n.taxotype,0)                                                                                                                    vid    ,
                  (case when substr(to_char(s.NLS),1,2)=''25''                       then
                     11
                        when substr(to_char(s.NLS),1,4) in (''2610'',
                                                            ''2612'',
                                                            ''2615'',
                                                            ''2630'',
                                                            ''2635'',
                                                            ''2651'',
                                                            ''2652'',
                                                            ''1510'',
                                                            ''1511'',
                                                            ''1512'',
                                                            ''1515'',
                                                            ''1610'',
                                                            ''1611'',
                                                            ''1612'',
                                                            ''1615'')                then
                     4
                        when substr(to_char(s.NLS),1,4) in (''1500'',
                                                            ''1600'')                then
                     10
                        when substr(to_char(s.NLS),1,2) in (''20'',
                                                            ''21'',
                                                            ''22'',
                                                            ''27'')                  then
                     6
                        when substr(to_char(s.NLS),1,4)=''9802''                     then
                     5
                        when substr(to_char(s.NLS),1,4) in (''4310'',
                                                            ''4430'',
                                                            ''4432'',
                                                            ''4438'',
                                                            ''4439'',
                                                            ''4530'',
                                                            ''4532'',
                                                            ''4538'',
                                                            ''4539'')                then
                     8
                        when substr(to_char(s.NLS),1,4) in (select nbs from dpa_nbs) then
                     3
                   else
                     0
                   end)                                                                                                                                vid    ,
                  migraSK.valid_symbol(trim(substr(nvl(s.NK,''эх юяЁхфхыхэю''),1,70)))                                                                 nms    ,
                  to_char(s.NLS)                                                                                                                       nls    ,
                  to_char(s.NLS_ALT)                                                                                                                   nlsalt ,
                  nvl(f.branch,''/''||'''||MFOg_||'''||''/000000/'')                                                                                   branch ,
                  /* to SPECPARAM_INT */
                  substr(''00''||trim(p.OB22),-2)                                                                                                      OB22   ,
                  p.OB88                                                                                                                               OB88   ,
                  p.P080                                                                                                                               P080   ,
                  p.MFO                                                                                                                                MFO    ,
                  p.R020_FA                                                                                                                            R020_FA,
                  /* to SPECPARAM */
                  trim(p.R011)                                                                                                                         R011   ,
                  trim(p.R013)                                                                                                                         R013   ,
                  decode(upper(trim(p.S240)),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(trim(p.S240)))  S240   ,
                  nullif(to_char(p.RISK),''0'')                                                                                                        S080   ,
                  decode(upper(trim(p.S180)),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(trim(p.S180)))  S180   ,
                  to_char(p.KOD_PRO)                                                                                                                   S190   ,
                  decode(p.S180,''C'',''2'',
                                ''D'',''2'',
                                ''E'',''2'',
                                ''F'',''2'',
                                ''G'',''2'',
                                ''H'',''2'',''1'')                                                                                                     S181   ,
         /* ?? */ null                                                                                                                                 S260   ,
                  null                                                                                                                                 S200   ,
                  p.S120                                                                                                                               S120   ,
                  substr(''00''||to_char(p.OBESP),-2)                                                                                                  S031   ,
                  to_char(p.VID_KRE)                                                                                                                   S182   ,
--       /* ?? */ null                                                                                                                                 S090   ,
                  migraSK.valid_symbol(trim(s.IDCONTRACT))                                                                                             NKD    ,
                  /* to INT_RATN */
                  nvl(nullif(s.TYPE,0),3)                                                                                                              pap    ,
                  to_char(s.NLS)                                                                                                                       NLSs6  ,
                  s.I_VA                                                                                                                               I_VAs6 ,
                  nvl(s.kfil,0)                                                                                                                        kfil   ,
                  to_char(nvl(s.GROUP_C,0))                                                                                                            group_c
           from   customerw         cw,
                  S6_S5_SALDO       s ,
                --S6_S5_CLIENT      c ,
                  S6_S5_SPECPARA    p ,
                  S6_S5_FILIAL      f ,
                  (select nbs,
                          min(taxotype) taxotype
                   from   DPA_nbs
                   where  type=''DPA''
                   group  by nbs)   n ,
                  USERS_SKARB6_BARS u
           where  cw.tag(+)=''RS6S5''                                                        and
                  to_number(cw.value(+))=
                  nvl(s.CLI_KOD,0)*10000000+nvl(s.GROUP_C,0)*1000000+'||p_filial||'          and
--                n.nbs(+)=substr(''0000''||to_char(s.BLS),-4)                               and
                  n.nbs(+)=substr(to_char(s.NLS),1,4)                                        and
                  s.DCL is null                                                              and
                  p.NLS_SP(+)=s.NLS                                                          and
                  p.I_VA_SP(+)=s.I_VA                                                        and
                  f.kfil(+)=s.kfil                                                           and
--                (s.DCL is null                                                          or
--                 (s.DCL is not null and s.DCL>=add_months(trunc(sysdate,''YEAR''),-12)) or
--                 (s.DCL is not null and
--                  substr(''0000''||to_char(s."BalS"),-4) in (select NBS
--                                                             from   DPA_NBS)))             and
--                substr(s.NLS,1,4)||s.KSS||substr(s.NLS,6)=
--                vkrzn(substr(mfog_,1,5),
--                substr(s.NLS,1,4)||s.KSS||substr(s.NLS,6))                                 and
                  s.ISP=u.USKARB6(+)                                                         and
                  u.filial(+)='''||p_filial||'''                                             and
                  ((mod(nvl(s.GROUP_U,0),10)=0 and substr(to_char(s.NLS),1,1)<>''8'') or
                   (mod(nvl(s.GROUP_U,0),10) in (1,2) and substr(to_char(s.NLS),1,2)=''89''))
--                ((s.GROUP_U=0 and substr(s.NLS,1,1)<>''8'') or
--                ((s.GROUP_U=1 or s.GROUP_U=2) and substr(s.NLS,1,1)=''8''))                and
--         order  by substr(''0000''||to_char(s.BLS),-4) desc
           order  by substr(to_char(s.NLS),1,4) desc';
    open cur_ for sql_;

    LOOP

      fetch cur_ into rnk_    ,
                      DAPP_   ,
                      dazs_   ,
                      daos_   ,
                      kv_     ,
                      isp_    ,
                      nbs_    ,
                      pos_    ,
                      ostc_   ,
                      ostq_   ,
                      lim_    ,
                      vid_    ,
                      nms_    ,
                      nls_    ,
                      nlsalt_ ,
                      branch_ ,
                      OB22_   ,
                      OB88_   ,
                      P080_   ,
                      MFO_    ,
                      R020_FA_,
                      R011_   ,
                      R013_   ,
                      S240_   ,
                      S080_   ,
                      S180_   ,
                      S190_   ,
                      S181_   ,
                      S260_   ,
                      S200_   ,
                      S120_   ,
                      S031_   ,
                      S182_   ,
--                    S090_   ,
                      NKD_    ,
                      pap_    ,
                      NLSs6_  ,
                      I_VAs6_ ,
                      kfil_   ,
                      group_c_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

--    т√уЁхсрхь яЁюЎхэЄэє■ ёЄртъє

      begin
        execute immediate 'select date_st,
                                  proc_st
                           from   (select date_st,
                                          proc_st
                                   from   S6_S5_HIST_PR
                                   where  NLS='||nls_||' and
                                          I_VA='||to_char(kv_)||'
                                   order  by 1 desc, 2 desc)
                           where  rownum<2'
                           into   bdat_,
                                  IR_;
      exception when no_data_found then
        bdat_ := null;
        IR_   := null;
      end;

      fl_ := 0;
      op_ := 0;

--    юяЁхфхы хь шьяюЁЄшыш єцх ёў╕Є шыш эхЄ (т√сюЁър шч S6_MIGRNLS)

      begin
        select nls_bars
        into   newnls_
        from   S6_MIGRNLS
        where  nls_fil=nls_ and
               kv=kv_       and
               filial=p_filial;
      exception when no_data_found then
        newnls_ := null;
      end;

--    чфхё№ т√ўшёы хь newnls_ эр юёэютрэшш шэЇюЁьрЎшш шч ЄрсышЎ
--    S6_S5_SHABLON, S6_S5_DEPO, S6_S5_GROUP_C, S6_S5_FILIAL

      if newnls_ is null then -- сєфхь юЄъЁ√трЄ№ эют√щ ёў╕Є яю ьрёъх

--      1. юяЁхфхы хь FF_, FFF_, BRANCH_ шч S6_S5_FILIAL

        begin
          execute immediate 'select trim(branch)                 ,
                                    substr(''0000''||trim(ff),-4),
                                    substr(''000''||trim(ff),-3) ,
                                    substr(''00''||trim(ff),-2)
                             from   S6_S5_FILIAL
                             where  kfil='||to_char(kfil_)||' and
                                    rownum<2'
                             into   branch_,
                                    ffff_  ,
                                    fff_   ,
                                    ff_;
        exception when no_data_found then
          ffff_ := substr(branch_,-5,4);
          fff_  := substr(branch_,-4,3);
          ff_   := substr(branch_,-3,2);
        end;

--      2. ш∙хь ёў╕Є т S6_S5_DEPO, хёыш эр°ыш - newnls_ := vkrzn(KOTL) ш ┬╤и

        begin
          execute immediate 'select kotl,
                                    ob22,
                                    branch
                             from   S6_S5_DEPO
                             where  trim(nls)='''||nls_||'''           and
                                    i_va='||to_char(kv_)||'            and
                                    substr(kotl,1,4) not in (''1001'',
                                                             ''1101'',
                                                             ''1011'') and
                                    rownum<2'
                             into   newnls_,
                                    OB22_  ,
                                    branch_;
          nms_    := '╩юЄыютющ ёў╕Є '||substr(nls_,1,4)||' ╬┴22 '||OB22_;
          newnls_ := vkrzn(substr(MFOg_,1,5),newnls_);
          goto BCE;
        exception when OTHERS then
          null;
        end;

--      3. шэрўх - ш∙хь срырэёют√щ т S6_S5_SHABLON, хёыш хёЄ№, Єю схЁ╕ь
--         ёююЄтхЄёЄтє■∙є■ ьрёъє ёў╕Єр юЄЄєфр

        begin
          execute immediate 'select maska
                             from   S6_S5_SHABLON
                             where  ((length(trim(BALS))=4 and
                                      substr('''||nls_||''',1,4)=trim(BALS)) or
                                     (length(trim(BALS))=3 and
                                      substr('''||nls_||''',1,3)=trim(BALS)) or
                                     (length(trim(BALS))=2 and
                                      substr('''||nls_||''',1,2)=trim(BALS)) or
                                     (length(trim(BALS))=1 and
                                      substr('''||nls_||''',1,1)=trim(BALS))) and
                                    rownum<2'
                             into   newnls_;
          goto MASKA;
        exception when OTHERS then
          null;
        end;

--      4. шэрўх - ш∙хь їрЁръЄхЁшёЄъє ъюэЄЁрухэЄр ёў╕Єр т S6_S5_GROUP_C,
--         хёыш хёЄ№, Єю схЁ╕ь ёююЄтхЄёЄтє■∙є■ ьрёъє ёў╕Єр юЄЄєфр

        begin
          execute immediate 'select maska
                             from   S6_S5_GROUP_C
                             where  group_c='''||group_c_||''' and
                                    rownum<2'
                             into   newnls_;
          goto MASKA;
        exception when OTHERS then
          null;
        end;

--      5. шэрўх - фюсрты хь ъ ёў╕Єє рЁшЇьхЄшўхёъш 1 (Ўшъы) ш юяЁхфхы хь
--         яхЁт√щ яюярт°шщ ёў╕Є, хую ш яЁшётрштрхь т newnls_

        newnls_ := nls_;

        if substr(newnls_,1,4) in ('1001','1101','1011') then
          newnls_ := substr(newnls_,1,3)||'2'||substr(newnls_,5);
        end if;

        newnls_ := vkrzn(substr(MFOg_,1,5),newnls_);

        i_ := 0;
        while i_=0
        loop
          begin
            select 0
            into   i_
            from   accounts
            where  nls=newnls_ and
                   kv=kv_;
            newnls_ := vkrzn(substr(MFOg_,1,5),to_char(to_number(newnls_)+1));
          exception when no_data_found then
            i_ := 1;
          end;
        end loop;

        goto BCE; -- cў╕Є юяЁхфхыхэ!

<<MASKA>> null; -- чфхё№ ЁрчюсЁрЄ№ ьрёъє ╤┴┼╨┴└═╩└, т√ЁюфшЄ№ °рсыюэ т
                -- ьюфшЇшърЄюЁрї ┴└╨╤р ш юяЁхфхышЄ№ ёў╕Є яю хэЄюьє °рсыюэє!

--      BBBB          - срырэёют√щ ёў╕Є    (┬ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      GGGGGG, GGGGG - RNK
--      HHH, HH шыш H - эюьхЁ яю яюЁ фъє   (═ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      K             - ъюэЄЁюы№э√щ ЁрчЁ ф (╩ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      FFF шыш FF    - ъюф юЄфхыхэш 
--      AAA шыш AA    - ъюф ╬┴22           (└ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)

        newnls_ := replace(upper(newnls_),'┬','B');
        newnls_ := replace(upper(newnls_),'╩','K');
        newnls_ := replace(upper(newnls_),'└','A');
        newnls_ := replace(upper(newnls_),'═','H');
        newnls_ := replace(upper(newnls_),'R',substr(group_c_,-1));

        OB22_   := replace(OB22_,'└','A');
        OB22_   := replace(OB22_,'┬','B');
        OB22_   := replace(OB22_,'╤','C');
        OB22_   := replace(OB22_,'═','H');
        OB22_   := replace(OB22_,'╩','K');
        OB22_   := replace(OB22_,'╠','M');
        OB22_   := replace(OB22_,'┼','E');
        OB22_   := replace(OB22_,'╒','X');
        OB22_   := replace(OB22_,'╨','P');
        OB22_   := replace(OB22_,'╬','O');
        OB22_   := replace(OB22_,'╥','T');

        OB22aaa_:= (case when upper(substr(nvl(OB22_,'00'),1,1))>'9' then
                      to_char(ascii(upper(substr(nvl(OB22_,'00'),1,1)))-55)||
                      substr(nvl(OB22_,'00'),-1)
                    else
                      '0'||to_char(substr(nvl(OB22_,'00'),1,1))||
                      substr(nvl(OB22_,'00'),-1)
                    end);
        OB22aa_ := substr(OB22aaa_,-2);

        newnls_ := replace(upper(newnls_),'BBBB',substr(nls_,1,4));
        newnls_ := replace(upper(newnls_),'G','R');
        newnls_ := replace(upper(newnls_),'H','╣');
        newnls_ := replace(upper(newnls_),'K','_');
        newnls_ := replace(upper(newnls_),'FFFF',ffff_);
        newnls_ := replace(upper(newnls_),'FFF',fff_);
        newnls_ := replace(upper(newnls_),'FF',ff_);
        newnls_ := replace(upper(newnls_),'AAA',OB22aaa_);
        newnls_ := replace(upper(newnls_),'AA',OB22aa_);

        if substr(nls_,1,4) in ('1001','1101','1011') then
          newnls_ := substr(nls_,1,3)||'2'||substr(newnls_,5);
        end if;

        toroot;
        delete
        from   nlsmask
        where  maskid='TemporaryM';

        insert
        into   nlsmask (MASKID,
                        DESCR ,
                        MASK)
                values ('TemporaryM'                           ,
                        '┬Ёхьхээр  ьрёър фы  °рсыюэр ёўхЄют ╤┴',
                        newnls_);
        commit;

--      яюыєўрхь ╨┼└╦▄═█╔ эюьхЁ ёў╕Єр

        tokf;
        newnls_ := f_newnls2(null               ,
                             'TemporaryM'       ,
                             substr(newnls_,1,4),
                             rnk_               ,
                             null               ,
                             kv_);

--      эшцэшщ сыюъ фюсртыхэ, ўЄюс√ эх с√ыю юфшэръют√ї ёўхЄют, т√ўшёыхээ√ї яю
--      ьрёъх (f_newnls2 ьюцхЄ Єръшї эрфхырЄ№, хёыш ьрёър ёў╕Єр схч эюьхЁр ╣,
--      шыш ё эюьхЁюь ╣, эю тёх ёўхЄр ё эюьхЁюь ╣ єцх с√ыш юЄъЁ√Є√ Ёрэхх)
--      т ¤Єюь ёыєўрх ъ т√ўшёыхээюьє яю ьрёъх ёў╕Єє т Ўшъых рЁшЇьхЄшўхёъш
--      фюсрты хЄё  1 фю Єхї яюЁ, яюър эх сєфхЄ эрщфхэ эєцэ√щ ётюсюфэ√щ ёў╕Є

        i_ := 0;
        while i_=0
        loop
          begin
            select 0
            into   i_
            from   accounts
            where  nls=newnls_ and
                   kv=kv_;
            newnls_ := vkrzn(substr(MFOg_,1,5),to_char(to_number(newnls_)+1));
          exception when no_data_found then
            i_ := 1;
          end;
        end loop;

<<BCE>> null;

      end if;

--    хёыш шэЇюЁьрЎш  яю ёў╕Єє NLS/KV ╤╩└╨┴р5 хёЄ№ т accountsw, Єю ¤Єю чэрўшЄ,
--    ўЄю ёююЄтхЄёЄтє■∙шщ ёў╕Є т ┴└╨╤х єцх юЄъЁ√Є - ьхэ хь Єюы№ъю ярЁрьхЄЁ√
--    ёў╕Єр
--    шэрўх т√яюыэ хь яЁюЎхфєЁє юяЁхфхыхэш  ═╬┬╬├╬ ёў╕Єр ш юЄъЁ√трхь хую
--    !!! хёыш ёў╕Є юяЁхфхы хЄё  шч ьрёъш, Єю ёЄЁюую схЁ╕Єё  "ьрёюўэ√щ" ёў╕Є,
--    ш хёыш юэ єцх юЄъЁ√Є, Єю ьхэ хь Єюы№ъю ярЁрьхЄЁ√ ¤Єюую ёў╕Єр
--    !! шэрўх Єръ: яюфьхэ хь ъюэЄЁюы№э√щ ЁрчЁ ф ш ёьюЄЁшь, хёыш ёў╕Є хёЄ№, Єю
--    фхырхь рЁшЇьхЄшўхёъш +1 ъ ёў╕Єє ш яЁюсєхь ¤ЄюЄ ёў╕Є (ш Єръ фю єяюЁр)

      bc.subst_branch(branch_); -- єёЄрэртыштрхь сЁрэў фы  юЄъЁ√трхьюую ёў╕Єр

--    чфхё№ шьххь newnls_ ш kv_ фы  юЄъЁ√Єш  ═╬┬╬├╬ ёў╕Єр шыш шчьхэхэш  ёЄрЁюую

      begin
        select acc
        into   accR_
        from   accounts
        where  nls=newnls_ and
               kv=kv_;
      exception when no_data_found then
        accR_ := null;
                when OTHERS then
        bars_audit.error('open_accountS5f - err(1): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                          'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                          'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                          'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                          'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
        fl_ := 1;
        goto kakaxer;
      end;

      if accR_ is null then
        ndz_ := null;
        --1. OP_REG_ex
        begin

          tip_ := 'ODB';

          if    substr(newnls_,1,3)='100' and substr(newnls_,1,4)<>'1007' then
            if kv_=980 then
              tip_ := 'KAS';
            else
              tip_ := 'KAV';
            end if;
          elsif substr(newnls_,1,3) in ('604','603','602') and kv_=980 then
              tip_ := 'SD ';
          elsif substr(newnls_,1,4) in ('2625','2605','2655') then
              tip_ := 'PK1';
          end if;

          if trunc(sysdate)<p_datx then
            begin
              insert
              into   fdat (fdat)
                   values (p_datx-4);
              commit;
            exception when OTHERS then
              null;
            end;
            gl.pl_dat(p_datx-4);
          else
            begin
              insert
              into   fdat (fdat)
                   values (p_datx);
              commit;
            exception when OTHERS then
              null;
            end;
            gl.pl_dat(p_datx);
          end if;

          gl.amfo := MFOg_;

          OP_REG_exfl(99,       -- mod_       INTEGER,   -- Opening mode :
                      null   ,  -- p1_        INTEGER,   -- 1st Par      :
                      0      ,  -- p2_        INTEGER,   -- 2nd Par      :
                      0      ,  -- p3_        INTEGER,   -- 3rd Par (Grp):
                      ndz_   ,  -- p4_ IN OUT INTEGER,   -- 4th Par      :
                      rnk_   ,  -- rnk_       INTEGER,   -- Customer number
                      newnls_,  -- p_nls_     VARCHAR2,  -- Account  number
                      kv_    ,  -- kv_        SMALLINT,  -- Currency code
                      nms_   ,  -- nms_       VARCHAR2,  -- Account name
                      tip_   ,  -- tip_       CHAR,      -- Account type
                      isp_   ,  -- isp_       SMALLINT,
                      accR_  ,  -- accR_  OUT INTEGER,
                      '1'    ,  -- nbsnull_   VARCHAR2 DEFAULT '1',
                      null   ,  -- pap_       NUMBER   DEFAULT NULL,
                      vid_   ,  -- vid_       NUMBER   DEFAULT NULL,
                      pos_   ,  -- pos_       NUMBER   DEFAULT NULL,
                      null   ,  -- sec_       NUMBER   DEFAULT NULL,
                      null   ,  -- seci_      NUMBER   DEFAULT NULL,
                      null   ,  -- seco_      NUMBER   DEFAULT NULL,
                      99     ,  -- blkd_      NUMBER   DEFAULT NULL,
                      99     ,  -- blkk_      NUMBER   DEFAULT NULL,
          /* lim_? */ null   ,  -- lim_       NUMBER   DEFAULT NULL,
                      null   ,  -- ostx_      VARCHAR2 DEFAULT NULL,
                      nlsalt_,  -- nlsalt_    VARCHAR2 DEFAULT NULL,
                      branch_,  -- tobo_      VARCHAR2 DEFAULT NULL,
                      null   ,  -- accc_      NUMBER   DEFAULT NULL,
                      0);
          op_ := 1;
          begin
            update accounts
            set    dapp=dapp_
            where  acc=accR_;
          EXCEPTION WHEN OTHERS THEN
            bars_audit.error('open_accountS5f - err(2): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
--          fl_ := 1;
          end;
          begin
            update ree_tmp
            set    ot=6
            where  nls=newnls_ and
                   kv=kv_      and
                   ot=1        and
                   fn_o is null;
          EXCEPTION WHEN OTHERS THEN
            bars_audit.error('open_accountS5f - err(9): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;
--        l_ins_ := l_ins_+1;
        exception when others then
          bars_audit.error('open_accountS5f - err(3): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                            'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                            'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                            'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                            'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          p_code := p_code+1;
          fl_ := 1;
        end;
      end if;

      if fl_=0 then
        select count(*)
        into   flS6_
        from   accountsw
        where  acc=accR_ and
               tag='IS6S5';
        if flS6_=0 then
          select count(1)
          into   ugosaldoa_
          from   saldoa
          where  acc=accr_;

          if ugosaldoa_=0 then
            begin
              insert
              into   saldoa (acc ,
                             fdat,
                             pdat,
                             ostf,
                             dos ,
                             kos)
                     values (accR_   ,
                             gl.bdate,
                             dapp_   ,
                             0       ,
                             0       ,
                             0);
            EXCEPTION WHEN OTHERS THEN
              null;
            end;
          end if;
        else
          update accounts
          set    daos=daos_
          where  acc=accR_;
        end if;

        if op_=1 then
          begin
            insert
            into   accountsw (acc,
                              tag,
                              value)
                      values (accR_  ,
                              'IS6S5',
                              'Imported from SKARB5f');
          exception when others then
            bars_audit.error('open_accountS5f - err(4): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        --2. INSERT or UPDATE SPECPARAM_INT

        if fl_=0 then
          begin
            insert
            into   SPECPARAM_INT (acc    ,
                                  p080   ,
                                  ob22   ,
                                  mfo    ,
                                  r020_fa,
                                  ob88)
                          values (accR_   ,
                                  P080_   ,
                                  OB22_   ,
                                  MFO_    ,
                                  R020_FA_,
                                  OB88_);
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
            begin
              update SPECPARAM_INT
              set    p080=P080_      ,
                     ob22=OB22_      ,
                     mfo=MFO_        ,
                     r020_fa=R020_FA_,
                     ob88=OB88_
              where  acc=accR_;
            EXCEPTION WHEN OTHERS THEN
              bars_audit.error('open_accountS5f - err(7u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;
                    WHEN OTHERS THEN
            bars_audit.error('open_accountS5f - err(7): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        --3. INSERT or UPDATE SPECPARAM

        if fl_=0 then
          begin
            insert
            into   SPECPARAM (acc ,
                              R011,
                              R013,
                              S240,
                              S080,
                              S180,
                              S190,
                              S181,
                              S260,
                              S200,
                              S120,
                              S031,
                              S182,
--                            S130,
--                            S090,
                              NKD)
                      values (accR_,
                              R011_,
                              R013_,
                              S240_,
                              S080_,
                              S180_,
                              S190_,
                              S181_,
                              S260_,
                              S200_,
                              S120_,
                              S031_,
                              S182_,
--                            S130_,
--                            S090_,
                              NKD_);
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
            begin
              update SPECPARAM
              set    R011=R011_,
                     R013=R013_,
                     S240=S240_,
                     S080=S080_,
                     S180=S180_,
                     S190=S190_,
                     S181=S181_,
                     S260=S260_,
                     S200=S200_,
                     S120=S120_,
                     S031=S031_,
                     S182=S182_,
--                   S130=S130_,
--                   S090=S090_,
                     NKD=NKD_
              where  acc=accR_;
            EXCEPTION WHEN OTHERS THEN
              bars_audit.error('open_accountS5f - err(8u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;
                    WHEN OTHERS THEN
            bars_audit.error('open_accountS5f - err(8): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        if substr(nls_,1,1) in ('2','3','9') then

--        ╧ЁюЎхэЄэ√х ърЁЄюўъш

          if fl_=0 then

            if IR_ is not null /* and ACRA_ is not null */ then

              if pap_=1 then
                 id_ := 0;
              else
                 id_ := 1;
              end if;

--            4. INSERT or UPDATE INT_ACCN

              begin
                insert
                into   INT_ACCN (ACC    ,  -- accR_
                                 ID     ,  -- id_
                                 METR   ,  -- 0
--                               BASEM  ,
                                 BASEY  ,  -- 0
                                 FREQ   ,  -- 1
--                               STP_DAT,
                                 ACR_DAT,  -- bankdate
--                               APL_DAT,  -- bankdate-1
--                               TT     ,
                                 ACRA   ,  -- ???
                                 ACRB
--                               S      ,
--                               TTB    ,
--                               KVB    ,
--                               NLSB   ,
--                               MFOB   ,
--                               NAMB   ,
--                               NAZN   ,
--                               IO     ,
--                               BRANCH    -- branch_
                                )
                         values (accR_     ,
                                 id_       ,
                                 0         ,
--                               null      ,
                                 0         ,
                                 1         ,
--                               null      ,
                                 bankdate  ,
--                               bankdate-1,
--                               null      ,
                                 accR_     ,  -- ACRA_ ???
                                 null         -- ACRB_ ???
--                               null      ,
--                               null      ,
--                               null      ,
--                               null      ,
--                               null      ,
--                               null      ,
--                               null      ,
--                               null      ,
--                               branch_
                                );
              EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                update INT_ACCN
                set    METR   =0         ,
--                     BASEM  =null      ,
                       BASEY  =0         ,
                       FREQ   =1         ,
--                     STP_DAT=null      ,
                       ACR_DAT=bankdate  ,
--                     APL_DAT=bankdate-1,
--                     TT     =null      ,
                       ACRA   =accr_     ,  -- ACRA_ ???
                       ACRB   =null         -- ACRB_ ???
--                     S      =null      ,
--                     TTB    =null      ,
--                     KVB    =null      ,
--                     NLSB   =null      ,
--                     MFOB   =null      ,
--                     NAMB   =null      ,
--                     NAZN   =null      ,
--                     IO     =null      ,
--                     BRANCH =branch_
                where  acc=accR_ and
                       id=id_;
                        WHEN OTHERS THEN
                bars_audit.error('open_accountS5f - err(6): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                  'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                  'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                  'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                  'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                p_code := p_code+1;
                fl_ := 1;
              end;

--            5. INSERT or UPDATE INT_RATN

              if fl_=0 then
                begin
                  insert
                  into   INT_RATN (acc   ,
                                   id    ,
                                   BDAT  ,
                                   IR    ,
                                   BR    ,
                                   OP    ,
                                   IDU --,
--                                 BRANCH
                                  )
                           values (accR_,
                                   id_  ,
                                   bdat_,
                                   IR_  ,
                                   null ,
                                   null ,
                                   1  --,
--                                 branch_
                                  );
                EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                  update INT_RATN
                  set    IR=IR_  ,
                         BR=null ,
                         OP=null ,
                         IDU=1 --,
--                       BRANCH=branch_
                  where  acc=accR_ and
                         id=id_    and
                         BDAT=bdat_;
                          WHEN OTHERS THEN
                  bars_audit.error('open_accountS5f - err(5):'||sqlerrm||', '||Chr(13)||Chr(10)||
                                                   'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                   'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                   'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                   'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                  p_code := p_code+1;
                  fl_ := 1;
                end;
              end if;
            end if;
          end if;
        end if;
      end if;

<<kakaxer>> null;

      bc.set_context;

      if fl_=0 then
        update S6_MIGRNLS
        set    NLS_BARS=newnls_
        where  NLS_FIL=nls_ and
               KV=kv_       and
               FILIAL=p_filial;
        if sql%rowcount=0 then
          insert
          into S6_MIGRNLS (NLS_FIL ,
                           KV      ,
                           NLS_BARS,
                           FILIAL)
                   values (nls_   ,
                           kv_    ,
                           newnls_,
                           p_filial);
        end if;
        commit;
        p_open := p_open+1;
      else
        rollback;
      end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 enable';
    exception when OTHERS then
      null;
    end;

    gl.frcvr := 0;

    bars_alerter(1);

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ёўхЄют (ACCOUNTS ш ёт чрээ√х)

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tableAC_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('open_accountS5f - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

  end open_accountS5f;

--

  procedure open_accountS6f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    fl_          number;
    type         cur is ref cursor;
    cur_         cur;
    sql_         varchar2(32000);
    accR_        number;
    ACRA_        number;
    ACRB_        number;
    ACRdb_       number;
    ACRkr_       number;
    ndz_         number;
    id_          number;
    acc_3800_    number;
    acc_3801_    number;
    acc_6204_    number;
    ostc_3800_   number;
    ostc_3801_   number;
    ispg_        varchar(32);
    kvv_         accounts.kv%type;
    NLS_3800_    accounts.nls%type;
    NLS_3801_    accounts.nls%type;

    rnk_         customer.rnk%type;
    DAPP_        date;
    daos_        date;
    dazs_        date;
    kv_          accounts.kv%type;
    isp_         number;
    nbs_         char(4);
    tip_         char(3);
    vid_         number;
    ostc_        number;
    ostq_        number;
    lim_         number;
    nms_         varchar2(70);
    nls_         accounts.nls%type;
    nlsalt_      accounts.nlsalt%type;
    branch_      accounts.branch%type;
    OB22_        SPECPARAM_INT.ob22%type;
    OB88_        SPECPARAM_INT.ob88%type;
    P080_        SPECPARAM_INT.P080%type;
    MFO_         SPECPARAM_INT.MFO%type;
    R020_FA_     SPECPARAM_INT.R020_FA%type;
    R011_        SPECPARAM.R011%type;
    R013_        SPECPARAM.R013%type;
    S080_        SPECPARAM.S080%type;
    S180_        SPECPARAM.S180%type;
    S190_        SPECPARAM.S190%type;
    S181_        SPECPARAM.S181%type;
    S240_        SPECPARAM.S240%type;
    S260_        SPECPARAM.S260%type;
    S200_        SPECPARAM.S200%type;
    S120_        SPECPARAM.S120%type;
    S031_        SPECPARAM.S031%type;
    S182_        SPECPARAM.S182%type;
--  S130_        SPECPARAM.S130%type;
--  S090_        date;
    NKD_         SPECPARAM.NKD%type;
    IR_          int_ratn.ir%type;
    bdat_        int_ratn.bdat%type;
    pap_         ps.pap%type;
    serv_db_s_   accounts.nls%type;
    serv_kr_s_   accounts.nls%type;
    serv_i_va_   accounts.kv%type;
    NLSs6_       varchar2(15);
    I_VAs6_      number;
    PercenRate_  number;
    flS6_        number;
--  open_        number;
    s7_          number;
    s8_          number;
    s9_          number;
--  l_ins_       number;
    len_S080_    varchar2(4);
    mrnk_        varchar2(32);

    pos_         number;
    kfil_        number;
    newnls_      accounts.nls%type;
    nn_          int;
    ffff_        char(4);
    fff_         char(3);
    ff_          char(2);
    i_           int;
    group_c_     varchar2(2);
    OB22aaa_     varchar2(3);
    OB22aa_      varchar2(3);

    fi3_         char(3);
    ugosaldoa_   int;
    op_          int;

    Job_         number;
    MFOg_        varchar2(12);

  begin

    bars_alerter(0);

    gl.frcvr := 1;

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),-4,3)
                       from   s6_s6_filial'
                       into   fi3_;

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=MFOg_                              and
           logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=MFOg_ and
             logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%';
      if ispg_ is null then
        select to_char(min(id))
        into   ispg_
        from   staff$base
        where  bc.extract_mfo(branch)=MFOg_ and
               tabn is not null;
        if ispg_ is null then
          select to_char(min(id))
          into   ispg_
          from   staff$base
          where  bc.extract_mfo(branch)=MFOg_;
        end if;
      end if;
    end if;

    select to_char(min(c.rnk))
    into   mrnk_
    from   customer  c,
           customerw w
    where  c.date_off is null              and
           c.notes='Imported from SKARB6f' and
           w.rnk=c.rnk                     and
           substr(w.value,-6)=p_filial;

    if mrnk_ is null then
      select min(rnk)
      into   mrnk_
      from   customer
      where  date_off is null and
             notes='Imported from SKARB6';
    end if;

    select to_char(data_length)
    into   len_S080_
    from   user_tab_columns
    where  table_name='SPECPARAM' and
           column_name='S080';

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 disable';
    exception when OTHERS then
      null;
    end;

    sql_:='select distinct  /* to ACCOUNTS */
                  nvl(cw.rnk,'||mrnk_||')                                                                                                                rnk    ,
     /* s.DAPP */ null                                                                                                                                   DAPP   ,
                  s.DCL                                                                                                                                  dazs   ,
                  to_date('''||p_datx||''')-4                                                                                                            daos   ,
                  s.I_VA                                                                                                                                 kv     ,
                  nvl(u.UBARS,'||ispg_||')                                                                                                               isp    ,
--                substr(''0000''||to_char(s.BALS),-4)                                                                                                   nbs    ,
                  substr(s.NLS,1,4)                                                                                                                      nbs    ,
--                decode(s.ps,98,2,1)                                                                                                                    pos    ,
                  decode(s.ps,98,decode(substr(s.NLS,1,4),''9809'',2,''9910'',2,1),1)                                                                    pos    ,
                  0                                                                                                                                      ostc   ,
                  0                                                                                                                                      ostq   ,
                  s.LIMIT*100                                                                                                                            lim    ,
--                s.type                                                                                                                                 vid    ,
                  (case when substr(s.NLS,1,2)=''25''                       then
                     11
                        when substr(s.NLS,1,4) in (''2610'',
                                                   ''2612'',
                                                   ''2615'',
                                                   ''2630'',
                                                   ''2635'',
                                                   ''2651'',
                                                   ''2652'',
                                                   ''1510'',
                                                   ''1511'',
                                                   ''1512'',
                                                   ''1515'',
                                                   ''1610'',
                                                   ''1611'',
                                                   ''1612'',
                                                   ''1615'')                then
                     4
                        when substr(s.NLS,1,4) in (''1500'',
                                                   ''1600'')                then
                     10
                        when substr(s.NLS,1,2) in (''20'',
                                                   ''21'',
                                                   ''22'',
                                                   ''27'')                  then
                     6
                        when substr(s.NLS,1,4)=''9802''                     then
                     5
                        when substr(s.NLS,1,4) in (''4310'',
                                                   ''4430'',
                                                   ''4432'',
                                                   ''4438'',
                                                   ''4439'',
                                                   ''4530'',
                                                   ''4532'',
                                                   ''4538'',
                                                   ''4539'')                then
                     8
                        when substr(s.NLS,1,4) in (select nbs from dpa_nbs) then
                     3
                   else
                     0
                   end)                                                                                                                                  vid    ,
                  migraSK.valid_symbol(trim(substr(nvl(s.NK,''эх юяЁхфхыхэю''),1,70)))                                                                   nms    ,
                  trim(substr(s.NLS,1,4)||s.KSS||substr(s.NLS,5))                                                                                        nls    ,
                  trim(substr(s.NLS_ALT,1,14))                                                                                                           nlsalt ,
                  nvl(f.branch,''/''||'''||MFOg_||'''||''/000000/'')                                                                                     branch ,
                  /* to SPECPARAM_INT */
                  substr(''00''||trim(p.OB22),-2)                                                                                                        OB22   ,
                  p.OB88                                                                                                                                 OB88   ,
                  p.P080                                                                                                                                 P080   ,
                  to_char(p.MFO)                                                                                                                         MFO    ,
                  p.R020_FA                                                                                                                              R020_FA,
                  /* to SPECPARAM */
                  trim(p.R011)                                                                                                                           R011   ,
                  trim(p.R013)                                                                                                                           R013   ,
                  decode(upper(trim(p.S240)),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(trim(p.S240)))    S240   ,
                  substr(to_char(nullif(co.C_RISK,0)),1,'||len_S080_||')                                                                                 S080   ,
                  decode(upper(trim(co.TERM)),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(trim(co.TERM)))  S180   ,
                  trim(co.PROLONG)                                                                                                                       S190   ,
                  to_char(t.S181)                                                                                                                        S181   ,
                  t.S260                                                                                                                                 S260   ,
                  to_char(co.SOURCE)                                                                                                                     S200   ,
                  to_char(co.EMIS)                                                                                                                       S120   ,
                  to_char(co.V_MAIN)                                                                                                                     S031   ,
                  to_char(mod(co.T_KR,10))                                                                                                               S182   ,
                  migraSK.valid_symbol(trim(substr(co.IDCONTRACT,1,40)))                                                                                 NKD    ,
                  /* to INT_RATN */
                  ps.pap                                                                                                                                 pap    ,
                  trim(s.NLS)                                                                                                                            NLSs6  ,
                  s.I_VA                                                                                                                                 I_VAs6 ,
                  nvl(s.depart,0)                                                                                                                        kfil   ,
                  to_char(nvl(c.GROUP_C,0))                                                                                                              group_c
           from   customerw         cw,
                  S6_S6_SALDO       s ,
                  S6_S6_CLIENTS     c ,
                  S6_S6_CONTRACT    co,
                  S6_S6_TARGET      t ,
                  S6_S6_P__SALDO    p ,
                  S6_S6_FILIAL      f ,
                --branch_parameters bp,
                  USERS_SKARB6_BARS u ,
                  ps
           where  cw.tag(+)=''RS6S6''                                                                                                    and
                  to_number(cw.value(+))=c.IDCLIENT*10000000+c.GROUP_C*1000000+'||p_filial||'                                            and
                  c.IDCLIENT=co.IDCLIENT                                                                                                 and
                  c.GROUP_C=co.GROUP_C                                                                                                   and
                  s.BIC='||p_filial||'                                                                                                   and
                  c.BIC=co.BIC                                                                                                           and
                  s.BIC=co.BIC                                                                                                           and
                  upper(rtrim(co.IDCONTRACT))=upper(rtrim(s.IDCONTRACT))                                                                 and
                  s.DCL is null                                                                                                          and
                  f.kfil(+)=nvl(s.depart,0)                                                                                              and
                  s.ISP_OWNER=u.USKARB6(+)                                                                                               and
                  u.filial(+)='''||p_filial||'''                                                                                         and
                  co.TARGET=t.ID(+)                                                                                                      and
                  trim(s.NLS)=trim(p.NLS(+))                                                                                             and
                  s.I_VA=p.I_VA(+)                                                                                                       and
--                mod(nvl(s.GROUP_U,0),10)=mod(nvl(p.GROUP_U(+),0),10)       and
--                ((mod(nvl(s.GROUP_U,0),10)=0 and substr(s.NLS,1,1)<>''8'') or
--                 (mod(nvl(s.GROUP_U,0),10) in (1,2) and substr(s.NLS,1,2)=''89''))                                                     and
--                mod(nvl(nullif(s.GROUP_U,'||p_filial||'),0),100)=mod(nvl(nullif(p.GROUP_U(+),'||p_filial||'),0),100) and
--                ((mod(nvl(nullif(s.GROUP_U,'||p_filial||'),0),100) in (0,9,24,30) and substr(s.NLS,1,1)<>''8'')      or
--                 (mod(nvl(nullif(s.GROUP_U,'||p_filial||'),0),100) in (1,2,10,11,25,26,31,32) and substr(s.NLS,1,2)=''89''))           and
                  to_number(replace(to_char(s.GROUP_U),'''||p_filial||'''))=to_number(replace(to_char(p.GROUP_U(+)),'''||p_filial||''')) and
                  ((to_number(replace(to_char(s.GROUP_U),'''||p_filial||''')) in (0,9,24,30) and substr(s.NLS,1,1)<>''8'')            or
                   (to_number(replace(to_char(s.GROUP_U),'''||p_filial||''')) in (1,2,10,11,25,26,31,32) and substr(s.NLS,1,2)=''89''))  and
--                substr(''0000''||to_char(s.BALS),-4)=ps.nbs(+)
                  substr(s.NLS,1,4)=ps.nbs(+)
--         order  by substr(''0000''||to_char(s.BALS),-4) desc
           order  by substr(s.NLS,1,4) desc';

    open cur_ for sql_;

    LOOP

      fetch cur_ into rnk_    ,
                      DAPP_   ,
                      dazs_   ,
                      daos_   ,
                      kv_     ,
                      isp_    ,
                      nbs_    ,
                      pos_    ,
                      ostc_   ,
                      ostq_   ,
                      lim_    ,
                      vid_    ,
                      nms_    ,
                      nls_    ,
                      nlsalt_ ,
                      branch_ ,
                      OB22_   ,
                      OB88_   ,
                      P080_   ,
                      MFO_    ,
                      R020_FA_,
                      R011_   ,
                      R013_   ,
                      S240_   ,
                      S080_   ,
                      S180_   ,
                      S190_   ,
                      S181_   ,
                      S260_   ,
                      S200_   ,
                      S120_   ,
                      S031_   ,
                      S182_   ,
                      NKD_    ,
                      pap_    ,
                      NLSs6_  ,
                      I_VAs6_ ,
                      kfil_   ,
                      group_c_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        execute immediate '
                select bdat      ,
                       PERCENRATE,
                       serv_db_s ,
                       serv_kr_s ,
                       serv_i_va
                from   (select nvl(DA,bankdate)             bdat     ,
                               PERCENRATE                            ,
                               trim(substr(serv_db_s,1,14)) serv_db_s,
                               trim(substr(serv_kr_s,1,14)) serv_kr_s,
                               serv_i_va                    serv_i_va
                        from   S6_S6_CHARGEPR
                        where  trim(NLS)='''||NLSs6_||''' and
                               I_VA='||I_VAs6_||'
                        order  by 1 desc, 2 desc)
                where  rownum<2'
                into   bdat_      ,
                       PercenRate_,
                       serv_db_s_ ,
                       serv_kr_s_ ,
                       serv_i_va_;

        execute immediate '
                select p.PERCEN
                from   S6_S6_HIST_PR p
                where  p.PERCENRATE='||PercenRate_||' and
                       p.DA=(select max(DA)
                             from   S6_S6_HIST_PR
                             where  PERCENRATE=p.PERCENRATE)'
                into   IR_;
      exception when no_data_found then
        bdat_      := null;
        serv_db_s_ := null;
        serv_kr_s_ := null;
        serv_i_va_ := null;
        IR_        := null;
      end;

      fl_ := 0;
      op_ := 0;

--    юяЁхфхы хь шьяюЁЄшыш єцх ёў╕Є шыш эхЄ (т√сюЁър шч S6_MIGRNLS)

      begin
        select nls_bars
        into   newnls_
        from   S6_MIGRNLS
        where  nls_fil=nls_ and
               kv=kv_       and
               filial=p_filial;
      exception when no_data_found then
        newnls_ := null;
      end;

--    чфхё№ т√ўшёы хь newnls_ эр юёэютрэшш шэЇюЁьрЎшш шч ЄрсышЎ
--    S6_S6_SHABLON, S6_S6_DEPO, S6_S6_GROUP_C, S6_S6_FILIAL

      if newnls_ is null then -- сєфхь юЄъЁ√трЄ№ эют√щ ёў╕Є яю ьрёъх

--      1. юяЁхфхы хь FF_, FFF_, BRANCH_ шч S6_S6_FILIAL

        begin
          execute immediate 'select trim(branch)                 ,
                                    substr(''0000''||trim(ff),-4),
                                    substr(''000''||trim(ff),-3) ,
                                    substr(''00''||trim(ff),-2)
                             from   S6_S6_FILIAL
                             where  kfil='||to_char(kfil_)||' and
                                    rownum<2'
                             into   branch_,
                                    ffff_  ,
                                    fff_   ,
                                    ff_;
        exception when no_data_found then
          ffff_ := substr(branch_,-5,4);
          fff_  := substr(branch_,-4,3);
          ff_   := substr(branch_,-3,2);
        end;

--      2. ш∙хь ёў╕Є т S6_S6_DEPO, хёыш эр°ыш - newnls_ := vkrzn(KOTL) ш ┬╤и

        begin
          execute immediate 'select kotl,
                                    ob22,
                                    branch
                             from   S6_S6_DEPO
                             where  trim(nls)='''||nls_||'''           and
                                    i_va='||to_char(kv_)||'            and
                                    substr(kotl,1,4) not in (''1001'',
                                                             ''1101'',
                                                             ''1011'') and
                                    rownum<2'
                             into   newnls_,
                                    OB22_  ,
                                    branch_;
          nms_    := '╩юЄыютющ ёў╕Є '||substr(nls_,1,4)||' ╬┴22 '||OB22_;
          newnls_ := vkrzn(substr(MFOg_,1,5),newnls_);
          goto BCE;
        exception when OTHERS then
          null;
        end;

--      3. шэрўх - ш∙хь срырэёют√щ т S6_S6_SHABLON, хёыш хёЄ№, Єю схЁ╕ь
--         ёююЄтхЄёЄтє■∙є■ ьрёъє ёў╕Єр юЄЄєфр

        begin
          execute immediate 'select maska
                             from   S6_S6_SHABLON
                             where  ((length(trim(BALS))=4 and
                                      substr('''||nls_||''',1,4)=trim(BALS)) or
                                     (length(trim(BALS))=3 and
                                      substr('''||nls_||''',1,3)=trim(BALS)) or
                                     (length(trim(BALS))=2 and
                                      substr('''||nls_||''',1,2)=trim(BALS)) or
                                     (length(trim(BALS))=1 and
                                      substr('''||nls_||''',1,1)=trim(BALS))) and
                                    rownum<2'
                             into   newnls_;
          goto MASKA;
        exception when OTHERS then
          null;
        end;

--      4. шэрўх - ш∙хь їрЁръЄхЁшёЄъє ъюэЄЁрухэЄр ёў╕Єр т S6_S6_GROUP_C,
--         хёыш хёЄ№, Єю схЁ╕ь ёююЄтхЄёЄтє■∙є■ ьрёъє ёў╕Єр юЄЄєфр

        begin
          execute immediate 'select maska
                             from   S6_S6_GROUP_C
                             where  group_c='''||group_c_||''' and
                                    rownum<2'
                             into   newnls_;
          goto MASKA;
        exception when OTHERS then
          null;
        end;

--      5. шэрўх - фюсрты хь ъ ёў╕Єє рЁшЇьхЄшўхёъш 1 (Ўшъы) ш юяЁхфхы хь
--         яхЁт√щ яюярт°шщ ёў╕Є, хую ш яЁшётрштрхь т newnls_

        newnls_ := nls_;

        if substr(newnls_,1,4) in ('1001','1101','1011') then
          newnls_ := substr(newnls_,1,3)||'2'||substr(newnls_,5);
        end if;

        newnls_ := vkrzn(substr(MFOg_,1,5),newnls_);

        i_ := 0;
        while i_=0
        loop
          begin
            select 0
            into   i_
            from   accounts
            where  nls=newnls_ and
                   kv=kv_;
            newnls_ := vkrzn(substr(MFOg_,1,5),to_char(to_number(newnls_)+1));
          exception when no_data_found then
            i_ := 1;
          end;
        end loop;

        goto BCE; -- cў╕Є юяЁхфхыхэ!

<<MASKA>> null; -- чфхё№ ЁрчюсЁрЄ№ ьрёъє ╤┴┼╨┴└═╩└, т√ЁюфшЄ№ °рсыюэ т
                -- ьюфшЇшърЄюЁрї ┴└╨╤р ш юяЁхфхышЄ№ ёў╕Є яю хэЄюьє °рсыюэє!

--      BBBB          - срырэёют√щ ёў╕Є    (┬ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      GGGGGG, GGGGG - RNK
--      HHH, HH шыш H - эюьхЁ яю яюЁ фъє   (═ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      K             - ъюэЄЁюы№э√щ ЁрчЁ ф (╩ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      FFF шыш FF    - ъюф юЄфхыхэш 
--      AAA шыш AA    - ъюф ╬┴22           (└ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)

        newnls_ := replace(upper(newnls_),'┬','B');
        newnls_ := replace(upper(newnls_),'╩','K');
        newnls_ := replace(upper(newnls_),'└','A');
        newnls_ := replace(upper(newnls_),'═','H');
        newnls_ := replace(upper(newnls_),'R',substr(group_c_,-1));

        OB22_   := replace(OB22_,'└','A');
        OB22_   := replace(OB22_,'┬','B');
        OB22_   := replace(OB22_,'╤','C');
        OB22_   := replace(OB22_,'═','H');
        OB22_   := replace(OB22_,'╩','K');
        OB22_   := replace(OB22_,'╠','M');
        OB22_   := replace(OB22_,'┼','E');
        OB22_   := replace(OB22_,'╒','X');
        OB22_   := replace(OB22_,'╨','P');
        OB22_   := replace(OB22_,'╬','O');
        OB22_   := replace(OB22_,'╥','T');

        OB22aaa_:= (case when upper(substr(nvl(OB22_,'00'),1,1))>'9' then
                      to_char(ascii(upper(substr(nvl(OB22_,'00'),1,1)))-55)||
                      substr(nvl(OB22_,'00'),-1)
                    else
                      '0'||to_char(substr(nvl(OB22_,'00'),1,1))||
                      substr(nvl(OB22_,'00'),-1)
                    end);
        OB22aa_ := substr(OB22aaa_,-2);

        newnls_ := replace(upper(newnls_),'BBBB',substr(nls_,1,4));
        newnls_ := replace(upper(newnls_),'G','R');
        newnls_ := replace(upper(newnls_),'H','╣');
        newnls_ := replace(upper(newnls_),'K','_');
        newnls_ := replace(upper(newnls_),'FFFF',ffff_);
        newnls_ := replace(upper(newnls_),'FFF',fff_);
        newnls_ := replace(upper(newnls_),'FF',ff_);
        newnls_ := replace(upper(newnls_),'AAA',OB22aaa_);
        newnls_ := replace(upper(newnls_),'AA',OB22aa_);

        if substr(nls_,1,4) in ('1001','1101','1011') then
          newnls_ := substr(nls_,1,3)||'2'||substr(newnls_,5);
        end if;

        toroot;
        delete
        from   nlsmask
        where  maskid='TemporaryM';

        insert
        into   nlsmask (MASKID,
                        DESCR ,
                        MASK)
                values ('TemporaryM'                           ,
                        '┬Ёхьхээр  ьрёър фы  °рсыюэр ёўхЄют ╤┴',
                        newnls_);
        commit;

--      яюыєўрхь ╨┼└╦▄═█╔ эюьхЁ ёў╕Єр

        tokf;
        newnls_ := f_newnls2(null               ,
                             'TemporaryM'       ,
                             substr(newnls_,1,4),
                             rnk_               ,
                             null               ,
                             kv_);
        i_ := 0;
        while i_=0
        loop
          begin
            select 0
            into   i_
            from   accounts
            where  nls=newnls_ and
                   kv=kv_;
            newnls_ := vkrzn(substr(MFOg_,1,5),to_char(to_number(newnls_)+1));
          exception when no_data_found then
            i_ := 1;
          end;
        end loop;

<<BCE>> null;

      end if;

      bc.subst_branch(branch_);

      begin
        select acc
        into   accR_
        from   accounts
        where  nls=newnls_ and
               kv=kv_;
      exception when no_data_found then
        accR_ := null;
                when OTHERS then
        bars_audit.error('open_accountS6f - err(1): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                          'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                          'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                          'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                          'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
        fl_ := 1;
        goto kakaxer;
      end;

      if accR_ is null then
        ndz_ := null;
        --1. OP_REG_ex
        begin

          tip_ := 'ODB';

          if    substr(newnls_,1,3)='100' and substr(newnls_,1,4)<>'1007' then
            if kv_=980 then
              tip_ := 'KAS';
            else
              tip_ := 'KAV';
            end if;
          elsif substr(newnls_,1,3) in ('604','603','602') and kv_=980 then
              tip_ := 'SD ';
          elsif substr(newnls_,1,4) in ('2625','2605','2655') then
              tip_ := 'PK1';
          end if;

          if trunc(sysdate)<p_datx then
            begin
              insert
              into   fdat (fdat)
                   values (p_datx-4);
              commit;
            exception when OTHERS then
              null;
            end;
            gl.pl_dat(p_datx-4);
          else
            begin
              insert
              into   fdat (fdat)
                   values (p_datx);
              commit;
            exception when OTHERS then
              null;
            end;
            gl.pl_dat(p_datx);
          end if;

          gl.amfo := MFOg_;

          OP_REG_exfl(99     ,  -- mod_       INTEGER,   -- Opening mode :
                      null   ,  -- p1_        INTEGER,   -- 1st Par      :
                      0      ,  -- p2_        INTEGER,   -- 2nd Par      :
                      0      ,  -- p3_        INTEGER,   -- 3rd Par (Grp):
                      ndz_   ,  -- p4_ IN OUT INTEGER,   -- 4th Par      :
                      rnk_   ,  -- rnk_       INTEGER,   -- Customer number
                      newnls_,  -- p_nls_     VARCHAR2,  -- Account  number
                      kv_    ,  -- kv_        SMALLINT,  -- Currency code
                      nms_   ,  -- nms_       VARCHAR2,  -- Account name
                      tip_   ,  -- tip_       CHAR,      -- Account type
                      isp_   ,  -- isp_       SMALLINT,
                      accR_  ,  -- accR_  OUT INTEGER,
                      '1'    ,  -- nbsnull_   VARCHAR2 DEFAULT '1',
                      null   ,  -- pap_       NUMBER   DEFAULT NULL,
          /* null */  vid_   ,  -- vid_       NUMBER   DEFAULT NULL,
          /* null */  pos_   ,  -- pos_       NUMBER   DEFAULT NULL,
                      null   ,  -- sec_       NUMBER   DEFAULT NULL,
                      null   ,  -- seci_      NUMBER   DEFAULT NULL,
                      null   ,  -- seco_      NUMBER   DEFAULT NULL,
                      99     ,  -- blkd_      NUMBER   DEFAULT NULL,
                      99     ,  -- blkk_      NUMBER   DEFAULT NULL,
          /* lim_ */  null   ,  -- lim_       NUMBER   DEFAULT NULL,
                      null   ,  -- ostx_      VARCHAR2 DEFAULT NULL,
                      nlsalt_,  -- nlsalt_    VARCHAR2 DEFAULT NULL,
                      branch_,  -- tobo_      VARCHAR2 DEFAULT NULL,
                      null   ,  -- accc_      NUMBER   DEFAULT NULL,
                      0);
          begin
            update accounts
            set    dapp=dapp_
            where  acc=accR_;
          EXCEPTION WHEN OTHERS THEN
            bars_audit.error('open_accountS6f - err(2): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
--          fl_ := 1;
          end;
          begin
            update ree_tmp
            set    ot=6
            where  nls=newnls_ and
                   kv=kv_      and
                   ot=1        and
                   fn_o is null;
          EXCEPTION WHEN OTHERS THEN
            bars_audit.error('open_accountS6f - err(9): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;
--        l_ins_ := l_ins_+1;
        exception when others then
          bars_audit.error('open_accountS6f - err(3): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                            'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                            'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                            'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                            'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          p_code := p_code+1;
          fl_ := 1;
        end;
      end if;

      if fl_=0 then
        select count(*)
        into   flS6_
        from   accountsw
        where  acc=accR_ and
               tag='IS6S6';
        if flS6_=0 then
          select count(1)
          into   ugosaldoa_
          from   saldoa
          where  acc=accr_;

          if ugosaldoa_=0 then
            begin
              insert
              into   saldoa (acc ,
                             fdat,
                             pdat,
                             ostf,
                             dos ,
                             kos)
                     values (accR_   ,
                             gl.bdate,
                             dapp_   ,
                             0       ,
                             0       ,
                             0);
            EXCEPTION WHEN others THEN
              null;
            end;
          end if;
        else
          update accounts
          set    daos=daos_
          where  acc=accR_;
        end if;

        if op_=1 then
          begin
            insert
            into   accountsw (acc,
                              tag,
                              value)
                      values (accR_  ,
                              'IS6S6',
                              'Imported from SKARB6f');
          exception when others then
            bars_audit.error('open_accountS6f - err(4): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        --2. INSERT or UPDATE SPECPARAM_INT

        if fl_=0 then
          begin
            insert
            into   SPECPARAM_INT (acc    ,
                                  p080   ,
                                  ob22   ,
                                  mfo    ,
                                  r020_fa,
                                  ob88)
                          values (accR_   ,
                                  P080_   ,
                                  OB22_   ,
                                  MFO_    ,
                                  R020_FA_,
                                  OB88_);
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
            begin
              update SPECPARAM_INT
              set    p080=P080_      ,
                     ob22=OB22_      ,
                     mfo=MFO_        ,
                     r020_fa=R020_FA_,
                     ob88=OB88_
              where  acc=accR_;
            EXCEPTION WHEN OTHERS THEN
              bars_audit.error('open_accountS6f - err(5u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;
                    WHEN OTHERS THEN
            bars_audit.error('open_accountS6f - err(5): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        --3. INSERT or UPDATE SPECPARAM

        if fl_=0 then
          begin
            insert
            into   SPECPARAM (acc ,
                              R011,
                              R013,
                              S240,
                              S080,
                              S180,
                              S190,
                              S181,
                              S260,
                              S200,
                              S120,
                              S031,
                              S182,
--                            S130,
                              NKD)
                      values (accR_,
                              R011_,
                              R013_,
                              S240_,
                              S080_,
                              S180_,
                              S190_,
                              S181_,
                              S260_,
                              S200_,
                              S120_,
                              S031_,
                              S182_,
--                            S130_,
                              NKD_);
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
            begin
              update SPECPARAM
              set    R011=R011_,
                     R013=R013_,
                     S240=S240_,
                     S080=S080_,
                     S180=S180_,
                     S190=S190_,
                     S181=S181_,
                     S260=S260_,
                     S200=S200_,
                     S120=S120_,
                     S031=S031_,
                     S182=S182_,
--                   S130=S130_,
                     NKD=NKD_
              where  acc=accR_;
            EXCEPTION WHEN OTHERS THEN
              bars_audit.error('open_accountS6f - err(6u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;
                    WHEN OTHERS THEN
            bars_audit.error('open_accountS6f - err(6): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        if substr(nls_,1,1) in ('2','3','9') then

--        ╧ЁюЎхэЄэ√х ърЁЄюўъш

          if fl_=0 then
            begin
              select acc
              into   ACRdb_
              from   accounts
              where  nls=serv_db_s_ and
                     kv=serv_i_va_;
            exception when no_data_found then
              ACRdb_ := null;
            end;
            begin
              select acc
              into   ACRkr_
              from   accounts
              where  nls=serv_kr_s_ and
                     kv=serv_i_va_;
            exception when no_data_found then
              ACRkr_ := null;
            end;

            if ACRdb_ is not null and ACRkr_ is not null then
              if substr(serv_db_s_,1,4)>substr(serv_kr_s_,1,4) then
                if substr(serv_kr_s_,1,4)='3800' then
                  ACRA_ := null;
                else
                  ACRA_ := ACRkr_;
                end if;
                if substr(serv_db_s_,1,4)='3800' then
                  ACRB_ := null;
                else
                  ACRB_ := ACRdb_;
                end if;
              else
                if substr(serv_db_s_,1,4)='3800' then
                  ACRA_ := null;
                else
                  ACRA_ := ACRdb_;
                end if;
                if substr(serv_kr_s_,1,4)='3800' then
                  ACRB_ := null;
                else
                  ACRB_ := ACRkr_;
                end if;
              end if;
            else
              if ACRdb_ is null and ACRkr_ is not null then
                if substr(serv_kr_s_,1,1)>'2' then
                  if substr(serv_kr_s_,1,4)='3800' then
                    ACRB_ := null;
                  else
                    ACRB_ := ACRkr_;
                  end if;
                  ACRA_ := null;
                else
                  if substr(serv_kr_s_,1,4)='3800' then
                    ACRA_ := null;
                  else
                    ACRA_ := ACRkr_;
                  end if;
                  ACRB_ := null;
                end if;
              end if;
              if ACRdb_ is not null and ACRkr_ is null then
                if substr(serv_db_s_,1,1)>'2' then
                  if substr(serv_db_s_,1,1)='3800' then
                    ACRB_ := null;
                  else
                    ACRB_ := ACRdb_;
                  end if;
                  ACRA_ := null;
                else
                  if substr(serv_db_s_,1,1)='3800' then
                    ACRA_ := null;
                  else
                    ACRA_ := ACRdb_;
                  end if;
                  ACRB_ := null;
                end if;
              end if;
              if ACRdb_ is null and ACRkr_ is null then
                ACRA_ := null;
                ACRB_ := null;
              end if;
            end if;

            if IR_ is not null /* and ACRA_ is not null */ then

              if pap_=1 then
                 id_ := 0;
              else
                 id_ := 1;
              end if;

--            4. INSERT or UPDATE INT_ACCN

              begin
                insert
                into   INT_ACCN (ACC    ,  -- accR_
                                 ID     ,  -- id_
                                 METR   ,  -- 0
--                               BASEM  ,
                                 BASEY  ,  -- 0
                                 FREQ   ,  -- 1
--                               STP_DAT,
                                 ACR_DAT,  -- bankdate
--                               APL_DAT,  -- bankdate-1
--                               TT     ,
                                 ACRA   ,  -- ???
                                 ACRB
--                               S      ,
--                               TTB    ,
--                               KVB    ,
--                               NLSB   ,
--                               MFOB   ,
--                               NAMB   ,
--                               NAZN   ,
--                               IO     ,
--                               BRANCH    -- branch_
                                )
                         values (accR_     ,
                                 id_       ,
                                 0         ,
--                               null      ,
                                 0         ,
                                 1         ,
--                               null      ,
                                 bankdate  ,
--                               bankdate-1,
--                               null      ,
                                 ACRA_     ,  -- ACRA ???
                                 ACRB_
--                               null      ,
--                               null      ,
--                               null      ,
--                               null      ,
--                               null      ,
--                               null      ,
--                               null      ,
--                               null      ,
--                               branch_
                                );
              EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                update INT_ACCN
                set    METR   =0         ,
--                     BASEM  =null      ,
                       BASEY  =0         ,
                       FREQ   =1         ,
--                     STP_DAT=null      ,
                       ACR_DAT=bankdate  ,
--                     APL_DAT=bankdate-1,
--                     TT     =null      ,
                       ACRA   =ACRA_     ,  -- ???
                       ACRB   =ACRB_
--                     S      =null      ,
--                     TTB    =null      ,
--                     KVB    =null      ,
--                     NLSB   =null      ,
--                     MFOB   =null      ,
--                     NAMB   =null      ,
--                     NAZN   =null      ,
--                     IO     =null      ,
--                     BRANCH =branch_
                where  acc=accR_ and
                       id=id_;
                        WHEN OTHERS THEN
                bars_audit.error('open_accountS6f - err(7): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                  'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                  'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                  'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                  'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                p_code := p_code+1;
                fl_ := 1;
              end;

--            5. INSERT or UPDATE INT_RATN

              if fl_=0 then
                begin
                  insert
                  into   INT_RATN (acc   ,
                                   id    ,
                                   BDAT  ,
                                   IR    ,
                                   BR    ,
                                   OP    ,
                                   IDU --,
--                                 BRANCH
                                  )
                           values (accR_ ,
                                   id_   ,
                                   bdat_ ,
                                   IR_   ,
                                   null  ,
                                   null  ,
                                   1   --,
--                                 branch_
                                  );
                EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                  update INT_RATN
                  set    IR=IR_  ,
                         BR=null ,
                         OP=null ,
                         IDU=1 --,
--                       BRANCH=branch_
                  where  acc=accR_ and
                         id=id_    and
                         BDAT=bdat_;
                          WHEN OTHERS THEN
                  bars_audit.error('open_accountS6f - err(8):'||sqlerrm||', '||Chr(13)||Chr(10)||
                                                   'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                   'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                   'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                   'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                  p_code := p_code+1;
                  fl_ := 1;
                end;
              end if;
            end if;
          end if;
        end if;
      end if;

<<kakaxer>> null;

      bc.set_context;

      if fl_=0 then
        update S6_MIGRNLS
        set    NLS_BARS=newnls_
        where  NLS_FIL=nls_ and
               KV=kv_       and
               FILIAL=p_filial;
        if sql%rowcount=0 then
          insert
          into S6_MIGRNLS (NLS_FIL ,
                           KV      ,
                           NLS_BARS,
                           FILIAL)
                   values (nls_   ,
                           kv_    ,
                           newnls_,
                           p_filial);
        end if;
        commit;
        p_open := p_open+1;
      else
        rollback;
      end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 enable';
    exception when OTHERS then
      null;
    end;

    gl.frcvr := 0;

    bars_alerter(1);

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ёўхЄют (ACCOUNTS ш ёт чрээ√х)

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tableAC_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('open_accountS6f - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

  end open_accountS6f;

--

  procedure drop_accountS5f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    accmax_  number;
    MFOg_    varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_accountS5f - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  delete from TABLEs

    begin
      bc.subst_mfo(MFOg_);
      delete from accounts_update           where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from saldoa                    where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam_int             where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam_update          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from rko_lst                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from dpt_deposit               where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(8): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from dpt_deposit               where acc_d      in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from dpt_deposit_clos          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from dpt_deposit_clos          where acc_d      in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from dpt_techaccounts          where dpt_acc    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from dpt_techaccounts          where tech_acc   in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(13): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    delete from DPT_VIDD                  where ACC7       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(14): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from DPU_DEAL                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(15): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from DPU_DEAL                  where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(16): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from DPU_DEAL_UPDATE           where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(17): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from DPU_DEAL_UPDATE           where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(18): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    delete from DPU_VIDD                  where ACC7       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(19): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_RATN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_RATN_ARC              where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACRA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACRB       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from KLPACC                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(25): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from ND_ACC                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
    begin
      bc.subst_mfo(MFOg_);
      delete from NLK_REF                   where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from OPLDOK                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(28): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from PAWN_ACC                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(29): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from PEREKR_J                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(30): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--    begin
--      delete from PEREKR_J                where ACCS       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    exception when OTHERS then
--      bars_audit.error('drop_accountS5f - err(31): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--      p_code := p_code+1;
--    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(32): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACCD       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACC1       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from SALDOA_TURN_QUEUE         where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from SALDOB                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from SW_950                    where NOSTRO_ACC in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(37): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from SW_950D                   where CONTRA_ACC in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(38): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from SW_ACC_SPARAM             where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(39): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from SW_JOURNAL                where ACCD       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from SW_JOURNAL                where ACCK       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(41): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from SW_STMT_INFO              where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(42): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTARC                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(43): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTPAY                where ACCA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(44): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTPAY                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(45): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    delete from TTS                       where S6201      in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(46): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    delete from TTS                       where S7201      in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(47): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from VP_LIST                   where ACC3801    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(48): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from VP_LIST                   where ACC_RRS    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(49): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from VP_LIST                   where ACC_RRR    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(50): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from VP_LIST                   where ACC_RRD    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(51): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from VP_LIST                   where ACC6204    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(52): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from VP_LIST                   where ACC3800    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(53): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from acce                      where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(54): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from acci                      where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(55): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
    begin
      bc.subst_mfo(MFOg_);
      delete from accountsw                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(56): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from acc_over                  where acc_8000   in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(57): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from acc_over                  where acc_9129   in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(58): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from acc_sob                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(59): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from acc_tarif                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(60): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
    begin
      bc.subst_mfo(MFOg_);
      delete from bank_acc                  where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(61): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from cc_accp                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(62): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from cc_accp                   where accs       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(63): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from cc_add                    where accs       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(64): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
    begin
      bc.subst_mfo(MFOg_);
      delete from bpk_acc                   where acc_pk     in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(65): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from BARSAQ.AQ_SUBSCRIBERS_ACC where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag=''RS6S5'' and substr(value,-6)='''||p_filial||''') and ostc=0 and bc.extract_mfo(branch)='''||MFOg_||''')';
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(66): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from accounts_all              where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(67): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from ree_tmp                   where (nls,kv)   in (select nls,kv from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(68): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from ACCM_QUEUE_BALANCES       where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(68): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from ACCM_SNAP_BALANCES        where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(69): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from ACCM_AGG_MONBALS          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(70): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from ACCM_LIST_CORRDOCS        where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS5f - err(71): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;

    commit;

    begin
      bc.subst_mfo(MFOg_);
      delete from accounts                  where rnk        in (select rnk from customerw where tag='RS6S5' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_;
      p_open := p_open+SQL%rowcount;
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS5f - err(72): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

    delete
    from   S6_MIGRNLS
    where  filial=p_filial;

    commit;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_accountS5f - err(73): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  recreate accounts SEQUENCE

    select nvl(max(acc),0)+1 into accmax_ from accounts;

    execute immediate 'DROP SEQUENCE S_ACCOUNTS';
    execute immediate 'CREATE SEQUENCE S_ACCOUNTS
                       START WITH '||accmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_ACCOUNTS TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_ACCOUNTS

    sys.utl_recomp.recomp_serial('BARS');

    bars_alerter(1);

  end drop_accountS5f;

--

  procedure drop_accountS6f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    accmax_  number;
    MFOg_    varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_accountS6f - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  delete from TABLEs

    begin
      bc.subst_mfo(MFOg_);
      delete from accounts_update           where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from saldoa                    where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam_int             where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam_update          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from rko_lst                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from dpt_deposit               where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(8): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from dpt_deposit               where acc_d      in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from dpt_deposit_clos          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from dpt_deposit_clos          where acc_d      in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from dpt_techaccounts          where dpt_acc    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from dpt_techaccounts          where tech_acc   in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(13): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    delete from DPT_VIDD                  where ACC7       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(14): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from DPU_DEAL                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(15): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from DPU_DEAL                  where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(16): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from DPU_DEAL_UPDATE           where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(17): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from DPU_DEAL_UPDATE           where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(18): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    delete from DPU_VIDD                  where ACC7       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(19): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_RATN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_RATN_ARC              where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACRA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACRB       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from KLPACC                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(25): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from ND_ACC                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
    begin
      bc.subst_mfo(MFOg_);
      delete from NLK_REF                   where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from OPLDOK                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(28): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from PAWN_ACC                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(29): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from PEREKR_J                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(30): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--    begin
--      delete from PEREKR_J                where ACCS       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    exception when OTHERS then
--      bars_audit.error('drop_accountS6f - err(31): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--      p_code := p_code+1;
--    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(32): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACCD       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACC1       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from SALDOA_TURN_QUEUE         where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from SALDOB                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from SW_950                    where NOSTRO_ACC in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(37): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from SW_950D                   where CONTRA_ACC in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(38): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from SW_ACC_SPARAM             where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(39): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from SW_JOURNAL                where ACCD       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from SW_JOURNAL                where ACCK       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(41): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from SW_STMT_INFO              where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(42): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTARC                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(43): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTPAY                where ACCA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(44): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTPAY                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(45): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    delete from TTS                       where S6201      in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(46): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    delete from TTS                       where S7201      in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(47): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from VP_LIST                   where ACC3801    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(48): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from VP_LIST                   where ACC_RRS    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(49): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from VP_LIST                   where ACC_RRR    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(50): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from VP_LIST                   where ACC_RRD    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(51): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from VP_LIST                   where ACC6204    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(52): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from VP_LIST                   where ACC3800    in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(53): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from acce                      where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(54): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from acci                      where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(55): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
    begin
      bc.subst_mfo(MFOg_);
      delete from accountsw                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(56): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from acc_over                  where acc_8000   in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(57): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from acc_over                  where acc_9129   in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(58): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from acc_sob                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(59): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from acc_tarif                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(60): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
    begin
      bc.subst_mfo(MFOg_);
      delete from bank_acc                  where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(61): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from cc_accp                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(62): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from cc_accp                   where accs       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(63): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from cc_add                    where accs       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(64): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
    begin
      bc.subst_mfo(MFOg_);
      delete from bpk_acc                   where acc_pk     in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(65): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from BARSAQ.AQ_SUBSCRIBERS_ACC where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag=''RS6S6'' and substr(value,-6)='''||p_filial||''') and ostc=0 and bc.extract_mfo(branch)='''||MFOg_||''')';
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(66): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from accounts_all              where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(67): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from ree_tmp                   where (nls,kv)   in (select nls,kv from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(68): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from ACCM_QUEUE_BALANCES       where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(68): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from ACCM_SNAP_BALANCES        where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(69): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from ACCM_AGG_MONBALS          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(70): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    delete from ACCM_LIST_CORRDOCS        where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_accountS6f - err(71): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;

    commit;

    begin
      bc.subst_mfo(MFOg_);
      delete from accounts                  where rnk        in (select rnk from customerw where tag='RS6S6' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_;
      p_open := p_open+SQL%rowcount;
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountS6f - err(72): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

    delete
    from   S6_MIGRNLS
    where  filial=p_filial;

    commit;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_accountS6f - err(73): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  recreate accounts SEQUENCE

    select nvl(max(acc),0)+1 into accmax_ from accounts;

    execute immediate 'DROP SEQUENCE S_ACCOUNTS';
    execute immediate 'CREATE SEQUENCE S_ACCOUNTS
                       START WITH '||accmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_ACCOUNTS TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_ACCOUNTS

    sys.utl_recomp.recomp_serial('BARS');

    bars_alerter(1);

  end drop_accountS6f;

--

  procedure drop_customerS5f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    rnkmax_  number;
    MFOg_    varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_customerS5f - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    begin
      execute immediate 'CREATE TABLE S6_TEMP_RNK (rnk NUMBER)';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DELETE FROM S6_TEMP_RNK';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'INSERT
                         INTO   S6_TEMP_RNK
                         select rnk
                         from   customerw
                         where  rnk not in (select rnk from accounts) and
                                tag=''RS6S5''                         and
                                substr(value,-6)='''||p_filial||'''';
    exception when OTHERS then
      null;
    end;

--  delete from TABLEs

    begin
      bc.subst_mfo(MFOg_);
      execute immediate 'delete from customerw          where rnk            in (select rnk from S6_TEMP_RNK)';
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from customerw_update   where rnk            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from person             where rnk            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from corps_acc          where rnk            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from corps              where rnk            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from customer_address   where rnk            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from CC_DEAL            where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    execute immediate 'delete from CC_SWTRACE         where RNK            in (select rnk from S6_TEMP_RNK)';
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(8): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
    begin
      execute immediate 'delete from CUSTBANK           where RNK            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTCOUNT          where RNK            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTOMER_REL       where RNK            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUST_NAL           where RNK            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from CUST_ZAY           where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(13): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPT_AGREEMENTS     where CUST_ID        in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(14): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPT_DEPOSIT        where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(15): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPT_DEPOSIT_CLOS   where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(16): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPT_INHERITORS     where INHERIT_CUSTID in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(17): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPT_JOBS_LOG       where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(18): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPT_TECHACCOUNTS   where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(19): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    execute immediate 'delete from DPT_TRUSTEE        where RNK_TR         in (select rnk from S6_TEMP_RNK)';
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    execute immediate 'delete from DPT_TRUSTEE        where RNK            in (select rnk from S6_TEMP_RNK)';
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPU_DEAL           where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPU_DEAL_UPDATE    where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from FINMON_QUE         where RNK_A          in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from FINMON_QUE         where RNK_B          in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(25): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
    begin
      execute immediate 'delete from KL_CUSTOMER_PARAMS where RNK            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      execute immediate 'delete from RNK_REKV           where RNK            in (select rnk from S6_TEMP_RNK)';
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from SURVEY_SESSION     where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(28): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from SW_REG_DIRS        where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(29): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from SW_SB_TELEX        where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(30): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from TOP_CONTRACTS      where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(31): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    execute immediate 'delete from ZAYAVKA            where RNK            in (select rnk from S6_TEMP_RNK)';
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    execute immediate 'delete from ZAY_COMISS         where RNK            in (select rnk from S6_TEMP_RNK)';
--  exception when OTHERS then
--    bars_audit.error('drop_customerS5f - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
    begin
      execute immediate 'delete from CUSTOMER_UPDATE    where RNK            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    commit;  -- ьюцхЄ яюьюцхЄ

    begin
      execute immediate 'delete from customer           where RNK            in (select rnk from S6_TEMP_RNK)';
      p_open := p_open+SQL%rowcount;
    exception when OTHERS then
      bars_audit.error('drop_customerS5f - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    begin
      execute immediate 'DROP TABLE S6_TEMP_RNK';
    exception when OTHERS then
      null;
    end;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_customerS5f - err(37): '||sqlerrm||' - '||k.table_name||', '||k.constraint_name);
        p_code := p_code+1;
      end;
    end loop;

    commit;

--  recreate customer SEQUENCE

    select nvl(max(rnk),0)+1 into rnkmax_ from customer;

    execute immediate 'DROP SEQUENCE S_CUSTOMER';
    execute immediate 'CREATE SEQUENCE S_CUSTOMER
                       START WITH '||rnkmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_CUSTOMER TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_CUSTOMER

    sys.utl_recomp.recomp_serial('BARS');

    bars_alerter(1);

  end drop_customerS5f;

--

  procedure drop_customerS6f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    rnkmax_  number;
    MFOg_    varchar2(12);

  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_customerS6f - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    begin
      execute immediate 'CREATE TABLE S6_TEMP_RNK (rnk NUMBER)';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DELETE FROM S6_TEMP_RNK';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'INSERT
                         INTO   S6_TEMP_RNK
                         select rnk
                         from   customerw
                         where  rnk not in (select rnk from accounts) and
                                tag=''RS6S6''                         and
                                substr(value,-6)='''||p_filial||'''';
    exception when OTHERS then
      null;
    end;

--  delete from TABLEs

    begin
      bc.subst_mfo(MFOg_);
      execute immediate 'delete from customerw          where rnk            in (select rnk from S6_TEMP_RNK)';
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from customerw_update   where rnk            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from person             where rnk            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from corps_acc          where rnk            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from corps              where rnk            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from customer_address   where rnk            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from CC_DEAL            where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    execute immediate 'delete from CC_SWTRACE         where RNK            in (select rnk from S6_TEMP_RNK)';
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(8): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
    begin
      execute immediate 'delete from CUSTBANK           where RNK            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTCOUNT          where RNK            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTOMER_REL       where RNK            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUST_NAL           where RNK            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from CUST_ZAY           where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(13): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPT_AGREEMENTS     where CUST_ID        in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(14): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPT_DEPOSIT        where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(15): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPT_DEPOSIT_CLOS   where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(16): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPT_INHERITORS     where INHERIT_CUSTID in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(17): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPT_JOBS_LOG       where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(18): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPT_TECHACCOUNTS   where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(19): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    execute immediate 'delete from DPT_TRUSTEE        where RNK_TR         in (select rnk from S6_TEMP_RNK)';
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    execute immediate 'delete from DPT_TRUSTEE        where RNK            in (select rnk from S6_TEMP_RNK)';
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPU_DEAL           where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from DPU_DEAL_UPDATE    where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from FINMON_QUE         where RNK_A          in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from FINMON_QUE         where RNK_B          in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(25): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
    begin
      execute immediate 'delete from KL_CUSTOMER_PARAMS where RNK            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      execute immediate 'delete from RNK_REKV           where RNK            in (select rnk from S6_TEMP_RNK)';
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from SURVEY_SESSION     where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(28): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from SW_REG_DIRS        where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(29): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from SW_SB_TELEX        where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(30): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    bc.subst_mfo(MFOg_);
--    execute immediate 'delete from TOP_CONTRACTS      where RNK            in (select rnk from S6_TEMP_RNK)';
--    bc.set_context;
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(31): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--    bc.set_context;
--  end;
--  begin
--    execute immediate 'delete from ZAYAVKA            where RNK            in (select rnk from S6_TEMP_RNK)';
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
--  begin
--    execute immediate 'delete from ZAY_COMISS         where RNK            in (select rnk from S6_TEMP_RNK)';
--  exception when OTHERS then
--    bars_audit.error('drop_customerS6f - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--    p_code := p_code+1;
--  end;
    begin
      execute immediate 'delete from CUSTOMER_UPDATE    where RNK            in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    commit;  -- ьюцхЄ яюьюцхЄ

    begin
      execute immediate 'delete from customer           where RNK            in (select rnk from S6_TEMP_RNK)';
      p_open := p_open+SQL%rowcount;
    exception when OTHERS then
      bars_audit.error('drop_customerS6f - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    begin
      execute immediate 'DROP TABLE S6_TEMP_RNK';
    exception when OTHERS then
      null;
    end;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_customerS6f - err(37): '||sqlerrm||' - '||k.table_name||', '||k.constraint_name);
        p_code := p_code+1;
      end;
    end loop;

    commit;

--  recreate customer SEQUENCE

    select nvl(max(rnk),0)+1 into rnkmax_ from customer;

    execute immediate 'DROP SEQUENCE S_CUSTOMER';
    execute immediate 'CREATE SEQUENCE S_CUSTOMER
                       START WITH '||rnkmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_CUSTOMER TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_CUSTOMER

    sys.utl_recomp.recomp_serial('BARS');

    bars_alerter(1);

  end drop_customerS6f;

--

  procedure drop_userS5f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
--  type    t_id is record (id  number);
--  type    t_listid is table of t_id;
--  listid  t_listid;
--  fi3_    char(3);
    MFOg_   varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  execute immediate 'select substr(min(branch),-4,3)
--                     from   s6_s5_filial'
--                     into   fi3_;

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_userS5f - err(0): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    for k in (SELECT s.id
              from   staff$base        s,
                     USERS_SKARB6_BARS u
              where  bc.extract_mfo(s.branch)=MFOg_ and
                     u.filial=p_filial              and
                     u.ubars=s.id)

    loop
      begin
        delete
        from   USERS_SKARB6_BARS
        where  kf=MFOg_   and
               ubars=k.id and
               filial=p_filial;
        BARS_USERADM.drop_user(k.id);
        delete
        from   staff$base
        where  id=k.id;
        p_open := p_open+SQL%rowcount;
        commit;
      exception when OTHERS then
        bars_audit.error('drop_userS5f - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_userS5f - err(2): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    bars_alerter(1);

  end drop_userS5f;

--

  procedure drop_userS6f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
--  fi3_   char(3);
    MFOg_  varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  execute immediate 'select substr(min(branch),-4,3)
--                     from   s6_s6_filial'
--                     into   fi3_;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_userS6f - err(0): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    for k in (SELECT s.id
              from   staff$base        s,
                     USERS_SKARB6_BARS u
              where  bc.extract_mfo(s.branch)=MFOg_ and
                     u.filial=p_filial              and
                     u.ubars=s.id)

    loop
      begin
        delete
        from   USERS_SKARB6_BARS
        where  kf=MFOg_   and
               ubars=k.id and
               filial=p_filial;
        BARS_USERADM.drop_user(k.id);
        delete
        from   staff$base
        where  id=k.id;
        p_open := p_open+SQL%rowcount;
        commit;
      exception when OTHERS then
        bars_audit.error('drop_userS6f - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_userS6f - err(2): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    bars_alerter(1);

  end drop_userS6f;

--

  procedure copy_skarb5_tables (p_filial in varchar2)
  is
  begin

    if p_filial is not null and length(p_filial)=6 then
      for k in (select table_name
                from   user_tables
                where  table_name like 'S6_S5_'||p_filial||'%')
      loop
        begin
          execute immediate 'drop table '||k.table_name;
        exception when OTHERS then
          null;
        end;
      end loop;

      for k in (select table_name
                from   user_tables
                where  table_name like 'S6_S5_%' and
                       table_name not like 'S6_S5_3%')
      loop
        begin
          execute immediate
                  'create table '||substr(k.table_name,1,6)||p_filial||
                                   substr(k.table_name,6)||
                  ' as select * from '||k.table_name;
        exception when OTHERS then
          null;
        end;
      end loop;
    end if;

  end copy_skarb5_tables;

--

  procedure copy_skarb6_tables (p_filial in varchar2)
  is
  begin

    if p_filial is not null and length(p_filial)=6 then
      for k in (select table_name
                from   user_tables
                where  table_name like 'S6_S6_'||p_filial||'%')
      loop
        begin
          execute immediate 'drop table '||k.table_name;
        exception when OTHERS then
          null;
        end;
      end loop;

      for k in (select table_name
                from   user_tables
                where  table_name like 'S6_S6_%' and
                       table_name not like 'S6_S6_3%')
      loop
        begin
          execute immediate
                  'create table '||substr(k.table_name,1,6)||p_filial||
                                   substr(k.table_name,6)||
                  ' as select * from '||k.table_name;
        exception when OTHERS then
          null;
        end;
      end loop;
    end if;

  end copy_skarb6_tables;

--

  procedure load_skarb5_ostc (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type     cur is ref cursor;
    cur_     cur;
    sql_     varchar2(4000);

    tt_      oper.TT%type      := '024';
    sk_      oper.SK%type      ;
    TIP_     accounts.TIP%type ;
    VOB_     oper.vob%type     := 6;
    REF_     oper.REF%type     ;
    DK_      oper.DK%type      ;
    NMST_    oper.NAM_A%type   ;
    NLST_    oper.NLSA%type    ;
    NMSS_    oper.NAM_A%type   ;
    S_       oper.S%type       ;
    SQ_      oper.SQ%type      ;
    NAZN_    oper.NAZN%type    := '╧хЁхтхфхээ  чрыш°ъє ч ';
    Isp_     oper.userid%type  := 20094;

    NLSS_    accounts.nls%type ;
    NLS_OLD_ accounts.nls%type ;
    KV_      accounts.kv%type  ;
    OST_     accounts.ostc%type;
    OSTQ_    accounts.ostq%type;

    c024_    number;
    pos_     accounts.pos%type ;
    accs_    accounts.acc%type ;
    daot_    date;
    f38_     char(1);

  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    toroot;

    update tts
    set    rang=100
    where  tt=tt_;
    commit;

    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    select count(1)
    into   c024_
    from   oper
    where  tt=tt_        and
           sos=5         and
           vdat=gl.bdate and
           userid=20094  and
           nazn like '╧хЁхтхфхээ  чрыш°ъє ч '||p_filial||'/%';

    if c024_>0 then
      bars_audit.error('load_skarb5_ostc - err(0): яютЄюЁэр  чруЁєчър юёЄрЄъют эхтючьюцэр, эхюсїюфшь юЄърЄ ...');
      p_code := p_code+1;
      goto nozagruzka;
    end if;

    sql_:='select m.nls_bars                       NLSS   ,
                  o.nls                            NLS_OLD,
                  o.i_va                           KV     ,
                  decode(o.i_va,980,o.ish,o.ish_v) OST    ,
                  o.ish                            OSTQ
           from   S6_S5_SALDO o,
                  S6_MIGRNLS  m
           where  o.nls=m.nls_fil             and
                  o.i_va=m.kv                 and
                  m.filial='''||p_filial||''' and
                  decode(o.i_va,980,o.ish,o.ish_v)<>0';

    open cur_ for sql_;

    loop

      fetch cur_ into NLSS_   ,
                      NLS_OLD_,
                      KV_     ,
                      OST_    ,
                      OSTQ_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        execute immediate 'select NLS_TRA
                           from   (select trim(bals)||''%'' LIK,
                                          KV                   ,
                                          to_char(transit)  NLS_TRA
                                   from   S6_S5_TRANSIT
                                   order  by length(trim(bals)) desc,
                                             trim(bals)             ,
                                             nvl(KV,0) desc)
                           where  '''||nls_old_||''' like LIK            and
                                  (nullif(KV,0) is null or '||kv_||'=KV) and
                                  rownum=1'
                           into   NLST_;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_skarb5_ostc - err(1): ═х юяшёрэ т TRANSIT.DBF ёў╕Є-ЄЁрэчшЄ фы  '||p_filial||'/'||nls_old_||'('||KV_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
                WHEN OTHERS THEN
        if sqlcode=-904 then
          bars_audit.error('load_skarb5_ostc - err(5): ёЄрЁр  ёЄЁєъЄєЁр TRANSIT.DBF '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        end if;
        bars_audit.error('load_skarb5_ostc - err(6): '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      begin
        select trim(substr(nms,1,38)),
               daos
        into   NMST_,
               daot_
        from   accounts
        where  kv=KV_    and
               nls=NLST_ and
               dazs is null;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_skarb5_ostc - err(2): ═х эрщфхэ шыш чръЁ√Є ёў╕Є-ЄЁрэчшЄ '||nlsT_||'('||KV_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      begin
        select trim(substr(nms,1,38)),
               tip                   ,
               pos                   ,
               acc
        into   NMSS_,
               TIP_ ,
               pos_ ,
               accs_
        from   accounts
        where  kv=KV_    and
               nls=NLSS_ and
               dazs is null;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_skarb5_ostc - err(3): ═х эрщфхэ шыш чръЁ√Є ═╬┬█╔ ёў╕Є '||NLSS_||' фы  '||p_filial||'/'||nls_old_||'('||kv_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      if TIP_='KAS' then
        sk_ := 37;  -- яюёых єЄюўэхэш  ╞шЄюьшЁр
      else
        sk_ := null;
      end if;

      If ost_>0 then
        DK_ := 1;
      else
        DK_ := 0;
        if substr(NLSS_,1,4)='2625' then

          toroot;

          select substr(flags,39,1)
          into   f38_
          from   tts
          where  tt=tt_;

          update tts
          set    flags=substr(flags,1,38)||'1'||substr(flags,40)
          where  tt=tt_;

          commit;

          tokf;

          gl.pl_dat(p_datx);
          gl.amfo := f_ourmfo_g;

        end if;
      end if;

      S_  := Abs(ost_);
      sq_ := Abs(ostq_);

      if daot_>p_datx then
        update accounts
        set    daos=p_datx
        where  kv=KV_ and
               nls=NLST_;
      end if;

      begin
        GL.REF(REF_);
        GL.IN_DOC2(REF_,  TT_,   VOB_, REF_, SYSDATE, GL.BDATE, DK_, KV_,
                   S_,    KV_,   S_,   sq_,  sk_,     GL.BDATE, GL.BDATE,
                   NMsT_, NLST_, gl.AMFO,
                   NMSS_, NLSS_, gl.AMFO,
                   NAZN_||p_filial||'/'||NLS_OLD_,
                   NULL, null, null, null, null, 1, null, ISP_);
        GL.PAYV(0, REF_, GL.BDATE, TT_, DK_, KV_, NLST_, S_, KV_, NLSS_, S_);
        GL.PAY (2, REF_, GL.BDATE);
        commit;
        p_open := p_open+1;
      EXCEPTION WHEN others THEN
        bars_audit.error('load_skarb5_ostc - err(4): ╬°шсър юяырЄ√ '||nlsT_||'('||KV_||') --> '||NLSS_||'('||KV_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        rollback;
      end;

      If ost_<0 then
        if substr(NLSS_,1,4)='2625' then

          toroot;

          update tts
          set    flags=substr(flags,1,38)||f38_||substr(flags,40)
          where  tt=tt_;

          commit;

          tokf;

          gl.pl_dat(p_datx);
          gl.amfo := f_ourmfo_g;

        end if;
      end if;

<<dalee>> null;

    end loop;
    close cur_;

    dbms_application_info.set_client_info('pereocenka');

    migraSK.pereocenka(p_code,'load_skarb5_ostc - err',p_datx);

    dbms_application_info.set_client_info(' ');

<<nozagruzka>> null;

    toroot;

    update tts
    set    rang=null
    where  tt=tt_;
    commit;

    bars_alerter(1);

  end load_skarb5_ostc;

--

  procedure load_skarb6_ostc (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type     cur is ref cursor;
    cur_     cur;
    sql_     varchar2(4000);

    tt_      oper.TT%type      := '024';
    sk_      oper.SK%type      ;
    TIP_     accounts.TIP%type ;
    VOB_     oper.vob%type     := 6;
    REF_     oper.REF%type     ;
    DK_      oper.DK%type      ;
    NMST_    oper.NAM_A%type   ;
    NLST_    oper.NLSA%type    ;
    NMSS_    oper.NAM_A%type   ;
    S_       oper.S%type       ;
    SQ_      oper.SQ%type      ;
    NAZN_    oper.NAZN%type    := '╧хЁхтхфхээ  чрыш°ъє ч ';
    Isp_     oper.userid%type  := 20094;

    NLSS_    accounts.nls%type ;
    NLS_OLD_ accounts.nls%type ;
    KV_      accounts.kv%type  ;
    OST_     accounts.ostc%type;
    OSTQ_    accounts.ostq%type;

    c024_    number;
    pos_     accounts.pos%type ;
    accs_    accounts.acc%type ;
    daot_    date;
    f38_     char(1);

  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    toroot;

    update tts
    set    rang=100
    where  tt=tt_;
    commit;

    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    select count(1)
    into   c024_
    from   oper
    where  tt=tt_        and
           sos=5         and
           vdat=gl.bdate and
           userid=20094  and
           nazn like '╧хЁхтхфхээ  чрыш°ъє ч '||p_filial||'/%';

    if c024_>0 then
      bars_audit.error('load_skarb6_ostc - err(0): яютЄюЁэр  чруЁєчър юёЄрЄъют эхтючьюцэр, эхюсїюфшь юЄърЄ ...');
      p_code := p_code+1;
      goto nozagruzka;
    end if;

    sql_:='select m.nls_bars                                NLSS   ,
                  substr(o.nls,1,4)||o.kss||substr(o.nls,5) NLS_OLD,
                  o.i_va                                    KV     ,
                  decode(o.i_va,980,o.ish,o.ish_v)*100      OST    ,
                  o.ish*100                                 OSTQ
           from   S6_S6_SALDO o,
                  S6_MIGRNLS  m
           where  substr(o.nls,1,4)||o.kss||substr(o.nls,5)=m.nls_fil and
                  o.i_va=m.kv                                         and
                  m.filial='''||p_filial||'''                         and
                  decode(o.i_va,980,o.ish,o.ish_v)<>0';

    open cur_ for sql_;

    loop

      fetch cur_ into NLSS_   ,
                      NLS_OLD_,
                      KV_     ,
                      OST_    ,
                      OSTQ_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        execute immediate 'select NLS_TRA
                           from   (select trim(bals)||''%'' LIK,
                                          KV                   ,
                                          to_char(transit)  NLS_TRA
                                   from   S6_S6_TRANSIT
                                   order  by length(trim(bals)) desc,
                                             trim(bals)             ,
                                             nvl(KV,0) desc)
                           where  '''||nls_old_||''' like LIK            and
                                  (nullif(KV,0) is null or '||kv_||'=KV) and
                                  rownum=1'
                           into   NLST_;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_skarb6_ostc - err(1): ═х юяшёрэ т TRANSIT.DBF ёў╕Є-ЄЁрэчшЄ фы  '||p_filial||'/'||nls_old_||'('||KV_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
                WHEN OTHERS THEN
        if sqlcode=-904 then
          bars_audit.error('load_skarb6_ostc - err(5): ёЄрЁр  ёЄЁєъЄєЁр TRANSIT.DBF '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        end if;
        bars_audit.error('load_skarb6_ostc - err(6): '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      begin
        select trim(substr(nms,1,38)),
               daos
        into   NMST_,
               daot_
        from   accounts
        where  kv=KV_    and
               nls=NLST_ and
               dazs is null;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_skarb6_ostc - err(2): ═х эрщфхэ шыш чръЁ√Є ёў╕Є-ЄЁрэчшЄ '||nlsT_||'('||KV_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      begin
        select trim(substr(nms,1,38)),
               tip                   ,
               pos                   ,
               acc
        into   NMSS_,
               TIP_ ,
               pos_ ,
               accs_
        from   accounts
        where  kv=KV_    and
               nls=NLSS_ and
               dazs is null;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_skarb6_ostc - err(3): ═х эрщфхэ шыш чръЁ√Є ═╬┬█╔ ёў╕Є '||NLSS_||' фы  '||p_filial||'/'||nls_old_||'('||kv_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      if TIP_='KAS' then
        sk_ := 37;  -- яюёых єЄюўэхэш  ╞шЄюьшЁр
      else
        sk_ := null;
      end if;

      If ost_>0 then
        DK_ := 1;
      else
        DK_ := 0;
        if substr(NLSS_,1,4)='2625' then

          toroot;

          select substr(flags,39,1)
          into   f38_
          from   tts
          where  tt=tt_;

          update tts
          set    flags=substr(flags,1,38)||'1'||substr(flags,40)
          where  tt=tt_;

          commit;

          tokf;

          gl.pl_dat(p_datx);
          gl.amfo := f_ourmfo_g;

        end if;
      end if;

      S_  := Abs(ost_);
      sq_ := Abs(ostq_);

      if daot_>p_datx then
        update accounts
        set    daos=p_datx
        where  kv=KV_ and
               nls=NLST_;
      end if;

      begin
        GL.REF(REF_);
        GL.IN_DOC2(REF_,  TT_,   VOB_, REF_, SYSDATE, GL.BDATE, DK_, KV_,
                   S_,    KV_,   S_,   sq_,  sk_,     GL.BDATE, GL.BDATE,
                   NMsT_, NLST_, gl.AMFO,
                   NMSS_, NLSS_, gl.AMFO,
                   NAZN_||p_filial||'/'||NLS_OLD_,
                   NULL, null, null, null, null, 1, null, ISP_);
        GL.PAYV(0, REF_, GL.BDATE, TT_, DK_, KV_, NLST_, S_, KV_, NLSS_, S_);
        GL.PAY (2, REF_, GL.BDATE);
        commit;
        p_open := p_open+1;
      EXCEPTION WHEN others THEN
        bars_audit.error('load_skarb6_ostc - err(4): ╬°шсър юяырЄ√ '||nlsT_||'('||KV_||') --> '||NLSS_||'('||KV_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        rollback;
      end;

      If ost_<0 then
        if substr(NLSS_,1,4)='2625' then

          toroot;

          update tts
          set    flags=substr(flags,1,38)||f38_||substr(flags,40)
          where  tt=tt_;

          commit;

          tokf;

          gl.pl_dat(p_datx);
          gl.amfo := f_ourmfo_g;

        end if;
      end if;

<<dalee>> null;

    end loop;
    close cur_;

    dbms_application_info.set_client_info('pereocenka');

    migraSK.pereocenka(p_code,'load_skarb6_ostc - err',p_datx);

    dbms_application_info.set_client_info(' ');

<<nozagruzka>> null;

    toroot;

    update tts
    set    rang=null
    where  tt=tt_;
    commit;

    bars_alerter(1);

  end load_skarb6_ostc;

--

  procedure drop_skarb5_ostc (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

--  юЄърЄ фюъєьхэЄют яю ЁрчтюЁюЄє юёЄрЄъют

    toroot;

    update tts
    set    flags=substr(flags,1,38)||'1'||substr(flags,40)
    where  tt='BAK';
    commit;

    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    for k in (select ref
              from   oper
              where  tt='024'      and
                     sos=5         and
                     vdat=gl.bdate and
                     userid=20094  and
                     nazn like '╧хЁхтхфхээ  чрыш°ъє ч '||p_filial||'/%')
    loop
      FOR x IN (SELECT a.acc ,
                       o.fdat,
                       o.sq
                FROM   accounts a,
                       opldok   o
                WHERE  o.ref=k.ref AND
                       a.pos=2     AND
                       o.acc=a.acc)
      LOOP
        UPDATE saldob
        SET    dos=dos-x.sq,
               kos=kos-x.sq
        WHERE  acc=x.acc AND
               fdat=x.fdat;
      END LOOP;
      ful_bak(k.ref);
      bars_audit.info('drop_skarb6_ostc: ful_bak '||k.ref);
      commit;
      p_open := p_open+1;
    end loop;

    toroot;

    update tts
    set    flags=substr(flags,1,38)||'0'||substr(flags,40)
    where  tt='BAK';
    commit;

    bars_alerter(1);

  end drop_skarb5_ostc;

--

  procedure drop_skarb6_ostc (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

--  юЄърЄ фюъєьхэЄют яю ЁрчтюЁюЄє юёЄрЄъют

    toroot;

    update tts
    set    flags=substr(flags,1,38)||'1'||substr(flags,40)
    where  tt='BAK';
    commit;

    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    for k in (select ref
              from   oper
              where  tt='024'      and
                     sos=5         and
                     vdat=gl.bdate and
                     userid=20094  and
                     nazn like '╧хЁхтхфхээ  чрыш°ъє ч '||p_filial||'/%')
    loop
      FOR x IN (SELECT a.acc ,
                       o.fdat,
                       o.sq
                FROM   accounts a,
                       opldok   o
                WHERE  o.ref=k.ref AND
                       a.pos=2     AND
                       o.acc=a.acc)
      LOOP
        UPDATE saldob
        SET    dos=dos-x.sq,
               kos=kos-x.sq
        WHERE  acc=x.acc AND
               fdat=x.fdat;
      END LOOP;
      ful_bak(k.ref);
      bars_audit.info('drop_skarb6_ostc: ful_bak '||k.ref);
      commit;
      p_open := p_open+1;
    end loop;

    toroot;

    update tts
    set    flags=substr(flags,1,38)||'0'||substr(flags,40)
    where  tt='BAK';
    commit;

    bars_alerter(1);

  end drop_skarb6_ostc;

--

  procedure fin_deblocking5f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    l_rnk     number;
    branch2_  varchar2(15);
    Job_      number;
    MFOg_     varchar2(12);
  begin

    bars_alerter(0);

    p_open   := 0;
    p_code   := 0;
    branch2_ := null;

    MFOg_ := f_ourmfo_g;

--  ъюЁЁхъЄшЁютър accounts яю saldoa, saldob (ўхЁхч чрфрэшх)

    BEGIN
      DBMS_JOB.SUBMIT (job       => Job_               ,
                       what      => 'correct_accounts;',
                       next_date => sysdate            ,
                       interval  => null               ,
                       no_parse  => FALSE);
    exception when others then
      bars_audit.error('fin_deblocking5f - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    END;

    tokf;

--  ЁрчсыюъшЁютър ёўхЄют: blkk ш blkd ё 99 эр 0

    for k in (select nls_bars,
                     nls_fil ,
                     kv
              from   S6_MIGRNLS
              where  filial=p_filial)
    loop
      update accounts
      set    blkk=0,
             blkd=0
      where  nls=k.nls_bars and
             kv=k.kv;
      p_open := p_open+1;
      if branch2_ is null then
        begin
          select substr(branch,1,15)
          into   branch2_
          from   accounts
          where  nls=k.nls_bars and
                 kv=k.kv;
        exception when no_data_found then
          null;
        end;
      end if;
    end loop;
    commit;

    toroot;

--  єфрыхэшх ╠╘╬ Їшышрыр шч ЄрсышЎ LKL_RRP ш BANK_ACC

    tokf;
    begin
      delete
      from   lkl_rrp
      where  mfo=p_filial;
      commit;
    exception when OTHERS then
      rollback;
      bars_audit.error('fin_deblocking5f - err(1) for delete from lkl_rrp: '||sqlerrm);
    end;
    begin
      delete
      from   bank_acc
      where  mfo=p_filial;
      commit;
    exception when OTHERS then
      rollback;
      bars_audit.error('fin_deblocking5f - err(2) for delete from bank_acc: '||sqlerrm);
    end;
    toroot;

--  юсэютыхэшх ьрЄхЁшрышчютрээюую яЁхфёЄртыхэш 

    NERUXOMI;

--  фюсртър RNK ш ярЁрьхЄЁр ё RNK фы  сЁрэўхщ

    begin
      for c in (select branch,
                       name
                from   branch
                where  branch like '/'||MFOg_||'/%'
                order  by branch)
      loop
        begin
          bc.subst_branch(c.branch);
          begin
            select rnk
            into   l_rnk
            from   customer
            where  branch=c.branch and
                   notes='BRANCH<->RNK';
          exception when no_data_found then

            execute immediate 'select s_customer.nextval from dual' into l_rnk;

            insert
            into   customer (rnk      ,
                             tgr      ,
                             custtype ,
                             codcagent,
                             okpo     ,
                             country  ,
                             nmk      ,
                             nmkk     ,
                             notes    ,
                             ise      ,
                             fs       ,
                             oe       ,
                             ved      ,
                             sed      ,
                             k050     ,
                             branch)
                     values (l_rnk                    ,
                             1                        ,
                             1                        ,
                             1                        ,
                             f_ourokpo                ,
                             804                      ,
                             trim(substr(c.name,1,70)),
                             trim(substr(c.name,1,38)),
                             'BRANCH<->RNK'           ,
                             '12201'                  ,
                             '31'                     ,
                             '96130'                  ,
                             '65120'                  ,
                             '80  '                   ,
                             '610'                    ,
                             c.branch);
          end;

          begin
            update branch_parameters
            set    val=to_char(l_rnk)
            where  tag='RNK' and
                   branch=c.branch;

            if SQL%ROWCOUNT=0 then
             insert
             into   branch_parameters (branch,
                                       tag   ,
                                       val)
                               values (c.branch,
                                       'RNK'   ,
                                       to_char(l_rnk));
            end if;
          end;
        exception when others then
          bc.set_context;
        end;
        bc.set_context;
      end loop;
    end;

    commit;

--  уЁштэр яю тёхь сЁрэўрь т cur_rates$base

    migraSK.grn11tocurrates;

--  юЄъЁ√Єшх ёўхЄют %% Ёрёїюфют

    migraSK.open_proc_drm('fin_deblocking5f - ',p_open,p_code,0,branch2_);

    bars_alerter(1);

  end fin_deblocking5f;

--

  procedure fin_deblocking6f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type        cur is ref cursor;
    cur_        cur;
    sql_        varchar2(4000);

    NLS_        accounts.nls%type;
    I_VA_       accounts.kv%type;
    MOTIVE_     number(11);
    SUMLOCK_    number(18,2);
    DOCLOCK_    varchar2(100);
    DALOCK_     date;
    DADOCLOCK_  date;
    NLS_BARS_   accounts.nls%type;

    acc_        accounts.acc%type;
    l_rnk       number;
    branch2_    varchar2(15);
    Job_        number;
    MFOg_       varchar2(12);

  begin

    bars_alerter(0);

    p_open   := 0;
    p_code   := 0;
    branch2_ := null;

    MFOg_ := f_ourmfo_g;

--  ъюЁЁхъЄшЁютър accounts яю saldoa, saldob (ўхЁхч чрфрэшх)

    BEGIN
      DBMS_JOB.SUBMIT (job       => Job_               ,
                       what      => 'correct_accounts;',
                       next_date => sysdate            ,
                       interval  => null               ,
                       no_parse  => FALSE);
    exception when others then
      bars_audit.error('fin_deblocking6f - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    END;

    tokf;

--  ЁрчсыюъшЁютър ёўхЄют: blkk ш blkd ё 99 эр 0

    for k in (select nls_bars,
                     nls_fil ,
                     kv
              from   S6_MIGRNLS
              where  filial=p_filial)
    loop
      update accounts
      set    blkk=0,
             blkd=0
      where  nls=k.nls_bars and
             kv=k.kv;
      p_open := p_open+1;
      if branch2_ is null then
        begin
          select substr(branch,1,15)
          into   branch2_
          from   accounts
          where  nls=k.nls_bars and
                 kv=k.kv;
        exception when no_data_found then
          null;
        end;
      end if;
    end loop;
    commit;

--  єфрыхэшх ╠╘╬ Їшышрыр шч ЄрсышЎ LKL_RRP ш BANK_ACC

    tokf;
    begin
      delete
      from   lkl_rrp
      where  mfo=p_filial;
      commit;
    exception when OTHERS then
      rollback;
      bars_audit.error('fin_deblocking6f - err(1) for delete from lkl_rrp: '||sqlerrm);
    end;
    begin
      delete
      from   bank_acc
      where  mfo=p_filial;
      commit;
    exception when OTHERS then
      rollback;
      bars_audit.error('fin_deblocking6f - err(2) for delete from bank_acc: '||sqlerrm);
    end;
    toroot;

--  сыюъшЁютър рЁхёЄютрээ√ї ёўхЄют яю шэЇюЁьрЎшш ╤╩└╨┴р6(Ї)

    tokf;

    sql_:='select trim(substr(trim(l.NLS),1,14)),
                  l.I_VA                        ,
                  l.MOTIVE                      ,
                  l.SUMLOCK*100                 ,
                  l.DOCLOCK                     ,
                  l.DALOCK                      ,
                  l.DADOCLOCK                   ,
                  m.NLS_BARS
           from   S6_S6_LOCKSALDO l,
                  S6_MIGRNLS      m
           where  l.DAUNLOCK is null                                     and
                  substr(m.NLS_FIL(+),1,4)||substr(m.NLS_FIL(+),6)=l.NLS and
                  m.filial(+)='''||p_filial||'''';

    open cur_ for sql_;

    loop

      fetch cur_ into NLS_      ,
                      I_VA_     ,
                      MOTIVE_   ,
                      SUMLOCK_  ,
                      DOCLOCK_  ,
                      DALOCK_   ,
                      DADOCLOCK_,
                      NLS_BARS_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      if NLS_BARS_ is null then
        goto nextrec;
      end if;
      begin
        select acc
        into   acc_
        from   accounts
        where  substr(nls,1,4)||substr(nls,6,9)=NLS_BARS_ and
               kv=I_VA_;
      exception when no_data_found then
        goto nextrec;
      end;

      if    MOTIVE_=0 or
            MOTIVE_=1 then
        update accounts
        set    blkd=1,
               blkk=1
        where  acc=acc_;
      elsif MOTIVE_=2 then
        update accounts
        set    blkd=1,
               blkk=0
        where  acc=acc_;
      elsif MOTIVE_=3 then
        update accounts
        set    blkd=1,
               blkk=0,
               lim=decode(pap,1,1,-1)*nvl(SUMLOCK_,0)
        where  acc=acc_;
      end if;

      begin
        insert
        into   acc_sob (acc ,
                        isp ,
                        fdat,
                        txt)
                values (acc_          ,
                        20094         ,
                        trunc(DALOCK_),
                        DOCLOCK_);
      exception when OTHERS then
        null;
      end;

--    фюсртър т accountsw
--    'LIE_DOC' , '└Ёх°Є Ёрїєэър.═рчтр фюъєьхэЄр (эряЁшъырф ╧юёЄрэютр)'
--    'LIE_DOCN', '└Ёх°Є Ёрїєэър. ═юьхЁ фюъєьхэЄр'
--    'LIE_DATE', '└Ёх°Є Ёрїєэър. ─рЄр фюъєьхэЄр'
--    'LIE_ATRT', '└Ёх°Є Ёрїєэър. ╬Ёурэ,  ъшщ тшфрт фюъєьхэЄ'
--    'LIE_SUM' , '└Ёх°Є Ёрїєэър. ╤єьр юсЄ цхээ (т ъюяiщърї)'
--    'LIE_VAL' , '└Ёх°Є Ёрїєэър. ┬ры■Єр юсЄ цхээ (ўшёыю)'

      begin
        insert
        into   accountsw (acc,
                          tag,
                          value)
                  values (acc_     ,
                          'LIE_DOC',
                          DOCLOCK_);
      exception when OTHERS then
        null;
      end;

      begin
        insert
        into   accountsw (acc,
                          tag,
                          value)
                  values (acc_      ,
                          'LIE_DATE',
                          to_char(DADOCLOCK_,'DD/MM/YYYY'));
      exception when OTHERS then
        null;
      end;

      if SUMLOCK_<>0 then
        begin
          insert
          into   accountsw (acc,
                            tag,
                            value)
                    values (acc_     ,
                            'LIE_SUM',
                          to_char(SUMLOCK_));
        exception when OTHERS then
          null;
        end;

        begin
          insert
          into   accountsw (acc,
                            tag,
                            value)
                    values (acc_     ,
                            'LIE_VAL',
                            to_char(I_VA_));
        exception when OTHERS then
          null;
        end;
      end if;

<<nextrec>> null;
    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    commit;

    toroot;

--  фюсртър т ALIEN

    execute immediate '
    delete
    from   alien
    where  (MFO,NLS,KV) in (select distinct
                                   to_char(bic),
                                   trim(nls)   ,
                                   i_va
                            from   S6_S6_EXT_SALDO
                            where  to_char(bic) in (select mfo
                                                    from   banks$base))';
    execute immediate 'insert
                       into   alien (MFO ,
                                     NLS ,
                                     KV  ,
                                     OKPO,
                                     NAME)
                              select distinct
                                     to_char(e.bic),
                                     trim(e.nls)   ,
                                     e.i_va        ,
                                     trim(e.id)    ,
                                     trim(substr(e.nk,1,70))
                              from   S6_S6_EXT_SALDO e,
                                     tabval          t
                              where  e.i_va=t.kv and
                                     to_char(e.bic) in (select mfo
                                                        from   banks$base)';
    commit;

--  юсэютыхэшх ьрЄхЁшрышчютрээюую яЁхфёЄртыхэш 

    NERUXOMI;

--  фюсртър RNK ш ярЁрьхЄЁр ё RNK фы  сЁрэўхщ

    begin
      for c in (select branch,
                       name
                from   branch
                where  branch like '/'||MFOg_||'/%'
                order  by branch)
      loop
        begin
          bc.subst_branch(c.branch);
          begin
            select rnk
            into   l_rnk
            from   customer
            where  branch=c.branch and
                   notes='BRANCH<->RNK';
          exception when no_data_found then

            execute immediate 'select s_customer.nextval from dual' into l_rnk;

            insert
            into   customer (rnk      ,
                             tgr      ,
                             custtype ,
                             codcagent,
                             okpo     ,
                             country  ,
                             nmk      ,
                             nmkk     ,
                             notes    ,
                             ise      ,
                             fs       ,
                             oe       ,
                             ved      ,
                             sed      ,
                             k050     ,
                             branch)
                     values (l_rnk                    ,
                             1                        ,
                             1                        ,
                             1                        ,
                             f_ourokpo                ,
                             804                      ,
                             trim(substr(c.name,1,70)),
                             trim(substr(c.name,1,38)),
                             'BRANCH<->RNK'           ,
                             '12201'                  ,
                             '31'                     ,
                             '96130'                  ,
                             '65120'                  ,
                             '80  '                   ,
                             '610'                    ,
                             c.branch);
          end;

          begin
            update branch_parameters
            set    val=to_char(l_rnk)
            where  tag='RNK' and
                   branch=c.branch;

            if SQL%ROWCOUNT=0 then
             insert
             into   branch_parameters (branch,
                                       tag   ,
                                       val)
                               values (c.branch,
                                       'RNK'   ,
                                       to_char(l_rnk));
            end if;
          end;
        exception when others then
          bc.set_context;
        end;
        bc.set_context;
      end loop;
    end;

    commit;

--  уЁштэр яю тёхь сЁрэўрь т cur_rates$base

    migraSK.grn11tocurrates;

--  юЄъЁ√Єшх ёўхЄют %% Ёрёїюфют

    migraSK.open_proc_drm('fin_deblocking6f - ',p_open,p_code,0,branch2_);

    bars_alerter(1);

  end fin_deblocking6f;

--

  procedure open_3800_5f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    BRANCH2_  varchar2(15);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

/*  ╬ЄъЁ√Є№ эют√х 3800/3801 сЁрэў2, чряюыэ   юфэютЁхьхээю VP_LIST.
    ╧Ёхфырур■ ьрёъє 3800_┴┴┴┴╬╬,  3801_┴┴┴┴╬╬┬┬┬,
    ┴┴┴┴ - ъюф сЁрэўр
    ╬╬   - ъюф ╬┴22
    ┬┬┬  - ъюф тры
*/
    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    sql_:='select distinct
                  substr(branch,1,15) BRANCH2
           from   S6_S5_FILIAL';

    open cur_ for sql_;

    loop

      fetch cur_ into BRANCH2_;
      exit when cur_%notfound;

      -- kv (959,961,962) + ╬┴22('09')
      begin
        xM_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_5f - err(1): ╬°шсър xM_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

      -- kv not (959,961,962) + ╬┴22('03','10','16','20')
      begin
        xV_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_5f - err(2): ╬°шсър xV_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

      -- ╧хЁхсЁюёшЄ№ юёЄрЄъш ш чръЁ√Є№ ёЄрЁ х ышЎ.ёўхЄр 3800 ш 3801
      begin
        xZ_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_5f - err(3): ╬°шсър xZ_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

    end loop;

--  toroot;

    bars_alerter(1);

  end open_3800_5f;

--

  procedure open_3800_6f (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    BRANCH2_  varchar2(15);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

/*  ╬ЄъЁ√Є№ эют√х 3800/3801 сЁрэў2, чряюыэ   юфэютЁхьхээю VP_LIST.
    ╧Ёхфырур■ ьрёъє 3800_┴┴┴┴╬╬,  3801_┴┴┴┴╬╬┬┬┬,
    ┴┴┴┴ - ъюф сЁрэўр
    ╬╬   - ъюф ╬┴22
    ┬┬┬  - ъюф тры
*/
    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    sql_:='select distinct
                  substr(branch,1,15) BRANCH2
           from   S6_S6_FILIAL';

    open cur_ for sql_;

    loop

      fetch cur_ into BRANCH2_;
      exit when cur_%notfound;

      -- kv (959,961,962) + ╬┴22('09')
      begin
        xM_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_6f - err(1): ╬°шсър xM_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

      -- kv not (959,961,962) + ╬┴22('03','10','16','20')
      begin
        xV_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_6f - err(2): ╬°шсър xV_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

      -- ╧хЁхсЁюёшЄ№ юёЄрЄъш ш чръЁ√Є№ ёЄрЁ х ышЎ.ёўхЄр 3800 ш 3801
      begin
        xZ_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_6f - err(3): ╬°шсър xZ_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

    end loop;

--  toroot;

    bars_alerter(1);

  end open_3800_6f;

--

  procedure grn11tocurrates
  is
  begin
    for k in (select branch
              from   branch)
    loop
      begin
        insert
        into   cur_rates$base (kv    ,
                               bsum  ,
                               rate_o,
                               otm   ,
                               branch,
                               vdate)
                       values (980     ,
                               1       ,
                               1       ,
                               'Y'     ,
                               k.branch,
                               to_date('01/01/2000','DD/MM/YYYY'));
      exception when others then
        null;
      end;
    end loop;
    commit;

  end grn11tocurrates;

--

  procedure pereocenka (p_code in out number, p_errmask varchar2, p_datx date)
  is
  begin

    for k in (select kv
              from   tabval
              where  d_close is null and
                     kv<>980)
    loop
      begin
        p_rev(k.kv,p_datx);
        commit;
      exception when others then
        bars_audit.error(p_errmask||'(P1): '||sqlerrm||' - '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        rollback;
      end;
    end loop;

    begin
      PVP_RRR(p_datx);
      commit;
    exception when others then
      bars_audit.error(p_errmask||'(P2): '||sqlerrm||' - '||dbms_utility.format_error_backtrace);
      p_code := p_code+1;
      rollback;
    end;

  end pereocenka;

--

  procedure create_userShi (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    id_       staff$base.id%type;
    idugo_    staff$base.id%type;
    ISP_      number;
    TABN_     varchar2(10);
    FIO_      varchar2(40);
    logname_  varchar2(30);
    branch_   varchar2(30);
    fi3_      char(3);
    MFOg_     varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),-4,3),
                              min(branch)
                       from   s6_hi_filial'
                       into   fi3_   ,
                              branch_;


    sql_:='select distinct
                  u.CODE                                                                        ISP    ,
                  null                                                                          TABN   ,
                  nvl(migraSK.valid_symbol(u.NAME),''яюы№чютрЄхы№ эх шфхэЄшЇшЎшЁютрэ'')         FIO    ,
                  nvl(m.logname,''U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S''||to_char(u.CODE)) logname,
                  m.id
           from   S6_HI_USERS u,
                  s6_usermap  m
           where  m.isps6(+)=u.CODE and
                  m.filial(+)='''||p_filial||'''';

    open cur_ for sql_;

    loop

      fetch cur_ into ISP_    ,
                      TABN_   ,
                      FIO_    ,
                      logname_,
                      id_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin

        begin
          select id
          into   idugo_
          from   staff$base
          where  logname=logname_;
        exception when no_data_found then
          idugo_ := null;
        end;

        if idugo_ is null then

          begin
            execute immediate 'drop user '||logname_;
          exception when OTHERS then
            bars_audit.warning('create_userShi - warn(0): CODE='||to_char(ISP_)||', LOGIN='||logname_||' - '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--          p_code := p_code+1;
          end;

          if id_ is null then

            select min(num)
            into   id_
            from   conductor
            where  num not in (select id from staff$base);

          end if;

          bc.subst_branch(branch_);

          begin
            BARS_USERADM.create_user(FIO_             ,  -- p_usrfio      in  staff$base.fio%type
                                     TABN_            ,  -- p_usrtabn     in  staff$base.tabn%type
                                     0                ,  -- p_usrtype     in  staff$base.clsid%type
                                     1                ,  -- p_usraccown   in  staff$base.type%type
                                     branch_          ,  -- p_usrbranch   in  varchar2
                                     0                ,  -- p_usrusearc   in  staff$base.usearc%type
                                     0                ,  -- p_usrusegtw   in  staff$base.usegtw%type
                                     'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
                                     logname_         ,  -- p_reclogname  in  staff$base.logname%type
                                     'qwerty'         ,  -- p_recpasswd   in  varchar2
                                     null             ,  -- p_recappauth  in  varchar2
                                     null             ,  -- p_recprof     in  varchar2
                                     'BARS_CONNECT'   ,  -- p_recdefrole  in  varchar2
                                     null             ,  -- p_recrsgrp    in  varchar2
                                     id_                 -- p_usrid       in  staff$base.id%type default null
                                    );

            bc.set_context;

            delete
            from   USERS_SKARB6_BARS
            where  KF=MFOg_     and
                   USKARB6=ISP_ and
                   filial=p_filial;
            insert
            into   USERS_SKARB6_BARS (KF     ,
                                      USKARB6,
                                      UBARS  ,
                                      filial)
                              values (MFOg_,
                                      ISP_ ,
                                      id_  ,
                                      p_filial);
            commit;

            p_open := p_open+1;

          exception when OTHERS then
            bars_audit.error('create_userShi - err(1): CODE='||to_char(ISP_)||', LOGIN='||logname_||' - '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;

        else -- user єцх хёЄ№

          bars_audit.error('create_userShi - err(2): CODE='||to_char(ISP_)||', LOGIN='||logname_||' - фєсышЁютрэшх ыюушэр ё єцх ёє∙хёЄтє■∙шь');
          p_code := p_code+1;

        end if;

--    exception when OTHERS then

--      bars_audit.error('create_userShi - err(3): CODE='||to_char(ISP_)||', LOGIN='||logname_||' - '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--      p_code := p_code+1;

      end;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(0);

  end create_userShi;

--

  procedure create_customerShi (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type        cur is ref cursor;
    cur_        cur;
    sql_        varchar2(32000);
    rnk_        number;
    fl_         number;
    ispg_       varchar2(32);

    TAXF_       varchar2(12);
    DATEON_     date;
    DATEA_      date;
    DATET_      date;
    BDAY_       date;
    FS_         varchar2(3);
    SED_        char(4);
    NMK_        varchar2(70);
    IDCLIENT_   number;
    GROUP_C_    number;
    OKPO_       varchar2(12);
    COUNTRY_    number;
    CREG_       number;
    CDST_       number;
    PRINSIDER_  number;
    ISP_        number;
    NMKK_       varchar2(38);
    OE_         varchar2(5);
    CODCAGENT_  number;
    ISE_        varchar2(5);
    SEX_        number;
    TGR_        number;
    CUSTTYPE_   number;
    VED_        varchar2(5);
    ND_         varchar2(10);
    CRISK_      number;
    PHONE_      varchar2(20);
    POSTIND_    varchar2(10);
    OBLAST_     varchar2(40);
    RAYON_      varchar2(25);
    CITY_       varchar2(40);
    STREET_     varchar2(40);
    HOUSE_      varchar2(20);
    KVARTIRA_   varchar2(20);
    TEL_        varchar2(20);
    EMAIL_      varchar2(100);
    SAB_        varchar2(6);
    STMT_       number;
    RGADM_      varchar2(30);
    MFO_        varchar2(12);
    BIC_        varchar2(12);

--  l_ins_      number;

    SERIA_      VARCHAR2(10);
    NOMBER_     VARCHAR2(20);
    ORGAN_      VARCHAR2(50);
    DOTE_       date;

    fi3_        char(3);
    Adr_        customer.adr%type;
    K050_       char(3);
    MFOg_       varchar2(12);

  begin

    bars_alerter(0);

--  l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),-4,3)
                       from   s6_hi_filial'
                       into   fi3_;

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=MFOg_                              and
           logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=MFOg_ and
             logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%';
      if ispg_ is null then
        select to_char(min(id))
        into   ispg_
        from   staff$base
        where  bc.extract_mfo(branch)=MFOg_ and
               tabn is not null;
        if ispg_ is null then
          select to_char(min(id))
          into   ispg_
          from   staff$base
          where  bc.extract_mfo(branch)=MFOg_;
        end if;
      end if;
    end if;

    MFO_ := null;

    sql_:='select distinct
                  TAXF     ,
                  K050     ,
                  DATEON   ,
                  DATEA    ,
                  DATET    ,
                  BDAY     ,
                  FS       ,
                  SED      ,
                  NMK      ,
                  IDCLIENT ,
                  GROUP_C  ,
                  OKPO     ,
                  COUNTRY  ,
                  CDST     ,
                  CREG     ,
                  PRINSIDER,
                  ISP      ,
                  NMKK     ,
                  OE       ,
                  CODCAGENT,
                  ISE      ,
                  SEX      ,
                  TGR      ,
                  CUSTTYPE ,
                  VED      ,
                  ND       ,
                  CRISK    ,
                  PHONE    ,
                  POSTIND  ,
                  OBLAST   ,
                  RAYON    ,
                  CITY     ,
                  STREET   ,
                  HOUSE    ,
                  KVARTIRA ,
                  TEL      ,
                  EMAIL    ,
                  SAB      ,
                  STMT     ,
                  RGADM    ,
                  BIC      ,
                  SERIA    ,
                  NOMBER   ,
                  ORGAN    ,
                  DOTE     ,
                  Adr
           from   (select distinct
                          c.K050                                                         TAXF     ,  -- ╩юф яырЄэшър яюфрЄъiт                   varchar(5)
                          substr(''00''||to_char(nvl(c.K050,0)),-3)                      K050     ,  -- ╧юърчрЄхы№ k050                         CHAR(3)
                          nvl(c.D_REG_SA,c.LASTDATE)                                     DATEON   ,  -- ─рЄр Ёх║ёЄЁрЎi┐                         smalldatetime
                          c.D_REG_SA                                                     DATEA    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т рфьiэiёЄЁрЎi┐         smalldatetime
                          c.D_REG_STI                                                    DATET    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т яюфрЄъютiщ iэёяхъЎi┐  smalldatetime
                          null                                                           BDAY     ,  -- ─рЄр эрЁюфцхээ                          smalldatetime
                          decode(substr(''00''||to_char(nvl(c.K080,0)),-2),
                                 ''99'',''ZZ'',
                                 ''00'',decode(decode(c.KIND,7,1,9,1,c.KIND),5,''10'',
                                                                             1,''31'',
                                                                             3,''31'',
                                                                               ''ZZ''),
                                 substr(''00''||to_char(nvl(c.K080,0)),-2))              FS       ,  -- ╘юЁьр тырёэюёЄi                         tinyint
                          substr(''0''||to_char(nvl(c.K051,0)),-2)||''  ''               SED      ,  -- ╘юЁьр уюёяюфрЁ■трээ                     char(4)
                          trim(substr(trim(c.NAME),1,70))                                NMK      ,  -- ╧ютэх эрщьхэєтрээ                       varchar(150)
                          c.CODE                                                         IDCLIENT ,  -- ╩юф                                     int
                          0                                                              GROUP_C  ,  -- ╩юф+                                    int
                          trim(substr(migraSK.valid_symbol(c.OKPO),1,10))                OKPO     ,  -- IфхэЄшЇiърЎiщэшщ ъюф                    varchar(10)
                          to_number(nvl(c.K040,''804''))                                 COUNTRY  ,  -- ╩Ёр┐эр                                  smallint
                          nullif(c.C_DST,0)                                              CDST     ,  -- ╧юфрЄъютр iэёяхъЎi                      tinyint
                          nullif(c.C_REG,0)                                              CREG     ,  -- ╨хуiюэ                                  tinyint
                          decode(nvl(c.K060,99),21,2,22,3,23,5,30,4,c.K060)              PRINSIDER,  -- IэёрщфхЁ                                tinyint
                          nvl(u.UBARS,'||ispg_||')                                       ISP      ,  -- ╩юф ъюЁшёЄєтрўр                         smallint
                          trim(substr(c.SHORTNAME,1,38))                                 NMKK     ,  -- ╩юЁюЄъх эрщьхэєтрээ                     varchar(40)
                          substr(''00000''||to_char(c.K090),-5)                          OE       ,  -- ├рыєч№                                  int
                          decode(c.KIND,7,1,9,1,c.KIND)                                  CODCAGENT,  -- ╒рЁръЄхЁшёЄшър
                          decode(substr(''00000''||nvl(to_char(c.K070),''''),-5),
                                 ''00000'',
                                 decode(decode(c.KIND,7,1,9,1,c.KIND),5,''14410'',
                                                                      1,''12201'',
                                                                      2,''20000'',
                                                                      4,''20000'',
                                                                      6,''20000'',
                                                                        ''ZZZZZ''),
                                 substr(''00000''||nvl(to_char(c.K070),''''),-5))        ISE      ,  -- IэёЄшЄ.ёхъЄюЁ хъюэюьiъш                 int
                          null                                                           SEX      ,  -- ╤ЄрЄ№                                   tinyint
                          decode(nvl(c.TIN_KEY,0),0,3,4,1,c.TIN_KEY)                     TGR      ,  -- ╥шя фхЁцЁх║ёЄЁє                         tinyint
                          decode(substr(''00''||to_char(nvl(c.K051,0)),-2),''91'',3,
                                 decode(c.KIND,3,2,5,3,1))                               CUSTTYPE ,  -- ╥шя ъыi║эЄр                             tinyint
                          substr(''00000''||nvl(c.K110,''''),-5)                         VED      ,  -- ┬шф хъюэюь.фi ы№эюёЄi                   int
                          to_char(c.CODE)                                                ND       ,
                          to_number(c.K015)                                              CRISK    ,
                          trim(migraSK.valid_symbol(substr(trim(c.PHONE),1,20)))         PHONE    ,  -- ╥хыхЇюэ                                 varchar(20)
                          null                                                           POSTIND  ,  -- ╧ю°Єютшщ iэфхъё                         varchar(10)
                          null                                                           OBLAST   ,  -- ╬сырёЄ№                                 varchar(40)
                          null                                                           RAYON    ,  -- ╨рщюэ                                   varchar(25)
                          null                                                           CITY     ,  -- ╠iёЄю, эрёхы.яєэъЄ                      varchar(40)
                          null                                                           STREET   ,  -- ┬єышЎ                                   varchar(40)
                          null                                                           HOUSE    ,  -- ─iь                                     varchar(20)
                          null                                                           KVARTIRA ,  -- ╩трЁЄшЁр                                varchar(20)
                          trim(migraSK.valid_symbol(substr(trim(c.PHONE),1,20)))         TEL      ,  -- ╥хыхЇюэ                                 varchar(20)
                          null                                                           EMAIL    ,  -- ┼ыхъЄЁюээр рфЁхёр                       varchar(20)
                          null                                                           SAB      ,  -- SAB
                          null                                                           STMT     ,
                          null                                                           RGADM    ,
                          null                                                           BIC      ,
                          upper(trim(substr(c.PASSPORT,1,2)))                            SERIA    ,  -- ╤хЁш  ярёяюЁЄр
                          trim(substr(c.PASSPORT,3,7))                                   NOMBER   ,  -- ═юьхЁ ярёяюЁЄр
                          trim(substr(c.PASSPORT,10,50))                                 ORGAN    ,  -- ╩хь т√фрэ
                          null                                                           DOTE     ,  -- ╩юуфр т√фрэ
                          trim(substr(c.ADDRESS,1,70))                                   Adr
                   from   S6_HI_BCL                              c,
--                        (select K051,
--                                substr(K050,1,3) K050
--                         from   KL_K050
--                         where  k051 is not null
--                        union all
--                         select k051,
--                                substr(K050,1,3) K050
--                         from   KL_K051
--                         where  k050 in (select k050
--                                         from   kl_k050
--                                         where  k051 is null)) k,
                          USERS_SKARB6_BARS                      u
                   where  c.KIND=u.USKARB6(+)                                             and
--                        substr(k.K050(+),1,3)=substr(''00''||to_char(nvl(c.K050,0)),-3) and
                          u.FILIAL(+)='''||p_filial||''')
           order  by IDCLIENT,GROUP_C';

    open cur_ for sql_;

    loop
      fetch cur_ into TAXF_     ,
                      K050_     ,
                      DATEON_   ,
                      DATEA_    ,
                      DATET_    ,
                      BDAY_     ,
                      FS_       ,
                      SED_      ,
                      NMK_      ,
                      IDCLIENT_ ,
                      GROUP_C_  ,
                      OKPO_     ,
                      COUNTRY_  ,
                      CDST_     ,
                      CREG_     ,
                      PRINSIDER_,
                      ISP_      ,
                      NMKK_     ,
                      OE_       ,
                      CODCAGENT_,
                      ISE_      ,
                      SEX_      ,
                      TGR_      ,
                      CUSTTYPE_ ,
                      VED_      ,
                      ND_       ,
                      CRISK_    ,
                      PHONE_    ,
                      POSTIND_  ,
                      OBLAST_   ,
                      RAYON_    ,
                      CITY_     ,
                      STREET_   ,
                      HOUSE_    ,
                      KVARTIRA_ ,
                      TEL_      ,
                      EMAIL_    ,
                      SAB_      ,
                      STMT_     ,
                      RGADM_    ,
                      BIC_      ,
                      SERIA_    ,
                      NOMBER_   ,
                      ORGAN_    ,
                      DOTE_     ,
                      Adr_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        select c.rnk
        into   rnk_
        from   customerw w,
               customer  c
        where  w.tag='RS6HI'                                                    and
               w.value=to_char(IDCLIENT_)||to_char(GROUP_C_)||to_char(p_filial) and
               w.rnk=c.rnk                                                      and
               bc.extract_mfo(c.branch)=MFOg_                                   and
               rownum<2;
      exception when no_data_found then
        RNK_ := null;
      end;

      bc.subst_mfo(MFOg_);

      begin

        kl.setCustomerAttr(RNK_                 ,  -- Rnk_  IN OUT customer.rnk%type        -- Customer number
                           CUSTTYPE_            ,  -- Custtype_    customer.custtype%type   -- ╥шя ъышхэЄр: 1-срэъ, 2-■Ё.ышЎю, 3-Їшч.ышЎю
                           ND_                  ,  -- Nd_          customer.nd%type         -- ╣ фюуютюЁр
                           NMK_                 ,  -- Nmk_         customer.nmk%type        -- ═ршьхэютрэшх ъышхэЄр
                           null                 ,  -- Nmkv_        customer.nmkv%type       -- ═ршьхэютрэшх ъышхэЄр ьхцфєэрЁюфэюх
                           NMKK_                ,  -- Nmkk_        customer.nmkk%type       -- ═ршьхэютрэшх ъышхэЄр ъЁрЄъюх
                           Adr_                 ,  -- Adr_         customer.adr%type        -- └фЁхё ъышхэЄр
                           CODCAGENT_           ,  -- Codcagent_   customer.codcagent%type  -- ╒рЁръЄхЁшёЄшър
                           COUNTRY_             ,  -- Country_     customer.country%type    -- ╤ЄЁрэр
                           PRINSIDER_           ,  -- Prinsider_   customer.prinsider%type  -- ╧Ёшчэръ шэёрщфхЁр
                           TGR_                 ,  -- Tgr_         customer.tgr%type        -- ╥шя уюё.ЁххёЄЁр
                           OKPO_                ,  -- Okpo_        customer.okpo%type       -- ╬╩╧╬
                           STMT_                ,  -- Stmt_        customer.stmt%type       -- ╘юЁьрЄ т√яшёъш
                           SAB_                 ,  -- Sab_         customer.sab%type        -- ▌ы.ъюф
                           DATEON_              ,  -- DateOn_      customer.date_on%type    -- ─рЄр ЁхушёЄЁрЎшш
                           TAXF_                ,  -- Taxf_        customer.taxf%type       -- ═рыюуют√щ ъюф
                           CREG_                ,  -- CReg_        customer.c_reg%type      -- ╩юф юсы.═╚
                           CDST_                ,  -- CDst_        customer.c_dst%type      -- ╩юф Ёрщюэ.═╚
                           null                 ,  -- Adm_         customer.adm%type        -- └фьшэ.юЁурэ
                           null                 ,  -- RgTax_       customer.rgtax%type      -- ╨ху эюьхЁ т ═╚
                           RGADM_               ,  -- RgAdm_       customer.rgadm%type      -- ╨ху эюьхЁ т └фь.
                           DATET_               ,  -- DateT_       customer.datet%type      -- ─рЄр Ёху т ═╚
                           DATEA_               ,  -- DateA_       customer.datea%type      -- ─рЄр Ёху. т рфьшэшёЄЁрЎшш
                           ISE_                 ,  -- Ise_         customer.ise%type        -- ╚эёЄ. ёхъ. ¤ъюэюьшъш
                           FS_                  ,  -- Fs_          customer.fs%type         -- ╘юЁьр ёюсёЄтхээюёЄш
                           OE_                  ,  -- Oe_          customer.oe%type         -- ╬ЄЁрёы№ ¤ъюэюьшъш
                           VED_                 ,  -- Ved_         customer.ved%type        -- ┬шф ¤ъ. фх Єхы№эюёЄш
                           SED_                 ,  -- Sed_         customer.sed%type        -- ╘юЁьр їюч щёЄтютрэш 
                           'Imported from HITCf',  -- Notes_       customer.notes%type      -- ╧Ёшьхўрэшх
                           null                 ,  -- Notesec_     customer.notesec%type    -- ╧Ёшьхўрэшх фы  ёыєцс√ схчюярёэюёЄш
                           CRISK_               ,  -- CRisk_       customer.crisk%type      -- ╩рЄхуюЁш  Ёшёър
                           null                 ,  -- Pincode_     customer.pincode%type    --
                           null                 ,  -- RnkP_        customer.rnkp%type       -- ╨ху. эюьхЁ їюыфшэур
                           null                 ,  -- Lim_         customer.lim%type        -- ╦шьшЄ ърёё√
                           null                 ,  -- NomPDV_      customer.nompdv%type     -- ╣ т ЁххёЄЁх яырЄ. ╧─┬
                           '9'                  ,  -- MB_          customer.mb%type         -- ╧Ёшэрфы. ьрыюьє сшчэхёє
                           null                 ,  -- BC_          customer.bc%type         -- ╧Ёшчэръ ═┼ъышхэЄр срэър
                           '/'||MFOg_||'/'      ,  -- Tobo_        customer.tobo%type       -- ╩юф схчсрырэёютюую юЄфхыхэш 
                           ISP_                    -- Isp_         customer.isp%type        -- ╠хэхфцхЁ ъышхэЄр (юЄтхЄ. шёяюыэшЄхы№)
                          );

        begin
          kl.setCustomerEN(RNK_ ,  -- customer.rnk%type
                           ISE_ ,  -- customer.ise%type
                           FS_  ,  -- customer.fs%type
                           VED_ ,  -- customer.ved%type
                           OE_  ,  -- customer.oe%type
                           K050_,  -- customer.k050%type
                           SED_);  -- customer.sed%type
        exception when others then
          bars_audit.error('create_customerShi - err(1): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                           'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                           'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                           'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                           'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                           'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                           'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                           'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                           'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                           'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                           'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                           'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                           'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                           'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                           'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                           'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                           'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                           'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                           'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                           'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                           'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                           'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                           'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                           'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                           'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                           'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                           'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                           'CLI_KOD   = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                           'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                           'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          fl_ := 1;
          p_code := p_code+1;
          bc.set_context;
          goto custplus;
        end;

        fl_ := 0;
        p_open := p_open+1;
--      l_ins_ := l_ins_+1;
      exception when others then
        bars_audit.error('create_customerShi - err(0): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                         'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                         'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                         'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                         'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                         'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                         'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                         'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                         'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                         'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                         'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                         'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                         'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                         'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                         'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                         'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                         'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                         'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                         'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                         'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                         'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                         'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                         'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                         'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                         'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                         'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                         'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                         'CLI_KOD   = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                         'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                         'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        fl_ := 1;
        p_code := p_code+1;
        bc.set_context;
      end;

<<custplus>> null;

      if fl_=0 then
        if CUSTTYPE_=1 then
          begin
            kl.setBankAttr(RNK_,  -- Rnk_    NUMBER,
                           MFO_,  -- Mfo_    VARCHAR2,
                           BIC_,  -- Bic_    VARCHAR2,
                           null,  -- BicAlt_ VARCHAR2,
                           null,  -- Rating_ VARCHAR2,
                           null,  -- Kod_b_  NUMBER,
                           null,  -- Ruk_    VARCHAR2,
                           TEL_,  -- TelR_   VARCHAR2,
                           null,  -- Buh_    VARCHAR2,
                           null   -- TelB_   VARCHAR2
                          );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerShi - err(2): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'CLI_KOD   = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=2 then
          begin
            kl.setCorpAttr(RNK_  ,  -- Rnk_    NUMBER,
                           NMK_  ,  -- Nmku_   VARCHAR2,
                           null  ,  -- Ruk_    VARCHAR2,
                           TEL_  ,  -- TelR_   VARCHAR2,
                           null  ,  -- Buh_    VARCHAR2,
                           null  ,  -- TelB_   VARCHAR2,
                           null  ,  -- TelFax_ varchar2,
                           EMAIL_,  -- EMail_  varchar2,
                           null     -- SealId_ number
                          );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerShi - err(3): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'CLI_KOD   = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=3 then
          begin
            kl.setPersonAttr(RNK_   ,  -- Rnk_    NUMBER,
                             SEX_   ,  -- Sex_    CHAR,
                             1      ,  -- Passp_  NUMBER,
                             SERIA_ ,  -- Ser_    VARCHAR2,
                             NOMBER_,  -- Numdoc_ VARCHAR2,
                             DOTE_  ,  -- PDate_  DATE,
                             ORGAN_ ,  -- Organ_  VARCHAR2,
                             BDAY_  ,  -- BDay_   DATE,
                             null   ,  -- BPlace_ VARCHAR2,
                             null   ,  -- TelD_   VARCHAR2,
                             TEL_      -- TelW_   VARCHAR2
                             );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerShi - err(4): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'CLI_KOD   = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_             ,  -- Rnk_ INTEGER,
                                  'RS6HI'          ,  -- Tag_ VARCHAR2,
                                  to_char(IDCLIENT_)||
                                  to_char(GROUP_C_) ||
                                  to_char(p_filial),  -- Val_ VARCHAR2,
                                  0                   -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerShi - err(5): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_           ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_      ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_            ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_           ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_          ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_     ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_       ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_     ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_           ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_          ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_          ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_           ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_        ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_          ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_          ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_          ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_         ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_         ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_         ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_           ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_            ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_            ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_           ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_           ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_         ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_           ||', '||Chr(13)||Chr(10)||
                             'CLI_KOD   = '||IDCLIENT_      ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_       ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        bc.set_context;
      end if;

      if fl_=0 then
         commit;
      else
         rollback;
      end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(1);

  end create_customerShi;

--

  procedure open_accountShi (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    fl_          number;
    type         cur is ref cursor;
    cur_         cur;
    sql_         varchar2(32000);
    accR_        number;
    ACRA_        number;
    ACRB_        number;
    ACRdb_       number;
    ACRkr_       number;
    ndz_         number;
    id_          number;
    acc_3800_    number;
    acc_3801_    number;
    acc_6204_    number;
    ostc_3800_   number;
    ostc_3801_   number;
    ispg_        varchar(32);
    kvv_         accounts.kv%type;
    NLS_3800_    accounts.nls%type;
    NLS_3801_    accounts.nls%type;

    rnk_         customer.rnk%type;
    DAPP_        date;
    daos_        date;
    dazs_        date;
    kv_          accounts.kv%type;
    isp_         number;
    nbs_         char(4);
    tip_         char(3);
    vid_         number;
    ostc_        number;
    ostq_        number;
    lim_         number;
    nms_         varchar2(70);
    nls_         accounts.nls%type;
    nlsalt_      accounts.nlsalt%type;
    branch_      accounts.branch%type;
    OB22_        SPECPARAM_INT.ob22%type;
    OB88_        SPECPARAM_INT.ob88%type;
    P080_        SPECPARAM_INT.P080%type;
    MFO_         SPECPARAM_INT.MFO%type;
    R020_FA_     SPECPARAM_INT.R020_FA%type;
    R011_        SPECPARAM.R011%type;
    R013_        SPECPARAM.R013%type;
    S080_        SPECPARAM.S080%type;
    S180_        SPECPARAM.S180%type;
    S190_        SPECPARAM.S190%type;
    S181_        SPECPARAM.S181%type;
    S260_        SPECPARAM.S260%type;
    S200_        SPECPARAM.S200%type;
    S120_        SPECPARAM.S120%type;
    S031_        SPECPARAM.S031%type;
    S182_        SPECPARAM.S182%type;
    S240_        SPECPARAM.S240%type;
--  S130_        SPECPARAM.S130%type;
    NKD_         SPECPARAM.NKD%type;
    IR_          int_ratn.ir%type;
    bdat_        int_ratn.bdat%type;
    pap_         ps.pap%type;
    serv_db_s_   accounts.nls%type;
    serv_kr_s_   accounts.nls%type;
    serv_i_va_   accounts.kv%type;
    NLSs6_       varchar2(15);
    I_VAs6_      number;
    PercenRate_  number;
    flS6_        number;
    open_        number;
    s7_          number;
    s8_          number;
    s9_          number;
--  l_ins_       number;
--  len_S080_    varchar2(4);
    mrnk_        varchar2(32);

    pos_         number;
    kfil_        number;
    newnls_      accounts.nls%type;
    nn_          int;
    ffff_        char(4);
    fff_         char(3);
    ff_          char(2);
    i_           int;
    group_c_     varchar2(2);
    OB22aaa_     varchar2(3);
    OB22aa_      varchar2(3);

    fi3_         char(3);
    ugosaldoa_   int;
    op_          int;

    Job_         number;
    MFOg_        varchar2(12);

 begin

    bars_alerter(0);

    gl.frcvr := 1;

--  l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),-4,3)
                       from   s6_hi_filial'
                       into   fi3_;

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=MFOg_                              and
           logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=MFOg_ and
             logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%';
      if ispg_ is null then
        select to_char(min(id))
        into   ispg_
        from   staff$base
        where  bc.extract_mfo(branch)=MFOg_ and
               tabn is not null;
        if ispg_ is null then
          select to_char(min(id))
          into   ispg_
          from   staff$base
          where  bc.extract_mfo(branch)=MFOg_;
        end if;
      end if;
    end if;

    mrnk_ := -1;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 disable';
    exception when OTHERS then
      null;
    end;

    sql_:='select distinct  /* to ACCOUNTS */
                  nvl(cw.rnk,'||mrnk_||')                                                                                                  rnk    ,
                  null                                                                                                                     DAPP   ,
                  null                                                                                                                     dazs   ,
                  to_date('''||p_datx||''')-4                                                                                              daos   ,
                  to_number(s.CURR)                                                                                                        kv     ,
                  nvl(u.UBARS,'||ispg_||')                                                                                                 isp    ,
                  substr(s.CODE,1,4)                                                                                                       nbs    ,
                  1                                                                                                                        pos    ,
                  0                                                                                                                        ostc   ,
                  0                                                                                                                        ostq   ,
                  0                                                                                                                        lim    ,
--                nvl(n.taxotype,0)                                                                                                        vid    ,
                  (case when substr(s.CODE,1,2)=''25''                       then
                     11
                        when substr(s.CODE,1,4) in (''2610'',
                                                    ''2612'',
                                                    ''2615'',
                                                    ''2630'',
                                                    ''2635'',
                                                    ''2651'',
                                                    ''2652'',
                                                    ''1510'',
                                                    ''1511'',
                                                    ''1512'',
                                                    ''1515'',
                                                    ''1610'',
                                                    ''1611'',
                                                    ''1612'',
                                                    ''1615'')                then
                     4
                        when substr(s.CODE,1,4) in (''1500'',
                                                    ''1600'')                then
                     10
                        when substr(s.CODE,1,2) in (''20'',
                                                    ''21'',
                                                    ''22'',
                                                    ''27'')                  then
                     6
                        when substr(s.CODE,1,4)=''9802''                     then
                     5
                        when substr(s.CODE,1,4) in (''4310'',
                                                    ''4430'',
                                                    ''4432'',
                                                    ''4438'',
                                                    ''4439'',
                                                    ''4530'',
                                                    ''4532'',
                                                    ''4538'',
                                                    ''4539'')                then
                     8
                        when substr(s.CODE,1,4) in (select nbs from dpa_nbs) then
                     3
                   else
                     0
                   end)                                                                                                                    vid    ,
                  migraSK.valid_symbol(trim(substr(nvl(s.NAME,''эх юяЁхфхыхэю''),1,70)))                                                   nms    ,
                  s.CODE                                                                                                                   nls    ,
                  null                                                                                                                     nlsalt ,
                  nvl(f.branch,''/''||'''||MFOg_||'''||''/000000/'')                                                                       branch ,
                  /* to SPECPARAM_INT */
                  substr(''00''||trim(s.OB22),-2)                                                                                          OB22   ,
                  s.OB88                                                                                                                   OB88   ,
                  s.P080                                                                                                                   P080   ,
                  null                                                                                                                     MFO    ,
                  s.R020_FA                                                                                                                R020_FA,
                  /* to SPECPARAM */
                  s.R011                                                                                                                   R011   ,
                  s.R013                                                                                                                   R013   ,
                  nullif(s.S080,''0'')                                                                                                     S080   ,
                  decode(upper(nullif(nullif(nullif(nullif(s.S180,''I''),''K''),''L''),''╠'')),
                         ''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',
                         upper(nullif(nullif(nullif(nullif(s.S180,''I''),''K''),''L''),''╠'')))                                            S180   ,
                  s.S190                                                                                                                   S190   ,
                  s.S181                                                                                                                   S181   ,
                  s.S260                                                                                                                   S260   ,
                  s.S200                                                                                                                   S200   ,
                  s.S120                                                                                                                   S120   ,
                  null                                                                                                                     S031   ,
                  null                                                                                                                     S182   ,
                  decode(upper(s.S240),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(s.S240))  S240   ,
                  migraSK.valid_symbol(trim(s.RESTNO))                                                                                     NKD    ,
                  /* to INT_RATN */
                  decode(substr(s.CODE,1,2),''2'',2,ps.pap)                                                                                pap    ,
                  s.CODE                                                                                                                   NLSs6  ,
                  to_number(s.CURR)                                                                                                        I_VAs6 ,
                  s.PARTCODE                                                                                                               kfil   ,
                  ''0''                                                                                                                    group_c,
--                decode(s.ISESCROW,1,99,0)                                                                                                blk    ,
                  s.S012                                                                                                                   IR     ,
                  (case when nvl(s.DOPEN,s.LASTDATE)<to_date(''01/01/1920'',''DD/MM/YYYY'') then
                     add_months(nvl(s.DOPEN,s.LASTDATE),1200)
                   else
                     nvl(s.DOPEN,s.LASTDATE)
                   end)                                                                                                                    bdat
           from   customerw         cw,
                  S6_HI_BAC         s ,
                  S6_HI_FILIAL      f ,
                  (select nbs,
                          min(taxotype) taxotype
                   from   DPA_nbs
                   where  type=''DPA''
                   group  by nbs)   n ,
                  USERS_SKARB6_BARS u ,
                  ps
           where  cw.tag(+)=''RS6HI''                       and
                  to_number(cw.value(+))=
                  nvl(s.CLIENT,0)*10000000+'||p_filial||'   and
                  n.nbs(+)=substr(s.CODE,1,4)               and
                  s.DCLOSE is null                          and
                  f.kfil(+)=s.PARTCODE                      and
                  s."USER"=u.USKARB6(+)                     and
                  u.filial(+)='''||p_filial||'''            and
                  (substr(s.CODE,1,1)<>''8'' or
                   substr(s.CODE,1,3) in (''890'',''891'')) and
                  ps.nbs=substr(s.CODE,1,4)
           order  by substr(s.CODE,1,4) desc
          ';

--  bars_audit.info('open_accountShi - info(0a): sql_a = '||substr(sql_,    1,3000));
--  bars_audit.info('open_accountShi - info(0b): sql_b = '||substr(sql_, 3001,3000));
--  bars_audit.info('open_accountShi - info(0c): sql_c = '||substr(sql_, 6001,3000));
--  bars_audit.info('open_accountShi - info(0d): sql_d = '||substr(sql_, 9001,3000));
--  bars_audit.info('open_accountShi - info(0e): sql_e = '||substr(sql_,12001,3000));
--  bars_audit.info('open_accountShi - info(0f): sql_f = '||substr(sql_,15001,3000));
--  bars_audit.info('open_accountShi - info(0g): sql_g = '||substr(sql_,18001,3000));
--  bars_audit.info('open_accountShi - info(0h): sql_h = '||substr(sql_,21001,3000));

    open cur_ for sql_;

    LOOP

      fetch cur_ into rnk_    ,
                      DAPP_   ,
                      dazs_   ,
                      daos_   ,
                      kv_     ,
                      isp_    ,
                      nbs_    ,
                      pos_    ,
                      ostc_   ,
                      ostq_   ,
                      lim_    ,
                      vid_    ,
                      nms_    ,
                      nls_    ,
                      nlsalt_ ,
                      branch_ ,
                      OB22_   ,
                      OB88_   ,
                      P080_   ,
                      MFO_    ,
                      R020_FA_,
                      R011_   ,
                      R013_   ,
                      S080_   ,
                      S180_   ,
                      S190_   ,
                      S181_   ,
                      S260_   ,
                      S200_   ,
                      S120_   ,
                      S031_   ,
                      S182_   ,
                      S240_   ,
                      NKD_    ,
                      pap_    ,
                      NLSs6_  ,
                      I_VAs6_ ,
                      kfil_   ,
                      group_c_,
                      IR_     ,
                      bdat_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      fl_ := 0;
      op_ := 0;

--    юяЁхфхы хь шьяюЁЄшыш єцх ёў╕Є шыш эхЄ (т√сюЁър шч S6_MIGRNLS)

      begin
        select nls_bars
        into   newnls_
        from   S6_MIGRNLS
        where  nls_fil=nls_ and
               kv=kv_       and
               filial=p_filial;
      exception when no_data_found then
        newnls_ := null;
      end;

--    чфхё№ т√ўшёы хь newnls_ эр юёэютрэшш шэЇюЁьрЎшш шч ЄрсышЎ
--    S6_HI_SHABLON, S6_HI_DEPO, S6_HI_GROUP_C, S6_HI_FILIAL

      if newnls_ is null then -- сєфхь юЄъЁ√трЄ№ эют√щ ёў╕Є яю ьрёъх

--      1. юяЁхфхы хь FF_, FFF_, BRANCH_ шч S6_HI_FILIAL

        begin
          execute immediate 'select trim(branch)                 ,
                                    substr(''0000''||trim(ff),-4),
                                    substr(''000''||trim(ff),-3) ,
                                    substr(''00''||trim(ff),-2)
                             from   S6_HI_FILIAL
                             where  kfil='||to_char(kfil_)||' and
                                    rownum<2'
                             into   branch_,
                                    ffff_  ,
                                    fff_   ,
                                    ff_;
        exception when no_data_found then
          ffff_ := substr(branch_,-5,4);
          fff_  := substr(branch_,-4,3);
          ff_   := substr(branch_,-3,2);
        end;

--      2. ш∙хь ёў╕Є т S6_HI_DEPO, хёыш эр°ыш - newnls_ := vkrzn(KOTL) ш ┬╤и

        begin
          execute immediate 'select kotl,
                                    ob22,
                                    branch
                             from   S6_HI_DEPO
                             where  trim(nls)='''||nls_||'''           and
                                    i_va='||to_char(kv_)||'            and
                                    substr(kotl,1,4) not in (''1001'',
                                                             ''1101'',
                                                             ''1011'') and
                                    rownum<2'
                             into   newnls_,
                                    OB22_  ,
                                    branch_;
          nms_    := '╩юЄыютющ ёў╕Є '||substr(nls_,1,4)||' ╬┴22 '||OB22_;
          newnls_ := vkrzn(substr(MFOg_,1,5),newnls_);
          goto BCE;
        exception when OTHERS then
          null;
        end;

--      3. шэрўх - ш∙хь срырэёют√щ т S6_HI_SHABLON, хёыш хёЄ№, Єю схЁ╕ь
--         ёююЄтхЄёЄтє■∙є■ ьрёъє ёў╕Єр юЄЄєфр

        begin
          execute immediate 'select maska
                             from   S6_HI_SHABLON
                             where  ((length(trim(BALS))=4 and
                                      substr('''||nls_||''',1,4)=trim(BALS)) or
                                     (length(trim(BALS))=3 and
                                      substr('''||nls_||''',1,3)=trim(BALS)) or
                                     (length(trim(BALS))=2 and
                                      substr('''||nls_||''',1,2)=trim(BALS)) or
                                     (length(trim(BALS))=1 and
                                      substr('''||nls_||''',1,1)=trim(BALS))) and
                                    rownum<2'
                             into   newnls_;
          goto MASKA;
        exception when OTHERS then
          null;
        end;

--      4. шэрўх - ш∙хь їрЁръЄхЁшёЄъє ъюэЄЁрухэЄр ёў╕Єр т S6_HI_GROUP_C,
--         хёыш хёЄ№, Єю схЁ╕ь ёююЄтхЄёЄтє■∙є■ ьрёъє ёў╕Єр юЄЄєфр

        begin
          execute immediate 'select maska
                             from   S6_HI_GROUP_C
                             where  group_c='''||group_c_||''' and
                                    rownum<2'
                             into   newnls_;
          goto MASKA;
        exception when OTHERS then
          null;
        end;

--      5. шэрўх - фюсрты хь ъ ёў╕Єє рЁшЇьхЄшўхёъш 1 (Ўшъы) ш юяЁхфхы хь
--         яхЁт√щ яюярт°шщ ёў╕Є, хую ш яЁшётрштрхь т newnls_

        newnls_ := nls_;

        if substr(newnls_,1,4) in ('1001','1101','1011') then
          newnls_ := substr(newnls_,1,3)||'2'||substr(newnls_,5);
        end if;

        newnls_ := vkrzn(substr(MFOg_,1,5),newnls_);

        i_ := 0;
        while i_=0
        loop
          begin
            select 0
            into   i_
            from   accounts
            where  nls=newnls_ and
                   kv=kv_;
            newnls_ := vkrzn(substr(MFOg_,1,5),to_char(to_number(newnls_)+1));
          exception when no_data_found then
            i_ := 1;
          end;
        end loop;

        goto BCE; -- cў╕Є юяЁхфхыхэ!

<<MASKA>> null; -- чфхё№ ЁрчюсЁрЄ№ ьрёъє ╤┴┼╨┴└═╩└, т√ЁюфшЄ№ °рсыюэ т
                -- ьюфшЇшърЄюЁрї ┴└╨╤р ш юяЁхфхышЄ№ ёў╕Є яю хэЄюьє °рсыюэє!

--      BBBB          - срырэёют√щ ёў╕Є    (┬ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      GGGGGG, GGGGG - RNK
--      HHH, HH шыш H - эюьхЁ яю яюЁ фъє   (═ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      K             - ъюэЄЁюы№э√щ ЁрчЁ ф (╩ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      FFF шыш FF    - ъюф юЄфхыхэш 
--      AAA шыш AA    - ъюф ╬┴22           (└ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)

        newnls_ := replace(upper(newnls_),'┬','B');
        newnls_ := replace(upper(newnls_),'╩','K');
        newnls_ := replace(upper(newnls_),'└','A');
        newnls_ := replace(upper(newnls_),'═','H');

        OB22_   := replace(OB22_,'└','A');
        OB22_   := replace(OB22_,'┬','B');
        OB22_   := replace(OB22_,'╤','C');
        OB22_   := replace(OB22_,'═','H');
        OB22_   := replace(OB22_,'╩','K');
        OB22_   := replace(OB22_,'╠','M');
        OB22_   := replace(OB22_,'┼','E');
        OB22_   := replace(OB22_,'╒','X');
        OB22_   := replace(OB22_,'╨','P');
        OB22_   := replace(OB22_,'╬','O');
        OB22_   := replace(OB22_,'╥','T');

        OB22aaa_:= (case when upper(substr(nvl(OB22_,'00'),1,1))>'9' then
                      to_char(ascii(upper(substr(nvl(OB22_,'00'),1,1)))-55)||
                      substr(nvl(OB22_,'00'),-1)
                    else
                      '0'||to_char(substr(nvl(OB22_,'00'),1,1))||
                      substr(nvl(OB22_,'00'),-1)
                    end);
        OB22aa_ := substr(OB22aaa_,-2);

        newnls_ := replace(upper(newnls_),'BBBB',substr(nls_,1,4));
        newnls_ := replace(upper(newnls_),'G','R');
        newnls_ := replace(upper(newnls_),'H','╣');
        newnls_ := replace(upper(newnls_),'K','_');
        newnls_ := replace(upper(newnls_),'FFFF',ffff_);
        newnls_ := replace(upper(newnls_),'FFF',fff_);
        newnls_ := replace(upper(newnls_),'FF',ff_);
        newnls_ := replace(upper(newnls_),'AAA',OB22aaa_);
        newnls_ := replace(upper(newnls_),'AA',OB22aa_);

        if substr(nls_,1,4) in ('1001','1101','1011') then
          newnls_ := substr(nls_,1,3)||'2'||substr(newnls_,5);
        end if;

        toroot;
        delete
        from   nlsmask
        where  maskid='TemporaryM';

        insert
        into   nlsmask (MASKID,
                        DESCR ,
                        MASK)
                values ('TemporaryM'                           ,
                        '┬Ёхьхээр  ьрёър фы  °рсыюэр ёўхЄют ╤┴',
                        newnls_);
        commit;

--      яюыєўрхь ╨┼└╦▄═█╔ эюьхЁ ёў╕Єр

        tokf;
        newnls_ := f_newnls2(null               ,
                             'TemporaryM'       ,
                             substr(newnls_,1,4),
                             rnk_               ,
                             null               ,
                             kv_);
        i_ := 0;
        while i_=0
        loop
          begin
            select 0
            into   i_
            from   accounts
            where  nls=newnls_ and
                   kv=kv_;
            newnls_ := vkrzn(substr(MFOg_,1,5),to_char(to_number(newnls_)+1));
          exception when no_data_found then
            i_ := 1;
          end;
        end loop;

<<BCE>> null;

      end if;

      bc.subst_branch(branch_); -- єёЄрэртыштрхь сЁрэў фы  юЄъЁ√трхьюую ёў╕Єр

--    чфхё№ шьххь newnls_ ш kv_ фы  юЄъЁ√Єш  ═╬┬╬├╬ ёў╕Єр шыш шчьхэхэш  ёЄрЁюую

      if rnk_=-1 then
        bars_audit.error('open_accountShi - err(10): ёў╕Є эх яЁшт чрэ эш ъ юфэюьє ъышхэЄє '||Chr(13)||Chr(10)||
                                                               'NLS = '    ||nls_   ||', ' ||Chr(13)||Chr(10)||
                                                               'NEWNLS = ' ||newnls_||', ' ||Chr(13)||Chr(10)||
                                                               'KV = '     ||kv_    ||' '  ||Chr(13)||Chr(10)||
                                                               'branch = ' ||branch_||', ' ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
        fl_ := 1;
        goto kakaxer;
      end if;

      begin
        select acc
        into   accR_
        from   accounts
        where  nls=newnls_ and
               kv=kv_;
      exception when no_data_found then
        accR_ := null;
                when OTHERS then
        bars_audit.error('open_accountShi - err(1): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                          'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                          'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                          'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                          'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
        fl_ := 1;
        goto kakaxer;
      end;

      if accR_ is null then
        ndz_ := null;
        --1. OP_REG_ex
        begin

          tip_ := 'ODB';

          if    substr(newnls_,1,3)='100' and substr(newnls_,1,4)<>'1007' then
            if kv_=980 then
              tip_ := 'KAS';
            else
              tip_ := 'KAV';
            end if;
          elsif substr(newnls_,1,3) in ('604','603','602') and kv_=980 then
              tip_ := 'SD ';
          elsif substr(newnls_,1,4) in ('2625','2605','2655') then
              tip_ := 'PK1';
          end if;

          if trunc(sysdate)<p_datx then
            begin
              insert
              into   fdat (fdat)
                   values (p_datx-4);
              commit;
            exception when OTHERS then
              null;
            end;
            gl.pl_dat(p_datx-4);
          else
            begin
              insert
              into   fdat (fdat)
                   values (p_datx);
              commit;
            exception when OTHERS then
              null;
            end;
            gl.pl_dat(p_datx);
          end if;

          gl.amfo := MFOg_;

          OP_REG_exfl(99     ,  -- mod_       INTEGER,   -- Opening mode :
                      null   ,  -- p1_        INTEGER,   -- 1st Par      :
                      0      ,  -- p2_        INTEGER,   -- 2nd Par      :
                      0      ,  -- p3_        INTEGER,   -- 3rd Par (Grp):
                      ndz_   ,  -- p4_ IN OUT INTEGER,   -- 4th Par      :
                      rnk_   ,  -- rnk_       INTEGER,   -- Customer number
                      newnls_,  -- p_nls_     VARCHAR2,  -- Account  number
                      kv_    ,  -- kv_        SMALLINT,  -- Currency code
                      nms_   ,  -- nms_       VARCHAR2,  -- Account name
                      tip_   ,  -- tip_       CHAR,      -- Account type
                      isp_   ,  -- isp_       SMALLINT,
                      accR_  ,  -- accR_  OUT INTEGER,
                      '1'    ,  -- nbsnull_   VARCHAR2 DEFAULT '1',
                      null   ,  -- pap_       NUMBER   DEFAULT NULL,
                      vid_   ,  -- vid_       NUMBER   DEFAULT NULL,
                      pos_   ,  -- pos_       NUMBER   DEFAULT NULL,
                      null   ,  -- sec_       NUMBER   DEFAULT NULL,
                      null   ,  -- seci_      NUMBER   DEFAULT NULL,
                      null   ,  -- seco_      NUMBER   DEFAULT NULL,
                      99     ,  -- blkd_      NUMBER   DEFAULT NULL,
                      99     ,  -- blkk_      NUMBER   DEFAULT NULL,
          /* lim_? */ null   ,  -- lim_       NUMBER   DEFAULT NULL,
                      null   ,  -- ostx_      VARCHAR2 DEFAULT NULL,
                      nlsalt_,  -- nlsalt_    VARCHAR2 DEFAULT NULL,
                      branch_,  -- tobo_      VARCHAR2 DEFAULT NULL,
                      null   ,  -- accc_      NUMBER   DEFAULT NULL,
                      0);
          op_ := 1;
          begin
            update accounts
            set    dapp=dapp_
            where  acc=accR_;
          EXCEPTION WHEN OTHERS THEN
            bars_audit.error('open_accountShi - err(2): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
--          fl_ := 1;
          end;
          begin
            update ree_tmp
            set    ot=6
            where  nls=newnls_ and
                   kv=kv_      and
                   ot=1        and
                   fn_o is null;
          EXCEPTION WHEN OTHERS THEN
            bars_audit.error('open_accountShi - err(9): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;
--        l_ins_ := l_ins_+1;
        exception when others then
          bars_audit.error('open_accountShi - err(3): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                            'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                            'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                            'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                            'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          p_code := p_code+1;
          fl_ := 1;
        end;
      end if;

      if fl_=0 then
        select count(*)
        into   flS6_
        from   accountsw
        where  acc=accR_ and
               tag='IS6HI';
        if flS6_=0 then
          select count(1)
          into   ugosaldoa_
          from   saldoa
          where  acc=accr_;

          if ugosaldoa_=0 then
            begin
              insert
              into   saldoa (acc ,
                             fdat,
                             pdat,
                             ostf,
                             dos ,
                             kos)
                     values (accR_   ,
                             gl.bdate,
                             dapp_   ,
                             0       ,
                             0       ,
                             0);
            EXCEPTION WHEN OTHERS THEN
              null;
            end;
          end if;
        else
          update accounts
          set    daos=daos_
          where  acc=accR_;
        end if;

        if op_=1 then
          begin
            insert
            into   accountsw (acc,
                              tag,
                              value)
                      values (accR_  ,
                              'IS6HI',
                              'Imported from HITCf');
          exception when others then
            bars_audit.error('open_accountShi - err(4): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        --2. INSERT or UPDATE SPECPARAM_INT

        if fl_=0 then
          begin
            insert
            into   SPECPARAM_INT (acc    ,
                                  p080   ,
                                  ob22   ,
                                  mfo    ,
                                  r020_fa,
                                  ob88)
                          values (accR_   ,
                                  P080_   ,
                                  OB22_   ,
                                  MFO_    ,
                                  R020_FA_,
                                  OB88_);
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
            begin
              update SPECPARAM_INT
              set    p080=P080_      ,
                     ob22=OB22_      ,
                     mfo=MFO_        ,
                     r020_fa=R020_FA_,
                     ob88=OB88_
              where  acc=accR_;
            EXCEPTION WHEN OTHERS THEN
              bars_audit.error('open_accountShi - err(7u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;
                    WHEN OTHERS THEN
            bars_audit.error('open_accountShi - err(7): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        --3. INSERT or UPDATE SPECPARAM

        if fl_=0 then
          begin
            insert
            into   SPECPARAM (acc ,
                              R011,
                              R013,
                              S240,
                              S080,
                              S180,
                              S190,
                              S181,
                              S260,
                              S200,
                              S120,
                              S031,
                              S182,
--                            S130,
                              NKD)
                      values (accR_,
                              R011_,
                              R013_,
                              S240_,
                              S080_,
                              S180_,
                              S190_,
                              S181_,
                              S260_,
                              S200_,
                              S120_,
                              S031_,
                              S182_,
--                            S130_,
                              NKD_);
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
            begin
              update SPECPARAM
              set    R011=R011_,
                     R013=R013_,
                     S240=S240_,
                     S080=S080_,
                     S180=S180_,
                     S190=S190_,
                     S181=S181_,
                     S260=S260_,
                     S200=S200_,
                     S120=S120_,
                     S031=S031_,
                     S182=S182_,
--                   S130=S130_,
                     NKD=NKD_
              where  acc=accR_;
            EXCEPTION WHEN OTHERS THEN
              bars_audit.error('open_accountShi - err(8u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;
                    WHEN OTHERS THEN
            bars_audit.error('open_accountShi - err(8): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        if substr(nls_,1,1) in ('2','3','9') then

--        ╧ЁюЎхэЄэ√х ърЁЄюўъш

          if fl_=0 then

            if IR_ is not null /* and ACRA_ is not null */ then

              if pap_=1 then
                 id_ := 0;
              else
                 id_ := 1;
              end if;

--            4. INSERT or UPDATE INT_ACCN

              begin
                insert
                into    INT_ACCN (ACC    ,  -- accR_
                                  ID     ,  -- id_
                                  METR   ,  -- 0
--                                BASEM  ,
                                  BASEY  ,  -- 0
                                  FREQ   ,  -- 1
--                                STP_DAT,
                                  ACR_DAT,  -- bankdate
--                                APL_DAT,  -- bankdate-1
--                                TT     ,
                                  ACRA   ,  -- ???
                                  ACRB
--                                S      ,
--                                TTB    ,
--                                KVB    ,
--                                NLSB   ,
--                                MFOB   ,
--                                NAMB   ,
--                                NAZN   ,
--                                IO     ,
--                                BRANCH    -- branch_
                                 )
                          values (accR_     ,
                                  id_       ,
                                  0         ,
--                                null      ,
                                  0         ,
                                  1         ,
--                                null      ,
                                  bankdate  ,
--                                bankdate-1,
--                                null      ,
                                  accR_     ,  -- ACRA_ ???
                                  null         -- ACRB_ ???
--                                null      ,
--                                null      ,
--                                null      ,
--                                null      ,
--                                null      ,
--                                null      ,
--                                null      ,
--                                null      ,
--                                branch_
                                 );
              EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                update INT_ACCN
                set    METR   =0         ,
--                     BASEM  =null      ,
                       BASEY  =0         ,
                       FREQ   =1         ,
--                     STP_DAT=null      ,
                       ACR_DAT=bankdate  ,
--                     APL_DAT=bankdate-1,
--                     TT     =null      ,
                       ACRA   =accr_     ,  -- ACRA_ ???
                       ACRB   =null         -- ACRB_ ???
--                     S      =null      ,
--                     TTB    =null      ,
--                     KVB    =null      ,
--                     NLSB   =null      ,
--                     MFOB   =null      ,
--                     NAMB   =null      ,
--                     NAZN   =null      ,
--                     IO     =null      ,
--                     BRANCH =branch_
                where  acc=accR_ and
                       id=id_;
                        WHEN OTHERS THEN
                bars_audit.error('open_accountShi - err(6): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                  'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                  'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                  'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                  'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                p_code := p_code+1;
                fl_ := 1;
              end;

--            5. INSERT or UPDATE INT_RATN

              if fl_=0 then
                begin
                  insert
                  into   INT_RATN (acc   ,
                                   id    ,
                                   BDAT  ,
                                   IR    ,
                                   BR    ,
                                   OP    ,
                                   IDU --,
--                                 BRANCH
                                  )
                           values (accR_,
                                   id_  ,
                                   bdat_,
                                   IR_  ,
                                   null ,
                                   null ,
                                   1  --,
--                                 branch_
                                  );
                EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                  update INT_RATN
                  set    IR=IR_ ,
                         BR=null,
                         OP=null,
                         IDU=1--,
--                       BRANCH=branch_
                  where  acc=accR_ and
                         id=id_    and
                         BDAT=bdat_;
                          WHEN OTHERS THEN
                  bars_audit.error('open_accountShi - err(5):'||sqlerrm||', '||Chr(13)||Chr(10)||
                                                   'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                   'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                   'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                   'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                  p_code := p_code+1;
                  fl_ := 1;
                end;
              end if;
            end if;
          end if;
        end if;
      end if;

<<kakaxer>> null;

      bc.set_context;

      if fl_=0 then
        update S6_MIGRNLS
        set    NLS_BARS=newnls_
        where  NLS_FIL=nls_ and
               KV=kv_       and
               FILIAL=p_filial;
        if sql%rowcount=0 then
          insert
          into   S6_MIGRNLS (NLS_FIL ,
                             KV      ,
                             NLS_BARS,
                             FILIAL)
                     values (nls_   ,
                             kv_    ,
                             newnls_,
                             p_filial);
        end if;
        commit;
        p_open := p_open+1;
      else
        rollback;
      end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 enable';
    exception when OTHERS then
      null;
    end;

    gl.frcvr := 0;

    bars_alerter(1);

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ёўхЄют (ACCOUNTS ш ёт чрээ√х)

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tableAC_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('open_accountShi - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

  end open_accountShi;

--

  procedure drop_accountShi (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    accmax_  number;
    MFOg_    varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_accountShi - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  delete from TABLEs

    begin
      bc.subst_mfo(MFOg_);
      delete from accounts_update           where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from saldoa                    where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam_int             where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam_update          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from rko_lst                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_RATN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_RATN_ARC              where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACRA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACRB       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from NLK_REF                   where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(32): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACCD       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACC1       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from SALDOA_TURN_QUEUE         where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from SALDOB                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTARC                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(43): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTPAY                where ACCA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(44): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTPAY                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(45): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from accountsw                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(56): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from bank_acc                  where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(61): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from bpk_acc                   where acc_pk     in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(65): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from BARSAQ.AQ_SUBSCRIBERS_ACC where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag=''RS6HI'' and substr(value,-6)='''||p_filial||''') and ostc=0 and bc.extract_mfo(branch)='''||MFOg_||''')';
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(66): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from accounts_all              where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(67): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from ree_tmp                   where (nls,kv)   in (select nls,kv from accounts where rnk in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(68): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

    commit;

    begin
      bc.subst_mfo(MFOg_);
      delete from accounts                  where rnk        in (select rnk from customerw where tag='RS6HI' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_;
      p_open := p_open+SQL%rowcount;
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountShi - err(72): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

    delete
    from   S6_MIGRNLS
    where  filial=p_filial;

    commit;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_accountShi - err(73): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  recreate accounts SEQUENCE

    select nvl(max(acc),0)+1 into accmax_ from accounts;

    execute immediate 'DROP SEQUENCE S_ACCOUNTS';
    execute immediate 'CREATE SEQUENCE S_ACCOUNTS
                       START WITH '||accmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_ACCOUNTS TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_ACCOUNTS

    sys.utl_recomp.recomp_serial('BARS');

    bars_alerter(1);

  end drop_accountShi;

--

  procedure drop_customerShi (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    rnkmax_  number;
    MFOg_    varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;


--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_customerShi - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    begin
      execute immediate 'CREATE TABLE S6_TEMP_RNK (rnk NUMBER)';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DELETE FROM S6_TEMP_RNK';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'INSERT
                         INTO   S6_TEMP_RNK
                         select rnk
                         from   customerw
                         where  rnk not in (select rnk from accounts) and
                                tag=''RS6HI''                         and
                                substr(value,-6)='''||p_filial||'''';
    exception when OTHERS then
      null;
    end;

--  delete from TABLEs

    begin
      bc.subst_mfo(MFOg_);
      execute immediate 'delete from customerw          where rnk in (select rnk from S6_TEMP_RNK)';
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from customerw_update   where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from person             where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from corps_acc          where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from corps              where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from customer_address   where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTBANK           where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTCOUNT          where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTOMER_REL       where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUST_NAL           where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from KL_CUSTOMER_PARAMS where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      execute immediate 'delete from RNK_REKV           where RNK in (select rnk from S6_TEMP_RNK)';
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from CUSTOMER_UPDATE    where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    commit;  -- ьюцхЄ яюьюцхЄ

    begin
      execute immediate 'delete from customer           where RNK in (select rnk from S6_TEMP_RNK)';
      p_open := p_open+SQL%rowcount;
    exception when OTHERS then
      bars_audit.error('drop_customerShi - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    begin
      execute immediate 'DROP TABLE S6_TEMP_RNK';
    exception when OTHERS then
      null;
    end;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_customerShi - err(37): '||sqlerrm||' - '||k.table_name||', '||k.constraint_name);
        p_code := p_code+1;
      end;
    end loop;

    commit;

--  recreate customer SEQUENCE

    select nvl(max(rnk),0)+1 into rnkmax_ from customer;

    execute immediate 'DROP SEQUENCE S_CUSTOMER';
    execute immediate 'CREATE SEQUENCE S_CUSTOMER
                       START WITH '||rnkmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_CUSTOMER TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_CUSTOMER

    sys.utl_recomp.recomp_serial('BARS');

    bars_alerter(1);

  end drop_customerShi;

--

  procedure drop_userShi (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
--  fi3_   char(3);
    MFOg_  varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  execute immediate 'select substr(min(branch),-4,3)
--                     from   s6_hi_filial'
--                     into   fi3_;

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_userShi - err(0): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    for k in (SELECT s.id
              from   staff$base        s,
                     USERS_SKARB6_BARS u
              where  bc.extract_mfo(s.branch)=MFOg_ and
                     u.filial=p_filial              and
                     u.ubars=s.id)

    loop
      begin
        delete
        from   USERS_SKARB6_BARS
        where  kf=MFOg_   and
               ubars=k.id and
               filial=p_filial;
        BARS_USERADM.drop_user(k.id);
        delete
        from   staff$base
        where  id=k.id;
        p_open := p_open+SQL%rowcount;
        commit;
      exception when OTHERS then
        bars_audit.error('drop_userShi - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_userShi - err(2): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    bars_alerter(1);

  end drop_userShi;

--

  procedure copy_hitc_tables (p_filial in varchar2)
  is
  begin

    if p_filial is not null and length(p_filial)=6 then
      for k in (select table_name
                from   user_tables
                where  table_name like 'S6_HI_'||p_filial||'%')
      loop
        begin
          execute immediate 'drop table '||k.table_name;
        exception when OTHERS then
          null;
        end;
      end loop;

      for k in (select table_name
                from   user_tables
                where  table_name like 'S6_HI_%'      and
                       table_name not like 'S6_HI_3%' and
                       table_name<>'S6_HIST_PR')
      loop
        begin
          execute immediate
                  'create table '||substr(k.table_name,1,6)||p_filial||
                                   substr(k.table_name,6)||
                  ' as select * from '||k.table_name;
        exception when OTHERS then
          null;
        end;
      end loop;
    end if;

  end copy_hitc_tables;

--

  procedure copy_iniF_tables (p_filial in varchar2)
  is
  begin

    if p_filial is not null and length(p_filial)=6 then
      for k in (select table_name
                from   user_tables
                where  table_name like 'S6_UF_'||p_filial||'%')
      loop
        begin
          execute immediate 'drop table '||k.table_name;
        exception when OTHERS then
          null;
        end;
      end loop;

      for k in (select table_name
                from   user_tables
                where  table_name like 'S6_UF_%' and
                       table_name not like 'S6_UF_3%')
      loop
        begin
          execute immediate
                  'create table '||substr(k.table_name,1,6)||p_filial||
                                   substr(k.table_name,6)||
                  ' as select * from '||k.table_name;
        exception when OTHERS then
          null;
        end;
      end loop;
    end if;

  end copy_iniF_tables;

--

  procedure copy_nadF_tables (p_filial in varchar2)
  is
  begin

    if p_filial is not null and length(p_filial)=6 then
      for k in (select table_name
                from   user_tables
                where  table_name like 'S6_NF_'||p_filial||'%')
      loop
        begin
          execute immediate 'drop table '||k.table_name;
        exception when OTHERS then
          null;
        end;
      end loop;

      for k in (select table_name
                from   user_tables
                where  table_name like 'S6_NF_%' and
                       table_name not like 'S6_NF_3%')
      loop
        begin
          execute immediate
                  'create table '||substr(k.table_name,1,6)||p_filial||
                                   substr(k.table_name,6)||
                  ' as select * from '||k.table_name;
        exception when OTHERS then
          null;
        end;
      end loop;
    end if;

  end copy_nadF_tables;

--

  procedure load_hitc_ostc (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type     cur is ref cursor;
    cur_     cur;
    sql_     varchar2(4000);

    tt_      oper.TT%type      := '024';
    sk_      oper.SK%type      ;
    TIP_     accounts.TIP%type ;
    VOB_     oper.vob%type     := 6;
    REF_     oper.REF%type     ;
    DK_      oper.DK%type      ;
    NMST_    oper.NAM_A%type   ;
    NLST_    oper.NLSA%type    ;
    NMSS_    oper.NAM_A%type   ;
    S_       oper.S%type       ;
    SQ_      oper.SQ%type      ;
    NAZN_    oper.NAZN%type    := '╧хЁхтхфхээ  чрыш°ъє ч ';
    Isp_     oper.userid%type  := 20094;

    NLSS_    accounts.nls%type ;
    NLS_OLD_ accounts.nls%type ;
    KV_      accounts.kv%type  ;
    OST_     accounts.ostc%type;
    OSTQ_    accounts.ostq%type;

    c024_    number;
    pos_     accounts.pos%type ;
    accs_    accounts.acc%type ;
    daot_    date;
    f38_     char(1);

  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    toroot;

    update tts
    set    rang=100
    where  tt=tt_;
    commit;

    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    select count(1)
    into   c024_
    from   oper
    where  tt=tt_        and
           sos=5         and
           vdat=gl.bdate and
           userid=20094  and
           nazn like '╧хЁхтхфхээ  чрыш°ъє ч '||p_filial||'/%';

    if c024_>0 then
      bars_audit.error('load_hitc_ostc - err(0): яютЄюЁэр  чруЁєчър юёЄрЄъют эхтючьюцэр, эхюсїюфшь юЄърЄ ...');
      p_code := p_code+1;
    goto nozagruzka;
    end if;

    sql_:='select m.nls_bars                                        NLSS   ,
                  decode(substr(o.acca,1,4),''3739'',o.accb,
                                            ''3906'',o.accb,
                                            ''9900'',o.accb,
                                            ''9910'',o.accb,o.acca) NLS_OLD,
                  to_number(o.curr)                                 KV     ,
                  decode(o.curr,''980'',o.nsum,o.esum)*100          OST    ,
                  o.nsum*100                                        OSTQ   ,
                  decode(substr(o.acca,1,4),''3739'',0,
                                            ''3906'',0,
                                            ''9900'',0,
                                            ''9910'',0,1)           DK
           from   S6_HI_ODM  o,
                  S6_MIGRNLS m
           where  decode(substr(o.acca,1,4),''3739'',o.accb,
                                            ''3906'',o.accb,
                                            ''9900'',o.accb,
                                            ''9910'',o.accb,o.acca)=m.nls_fil and
                  to_number(o.curr)=m.kv                                      and
                  m.filial='''||p_filial||'''                                 and
                  decode(o.curr,''980'',o.nsum,o.esum)<>0';

    open cur_ for sql_;

    loop

      fetch cur_ into NLSS_   ,
                      NLS_OLD_,
                      KV_     ,
                      OST_    ,
                      OSTQ_   ,
                      DK_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        execute immediate 'select NLS_TRA
                           from   (select trim(bals)||''%'' LIK,
                                          KV                   ,
                                          to_char(transit)  NLS_TRA
                                   from   S6_HI_TRANSIT
                                   order  by length(trim(bals)) desc,
                                             trim(bals)             ,
                                             nvl(KV,0) desc)
                           where  '''||nls_old_||''' like LIK            and
                                  (nullif(KV,0) is null or '||kv_||'=KV) and
                                  rownum=1'
                           into   NLST_;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_hitc_ostc - err(1): ═х юяшёрэ т TRANSIT.DBF ёў╕Є-ЄЁрэчшЄ фы  '||p_filial||'/'||nls_old_||'('||KV_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
                WHEN OTHERS THEN
        if sqlcode=-904 then
          bars_audit.error('load_hitc_ostc - err(5): ёЄрЁр  ёЄЁєъЄєЁр TRANSIT.DBF '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        end if;
        bars_audit.error('load_hitc_ostc - err(6): '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      begin
        select trim(substr(nms,1,38)),
               daos
        into   NMST_,
               daot_
        from   accounts
        where  kv=KV_    and
               nls=NLST_ and
               dazs is null;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_hitc_ostc - err(2): ═х эрщфхэ шыш чръЁ√Є ёў╕Є-ЄЁрэчшЄ '||nlsT_||'('||KV_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      begin
        select trim(substr(nms,1,38)),
               tip                   ,
               pos                   ,
               acc
        into   NMSS_,
               TIP_ ,
               pos_ ,
               accs_
        from   accounts
        where  kv=KV_    and
               nls=NLSS_ and
               dazs is null;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_hitc_ostc - err(3): ═х эрщфхэ шыш чръЁ√Є ═╬┬█╔ ёў╕Є '||NLSS_||' фы  '||p_filial||'/'||nls_old_||'('||kv_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      if TIP_='KAS' then
        sk_ := 37; -- яюёых єЄюўэхэш  ╞шЄюьшЁр
      else
        sk_ := null;
      end if;

      S_  := ost_;
      sq_ := ostq_;

      if daot_>p_datx then
        update accounts
        set    daos=p_datx
        where  kv=KV_ and
               nls=NLST_;
      end if;

      if substr(NLSS_,1,4)='2625' then

        toroot;

        select substr(flags,39,1)
        into   f38_
        from   tts
        where  tt=tt_;

        update tts
        set    flags=substr(flags,1,38)||'1'||substr(flags,40)
        where  tt=tt_;

        commit;

        tokf;

        gl.pl_dat(p_datx);
        gl.amfo := f_ourmfo_g;

      end if;

      begin
        GL.REF(REF_);
        GL.IN_DOC2(REF_,  TT_,   VOB_, REF_, SYSDATE, GL.BDATE, DK_, KV_,
                   S_,    KV_,   S_,   sq_,  sk_,     GL.BDATE, GL.BDATE,
                   NMsT_, NLST_, gl.AMFO,
                   NMSS_, NLSS_, gl.AMFO,
                   NAZN_||p_filial||'/'||NLS_OLD_,
                   NULL, null, null, null, null, 1, null, ISP_);
        GL.PAYV(0, REF_, GL.BDATE, TT_, DK_, KV_, NLST_, S_, KV_, NLSS_, S_);
        GL.PAY (2, REF_, GL.BDATE);
        commit;
        p_open := p_open+1;
      EXCEPTION WHEN others THEN
        bars_audit.error('load_hitc_ostc - err(4): ╬°шсър юяырЄ√ '||nlsT_||'('||KV_||') --> '||NLSS_||'('||KV_||') эр ёєььє='||S_||' - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        rollback;
        p_code := p_code+1;
      end;

      if substr(NLSS_,1,4)='2625' then

        toroot;

        update tts
        set    flags=substr(flags,1,38)||f38_||substr(flags,40)
        where  tt=tt_;

        commit;

        tokf;

        gl.pl_dat(p_datx);
        gl.amfo := f_ourmfo_g;

      end if;

<<dalee>> null;

    end loop;
    close cur_;

    dbms_application_info.set_client_info('pereocenka');

    migraSK.pereocenka(p_code,'load_hitc_ostc - err',p_datx);

    dbms_application_info.set_client_info(' ');

<<nozagruzka>> null;

    toroot;

    update tts
    set    rang=null
    where  tt=tt_;
    commit;

    bars_alerter(1);

  end load_hitc_ostc;

--

  procedure drop_hitc_ostc (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

--  юЄърЄ фюъєьхэЄют яю ЁрчтюЁюЄє юёЄрЄъют

    toroot;

    update tts
    set    flags=substr(flags,1,38)||'1'||substr(flags,40)
    where  tt='BAK';
    commit;

    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    for k in (
              select ref
              from   oper
              where  tt='024'      and
                     sos=5         and
                     vdat=gl.bdate and
                     userid=20094  and
                     nazn like '╧хЁхтхфхээ  чрыш°ъє ч '||p_filial||'/%')
    loop
      FOR x IN (SELECT a.acc ,
                       o.fdat,
                       o.sq
                FROM   accounts a,
                       opldok   o
                WHERE  o.ref=k.ref AND
                       a.pos=2     AND
                       o.acc=a.acc)
      LOOP
        UPDATE saldob
        SET    dos=dos-x.sq,
               kos=kos-x.sq
        WHERE  acc=x.acc AND
               fdat=x.fdat;
      END LOOP;
      ful_bak(k.ref);
      bars_audit.info('drop_hitc_ostc: ful_bak '||k.ref);
      commit;
      p_open := p_open+1;
    end loop;

    toroot;

    update tts
    set    flags=substr(flags,1,38)||'0'||substr(flags,40)
    where  tt='BAK';
    commit;

    bars_alerter(1);

  end drop_hitc_ostc;

--

  procedure fin_deblockinghi (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    l_rnk     number;
    blkk_     number;
    branch2_  varchar2(15);
    Job_      number;
    MFOg_     varchar2(12);
  begin

    bars_alerter(0);

    p_open   := 0;
    p_code   := 0;
    branch2_ := null;

    MFOg_ := f_ourmfo_g;

--  ъюЁЁхъЄшЁютър accounts яю saldoa, saldob (ўхЁхч чрфрэшх)

    BEGIN
      DBMS_JOB.SUBMIT (job       => Job_               ,
                       what      => 'correct_accounts;',
                       next_date => sysdate            ,
                       interval  => null               ,
                       no_parse  => FALSE);
    exception when others then
      bars_audit.error('fin_deblockinghi - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    END;

    tokf;

--  ЁрчсыюъшЁютър ёўхЄют: blkk ш blkd ё 99 эр 0

    for k in (select nls_bars,
                     nls_fil ,
                     kv
              from   S6_MIGRNLS
              where  filial=p_filial)
    loop
      begin
        execute immediate 'select isescrow
                           from   s6_hi_'||p_filial||'_bac
                           where  code='''||k.nls_fil||''' and
                                  to_number(curr)='||to_char(k.kv)
                           into   blkk_;
        exception when others then
          blkk_ := 0;
        end;
      update accounts
      set    blkk=blkk_*99,
             blkd=0
      where  nls=k.nls_bars and
             kv=k.kv;
      p_open := p_open+1;
      if branch2_ is null then
        begin
          select substr(branch,1,15)
          into   branch2_
          from   accounts
          where  nls=k.nls_bars and
                 kv=k.kv;
        exception when no_data_found then
          null;
        end;
      end if;
    end loop;
    commit;

    toroot;

--  єфрыхэшх ╠╘╬ Їшышрыр шч ЄрсышЎ LKL_RRP ш BANK_ACC

    tokf;
    begin
      delete
      from   lkl_rrp
      where  mfo=p_filial;
      commit;
    exception when OTHERS then
      rollback;
      bars_audit.error('fin_deblockinghi - err(1) for delete from lkl_rrp: '||sqlerrm);
    end;
    begin
      delete
      from   bank_acc
      where  mfo=p_filial;
      commit;
    exception when OTHERS then
      rollback;
      bars_audit.error('fin_deblockinghi - err(2) for delete from bank_acc: '||sqlerrm);
    end;
    toroot;

--  юсэютыхэшх ьрЄхЁшрышчютрээюую яЁхфёЄртыхэш 

    NERUXOMI;

--  фюсртър RNK ш ярЁрьхЄЁр ё RNK фы  сЁрэўхщ

    begin
      for c in (select branch,
                       name
                from   branch
                where  branch like '/'||MFOg_||'/%'
                order  by branch)
      loop
        begin
          bc.subst_branch(c.branch);
          begin
            select rnk
            into   l_rnk
            from   customer
            where  branch=c.branch and
                   notes='BRANCH<->RNK';
          exception when no_data_found then

            execute immediate 'select s_customer.nextval from dual' into l_rnk;

            insert
            into   customer (rnk      ,
                             tgr      ,
                             custtype ,
                             codcagent,
                             okpo     ,
                             country  ,
                             nmk      ,
                             nmkk     ,
                             notes    ,
                             ise      ,
                             fs       ,
                             oe       ,
                             ved      ,
                             sed      ,
                             k050     ,
                             branch)
                     values (l_rnk                    ,
                             1                        ,
                             1                        ,
                             1                        ,
                             f_ourokpo                ,
                             804                      ,
                             trim(substr(c.name,1,70)),
                             trim(substr(c.name,1,38)),
                             'BRANCH<->RNK'           ,
                             '12201'                  ,
                             '31'                     ,
                             '96130'                  ,
                             '65120'                  ,
                             '80  '                   ,
                             '610'                    ,
                             c.branch);
          end;

          begin
            update branch_parameters
            set    val=to_char(l_rnk)
            where  tag='RNK' and
                   branch=c.branch;

            if SQL%ROWCOUNT=0 then
             insert
             into   branch_parameters (branch,
                                       tag   ,
                                       val)
                               values (c.branch,
                                       'RNK'   ,
                                       to_char(l_rnk));
            end if;
          end;
        exception when others then
          bc.set_context;
        end;
        bc.set_context;
      end loop;
    end;

    commit;

--  уЁштэр яю тёхь сЁрэўрь т cur_rates$base

    migraSK.grn11tocurrates;

--  юЄъЁ√Єшх ёўхЄют %% Ёрёїюфют

    migraSK.open_proc_drm('fin_deblockinghi - ',p_open,p_code,0,branch2_);

    bars_alerter(1);

  end fin_deblockinghi;

--

  procedure open_3800_hi (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    BRANCH2_  varchar2(15);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

/*  ╬ЄъЁ√Є№ эют√х 3800/3801 сЁрэў2, чряюыэ   юфэютЁхьхээю VP_LIST.
    ╧Ёхфырур■ ьрёъє 3800_┴┴┴┴╬╬,  3801_┴┴┴┴╬╬┬┬┬,
    ┴┴┴┴ - ъюф сЁрэўр
    ╬╬   - ъюф ╬┴22
    ┬┬┬  - ъюф тры
*/
    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    sql_:='select distinct
                  substr(branch,1,15) BRANCH2
           from   S6_HI_FILIAL';

    open cur_ for sql_;

    loop

      fetch cur_ into BRANCH2_;
      exit when cur_%notfound;

      -- kv (959,961,962) + ╬┴22('09')
      begin
        xM_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_hi - err(1): ╬°шсър xM_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

      -- kv not (959,961,962) + ╬┴22('03','10','16','20')
      begin
        xV_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_hi - err(2): ╬°шсър xV_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

      -- ╧хЁхсЁюёшЄ№ юёЄрЄъш ш чръЁ√Є№ ёЄрЁ х ышЎ.ёўхЄр 3800 ш 3801
      begin
        xZ_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_hi - err(3): ╬°шсър xZ_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

    end loop;

--  toroot;

    bars_alerter(1);

  end open_3800_hi;

--

  procedure balans_firstost (p_open out number, p_code out number, p_bal number)
  is
    dat_  date;
  begin
    bars_alerter(0);
    tokf;
    dat_ := gl.bdate;
    toroot;
    p_open := 0;
    p_code := 0;
    begin
      NACH_VN1(f_ourmfo_g,dat_);
      p_open := 1;
    exception when OTHERS then
      bars_audit.error('balans_firstost - err(1): '||sqlerrm);
      p_code := 1;
    end;
    bars_alerter(1);
  end balans_firstost;

--

  procedure balans_firstostUN (p_open out number, p_code out number)
  is
    dat_  date;
  begin
    bars_alerter(0);
    tokf;
    dat_ := gl.bdate;
    toroot;
    p_open := 0;
    p_code := 0;
    begin
      NACH_VN1(f_ourmfo_g,dat_);
      p_open := 1;
    exception when OTHERS then
      bars_audit.error('balans_firstostUN - err(1): '||sqlerrm);
      p_code := 1;
    end;
    bars_alerter(1);
  end balans_firstostUN;

--

  procedure load_obnls (p_open out number, p_code out number, p_bal number)
  is
    dat_  date;
  begin
    bars_alerter(0);
    tokf;
    dat_ := gl.bdate;
    p_open := 0;
    p_code := 0;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOB_ACCM disable';
    exception when OTHERS then
      null;
    end;

    begin
      NACH_VN2(f_ourmfo_g,dat_);
      p_open := 1;
    exception when OTHERS then
      bars_audit.error('load_obnls - err(1): '||sqlerrm);
      p_code := 1;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOB_ACCM enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM enable';
    exception when OTHERS then
      null;
    end;

--  toroot;
    bars_alerter(1);
  end load_obnls;

--

  procedure load_obnlsUN (p_open out number, p_code out number)
  is
    dat_  date;
    Job_  number;
  begin
    bars_alerter(0);
    tokf;
    dat_ := gl.bdate;
    p_open := 0;
    p_code := 0;
    begin
--    NACH_VN2un(f_ourmfo_g,dat_);
      NACH_VN2AUN(f_ourmfo_g,dat_);
--    т√чтрЄ№ JOBюь NACH_VN2BUN
      BEGIN
        DBMS_JOB.SUBMIT (job       => Job_                            ,
                         what      => 'NACH_VN2BUN(MFOg_,gl.bd);',
                         next_date => sysdate                         ,
                         interval  => null                            ,
                         no_parse  => FALSE);
      exception when others then
        bars_audit.error('load_obnlsUN - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := 1;
      END;
      p_open := 1;
    exception when OTHERS then
      bars_audit.error('load_obnlsUN - err(1): '||sqlerrm);
      p_code := 1;
    end;
--  toroot;
    bars_alerter(1);
  end load_obnlsUN;

--

  procedure drop_obnlsUN (p_open out number, p_code out number)
  is
    dat_  date;
  begin
    bars_alerter(0);
    tokf;
    p_open := 0;
    p_code := 0;
    begin
      delete
      from   saldoa;
      p_open := 1;
      begin
        execute immediate 'insert
                           into   saldoa
                           select *
                           from   TEST_SALDOA';
        commit;
        p_open := 2;
      exception when OTHERS then
        bars_audit.error('drop_obnlsUN - err(0): '||sqlerrm);
        p_code := 1;
        rollback;
      end;
    exception when OTHERS then
      bars_audit.error('drop_obnlsUN - err(1): '||sqlerrm);
      p_code := 1;
      rollback;
    end;
--  toroot;
    bars_alerter(1);
  end drop_obnlsUN;

--

  procedure open_vplist (p_open out number, p_code out number, p_bal number)
  is
    dat_  date;
  begin
    bars_alerter(0);
    tokf;
    dat_ := gl.bdate;
    toroot;
    p_open := 0;
    p_code := 0;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOB_ACCM disable';
    exception when OTHERS then
      null;
    end;

    begin
      NACH_VN3(f_ourmfo_g,dat_);
      p_open := 1;
    exception when OTHERS then
      bars_audit.error('open_vplist - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := 1;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOB_ACCM enable';
    exception when OTHERS then
      null;
    end;

    bars_alerter(1);
  end open_vplist;

--

  procedure open_vplistUN (p_open out number, p_code out number)
  is
    dat_  date;
  begin
    bars_alerter(0);
    tokf;
    dat_ := gl.bdate;
    toroot;
    p_open := 0;
    p_code := 0;
    begin
      NACH_VN3(f_ourmfo_g,dat_);
      p_open := 1;
    exception when OTHERS then
      bars_audit.error('open_vplistUN - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := 1;
    end;
    bars_alerter(1);
  end open_vplistUN;

--

  procedure create_docum (p_open out number, p_code out number, p_bal number)
  is
    dat_  date;
    Job_  number;
  begin

    bars_alerter(0);

    tokf;
    dat_ := gl.bdate;
    toroot;

    p_open := 0;
    p_code := 0;

--  ъюЁЁхъЄшЁютър accounts яю saldoa, saldob (ўхЁхч чрфрэшх)

    BEGIN
      DBMS_JOB.SUBMIT (job       => Job_               ,
                       what      => 'correct_accounts;',
                       next_date => sysdate            ,
                       interval  => null               ,
                       no_parse  => FALSE);
    exception when others then
      bars_audit.error('create_docum - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    END;

    begin
      execute immediate 'alter trigger TIU_OPER_INFDOC disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOB_ACCM disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tiu_oper_chk disable';
    exception when OTHERS then
      null;
    end;

    begin
      NACH_VN4(f_ourmfo_g,dat_);
      p_open := 1;
    exception when OTHERS then
      bars_audit.error('create_docum - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := 1;
    end;

    begin
      execute immediate 'alter trigger tiu_oper_chk enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOB_ACCM enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIU_OPER_INFDOC enable';
    exception when OTHERS then
      null;
    end;

    bars_alerter(1);

  end create_docum;

--

  procedure create_documUN (p_open out number, p_code out number)
  is
    dat_  date;
    Job_  number;
  begin

    bars_alerter(0);

    tokf;
    dat_ := gl.bdate;
    toroot;

    p_open := 0;
    p_code := 0;

--  ъюЁЁхъЄшЁютър accounts яю saldoa, saldob (ўхЁхч чрфрэшх)

    BEGIN
      DBMS_JOB.SUBMIT (job       => Job_               ,
                       what      => 'correct_accounts;',
                       next_date => sysdate            ,
                       interval  => null               ,
                       no_parse  => FALSE);
    exception when others then
      bars_audit.error('create_documUN - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    END;

    begin
      execute immediate 'alter trigger TIU_OPER_INFDOC disable';
    exception when OTHERS then
      null;
    end;

    begin
      NACH_VN4un(f_ourmfo_g,dat_);
      p_open := 1;
    exception when OTHERS then
      bars_audit.error('create_documUN - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := 1;
    end;

    begin
      execute immediate 'alter trigger TIU_OPER_INFDOC enable';
    exception when OTHERS then
      null;
    end;

    bars_alerter(1);

  end create_documUN;

--

  procedure tableS6_stats
  is
  begin

--  ёсюЁ ёЄрЄшёЄшъш яю юёэютэ√ь ЄрсышЎрь S6 + CUR_RATES$BASE

    begin
      for k in (select table_name
                from   user_tables
                where  table_name like 'S6%' or
                       table_name like 'CUR_RATES%')
      loop
        begin
          execute immediate 'Analyze Table "'||k.table_name||'" Estimate Statistics Sample 33 Percent';
--        dbms_stats.gather_table_stats(ownname=>'BARS'                 ,
--                                     tabname=>'"'||k.table_name||'"'',
--                                     cascade=>true);
        exception when others then
          null;
        end;
      end loop;
    end;

  end tables6_stats;

--

  procedure tableCU_stats
  is
  begin

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ъышхэЄют (CUSTOMER ш ёт чрээ√х)

    begin
      for k in (select distinct
                       u2.table_name
                from   user_constraints u1,
                       user_constraints u2
                where  u2.r_constraint_name=u1.constraint_name                                             and
                       u1.table_name='CUSTOMER'                                                            and
                       substr(u2.table_name,1,15) not in ('ACCOUNTS_UPDATE','CUSTOMER_UPDATE')             and
                       substr(u2.table_name,1,8) not in ('SKRYNKA_')                                       and
                       substr(u2.table_name,1,7) not in ('FINMON_','SOCIAL_','SURVEY_','PEREKR_')          and
                       substr(u2.table_name,1,6) not in ('SALDOB')                                         and
                       substr(u2.table_name,1,5) not in ('PAWN_','RNKP_','DCP_','ACCC','ACCE','ACCI')      and
                       substr(u2.table_name,1,4) not in ('ACC_','CIG_','DPU_','GRT_','PKK_','RKO_','STO_') and
                       substr(u2.table_name,1,3) not in ('INS','KLP','SW_','VP_')                          and
                       substr(u2.table_name,1,2) not in ('CC','E_')                                        and
                       substr(u2.table_name,1,1) not in ('B','N','O','T','Z')                              and
                       substr(u2.table_name,1,16) not in ('DPT_DEPOSIT_CLOS','CUSTOMERW_UPDATE','DPT_ASVO_HISTORY'))
      loop
        begin
          execute immediate 'Analyze Table "'||k.table_name||'" Estimate Statistics Sample 33 Percent';
--        dbms_stats.gather_table_stats(ownname=>'BARS'                 ,
--                                     tabname=>'"'||k.table_name||'"'',
--                                     cascade=>true);
        exception when others then
          null;
        end;
      end loop;
    end;

  end tableCU_stats;

--

  procedure tableAC_stats
  is
  begin

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ёўхЄют (ACCOUNTS ш ёт чрээ√х)

    begin
      for k in (select distinct
                       u2.table_name
                from   user_constraints u1,
                       user_constraints u2
                where  u2.r_constraint_name=u1.constraint_name                                             and
                       u1.table_name='ACCOUNTS'                                                            and
                       substr(u2.table_name,1,15) not in ('ACCOUNTS_UPDATE','CUSTOMER_UPDATE')             and
                       substr(u2.table_name,1,8) not in ('SKRYNKA_')                                       and
                       substr(u2.table_name,1,7) not in ('FINMON_','SOCIAL_','SURVEY_','PEREKR_')          and
                       substr(u2.table_name,1,6) not in ('SALDOB')                                         and
                       substr(u2.table_name,1,5) not in ('PAWN_','RNKP_','DCP_','ACCC','ACCE','ACCI')      and
                       substr(u2.table_name,1,4) not in ('ACC_','CIG_','DPU_','GRT_','PKK_','RKO_','STO_') and
                       substr(u2.table_name,1,3) not in ('INS','KLP','SW_','VP_')                          and
                       substr(u2.table_name,1,2) not in ('CC','E_')                                        and
                       substr(u2.table_name,1,1) not in ('B','N','O','T','Z')                              and
                       substr(u2.table_name,1,16) not in ('DPT_DEPOSIT_CLOS','CUSTOMERW_UPDATE','DPT_ASVO_HISTORY'))
      loop
        begin
          execute immediate 'Analyze Table "'||k.table_name||'" Estimate Statistics Sample 33 Percent';
--        dbms_stats.gather_table_stats(ownname=>'BARS'                 ,
--                                     tabname=>'"'||k.table_name||'"'',
--                                     cascade=>true);
        exception when others then
          null;
        end;
      end loop;
    end;

  end tableAC_stats;

--

  procedure open_proc_dr (p_open out number, p_code out number, p_bal number)
  is
  begin
    bars_alerter(0);
    p_open := 0;
    p_code := 0;
    migraSK.open_proc_drm('open_proc_dr - ',p_open,p_code,p_bal);
    bars_alerter(1);
  end open_proc_dr;

--

  procedure open_proc_drUN (p_open out number, p_code out number)
  is
  begin
    bars_alerter(0);
    p_open := 0;
    p_code := 0;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOB_ACCM disable';
    exception when OTHERS then
      null;
    end;

    migraSK.open_proc_drm('open_proc_drUN - ',p_open,p_code,0);

    begin
      execute immediate 'alter trigger TIUD_SALDOB_ACCM enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM enable';
    exception when OTHERS then
      null;
    end;

    bars_alerter(1);
  end open_proc_drUN;

--

  procedure create_userUF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    id_       staff$base.id%type;
    idugo_    staff$base.id%type;
    ISP_      number;
    TABN_     varchar2(10);
    FIO_      varchar2(40);
    logname_  varchar2(30);
    branch_   varchar2(30);
    fi3_      char(3);
    MFOg_     varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),-4,3),
                              min(branch)
                       from   s6_uf_filial'
                       into   fi3_   ,
                              branch_;

    sql_:='select u.ISP                                                                        ISP    ,
                  trim(substr(trim(u.IKEY),-6))                                                TABN   ,
                  nvl(migraSK.valid_symbol(u.FIO),''яюы№чютрЄхы№ эх шфхэЄшЇшЎшЁютрэ'')         FIO    ,
                  nvl(m.logname,''U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S''||to_char(u.ISP)) logname,
                  m.id
           from   S6_UF_USERS u,
                  s6_usermap  m
           where  m.isps6(+)=u.ISP and
                  m.filial(+)='''||p_filial||'''';

    open cur_ for sql_;

    loop

      fetch cur_ into ISP_    ,
                      TABN_   ,
                      FIO_    ,
                      logname_,
                      id_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin

        begin
          select id
          into   idugo_
          from   staff$base
          where  logname=logname_;
        exception when no_data_found then
          idugo_ := null;
        end;

        if idugo_ is null then

          begin
            execute immediate 'drop user '||logname_;
          exception when OTHERS then
            bars_audit.warning('create_userUF - warn(0): ISP='||to_char(ISP_)||', LOGIN='||logname_||' - '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--          p_code := p_code+1;
          end;

          if id_ is null then

            select min(num)
            into   id_
            from   conductor
            where  num not in (select id from staff$base);

          end if;

          bc.subst_branch(branch_);

          begin
            BARS_USERADM.create_user(FIO_             ,  -- p_usrfio      in  staff$base.fio%type
                                     TABN_            ,  -- p_usrtabn     in  staff$base.tabn%type
                                     0                ,  -- p_usrtype     in  staff$base.clsid%type
                                     1                ,  -- p_usraccown   in  staff$base.type%type
                                     branch_          ,  -- p_usrbranch   in  varchar2
                                     0                ,  -- p_usrusearc   in  staff$base.usearc%type
                                     0                ,  -- p_usrusegtw   in  staff$base.usegtw%type
                                     'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
                                     logname_         ,  -- p_reclogname  in  staff$base.logname%type
                                     'qwerty'         ,  -- p_recpasswd   in  varchar2
                                     null             ,  -- p_recappauth  in  varchar2
                                     null             ,  -- p_recprof     in  varchar2
                                     'BARS_CONNECT'   ,  -- p_recdefrole  in  varchar2
                                     null             ,  -- p_recrsgrp    in  varchar2
                                     id_                 -- p_usrid       in  staff$base.id%type default null
                                    );
            bc.set_context;

            delete
            from   USERS_SKARB6_BARS
            where  KF=MFOg_     and
                   USKARB6=ISP_ and
                   filial=p_filial;
            insert
            into   USERS_SKARB6_BARS (KF     ,
                                      USKARB6,
                                      UBARS  ,
                                      filial)
                              values (MFOg_,
                                      ISP_ ,
                                      id_  ,
                                      p_filial);
            commit;

            p_open := p_open+1;

          exception when OTHERS then
            bars_audit.error('create_userUF - err(1): ISP='||to_char(ISP_)||', LOGIN='||logname_||' - '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;

        else -- user єцх хёЄ№

          bars_audit.error('create_userUF - err(2): ISP='||to_char(ISP_)||', LOGIN='||logname_||' - фєсышЁютрэшх ыюушэр ё єцх ёє∙хёЄтє■∙шь');
          p_code := p_code+1;

        end if;

--    exception when OTHERS then

--      bars_audit.error('create_userUF - err(3): ISP='||to_char(ISP_)||', LOGIN='||logname_||' - '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--      p_code := p_code+1;

      end;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(0);

  end create_userUF;

--

  procedure create_customerUF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type        cur is ref cursor;
    cur_        cur;
    sql_        varchar2(32000);
    rnk_        number;
    fl_         number;
    mfog_       varchar2(12);
    ispg_       varchar2(32);

    TAXF_       varchar2(12);
    DATEON_     date;
    DATEA_      date;
    DATET_      date;
    BDAY_       date;
    FS_         varchar2(3);
    SED_        char(4);
    NMK_        varchar2(70);
    IDCLIENT_   number;
    GROUP_C_    number;
    OKPO_       varchar2(12);
    COUNTRY_    number;
    CREG_       number;
    CDST_       number;
    PRINSIDER_  number;
    ISP_        number;
    NMKK_       varchar2(38);
    OE_         varchar2(5);
    CODCAGENT_  number;
    ISE_        varchar2(5);
    SEX_        number;
    TGR_        number;
    CUSTTYPE_   number;
    VED_        varchar2(5);
    ND_         varchar2(10);
    CRISK_      number;
    PHONE_      varchar2(20);
    POSTIND_    varchar2(10);
    OBLAST_     varchar2(40);
    RAYON_      varchar2(25);
    CITY_       varchar2(40);
    STREET_     varchar2(40);
    HOUSE_      varchar2(20);
    KVARTIRA_   varchar2(20);
    TEL_        varchar2(20);
    EMAIL_      varchar2(100);
    SAB_        varchar2(6);
    STMT_       number;
    RGTAX_      varchar2(30);
    RGADM_      varchar2(30);
    MFO_        varchar2(12);
    BIC_        varchar2(12);

    ADM_        varchar2(70);
    PINCODE_    varchar2(10);
    LIM_        number;
    NOMPDV_     varchar2(9);
    NMKU_       varchar2(250);
    RUK_        varchar2(70);
    TELR_       varchar2(20);
    BUH_        varchar2(70);
    TELB_       varchar2(20);
    DOV_        varchar2(35);
    BDOV_       date;
    EDOV_       date;
    PASSP_      number(1);
    SER_        varchar2(10);
    NUMDOC_     varchar2(20);
    PDATE_      date;
    BPLACE_     varchar2(70);
    TELD_       varchar2(20);
    TELW_       varchar2(20);
    TEL_FAX_    varchar2(20);

    l_rnk       number;
    l_okpo      varchar2(14);
    l_branch    varchar2(30);
    l_ins_      number;

    SERIA_      VARCHAR2(10);
    NOMBER_     VARCHAR2(20);
    ORGAN_      VARCHAR2(50);
    DOTE_       date;

    adr_        customer.adr%type;
    len_adr_    number;
    len_raz_    number;
    len_organ_  number;

    fi3_        char(3);
    K050_       char(3);

    Job_        number;
    sthokv_     VARCHAR2(960);

  begin

    bars_alerter(0);

    mfog_ := f_ourmfo_g;

    l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    execute immediate 'select substr(min(branch),-4,3)
                       from   s6_uf_filial'
                       into   fi3_;

    select data_length
    into   len_adr_
    from   user_tab_columns
    where  table_name='CUSTOMER' and
           column_name='ADR';

    select data_length
    into   len_organ_
    from   user_tab_columns
    where  table_name='PERSON' and
           column_name='ORGAN';

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=mfog_                              and
           logname like 'U'||migraSK.kodobl(mfog_)||'_'||fi3_||'_S%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=mfog_ and
             logname like 'U'||migraSK.kodobl(mfog_)||'_'||fi3_||'_S%';
      if ispg_ is null then
        select to_char(min(id))
        into   ispg_
        from   staff$base
        where  bc.extract_mfo(branch)=mfog_ and
               tabn is not null;
        if ispg_ is null then
          select to_char(min(id))
          into   ispg_
          from   staff$base
          where  bc.extract_mfo(branch)=mfog_;
        end if;
      end if;
    end if;

    MFO_ := null;

    sql_:='select distinct
                  TAXF     ,
                  K050     ,
                  DATEON   ,
                  DATEA    ,
                  DATET    ,
                  BDAY     ,
                  FS       ,
                  SED      ,
                  NMK      ,
                  IDCLIENT ,
                  GROUP_C  ,
                  OKPO     ,
                  COUNTRY  ,
                  CDST     ,
                  CREG     ,
                  PRINSIDER,
                  ISP      ,
                  NMKK     ,
                  OE       ,
                  CODCAGENT,
                  ISE      ,
                  SEX      ,
                  TGR      ,
                  CUSTTYPE ,
                  VED      ,
                  ND       ,
                  CRISK    ,
                  PHONE    ,
                  POSTIND  ,
                  OBLAST   ,
                  RAYON    ,
                  CITY     ,
                  STREET   ,
                  HOUSE    ,
                  KVARTIRA ,
                  TEL      ,
                  EMAIL    ,
                  SAB      ,
                  STMT     ,
                  RGADM    ,
                  BIC      ,
                  SERIA    ,
                  NOMBER   ,
                  ORGAN    ,
                  DOTE     ,
                  Adr      ,
                  ADM      ,
                  PINCODE  ,
                  LIM      ,
                  NOMPDV   ,
                  NMKU     ,
                  RUK      ,
                  TELR     ,
                  BUH      ,
                  TELB     ,
                  DOV      ,
                  BDOV     ,
                  EDOV     ,
                  PASSP    ,
                  BPLACE   ,
                  TELD     ,
                  TELW     ,
                  TEL_FAX
           from   (select distinct
                          c.TAXF                                                                        TAXF     ,  -- ╩юф яырЄэшър яюфрЄъiт                   varchar(5)
                          c.K050                                                                        K050     ,  -- ╧юърчрЄхы№ k050                         CHAR(3)
                          nvl(c.DATE_ON,add_months(trunc(sysdate,''YEAR''),-12))                        DATEON   ,  -- ─рЄр Ёх║ёЄЁрЎi┐                         smalldatetime
                          c.DATEA                                                                       DATEA    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т рфьiэiёЄЁрЎi┐         smalldatetime
                          c.DATET                                                                       DATET    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т яюфрЄъютiщ iэёяхъЎi┐  smalldatetime
                          c.BDAY                                                                        BDAY     ,  -- ─рЄр эрЁюфцхээ                          smalldatetime
                          nvl(nullif(substr(''00''||trim(c.FS),-2),''99''),''ZZ'')                      FS       ,  -- ╘юЁьр тырёэюёЄi                         tinyint
                          substr(nvl(ltrim(c.SED),''00'')||''    '',1,4)                                SED      ,  -- ╘юЁьр уюёяюфрЁ■трээ                     char(4)
                          migraSK.valid_symbol(trim(substr(trim(nvl(c.NMK,c.NMKK)),1,70)))              NMK      ,  -- ╧ютэх эрщьхэєтрээ                       varchar(150)
                          c.RNK                                                                         IDCLIENT ,  -- ╩юф                                     int
                          0                                                                             GROUP_C  ,  -- ╩юф+                                    int
                          migraSK.valid_symbol(c.OKPO)                                                  OKPO     ,  -- IфхэЄшЇiърЎiщэшщ ъюф                    varchar(10)
                          nvl(nullif(nvl(c.COUNTRY,0),0),804)                                           COUNTRY  ,  -- ╩Ёр┐эр                                  smallint
                          nullif(c.C_DST,0)                                                             CDST     ,  -- ╧юфрЄъютр iэёяхъЎi                      tinyint
                          nullif(c.C_REG,0)                                                             CREG     ,  -- ╨хуiюэ                                  tinyint
                          c.PRINSIDER                                                                   PRINSIDER,  -- IэёрщфхЁ                                tinyint
                          nvl(u.UBARS,'||ispg_||')                                                      ISP      ,  -- ╩юф ъюЁшёЄєтрўр                         smallint
                          migraSK.valid_symbol(trim(substr(trim(nvl(c.NMKK,c.NMK)),1,38)))              NMKK     ,  -- ╩юЁюЄъх эрщьхэєтрээ                     varchar(40)
                          substr(''00000''||trim(c.OE),-5)                                              OE       ,  -- ├рыєч№                                  int
                          decode(c.CUSTTYPE,0,decode(c.COUNTRY,804,5,6),1,decode(c.COUNTRY,804,3,4),0)  CODCAGENT,  -- ╒рЁръЄхЁшёЄшър
                          substr(''00000''||trim(c.ISE),-5)                                             ISE      ,  -- IэёЄшЄ.ёхъЄюЁ хъюэюьiъш                 int
                          decode(c.SEX,''0'',''2'',''1'',''1'',''0'')                                   SEX      ,  -- ╤ЄрЄ№                                   tinyint
                          nullif(c.TGR,0)                                                               TGR      ,  -- ╥шя фхЁцЁх║ёЄЁє                         tinyint
                          decode(c.CUSTTYPE,1,2,0,3,1)                                                  CUSTTYPE ,  -- ╥шя ъыi║эЄр                             tinyint
                          substr(''00000''||trim(c.VED),-5)                                             VED      ,  -- ┬шф хъюэюь.фi ы№эюёЄi                   int
                          c.ND                                                                          ND       ,
                          decode(c.CRISK,1,1,2,2,3,3,4,4,5,5,null)                                      CRISK    ,
                          migraSK.valid_symbol(nvl(c.TELR,nvl(c.TELB,nvl(c.TELD,nvl(c.TELW,'''')))))    PHONE    ,  -- ╥хыхЇюэ                                 varchar(20)
                          c.POSTIND                                                                     POSTIND  ,  -- ╧ю°Єютшщ iэфхъё                         varchar(10)
                          c.OBLAST                                                                      OBLAST   ,  -- ╬сырёЄ№                                 varchar(40)
                          c.RAYON                                                                       RAYON    ,  -- ╨рщюэ                                   varchar(25)
                          c.CITY                                                                        CITY     ,  -- ╠iёЄю, эрёхы.яєэъЄ                      varchar(40)
                          c.STREET                                                                      STREET   ,  -- ┬єышЎ                                   varchar(40)
                          ''''                                                                          HOUSE    ,  -- ─iь                                     varchar(20)
                          ''''                                                                          KVARTIRA ,  -- ╩трЁЄшЁр                                varchar(20)
                          c.TELD                                                                        TEL      ,  -- ╥хыхЇюэ                                 varchar(20)
                          c.EMAIL                                                                       EMAIL    ,  -- ┼ыхъЄЁюээр рфЁхёр                       varchar(20)
                          null                                                                          SAB      ,  -- SAB
                          null                                                                          STMT     ,
                          c.RGADM                                                                       RGADM    ,
                          null                                                                          BIC      ,
                          c.SER                                                                         SERIA    ,  -- ╤хЁш  ярёяюЁЄр
                          c.NUMDOC                                                                      NOMBER   ,  -- ═юьхЁ ярёяюЁЄр
                          c.ORGAN                                                                       ORGAN    ,  -- ╩хь т√фрэ
                          c.PDATE                                                                       DOTE     ,  -- ╩юуфр т√фрэ
                          c.adr                                                                         Adr      ,
                          c.ADM                                                                         ADM      ,
                          null                                                                          PINCODE  ,
                          null                                                                          LIM      ,
                          c.NOMPDV                                                                      NOMPDV   ,
                          c.NMKU                                                                        NMKU     ,
                          c.RUK                                                                         RUK      ,
                          c.TELR                                                                        TELR     ,
                          c.BUH                                                                         BUH      ,
                          c.TELB                                                                        TELB     ,
                          c.DOV                                                                         DOV      ,
                          c.BDOV                                                                        BDOV     ,
                          c.EDOV                                                                        EDOV     ,
                          decode(nvl(c.PASSP,0),0,1,2,1,6,1,7,1,5,2,8,3,-1)                             PASSP    ,
                          c.BPLACE                                                                      BPLACE   ,
                          c.TELD                                                                        TELD     ,
                          c.TELW                                                                        TELW     ,
                          c.TEL_FAX                                                                     TEL_FAX
                   from   S6_UF_CLIOUT      c,
                          USERS_SKARB6_BARS u
                   where  c.ISP=u.USKARB6(+) and
                          c.DATE_OFF is null and
                          u.FILIAL(+)='''||p_filial||''')
           order  by IDCLIENT,GROUP_C';

    open cur_ for sql_;

    loop
      fetch cur_ into TAXF_     ,
                      K050_     ,
                      DATEON_   ,
                      DATEA_    ,
                      DATET_    ,
                      BDAY_     ,
                      FS_       ,
                      SED_      ,
                      NMK_      ,
                      IDCLIENT_ ,
                      GROUP_C_  ,
                      OKPO_     ,
                      COUNTRY_  ,
                      CDST_     ,
                      CREG_     ,
                      PRINSIDER_,
                      ISP_      ,
                      NMKK_     ,
                      OE_       ,
                      CODCAGENT_,
                      ISE_      ,
                      SEX_      ,
                      TGR_      ,
                      CUSTTYPE_ ,
                      VED_      ,
                      ND_       ,
                      CRISK_    ,
                      PHONE_    ,
                      POSTIND_  ,
                      OBLAST_   ,
                      RAYON_    ,
                      CITY_     ,
                      STREET_   ,
                      HOUSE_    ,
                      KVARTIRA_ ,
                      TEL_      ,
                      EMAIL_    ,
                      SAB_      ,
                      STMT_     ,
                      RGADM_    ,
                      BIC_      ,
                      SERIA_    ,
                      NOMBER_   ,
                      ORGAN_    ,
                      DOTE_     ,
                      Adr_      ,
                      ADM_      ,
                      PINCODE_  ,
                      LIM_      ,
                      NOMPDV_   ,
                      NMKU_     ,
                      RUK_      ,
                      TELR_     ,
                      BUH_      ,
                      TELB_     ,
                      DOV_      ,
                      BDOV_     ,
                      EDOV_     ,
                      PASSP_    ,
                      BPLACE_   ,
                      TELD_     ,
                      TELW_     ,
                      TEL_FAX_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        select c.rnk
        into   rnk_
        from   customerw w,
               customer  c
        where  w.tag='RNKUF'                                                    and
               w.value=to_char(IDCLIENT_)||to_char(GROUP_C_)||to_char(p_filial) and
               w.rnk=c.rnk                                                      and
               bc.extract_mfo(c.branch)=mfog_                                   and
               rownum<2;
      exception when no_data_found then
        RNK_ := null;
      end;

      bc.subst_mfo(MFOg_);

      begin

        kl.setCustomerAttr(RNK_                    ,  -- Rnk_  IN OUT customer.rnk%type        -- Customer number
                           CUSTTYPE_               ,  -- Custtype_    customer.custtype%type   -- ╥шя ъышхэЄр: 1-срэъ, 2-■Ё.ышЎю, 3-Їшч.ышЎю
                           ND_                     ,  -- Nd_          customer.nd%type         -- ╣ фюуютюЁр
                           NMK_                    ,  -- Nmk_         customer.nmk%type        -- ═ршьхэютрэшх ъышхэЄр
                           null                    ,  -- Nmkv_        customer.nmkv%type       -- ═ршьхэютрэшх ъышхэЄр ьхцфєэрЁюфэюх
                           NMKK_                   ,  -- Nmkk_        customer.nmkk%type       -- ═ршьхэютрэшх ъышхэЄр ъЁрЄъюх
                           Adr_                    ,  -- Adr_         customer.adr%type        -- └фЁхё ъышхэЄр
                           CODCAGENT_              ,  -- Codcagent_   customer.codcagent%type  -- ╒рЁръЄхЁшёЄшър
                           COUNTRY_                ,  -- Country_     customer.country%type    -- ╤ЄЁрэр
                           PRINSIDER_              ,  -- Prinsider_   customer.prinsider%type  -- ╧Ёшчэръ шэёрщфхЁр
                           TGR_                    ,  -- Tgr_         customer.tgr%type        -- ╥шя уюё.ЁххёЄЁр
                           OKPO_                   ,  -- Okpo_        customer.okpo%type       -- ╬╩╧╬
                           STMT_                   ,  -- Stmt_        customer.stmt%type       -- ╘юЁьрЄ т√яшёъш
                           SAB_                    ,  -- Sab_         customer.sab%type        -- ▌ы.ъюф
                           DATEON_                 ,  -- DateOn_      customer.date_on%type    -- ─рЄр ЁхушёЄЁрЎшш
                           TAXF_                   ,  -- Taxf_        customer.taxf%type       -- ═рыюуют√щ ъюф
                           CREG_                   ,  -- CReg_        customer.c_reg%type      -- ╩юф юсы.═╚
                           CDST_                   ,  -- CDst_        customer.c_dst%type      -- ╩юф Ёрщюэ.═╚
                           ADM_                    ,  -- Adm_         customer.adm%type        -- └фьшэ.юЁурэ
                           null                    ,  -- RgTax_       customer.rgtax%type      -- ╨ху эюьхЁ т ═╚
                           RGADM_                  ,  -- RgAdm_       customer.rgadm%type      -- ╨ху эюьхЁ т └фь.
                           DATET_                  ,  -- DateT_       customer.datet%type      -- ─рЄр Ёху т ═╚
                           DATEA_                  ,  -- DateA_       customer.datea%type      -- ─рЄр Ёху. т рфьшэшёЄЁрЎшш
                           ISE_                    ,  -- Ise_         customer.ise%type        -- ╚эёЄ. ёхъ. ¤ъюэюьшъш
                           FS_                     ,  -- Fs_          customer.fs%type         -- ╘юЁьр ёюсёЄтхээюёЄш
                           OE_                     ,  -- Oe_          customer.oe%type         -- ╬ЄЁрёы№ ¤ъюэюьшъш
                           VED_                    ,  -- Ved_         customer.ved%type        -- ┬шф ¤ъ. фх Єхы№эюёЄш
                           SED_                    ,  -- Sed_         customer.sed%type        -- ╘юЁьр їюч щёЄтютрэш 
                           'Imported from UnicornF',  -- Notes_       customer.notes%type      -- ╧Ёшьхўрэшх
                           null                    ,  -- Notesec_     customer.notesec%type    -- ╧Ёшьхўрэшх фы  ёыєцс√ схчюярёэюёЄш
                           CRISK_                  ,  -- CRisk_       customer.crisk%type      -- ╩рЄхуюЁш  Ёшёър
                           PINCODE_                ,  -- Pincode_     customer.pincode%type    --
                           null                    ,  -- RnkP_        customer.rnkp%type       -- ╨ху. эюьхЁ їюыфшэур
                           LIM_                    ,  -- Lim_         customer.lim%type        -- ╦шьшЄ ърёё√
                           NOMPDV_                 ,  -- NomPDV_      customer.nompdv%type     -- ╣ т ЁххёЄЁх яырЄ. ╧─┬
                           '9'                     ,  -- MB_          customer.mb%type         -- ╧Ёшэрфы. ьрыюьє сшчэхёє
                           null                    ,  -- BC_          customer.bc%type         -- ╧Ёшчэръ ═┼ъышхэЄр срэър
                           '/'||MFOg_||'/'         ,  -- Tobo_        customer.tobo%type       -- ╩юф схчсрырэёютюую юЄфхыхэш 
                           ISP_                       -- Isp_         customer.isp%type        -- ╠хэхфцхЁ ъышхэЄр (юЄтхЄ. шёяюыэшЄхы№)
                          );

        begin
          kl.setCustomerEN(RNK_ ,  -- customer.rnk%type
                           ISE_ ,  -- customer.ise%type
                           FS_  ,  -- customer.fs%type
                           VED_ ,  -- customer.ved%type
                           OE_  ,  -- customer.oe%type
                           K050_,  -- customer.k050%type
                           SED_);  -- customer.sed%type
        exception when others then
          bars_audit.error('create_customerUF - err(1): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                           'RNK       = '||RNK_          ||', '||Chr(13)||Chr(10)||
                           'CUSTTYPE  = '||CUSTTYPE_     ||', '||Chr(13)||Chr(10)||
                           'ND        = '||ND_           ||', '||Chr(13)||Chr(10)||
                           'NMK       = '||NMK_          ||', '||Chr(13)||Chr(10)||
                           'NMKK      = '||NMKK_         ||', '||Chr(13)||Chr(10)||
                           'CODCAGENT = '||CODCAGENT_    ||', '||Chr(13)||Chr(10)||
                           'COUNTRY   = '||COUNTRY_      ||', '||Chr(13)||Chr(10)||
                           'PRINSIDER = '||PRINSIDER_    ||', '||Chr(13)||Chr(10)||
                           'TGR       = '||TGR_          ||', '||Chr(13)||Chr(10)||
                           'OKPO      = '||OKPO_         ||', '||Chr(13)||Chr(10)||
                           'STMT      = '||STMT_         ||', '||Chr(13)||Chr(10)||
                           'SAB       = '||SAB_          ||', '||Chr(13)||Chr(10)||
                           'DATEON    = '||DATEON_       ||', '||Chr(13)||Chr(10)||
                           'TAXF      = '||TAXF_         ||', '||Chr(13)||Chr(10)||
                           'CDST      = '||CDST_         ||', '||Chr(13)||Chr(10)||
                           'CREG      = '||CREG_         ||', '||Chr(13)||Chr(10)||
                           'RGADM     = '||RGADM_        ||', '||Chr(13)||Chr(10)||
                           'DATET     = '||DATET_        ||', '||Chr(13)||Chr(10)||
                           'DATEA     = '||DATEA_        ||', '||Chr(13)||Chr(10)||
                           'ISE       = '||ISE_          ||', '||Chr(13)||Chr(10)||
                           'FS        = '||FS_           ||', '||Chr(13)||Chr(10)||
                           'OE        = '||OE_           ||', '||Chr(13)||Chr(10)||
                           'VED       = '||VED_          ||', '||Chr(13)||Chr(10)||
                           'SED       = '||SED_          ||', '||Chr(13)||Chr(10)||
                           'CRISK     = '||CRISK_        ||', '||Chr(13)||Chr(10)||
                           'ISP       = '||ISP_          ||', '||Chr(13)||Chr(10)||
                           'IdClient  = '||IDCLIENT_     ||', '||Chr(13)||Chr(10)||
                           'GROUP_C   = '||GROUP_C_      ||', '||Chr(13)||Chr(10)||
                           'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          fl_ := 1;
          p_code := p_code+1;
          bc.set_context;
          goto custplus;
        end;

        fl_ := 0;
        p_open := p_open+1;
--      l_ins_ := l_ins_+1;
      exception when others then
        bars_audit.error('create_customerUF - err(0): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                         'RNK       = '||RNK_          ||', '||Chr(13)||Chr(10)||
                         'CUSTTYPE  = '||CUSTTYPE_     ||', '||Chr(13)||Chr(10)||
                         'ND        = '||ND_           ||', '||Chr(13)||Chr(10)||
                         'NMK       = '||NMK_          ||', '||Chr(13)||Chr(10)||
                         'NMKK      = '||NMKK_         ||', '||Chr(13)||Chr(10)||
                         'CODCAGENT = '||CODCAGENT_    ||', '||Chr(13)||Chr(10)||
                         'COUNTRY   = '||COUNTRY_      ||', '||Chr(13)||Chr(10)||
                         'PRINSIDER = '||PRINSIDER_    ||', '||Chr(13)||Chr(10)||
                         'TGR       = '||TGR_          ||', '||Chr(13)||Chr(10)||
                         'OKPO      = '||OKPO_         ||', '||Chr(13)||Chr(10)||
                         'STMT      = '||STMT_         ||', '||Chr(13)||Chr(10)||
                         'SAB       = '||SAB_          ||', '||Chr(13)||Chr(10)||
                         'DATEON    = '||DATEON_       ||', '||Chr(13)||Chr(10)||
                         'TAXF      = '||TAXF_         ||', '||Chr(13)||Chr(10)||
                         'CDST      = '||CDST_         ||', '||Chr(13)||Chr(10)||
                         'CREG      = '||CREG_         ||', '||Chr(13)||Chr(10)||
                         'RGADM     = '||RGADM_        ||', '||Chr(13)||Chr(10)||
                         'DATET     = '||DATET_        ||', '||Chr(13)||Chr(10)||
                         'DATEA     = '||DATEA_        ||', '||Chr(13)||Chr(10)||
                         'ISE       = '||ISE_          ||', '||Chr(13)||Chr(10)||
                         'FS        = '||FS_           ||', '||Chr(13)||Chr(10)||
                         'OE        = '||OE_           ||', '||Chr(13)||Chr(10)||
                         'VED       = '||VED_          ||', '||Chr(13)||Chr(10)||
                         'SED       = '||SED_          ||', '||Chr(13)||Chr(10)||
                         'CRISK     = '||CRISK_        ||', '||Chr(13)||Chr(10)||
                         'ISP       = '||ISP_          ||', '||Chr(13)||Chr(10)||
                         'IdClient  = '||IDCLIENT_     ||', '||Chr(13)||Chr(10)||
                         'GROUP_C   = '||GROUP_C_      ||', '||Chr(13)||Chr(10)||
                         'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        fl_ := 1;
        p_code := p_code+1;
        bc.set_context;
      end;

<<custplus>> null;

      if fl_=0 then
        if CUSTTYPE_=1 then
          begin
            kl.setBankAttr(RNK_,  -- Rnk_    NUMBER,
                           MFO_,  -- Mfo_    VARCHAR2,
                           BIC_,  -- Bic_    VARCHAR2,
                           null,  -- BicAlt_ VARCHAR2,
                           null,  -- Rating_ VARCHAR2,
                           null,  -- Kod_b_  NUMBER,
                           RUK_,  -- Ruk_    VARCHAR2,
                           TEL_,  -- TelR_   VARCHAR2,
                           BUH_,  -- Buh_    VARCHAR2,
                           TELB_  -- TelB_   VARCHAR2
                          );
            if NMKU_ is not null then
              begin
                update customerw
                set    value=NMKU_
                where  tag='FIRMA' and
                       rnk=RNK_;
                if sql%rowcount=0 then
                  begin
                    insert
                    into   customerw (rnk,
                                      tag,
                                      value)
                              values (RNK_   ,
                                      'FIRMA',
                                      NMKU_);
                  exception when OTHERS then
                    null;
                  end;
                end if;
              end;
            end if;
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUF - err(2): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_          ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_     ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_           ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_          ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_         ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_    ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_      ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_    ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_          ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_         ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_         ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_          ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_       ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_         ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_         ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_         ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_        ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_        ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_        ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_          ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_           ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_           ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_          ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_          ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_        ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_          ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_     ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_      ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=2 then
          begin
            kl.setCorpAttr(RNK_    ,  -- Rnk_    NUMBER,
                           NMK_    ,  -- Nmku_   VARCHAR2,
                           RUK_    ,  -- Ruk_    VARCHAR2,
                           TEL_    ,  -- TelR_   VARCHAR2,
                           BUH_    ,  -- Buh_    VARCHAR2,
                           TELB_   ,  -- TelB_   VARCHAR2,
                           TEL_FAX_,  -- TelFax_ varchar2,
                           EMAIL_  ,  -- EMail_  varchar2,
                           null       -- SealId_ number
                          );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUF - err(3): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_          ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_     ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_           ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_          ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_         ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_    ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_      ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_    ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_          ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_         ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_         ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_          ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_       ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_         ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_         ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_         ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_        ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_        ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_        ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_          ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_           ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_           ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_          ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_          ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_        ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_          ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_     ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_      ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=3 then
          begin
--          ЁшїЄютър фрЄ√ Ёюцфхэш 
            BDAY_ := CorrectBdayOkpo(BDAY_,OKPO_);
            kl.setPersonAttr(RNK_   ,  -- Rnk_    NUMBER,
                             SEX_   ,  -- Sex_    CHAR,
                             1      ,  -- Passp_  NUMBER,
                             SERIA_ ,  -- Ser_    VARCHAR2,
                             NOMBER_,  -- Numdoc_ VARCHAR2,
                             DOTE_  ,  -- PDate_  DATE,
                             ORGAN_ ,  -- Organ_  VARCHAR2,
                             BDAY_  ,  -- BDay_   DATE,
                             BPLACE_,  -- BPlace_ VARCHAR2,
                             TELD_  ,  -- TelD_   VARCHAR2,
                             TELW_     -- TelW_   VARCHAR2
                             );
            if NMKU_ is not null then
              begin
                update customerw
                set    value=NMKU_
                where  tag='FIRMA' and
                       rnk=RNK_;
                if sql%rowcount=0 then
                  begin
                    insert
                    into   customerw (rnk,
                                      tag,
                                      value)
                              values (RNK_   ,
                                      'FIRMA',
                                      NMKU_);
                  exception when OTHERS then
                    null;
                  end;
                end if;
              end;
            end if;
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUF - err(4): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_          ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_     ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_           ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_          ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_         ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_    ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_      ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_    ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_          ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_         ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_         ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_          ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_       ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_         ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_         ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_         ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_        ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_        ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_        ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_          ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_           ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_           ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_          ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_          ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_        ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_          ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_     ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_      ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_             ,  -- Rnk_ INTEGER,
                                  'RNKUF'          ,  -- Tag_ VARCHAR2,
                                  to_char(IDCLIENT_)||
                                  to_char(GROUP_C_) ||
                                  to_char(p_filial),  -- Val_ VARCHAR2,
                                  0                   -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUF - err(5): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_          ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_     ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_           ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_          ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_         ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_    ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_      ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_    ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_          ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_         ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_         ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_          ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_       ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_         ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_         ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_         ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_        ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_        ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_        ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_          ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_           ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_           ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_          ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_          ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_        ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_          ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_     ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_      ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGOBL',  -- Tag_ VARCHAR2,
                                  OBLAST_,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUF - err(6): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGDST',  -- Tag_ VARCHAR2,
                                  RAYON_ ,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUF - err(10): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGTWN',  -- Tag_ VARCHAR2,
                                  CITY_  ,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUF - err(11): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_           ,     -- Rnk_ INTEGER,
                                  'FGADR'        ,     -- Tag_ VARCHAR2,
                                  trim(STREET_||' '||  -- Val_ VARCHAR2,
                                       HOUSE_ ||' '||
                                       KVARTIRA_),
                                  0                    -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerUF - err(12): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          if POSTIND_ is not null or
             OBLAST_  is not null or
             RAYON_   is not null or
             CITY_    is not null or
             STREET_  is not null then
            sthokv_ := STREET_||','||HOUSE_||' ът.'||KVARTIRA_;
            if substr(sthokv_,-4)=' ът.' then
              sthokv_ := substr(sthokv_,1,length(sthokv_)-4);
            end if;
            if substr(sthokv_,-1)=',' then
              sthokv_ := substr(sthokv_,1,length(sthokv_)-1);
            end if;
            sthokv_ := trim(substr(sthokv_,1,100));

            begin
              update customer_address
              set    COUNTRY=COUNTRY_                 ,
                     zip=POSTIND_                     ,
                     domain=trim(substr(OBLAST_,1,30)),
                     region=RAYON_                    ,
                     locality=trim(substr(CITY_,1,30)),
                     address=sthokv_
              where  rnk=RNK_ and
                     type_id=1;
              if SQL%rowcount=0 then
                insert
                into   customer_address (rnk     ,
                                         type_id ,
                                         COUNTRY ,
                                         zip     ,
                                         domain  ,
                                         region  ,
                                         locality,
                                         address)
                                 values (RNK_                      ,
                                         1                         ,
                                         COUNTRY_                  ,
                                         POSTIND_                  ,
                                         trim(substr(OBLAST_,1,30)),
                                         RAYON_                    ,
                                         trim(substr(CITY_,1,30))  ,
                                         sthokv_);
              end if;
              fl_ := 0;
            exception when others then
              bars_audit.error('create_customerUF - err(13): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                               'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                               'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                               'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                               'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                               'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                               'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                               'ADRES     = '||trim(OBLAST_ ||' '||
                                                    RAYON_  ||' '||
                                                    CITY_   ||' '||
                                                    STREET_ ||' '||
                                                    HOUSE_  ||' '||
                                                    KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                               'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                               'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                               'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                               'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                               'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                               'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                               'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                               'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                               'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                               'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                               'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                               'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                               'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                               'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                               'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                               'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                               'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                               'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                               'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                               'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                             'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                               'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                               'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                               'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
              bc.set_context;
            end;
          end if;
        end if;

        bc.set_context;
      end if;

      if fl_=0 then
         commit;
      else
         rollback;
      end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(1);

  end create_customerUF;

--

  procedure open_accountUF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    fl_         number;
    type        cur is ref cursor;
    cur_        cur;
    sql_        varchar2(32000);
    accR_       number;
    ndz_        number;
    MFOg_       varchar2(12);
    id_         number;
    ispg_       varchar(32);
    kvv_        accounts.kv%type;

    rnk_        customer.rnk%type;
    DAPP_       date;
    daos_       date;
    dazs_       date;
    kv_         accounts.kv%type;
    isp_        number;
    nbs_        char(4);
    tip_        char(3);
    vid_        number;
    ostc_       number;
    ostq_       number;
    lim_        number;
    OSTX_       number;
    nms_        varchar2(70);
    nls_        varchar2(64);
    nlsalt_     accounts.nlsalt%type;
    branch_     accounts.branch%type;
    OB22_       SPECPARAM_INT.ob22%type;
    OB88_       SPECPARAM_INT.ob88%type;
    P080_       SPECPARAM_INT.P080%type;
    MFO_        SPECPARAM_INT.MFO%type;
    R020_FA_    SPECPARAM_INT.R020_FA%type;
    R011_       SPECPARAM.R011%type;
    R013_       SPECPARAM.R013%type;
    S240_       SPECPARAM.S240%type;
    S080_       SPECPARAM.S080%type;
    S180_       SPECPARAM.S180%type;
    S190_       SPECPARAM.S190%type;
    S181_       SPECPARAM.S181%type;
--  S260_       SPECPARAM.S260%type;
    S200_       SPECPARAM.S200%type;
    S230_       SPECPARAM.S230%type;
    S120_       SPECPARAM.S120%type;
    S031_       SPECPARAM.S031%type;
    S182_       SPECPARAM.S182%type;
    R014_       SPECPARAM.R014%type;
    K072_       SPECPARAM.K072%type;
    S130_       SPECPARAM.S130%type;
    S250_       SPECPARAM.S250%type;
    S090_       date;
    NKD_        SPECPARAM.NKD%type;
    IR_         int_ratn.ir%type;
    BDAT_       int_ratn.bdat%type;
    PAP_        ps.pap%type;
    flUN_       number;
    open_       number;
    s7_         number;
    s8_         number;
    s9_         number;
    l_ins_      number;
    mrnk_       varchar2(32);

    NLSNPROC_   accounts.nls%type;
    NLSDR_      accounts.nls%type;
    acra_       accounts.acc%type;
    acrb_       accounts.acc%type;
    DADN_       date;
    DADK_       date;

    pos_        number;
    Job_        number;
    fi3_        char(3);
    op_         int;
    newnls_     accounts.nls%type;
    ffff_       char(4);
    fff_        char(3);
    ff_         char(2);
    i_          int;
    OB22aaa_    varchar2(3);
    OB22aa_     varchar2(3);
    flS6_       number;
    ugosaldoa_  int;

  begin

    bars_alerter(0);

    gl.frcvr := 1;

--  l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),-4,3)
                       from   s6_uf_filial'
                       into   fi3_;

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=MFOg_                              and
           logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=MFOg_ and
             logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%';
      if ispg_ is null then
        select to_char(min(id))
        into   ispg_
        from   staff$base
        where  bc.extract_mfo(branch)=MFOg_ and
               tabn is not null;
        if ispg_ is null then
          select to_char(min(id))
          into   ispg_
          from   staff$base
          where  bc.extract_mfo(branch)=MFOg_;
        end if;
      end if;
    end if;

    mrnk_ := -1;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 disable';
    exception when OTHERS then
      null;
    end;

    sql_:='select distinct  /* to ACCOUNTS */
                  nvl(cw.rnk,'||mrnk_||')                                                                                                  RNK     ,
                  s.DAPP                                                                                                                   DAPP    ,
                  s.DAZS                                                                                                                   DAZS    ,
--                s.DAOS                                                                                                                   DAOS    ,
                  to_date('''||p_datx||''')-4                                                                                              daos    ,
                  s.KV                                                                                                                     KV      ,
                  nvl(u.UBARS,'||ispg_||')                                                                                                 ISP     ,
                  substr(s.NLS,1,4)                                                                                                        NBS     ,
                  1                                                                                                                        POS     ,
                  s.OSTC*100                                                                                                               OSTC    ,
                  s.OSTQ*100                                                                                                               OSTQ    ,
                  0                                                                                                                        LIM     ,
                  null                                                                                                                     OSTX    ,
                  (case when substr(s.NLS,1,2)=''25''                       then
                     11
                        when substr(s.NLS,1,4) in (''2610'',
                                                   ''2612'',
                                                   ''2615'',
                                                   ''2630'',
                                                   ''2635'',
                                                   ''2651'',
                                                   ''2652'',
                                                   ''1510'',
                                                   ''1511'',
                                                   ''1512'',
                                                   ''1515'',
                                                   ''1610'',
                                                   ''1611'',
                                                   ''1612'',
                                                   ''1615'')                then
                     4
                        when substr(s.NLS,1,4) in (''1500'',
                                                   ''1600'')                then
                     10
                        when substr(s.NLS,1,2) in (''20'',
                                                   ''21'',
                                                   ''22'',
                                                   ''27'')                  then
                     6
                        when substr(s.NLS,1,4)=''9802''                     then
                     5
                        when substr(s.NLS,1,4) in (''4310'',
                                                   ''4430'',
                                                   ''4432'',
                                                   ''4438'',
                                                   ''4439'',
                                                   ''4530'',
                                                   ''4532'',
                                                   ''4538'',
                                                   ''4539'')                then
                     8
                        when substr(s.NLS,1,4) in (select nbs from dpa_nbs) then
                     3
                   else
                     0
                   end)                                                                                                                    VID     ,
                  migraSK.valid_symbol(
                  trim(substr(nvl(s.NMS,''эх юяЁхфхыхэю''),1,70)))                                                                         NMS     ,
                  s.NLS                                                                                                                    NLS     ,
                  trim(substr(s.NLSALT,1,14))                                                                                              NLSALT  ,
                  s.BRANCH                                                                                                                 BRANCH  ,
                  /* to SPECPARAM_INT */
                  substr(''00''||s.OB22,-2)                                                                                                OB22    ,
                  s.OB88                                                                                                                   OB88    ,
                  trim(substr(s.P080,1,4))                                                                                                 P080    ,
                  s.MFO                                                                                                                    MFO     ,
                  s.R020_FA                                                                                                                R020_FA ,
                  /* to SPECPARAM */
                  s.R011                                                                                                                   R011    ,
                  s.R013                                                                                                                   R013    ,
                  nullif(s.S080,''0'')                                                                                                     S080    ,
                  null                                                                                                                     S180    ,
                  null                                                                                                                     S181    ,
                  s.S190                                                                                                                   S190    ,
                  s.S200                                                                                                                   S200    ,
                  s.S230                                                                                                                   S230    ,
                  decode(upper(s.S240),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(s.S240))  S240    ,
                  s.S120                                                                                                                   S120    ,
                  s.S130                                                                                                                   S130    ,
                  s.S250                                                                                                                   S250    ,
                  s.S031                                                                                                                   S031    ,
                  s.S182                                                                                                                   S182    ,
                  s.R014                                                                                                                   R014    ,
                  s.K072                                                                                                                   K072    ,
                  s.S090                                                                                                                   S090    ,
--                s.S260                                                                                                                   S260    ,
                  s.BDAT                                                                                                                   BDAT    ,
                  s.PR                                                                                                                     IR      ,
                  ps.pap                                                                                                                   PAP     ,
                  n.NLSNPROC                                                                                                               NLSNPROC,
                  n.NLSDR                                                                                                                  NLSDR   ,
                  s.DADN                                                                                                                   DADN    ,
                  s.DADK                                                                                                                   DADK
           from   customerw                                             cw,
                  S6_UF_ALCOUT                                          s ,
--                (select *
--                 from   S6_UF_ALCOUT s
--                 where  (s.nls,s.kv) in (select nls,kv
--                                         from   (select nls,kv,count(*)
--                                                 from   S6_UF_ALCOUT
--                                                 group  by nls,kv
--                                                 having count(*)>1)) and
--                        nvl(s.dazs,trunc(sysdate)+36524)=
--                        (select max(nvl(dazs,trunc(sysdate)+36524))
--                         from   S6_UF_ALCOUT where nls=s.nls and kv=s.kv)
--                union all
--                 select *
--                 from   S6_UF_ALCOUT
--                 where  (nls,kv) not in (select nls,kv
--                                         from   (select nls,kv,count(*)
--                                                 from   S6_UF_ALCOUT
--                                                 group  by nls,kv
--                                                 having count(*)>1))) s ,
                  S6_UF_CLIOUT                                          c ,
                  S6_UF_ALNLSN                                          n ,
                  USERS_SKARB6_BARS                                     u ,
                  ps
           where  cw.tag(+)=''RNKUF''                                                       and
                  to_number(cw.value(+))=nvl(c.RNK,0)*10000000+'||p_filial||'               and
--                (s.DAZS is null                                                           or
--                 (s.DAZS is not null and s.DAZS>=add_months(trunc(sysdate,''YEAR''),-12)) or
--                 (s.DAZS is not null and substr(s.NLS,1,4) in (select NBS
--                                                               from   DPA_NBS)))          and
                  s.DAZS is null                                                            and
                  s.ISP=u.USKARB6(+)                                                        and
                  u.filial(+)='''||p_filial||'''                                            and
                  substr(s.NLS,1,4)=ps.nbs(+)                                               and
                  n.nls(+)=s.nls                                                            and
                  n.kv(+)=s.kv                                                              and
                  c.rnk=s.rnk                                                               and
                  (substr(s.NLS,1,1)<>''8'' or substr(s.NLS,1,2)=''89'')
           order  by substr(s.NLS,1,4) desc';
    open cur_ for sql_;

    NKD_ := null;

    LOOP

      fetch cur_ into RNK_     ,
                      DAPP_    ,
                      DAZS_    ,
                      DAOS_    ,
                      KV_      ,
                      ISP_     ,
                      NBS_     ,
                      POS_     ,
                      OSTC_    ,
                      OSTQ_    ,
                      LIM_     ,
                      OSTX_    ,
                      VID_     ,
                      NMS_     ,
                      NLS_     ,
                      NLSALT_  ,
                      BRANCH_  ,
                      OB22_    ,
                      OB88_    ,
                      P080_    ,
                      MFO_     ,
                      R020_FA_ ,
                      R011_    ,
                      R013_    ,
                      S080_    ,
                      S180_    ,
                      S181_    ,
                      S190_    ,
                      S200_    ,
                      S230_    ,
                      S240_    ,
                      S120_    ,
                      S130_    ,
                      S250_    ,
                      S031_    ,
                      S182_    ,
                      R014_    ,
                      K072_    ,
                      S090_    ,
--                    S260_    ,
                      BDAT_    ,
                      IR_      ,
                      PAP_     ,
                      NLSNPROC_,
                      NLSDR_   ,
                      DADN_    ,
                      DADK_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      fl_ := 0;
      op_ := 0;

--    юяЁхфхы хь шьяюЁЄшыш єцх ёў╕Є шыш эхЄ (т√сюЁър шч S6_MIGRNLS)

      begin
        select nls_bars
        into   newnls_
        from   S6_MIGRNLS
        where  nls_fil=nls_ and
               kv=kv_       and
               filial=p_filial;
      exception when no_data_found then
        newnls_ := null;
      end;

--    чфхё№ т√ўшёы хь newnls_ эр юёэютрэшш шэЇюЁьрЎшш шч ЄрсышЎ
--    S6_UF_SHABLON, S6_UF_DEPO, S6_UF_FILIAL

      if newnls_ is null then -- сєфхь юЄъЁ√трЄ№ эют√щ ёў╕Є яю ьрёъх

--      1. юяЁхфхы хь FF_, FFF_, BRANCH_ шч S6_UF_FILIAL

        begin
          execute immediate 'select substr(''0000''||trim(ff),-4),
                                    substr(''000''||trim(ff),-3) ,
                                    substr(''00''||trim(ff),-2)
                             from   S6_UF_FILIAL
                             where  branch='''||branch_||''' and
                                    rownum<2'
                             into   ffff_,
                                    fff_ ,
                                    ff_;
        exception when OTHERS then
          ffff_ := substr(branch_,-5,4);
          fff_  := substr(branch_,-4,3);
          ff_   := substr(branch_,-3,2);
        end;

--      2. ш∙хь ёў╕Є т S6_HI_DEPO, хёыш эр°ыш - newnls_ := vkrzn(KOTL) ш ┬╤и

        begin
          execute immediate 'select kotl,
                                    ob22,
                                    branch
                             from   S6_UF_DEPO
                             where  trim(nls)='''||nls_||'''           and
                                    i_va='||to_char(kv_)||'            and
                                    substr(kotl,1,4) not in (''1001'',
                                                             ''1101'',
                                                             ''1011'') and
                                    rownum<2'
                             into   newnls_,
                                    OB22_  ,
                                    branch_;
          nms_    := '╩юЄыютющ ёў╕Є '||substr(nls_,1,4)||' ╬┴22 '||OB22_;
          newnls_ := vkrzn(substr(MFOg_,1,5),newnls_);
          goto BCE;
        exception when OTHERS then
          null;
        end;

--      3. шэрўх - ш∙хь срырэёют√щ т S6_UF_SHABLON, хёыш хёЄ№, Єю схЁ╕ь
--         ёююЄтхЄёЄтє■∙є■ ьрёъє ёў╕Єр юЄЄєфр

        begin
          execute immediate 'select maska
                             from   S6_UF_SHABLON
                             where  ((length(trim(BALS))=4 and
                                      substr('''||nls_||''',1,4)=trim(BALS)) or
                                     (length(trim(BALS))=3 and
                                      substr('''||nls_||''',1,3)=trim(BALS)) or
                                     (length(trim(BALS))=2 and
                                      substr('''||nls_||''',1,2)=trim(BALS)) or
                                     (length(trim(BALS))=1 and
                                      substr('''||nls_||''',1,1)=trim(BALS))) and
                                    rownum<2'
                             into   newnls_;
          goto MASKA;
        exception when OTHERS then
          null;
        end;

--      5. шэрўх - фюсрты хь ъ ёў╕Єє рЁшЇьхЄшўхёъш 1 (Ўшъы) ш юяЁхфхы хь
--         яхЁт√щ яюярт°шщ ёў╕Є, хую ш яЁшётрштрхь т newnls_

        newnls_ := nls_;

        if substr(newnls_,1,4) in ('1001','1101','1011') then
          newnls_ := substr(newnls_,1,3)||'2'||substr(newnls_,5);
        end if;

        newnls_ := vkrzn(substr(MFOg_,1,5),newnls_);

        i_ := 0;
        while i_=0
        loop
          begin
            select 0
            into   i_
            from   accounts
            where  nls=newnls_ and
                   kv=kv_;
            newnls_ := vkrzn(substr(MFOg_,1,5),to_char(to_number(newnls_)+1));
          exception when no_data_found then
            i_ := 1;
          end;
        end loop;

        goto BCE; -- cў╕Є юяЁхфхыхэ!

<<MASKA>> null; -- чфхё№ ЁрчюсЁрЄ№ ьрёъє ╤┴┼╨┴└═╩└, т√ЁюфшЄ№ °рсыюэ т
                -- ьюфшЇшърЄюЁрї ┴└╨╤р ш юяЁхфхышЄ№ ёў╕Є яю хэЄюьє °рсыюэє!

--      BBBB          - срырэёют√щ ёў╕Є    (┬ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      GGGGGG, GGGGG - RNK
--      HHH, HH шыш H - эюьхЁ яю яюЁ фъє   (═ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      K             - ъюэЄЁюы№э√щ ЁрчЁ ф (╩ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      FFF шыш FF    - ъюф юЄфхыхэш 
--      AAA шыш AA    - ъюф ╬┴22           (└ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)

        newnls_ := replace(upper(newnls_),'┬','B');
        newnls_ := replace(upper(newnls_),'╩','K');
        newnls_ := replace(upper(newnls_),'└','A');
        newnls_ := replace(upper(newnls_),'═','H');

        OB22_   := replace(OB22_,'└','A');
        OB22_   := replace(OB22_,'┬','B');
        OB22_   := replace(OB22_,'╤','C');
        OB22_   := replace(OB22_,'═','H');
        OB22_   := replace(OB22_,'╩','K');
        OB22_   := replace(OB22_,'╠','M');
        OB22_   := replace(OB22_,'┼','E');
        OB22_   := replace(OB22_,'╒','X');
        OB22_   := replace(OB22_,'╨','P');
        OB22_   := replace(OB22_,'╬','O');
        OB22_   := replace(OB22_,'╥','T');

        OB22aaa_:= (case when upper(substr(nvl(OB22_,'00'),1,1))>'9' then
                      to_char(ascii(upper(substr(nvl(OB22_,'00'),1,1)))-55)||
                      substr(nvl(OB22_,'00'),-1)
                    else
                      '0'||to_char(substr(nvl(OB22_,'00'),1,1))||
                      substr(nvl(OB22_,'00'),-1)
                    end);
        OB22aa_ := substr(OB22aaa_,-2);

        newnls_ := replace(upper(newnls_),'BBBB',substr(nls_,1,4));
        newnls_ := replace(upper(newnls_),'G','R');
        newnls_ := replace(upper(newnls_),'H','╣');
        newnls_ := replace(upper(newnls_),'K','_');
        newnls_ := replace(upper(newnls_),'FFFF',ffff_);
        newnls_ := replace(upper(newnls_),'FFF',fff_);
        newnls_ := replace(upper(newnls_),'FF',ff_);
        newnls_ := replace(upper(newnls_),'AAA',OB22aaa_);
        newnls_ := replace(upper(newnls_),'AA',OB22aa_);

        if substr(nls_,1,4) in ('1001','1101','1011') then
          newnls_ := substr(nls_,1,3)||'2'||substr(newnls_,5);
        end if;

        toroot;
        delete
        from   nlsmask
        where  maskid='TemporaryM';

        insert
        into   nlsmask (MASKID,
                        DESCR ,
                        MASK)
                values ('TemporaryM'                           ,
                        '┬Ёхьхээр  ьрёър фы  °рсыюэр ёўхЄют ╤┴',
                        newnls_);
        commit;

--      яюыєўрхь ╨┼└╦▄═█╔ эюьхЁ ёў╕Єр

        tokf;
        newnls_ := f_newnls2(null               ,
                             'TemporaryM'       ,
                             substr(newnls_,1,4),
                             rnk_               ,
                             null               ,
                             kv_);
        i_ := 0;
        while i_=0
        loop
          begin
            select 0
            into   i_
            from   accounts
            where  nls=newnls_ and
                   kv=kv_;
            newnls_ := vkrzn(substr(MFOg_,1,5),to_char(to_number(newnls_)+1));
          exception when no_data_found then
            i_ := 1;
          end;
        end loop;

<<BCE>> null;

      end if;

      bc.subst_branch(branch_); -- єёЄрэртыштрхь сЁрэў фы  юЄъЁ√трхьюую ёў╕Єр

--    чфхё№ шьххь newnls_ ш kv_ фы  юЄъЁ√Єш  ═╬┬╬├╬ ёў╕Єр шыш шчьхэхэш  ёЄрЁюую

      if rnk_=-1 then
        bars_audit.error('open_accountUF - err(10): ёў╕Є эх яЁшт чрэ эш ъ юфэюьє ъышхэЄє '||Chr(13)||Chr(10)||
                                                              'NLS = '    ||nls_   ||', ' ||Chr(13)||Chr(10)||
                                                              'NEWNLS = ' ||newnls_||', ' ||Chr(13)||Chr(10)||
                                                              'KV = '     ||kv_    ||' '  ||Chr(13)||Chr(10)||
                                                              'branch = ' ||branch_||', ' ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
        fl_ := 1;
        goto kakaxer;
      end if;

      begin
        select acc
        into   accR_
        from   accounts
        where  nls=newnls_ and
               kv=kv_;
      exception when no_data_found then
        accR_ := null;
                when OTHERS then
        bars_audit.error('open_accountUF - err(1): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                         'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                         'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                         'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                         'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
        fl_ := 1;
        goto kakaxer;
      end;

      if accR_ is null then
        ndz_ := null;
        --1. OP_REG_ex
        begin

          tip_ := 'ODB';

          if    substr(newnls_,1,3)='100' and substr(newnls_,1,4)<>'1007' then
            if kv_=980 then
              tip_ := 'KAS';
            else
              tip_ := 'KAV';
            end if;
          elsif substr(newnls_,1,3) in ('604','603','602') and kv_=980 then
              tip_ := 'SD ';
          elsif substr(newnls_,1,4) in ('2625','2605','2655') then
              tip_ := 'PK1';
          end if;

          if trunc(sysdate)<p_datx then
            begin
              insert
              into   fdat (fdat)
                   values (p_datx-4);
              commit;
            exception when OTHERS then
              null;
            end;
            gl.pl_dat(p_datx-4);
          else
            begin
              insert
              into   fdat (fdat)
                   values (p_datx);
              commit;
            exception when OTHERS then
              null;
            end;
            gl.pl_dat(p_datx);
          end if;

          gl.amfo := MFOg_;

          OP_REG_exfl(99     ,  -- mod_       INTEGER,   -- Opening mode :
                      null   ,  -- p1_        INTEGER,   -- 1st Par      :
                      0      ,  -- p2_        INTEGER,   -- 2nd Par      :
                      0      ,  -- p3_        INTEGER,   -- 3rd Par (Grp):
                      ndz_   ,  -- p4_ IN OUT INTEGER,   -- 4th Par      :
                      rnk_   ,  -- rnk_       INTEGER,   -- Customer number
                      newnls_,  -- p_nls_     VARCHAR2,  -- Account  number
                      kv_    ,  -- kv_        SMALLINT,  -- Currency code
                      nms_   ,  -- nms_       VARCHAR2,  -- Account name
                      tip_   ,  -- tip_       CHAR,      -- Account type
                      isp_   ,  -- isp_       SMALLINT,
                      accR_  ,  -- accR_  OUT INTEGER,
                      '1'    ,  -- nbsnull_   VARCHAR2 DEFAULT '1',
                      null   ,  -- pap_       NUMBER   DEFAULT NULL,
                      vid_   ,  -- vid_       NUMBER   DEFAULT NULL,
                      pos_   ,  -- pos_       NUMBER   DEFAULT NULL,
                      null   ,  -- sec_       NUMBER   DEFAULT NULL,
                      null   ,  -- seci_      NUMBER   DEFAULT NULL,
                      null   ,  -- seco_      NUMBER   DEFAULT NULL,
                      99     ,  -- blkd_      NUMBER   DEFAULT NULL,
                      99     ,  -- blkk_      NUMBER   DEFAULT NULL,
          /* lim_? */ null   ,  -- lim_       NUMBER   DEFAULT NULL,
                      null   ,  -- ostx_      VARCHAR2 DEFAULT NULL,
                      nlsalt_,  -- nlsalt_    VARCHAR2 DEFAULT NULL,
                      branch_,  -- tobo_      VARCHAR2 DEFAULT NULL,
                      null   ,  -- accc_      NUMBER   DEFAULT NULL,
                      0);
          op_ := 1;
          begin
            update accounts
            set    dapp=dapp_
            where  acc=accR_;
          EXCEPTION WHEN OTHERS THEN
            bars_audit.error('open_accountUF - err(2): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                             'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                             'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                             'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                             'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                             'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
--          fl_ := 1;
          end;
          begin
            update ree_tmp
            set    ot=6
            where  nls=newnls_ and
                   kv=kv_      and
                   ot=1        and
                   fn_o is null;
          EXCEPTION WHEN OTHERS THEN
            bars_audit.error('open_accountUF - err(9): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                             'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                             'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                             'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                             'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                             'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;
--        l_ins_ := l_ins_+1;
        exception when others then
          bars_audit.error('open_accountUF - err(3): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                           'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                           'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                           'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                           'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          p_code := p_code+1;
          fl_ := 1;
        end;
      end if;

      if fl_=0 then
        select count(*)
        into   flS6_
        from   accountsw
        where  acc=accR_ and
               tag='IMPUF';
        if flS6_=0 then
          select count(1)
          into   ugosaldoa_
          from   saldoa
          where  acc=accr_;

          if ugosaldoa_=0 then
            begin
              insert
              into   saldoa (acc ,
                             fdat,
                             pdat,
                             ostf,
                             dos ,
                             kos)
                     values (accR_   ,
                             gl.bdate,
                             dapp_   ,
                             0       ,
                             0       ,
                             0);
            EXCEPTION WHEN OTHERS THEN
              null;
            end;
          end if;
        else
          update accounts
          set    daos=daos_
          where  acc=accR_;
        end if;

        if op_=1 then
          begin
            insert
            into   accountsw (acc,
                              tag,
                              value)
                      values (accR_  ,
                              'IMPUF',
                              'Imported from UnicornF');
          exception when others then
            bars_audit.error('open_accountUF - err(4): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                             'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                             'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                             'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                             'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        --2. INSERT or UPDATE SPECPARAM_INT

        if fl_=0 then
          begin
            insert
            into   SPECPARAM_INT (acc    ,
                                  p080   ,
                                  ob22   ,
                                  mfo    ,
                                  r020_fa,
                                  ob88)
                          values (accR_   ,
                                  P080_   ,
                                  OB22_   ,
                                  MFO_    ,
                                  R020_FA_,
                                  OB88_);
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
            begin
              update SPECPARAM_INT
              set    p080=P080_      ,
                     ob22=OB22_      ,
                     mfo=MFO_        ,
                     r020_fa=R020_FA_,
                     ob88=OB88_
              where  acc=accR_;
            EXCEPTION WHEN OTHERS THEN
              bars_audit.error('open_accountUF - err(7u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;
                    WHEN OTHERS THEN
            bars_audit.error('open_accountUF - err(7): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                             'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                             'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                             'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                             'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        --3. INSERT or UPDATE SPECPARAM

        if DADK_ is not null then
          update accounts
          set    mdate=DADK_
          where  acc=accR_;
          if DADN_ is not null then
            S180_ := fs180(accR_,null,null,DADN_);
            begin
              select s181
              into   S181_
              from   kl_s180
              where  s180=S180_;
            exception when no_data_found then
              null;
            end;
            begin
              insert
              into   accountsw (acc,
                                tag,
                                value)
                        values (accR_ ,
                                'DADN',
                                to_char(DADN_,'DD/MM/YYYY'));
            exception when others then
              null;
            end;
          end if;
        end if;

        if fl_=0 then
          begin
            insert
            into   SPECPARAM (acc ,
                              R011,
                              R013,
                              S240,
                              S080,
                              S180,
                              S190,
                              S181,
--                            S260,
                              S200,
                              S120,
                              S031,
                              S182,
--                            S130,
                              NKD)
                      values (accR_,
                              R011_,
                              R013_,
                              S240_,
                              S080_,
                              S180_,
                              S190_,
                              S181_,
--                            S260_,
                              S200_,
                              S120_,
                              S031_,
                              S182_,
--                            S130_,
                              NKD_);
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
            begin
              update SPECPARAM
              set    R011=R011_,
                     R013=R013_,
                     S240=S240_,
                     S080=S080_,
                     S180=S180_,
                     S190=S190_,
                     S181=S181_,
--                   S260=S260_,
                     S200=S200_,
                     S120=S120_,
                     S031=S031_,
                     S182=S182_,
--                   S130=S130_,
                     NKD=NKD_
              where  acc=accR_;
            EXCEPTION WHEN OTHERS THEN
              bars_audit.error('open_accountUF - err(8u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;
                    WHEN OTHERS THEN
            bars_audit.error('open_accountUF - err(8): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                             'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                             'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                             'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                             'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        if substr(nls_,1,1) in ('2','3','9') then

--        ╧ЁюЎхэЄэ√х ърЁЄюўъш

          if fl_=0 then

            if IR_ is not null /* and ACRA_ is not null */ then

              if pap_=1 then
                 id_ := 0;
              else
                 id_ := 1;
              end if;

--            4. INSERT or UPDATE INT_ACCN

              if NLSNPROC_ is not null then
                begin
                  select acc
                  into   acra_
                  from   accounts
                  where  nls=NLSNPROC_ and
                         kv=kv_;
                exception when no_data_found then
                  acra_ := null;
                end;
              end if;

              if NLSDR_ is not null then
                begin
                  select acc
                  into   acrb_
                  from   accounts
                  where  nls=NLSDR_ and
                         kv=kv_;
                exception when no_data_found then
                  acrb_ := null;
                end;
              end if;

              begin
                insert
                into    INT_ACCN (ACC    ,  -- accR_
                                  ID     ,  -- id_
                                  METR   ,  -- 0
                                  BASEY  ,  -- 0
                                  FREQ   ,  -- 1
                                  ACR_DAT,  -- bankdate
                                  ACRA   ,  -- ???
                                  ACRB
                                 )
                          values (accR_   ,
                                  id_     ,
                                  0       ,
                                  0       ,
                                  1       ,
                                  bankdate,
                                  acra_   ,
                                  acrb_
                                 );
              EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                update INT_ACCN
                set    METR   =0       ,
                       BASEY  =0       ,
                       FREQ   =1       ,
                       ACR_DAT=bankdate,
                       ACRA   =acra_   ,
                       ACRB   =acrb_
                where  acc=accR_ and
                       id=id_;
                        WHEN OTHERS THEN
                bars_audit.error('open_accountUF - err(6): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                p_code := p_code+1;
                fl_ := 1;
              end;

--            5. INSERT or UPDATE INT_RATN

              if fl_=0 then
                begin
                  insert
                  into   INT_RATN (acc   ,
                                   id    ,
                                   BDAT  ,
                                   IR    ,
                                   BR    ,
                                   OP    ,
                                   IDU --,
                                  )
                           values (accR_              ,
                                   id_                ,
                                   nvl(bdat_,bankdate),
                                   IR_                ,
                                   null               ,
                                   null               ,
                                   1
                                  );
                EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                  update INT_RATN
                  set    IR=IR_ ,
                         BR=null,
                         OP=null,
                         IDU=1
                  where  acc=accR_ and
                         id=id_    and
                         BDAT=nvl(bdat_,bankdate);
                          WHEN OTHERS THEN
                  bars_audit.error('open_accountUF - err(5):'||sqlerrm||', '||Chr(13)||Chr(10)||
                                                  'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                  'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                  'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                  'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                  p_code := p_code+1;
                  fl_ := 1;
                end;
              end if;
            end if;
          end if;
        end if;
      end if;

<<kakaxer>> null;

      bc.set_context;

      if fl_=0 then
        update S6_MIGRNLS
        set    NLS_BARS=newnls_
        where  NLS_FIL=nls_ and
               KV=kv_       and
               FILIAL=p_filial;
        if sql%rowcount=0 then
          insert
          into   S6_MIGRNLS (NLS_FIL ,
                             KV      ,
                             NLS_BARS,
                             FILIAL)
                     values (nls_   ,
                             kv_    ,
                             newnls_,
                             p_filial);
        end if;
        commit;
        p_open := p_open+1;
      else
        rollback;
      end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 enable';
    exception when OTHERS then
      null;
    end;

    gl.frcvr := 0;

    bars_alerter(1);

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ёўхЄют (ACCOUNTS ш ёт чрээ√х)

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tableAC_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('open_accountUF - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

  end open_accountUF;

--

  procedure drop_accountUF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    accmax_  number;
    MFOg_    varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_accountUF - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  delete from TABLEs

    begin
      bc.subst_mfo(MFOg_);
      delete from accounts_update           where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from saldoa                    where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam_int             where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam_update          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from rko_lst                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_RATN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_RATN_ARC              where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACRA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACRB       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from NLK_REF                   where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(32): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACCD       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACC1       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from SALDOA_TURN_QUEUE         where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from SALDOB                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTARC                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(43): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTPAY                where ACCA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(44): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTPAY                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(45): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from accountsw                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(56): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from bank_acc                  where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(61): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from bpk_acc                   where acc_pk     in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(65): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from BARSAQ.AQ_SUBSCRIBERS_ACC where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag=''RNKUF'' and substr(value,-6)='''||p_filial||''') and ostc=0 and bc.extract_mfo(branch)='''||MFOg_||''')';
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(66): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from accounts_all              where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(67): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from ree_tmp                   where (nls,kv)   in (select nls,kv from accounts where rnk in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(68): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

    commit;

    begin
      bc.subst_mfo(MFOg_);
      delete from accounts                  where rnk        in (select rnk from customerw where tag='RNKUF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_;
      p_open := p_open+SQL%rowcount;
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountUF - err(72): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

    delete
    from   S6_MIGRNLS
    where  filial=p_filial;

    commit;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_accountUF - err(73): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  recreate accounts SEQUENCE

    select nvl(max(acc),0)+1 into accmax_ from accounts;

    execute immediate 'DROP SEQUENCE S_ACCOUNTS';
    execute immediate 'CREATE SEQUENCE S_ACCOUNTS
                       START WITH '||accmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_ACCOUNTS TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_ACCOUNTS

    sys.utl_recomp.recomp_serial('BARS');

    bars_alerter(1);

  end drop_accountUF;

--

  procedure drop_customerUF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    rnkmax_  number;
    MFOg_    varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_customerUF - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    begin
      execute immediate 'CREATE TABLE S6_TEMP_RNK (rnk NUMBER)';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DELETE FROM S6_TEMP_RNK';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'INSERT
                         INTO   S6_TEMP_RNK
                         select rnk
                         from   customerw
                         where  rnk not in (select rnk from accounts) and
                                tag=''RNKUF''                         and
                                substr(value,-6)='''||p_filial||'''';
    exception when OTHERS then
      null;
    end;

--  delete from TABLEs

    begin
      bc.subst_mfo(MFOg_);
      execute immediate 'delete from customerw          where rnk in (select rnk from S6_TEMP_RNK)';
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from customerw_update   where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from person             where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from corps_acc          where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from corps              where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from customer_address   where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTBANK           where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTCOUNT          where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTOMER_REL       where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUST_NAL           where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from KL_CUSTOMER_PARAMS where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      execute immediate 'delete from RNK_REKV           where RNK in (select rnk from S6_TEMP_RNK)';
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from CUSTOMER_UPDATE    where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    commit;  -- ьюцхЄ яюьюцхЄ

    begin
      execute immediate 'delete from customer           where RNK in (select rnk from S6_TEMP_RNK)';
      p_open := p_open+SQL%rowcount;
    exception when OTHERS then
      bars_audit.error('drop_customerUF - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    begin
      execute immediate 'DROP TABLE S6_TEMP_RNK';
    exception when OTHERS then
      null;
    end;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_customerUF - err(37): '||sqlerrm||' - '||k.table_name||', '||k.constraint_name);
        p_code := p_code+1;
      end;
    end loop;

    commit;

--  recreate customer SEQUENCE

    select nvl(max(rnk),0)+1 into rnkmax_ from customer;

    execute immediate 'DROP SEQUENCE S_CUSTOMER';
    execute immediate 'CREATE SEQUENCE S_CUSTOMER
                       START WITH '||rnkmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_CUSTOMER TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_CUSTOMER

    sys.utl_recomp.recomp_serial('BARS');

    bars_alerter(1);

  end drop_customerUF;

--

  procedure drop_userUF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
--  fi3_   char(3);
    MFOg_  varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  execute immediate 'select substr(min(branch),-4,3)
--                     from   s6_uf_filial'
--                     into   fi3_;

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_userUF - err(0): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    for k in (SELECT s.id
              from   staff$base        s,
                     USERS_SKARB6_BARS u
              where  bc.extract_mfo(s.branch)=MFOg_ and
                     u.filial=p_filial              and
                     u.ubars=s.id)

    loop
      begin
        delete
        from   USERS_SKARB6_BARS
        where  kf=MFOg_   and
               ubars=k.id and
               filial=p_filial;
        BARS_USERADM.drop_user(k.id);
        delete
        from   staff$base
        where  id=k.id;
        p_open := p_open+SQL%rowcount;
        commit;
      exception when OTHERS then
        bars_audit.error('drop_userUF - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_userUF - err(2): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    bars_alerter(1);

  end drop_userUF;

--

  procedure load_uniF_ostc (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type     cur is ref cursor;
    cur_     cur;
    sql_     varchar2(4000);

    tt_      oper.TT%type      := '024';
    sk_      oper.SK%type      ;
    TIP_     accounts.TIP%type ;
    VOB_     oper.vob%type     := 6;
    REF_     oper.REF%type     ;
    DK_      oper.DK%type      ;
    NMST_    oper.NAM_A%type   ;
    NLST_    oper.NLSA%type    ;
    NMSS_    oper.NAM_A%type   ;
    S_       oper.S%type       ;
    SQ_      oper.SQ%type      ;
    NAZN_    oper.NAZN%type    := '╧хЁхтхфхээ  чрыш°ъє ч ';
    Isp_     oper.userid%type  := 20094;

    NLSS_    accounts.nls%type ;
    NLS_OLD_ accounts.nls%type ;
    KV_      accounts.kv%type  ;
    OST_     accounts.ostc%type;
    OSTQ_    accounts.ostq%type;

    c024_    number;
    pos_     accounts.pos%type ;
    accs_    accounts.acc%type ;
    daot_    date;
    f38_     char(1);

  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    toroot;

    update tts
    set    rang=100
    where  tt=tt_;
    commit;

    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    select count(1)
    into   c024_
    from   oper
    where  tt=tt_        and
           sos=5         and
           vdat=gl.bdate and
           userid=20094  and
           nazn like '╧хЁхтхфхээ  чрыш°ъє ч '||p_filial||'/%';

    if c024_>0 then
      bars_audit.error('load_uniF_ostc - err(0): яютЄюЁэр  чруЁєчър юёЄрЄъют эхтючьюцэр, эхюсїюфшь юЄърЄ ...');
      p_code := p_code+1;
    goto nozagruzka;
    end if;

    sql_:='select m.nls_bars         NLSS   ,
                  o.nls              NLS_OLD,
                  o.kv               KV     ,
                  abs(o.ostc)*100    OST    ,
                  abs(o.ostq)*100    OSTQ   ,
                  (sign(o.ostc)+1)/2 DK
           from   S6_UF_ALCOUT o,
                  S6_MIGRNLS   m
           where  o.nls=m.nls_fil             and
                  o.kv=m.kv                   and
                  m.filial='''||p_filial||''' and
                  o.ostc<>0';

    open cur_ for sql_;

    loop

      fetch cur_ into NLSS_   ,
                      NLS_OLD_,
                      KV_     ,
                      OST_    ,
                      OSTQ_   ,
                      DK_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        execute immediate 'select NLS_TRA
                           from   (select trim(bals)||''%'' LIK,
                                          KV                   ,
                                          to_char(transit)  NLS_TRA
                                   from   S6_UF_TRANSIT
                                   order  by length(trim(bals)) desc,
                                             trim(bals)             ,
                                             nvl(KV,0) desc)
                           where  '''||nls_old_||''' like LIK            and
                                  (nullif(KV,0) is null or '||kv_||'=KV) and
                                  rownum=1'
                           into   NLST_;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_uniF_ostc - err(1): ═х юяшёрэ т TRANSIT.DBF ёў╕Є-ЄЁрэчшЄ фы  '||p_filial||'/'||nls_old_||'('||KV_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
                WHEN OTHERS THEN
        if sqlcode=-904 then
          bars_audit.error('load_uniF_ostc - err(5): ёЄрЁр  ёЄЁєъЄєЁр TRANSIT.DBF '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        end if;
        bars_audit.error('load_uniF_ostc - err(6): '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      begin
        select trim(substr(nms,1,38)),
               daos
        into   NMST_,
               daot_
        from   accounts
        where  kv=KV_    and
               nls=NLST_ and
               dazs is null;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_uniF_ostc - err(2): ═х эрщфхэ шыш чръЁ√Є ёў╕Є-ЄЁрэчшЄ '||nlsT_||'('||KV_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      begin
        select trim(substr(nms,1,38)),
               tip                   ,
               pos                   ,
               acc
        into   NMSS_,
               TIP_ ,
               pos_ ,
               accs_
        from   accounts
        where  kv=KV_    and
               nls=NLSS_ and
               dazs is null;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_uniF_ostc - err(3): ═х эрщфхэ шыш чръЁ√Є ═╬┬█╔ ёў╕Є '||NLSS_||' фы  '||p_filial||'/'||nls_old_||'('||kv_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      if TIP_='KAS' then
        sk_ := 37; -- яюёых єЄюўэхэш  ╞шЄюьшЁр
      else
        sk_ := null;
      end if;

      S_  := ost_;
      sq_ := ostq_;

      if daot_>p_datx then
        update accounts
        set    daos=p_datx
        where  kv=KV_ and
               nls=NLST_;
      end if;

      if substr(NLSS_,1,4)='2625' then

        toroot;

        select substr(flags,39,1)
        into   f38_
        from   tts
        where  tt=tt_;

        update tts
        set    flags=substr(flags,1,38)||'1'||substr(flags,40)
        where  tt=tt_;

        commit;

        tokf;

        gl.pl_dat(p_datx);
        gl.amfo := f_ourmfo_g;

      end if;

      begin
        GL.REF(REF_);
        GL.IN_DOC2(REF_,  TT_,   VOB_, REF_, SYSDATE, GL.BDATE, DK_, KV_,
                   S_,    KV_,   S_,   sq_,  sk_,     GL.BDATE, GL.BDATE,
                   NMsT_, NLST_, gl.AMFO,
                   NMSS_, NLSS_, gl.AMFO,
                   NAZN_||p_filial||'/'||NLS_OLD_,
                   NULL, null, null, null, null, 1, null, ISP_);
        GL.PAYV(0, REF_, GL.BDATE, TT_, DK_, KV_, NLST_, S_, KV_, NLSS_, S_);
        GL.PAY (2, REF_, GL.BDATE);
        commit;
        p_open := p_open+1;
      EXCEPTION WHEN others THEN
        bars_audit.error('load_uniF_ostc - err(4): ╬°шсър юяырЄ√ '||nlsT_||'('||KV_||') --> '||NLSS_||'('||KV_||') эр ёєььє='||S_||' - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        rollback;
        p_code := p_code+1;
      end;

      if substr(NLSS_,1,4)='2625' then

        toroot;

        update tts
        set    flags=substr(flags,1,38)||f38_||substr(flags,40)
        where  tt=tt_;

        commit;

        tokf;

        gl.pl_dat(p_datx);
        gl.amfo := f_ourmfo_g;

      end if;

<<dalee>> null;

    end loop;
    close cur_;

    dbms_application_info.set_client_info('pereocenka');

    migraSK.pereocenka(p_code,'load_uniF_ostc - err',p_datx);

    dbms_application_info.set_client_info(' ');

<<nozagruzka>> null;

    toroot;

    update tts
    set    rang=null
    where  tt=tt_;
    commit;

    bars_alerter(1);

  end load_uniF_ostc;

--

  procedure drop_uniF_ostc (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

--  юЄърЄ фюъєьхэЄют яю ЁрчтюЁюЄє юёЄрЄъют

    toroot;

    update tts
    set    flags=substr(flags,1,38)||'1'||substr(flags,40)
    where  tt='BAK';
    commit;

    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    for k in (
              select ref
              from   oper
              where  tt='024'      and
                     sos=5         and
                     vdat=gl.bdate and
                     userid=20094  and
                     nazn like '╧хЁхтхфхээ  чрыш°ъє ч '||p_filial||'/%')
    loop
      FOR x IN (SELECT a.acc ,
                       o.fdat,
                       o.sq
                FROM   accounts a,
                       opldok   o
                WHERE  o.ref=k.ref AND
                       a.pos=2     AND
                       o.acc=a.acc)
      LOOP
        UPDATE saldob
        SET    dos=dos-x.sq,
               kos=kos-x.sq
        WHERE  acc=x.acc AND
               fdat=x.fdat;
      END LOOP;
      ful_bak(k.ref);
      bars_audit.info('drop_uniF_ostc: ful_bak '||k.ref);
      commit;
      p_open := p_open+1;
    end loop;

    toroot;

    update tts
    set    flags=substr(flags,1,38)||'0'||substr(flags,40)
    where  tt='BAK';
    commit;

    bars_alerter(1);

  end drop_uniF_ostc;

--

  procedure fin_deblockingUF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    l_rnk     number;
    blkk_     number;
    branch2_  varchar2(15);
    Job_      number;
    MFOg_     varchar2(12);
  begin

    bars_alerter(0);

    p_open   := 0;
    p_code   := 0;
    branch2_ := null;

    MFOg_ := f_ourmfo_g;

--  ъюЁЁхъЄшЁютър accounts яю saldoa, saldob (ўхЁхч чрфрэшх)

    BEGIN
      DBMS_JOB.SUBMIT (job       => Job_               ,
                       what      => 'correct_accounts;',
                       next_date => sysdate            ,
                       interval  => null               ,
                       no_parse  => FALSE);
    exception when others then
      bars_audit.error('fin_deblockingUF - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    END;

    tokf;

--  ЁрчсыюъшЁютър ёўхЄют: blkk ш blkd ё 99 эр 0

    for k in (select nls_bars,
                     nls_fil ,
                     kv
              from   S6_MIGRNLS
              where  filial=p_filial)
    loop
--    begin
--      execute immediate 'select isescrow
--                         from   s6_hi_'||p_filial||'_bac
--                         where  code='''||k.nls_fil||''' and
--                                to_number(curr)='||to_char(k.kv)
--                         into   blkk_;
--      exception when others then
      blkk_ := 0;
--      end;
      update accounts
      set    blkk=blkk_*99,
             blkd=0
      where  nls=k.nls_bars and
             kv=k.kv;
      p_open := p_open+1;
      if branch2_ is null then
        begin
          select substr(branch,1,15)
          into   branch2_
          from   accounts
          where  nls=k.nls_bars and
                 kv=k.kv;
        exception when no_data_found then
          null;
        end;
      end if;
    end loop;
    commit;

    toroot;

--  єфрыхэшх ╠╘╬ Їшышрыр шч ЄрсышЎ LKL_RRP ш BANK_ACC

    tokf;
    begin
      delete
      from   lkl_rrp
      where  mfo=p_filial;
      commit;
    exception when OTHERS then
      rollback;
      bars_audit.error('fin_deblockingUF - err(1) for delete from lkl_rrp: '||sqlerrm);
    end;
    begin
      delete
      from   bank_acc
      where  mfo=p_filial;
      commit;
    exception when OTHERS then
      rollback;
      bars_audit.error('fin_deblockingUF - err(2) for delete from bank_acc: '||sqlerrm);
    end;
    toroot;

--  юсэютыхэшх ьрЄхЁшрышчютрээюую яЁхфёЄртыхэш 

    NERUXOMI;

--  фюсртър RNK ш ярЁрьхЄЁр ё RNK фы  сЁрэўхщ

    begin
      for c in (select branch,
                       name
                from   branch
                where  branch like '/'||MFOg_||'/%'
                order  by branch)
      loop
        begin
          bc.subst_branch(c.branch);
          begin
            select rnk
            into   l_rnk
            from   customer
            where  branch=c.branch and
                   notes='BRANCH<->RNK';
          exception when no_data_found then

            execute immediate 'select s_customer.nextval from dual' into l_rnk;

            insert
            into   customer (rnk      ,
                             tgr      ,
                             custtype ,
                             codcagent,
                             okpo     ,
                             country  ,
                             nmk      ,
                             nmkk     ,
                             notes    ,
                             ise      ,
                             fs       ,
                             oe       ,
                             ved      ,
                             sed      ,
                             k050     ,
                             branch)
                     values (l_rnk                    ,
                             1                        ,
                             1                        ,
                             1                        ,
                             f_ourokpo                ,
                             804                      ,
                             trim(substr(c.name,1,70)),
                             trim(substr(c.name,1,38)),
                             'BRANCH<->RNK'           ,
                             '12201'                  ,
                             '31'                     ,
                             '96130'                  ,
                             '65120'                  ,
                             '80  '                   ,
                             '610'                    ,
                             c.branch);
          end;

          begin
            update branch_parameters
            set    val=to_char(l_rnk)
            where  tag='RNK' and
                   branch=c.branch;

            if SQL%ROWCOUNT=0 then
             insert
             into   branch_parameters (branch,
                                       tag   ,
                                       val)
                               values (c.branch,
                                       'RNK'   ,
                                       to_char(l_rnk));
            end if;
          end;
        exception when others then
          bc.set_context;
        end;
        bc.set_context;
      end loop;
    end;

    commit;

--  уЁштэр яю тёхь сЁрэўрь т cur_rates$base

    migraSK.grn11tocurrates;

--  юЄъЁ√Єшх ёўхЄют %% Ёрёїюфют

    migraSK.open_proc_drm('fin_deblockingUF - ',p_open,p_code,0,branch2_);

    bars_alerter(1);

  end fin_deblockingUF;

--

  procedure open_3800_UF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    BRANCH2_  varchar2(15);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

/*  ╬ЄъЁ√Є№ эют√х 3800/3801 сЁрэў2, чряюыэ   юфэютЁхьхээю VP_LIST.
    ╧Ёхфырур■ ьрёъє 3800_┴┴┴┴╬╬,  3801_┴┴┴┴╬╬┬┬┬,
    ┴┴┴┴ - ъюф сЁрэўр
    ╬╬   - ъюф ╬┴22
    ┬┬┬  - ъюф тры
*/
    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    sql_:='select distinct
                  substr(branch,1,15) BRANCH2
           from   S6_UF_FILIAL';

    open cur_ for sql_;

    loop

      fetch cur_ into BRANCH2_;
      exit when cur_%notfound;

      -- kv (959,961,962) + ╬┴22('09')
      begin
        xM_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_UF - err(1): ╬°шсър xM_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

      -- kv not (959,961,962) + ╬┴22('03','10','16','20')
      begin
        xV_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_UF - err(2): ╬°шсър xV_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

      -- ╧хЁхсЁюёшЄ№ юёЄрЄъш ш чръЁ√Є№ ёЄрЁ х ышЎ.ёўхЄр 3800 ш 3801
      begin
        xZ_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_UF - err(3): ╬°шсър xZ_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

    end loop;

--  toroot;

    bars_alerter(1);

  end open_3800_UF;

--

  procedure open_proc_drm (p_errmask in varchar2, p_open in out number, p_code in out number, p_bal number, p_branch in varchar2 default null)
  is
    --
    -- Єшя√ фрээ√ї
    --
    type       t_branchrec is record (branch_id   branch.branch%type,
                                      branch_mfo  banks.mfo%type    ,
                                      branch_prnt branch.branch%type,
                                      branch_num  varchar2(3)       ,
                                      branch_rnk  customer.rnk%type);
    type       t_branchdata is table of t_branchrec;
    --
    -- ъюэёЄрэЄ√
    --
    c_sourid   constant number(1)  := 4;
    c_baseval  constant number(3)  := 980;
    c_accgrp   constant number(38) := 26;
    c_acctype  constant char(3)    := 'ODB';
    c_accuser  constant number(38) := gl.auid;
    --
    -- яхЁхьхээ√х
    --
    l_branch   t_branchdata;
    l_accid    accounts.acc%type;
    l_accnum   accounts.nls%type;
    l_accname  accounts.nms%type;
    l_accmask  accounts.nls%type;
    l_branch2  varchar2(16);

  begin

--  p_open := 0;
--  p_code := 0;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 disable';
    exception when OTHERS then
      null;
    end;

    l_branch2 := nvl(p_branch,'/'||f_ourmfo_g||'/______/')||'%';

    bars_context.set_context;

    select branch,
           mfo   ,
           upp   ,
           null  ,
           null
    bulk   collect
    into   l_branch
    from   (select branch                              ,
                   substr(branch,1,15)              upp,
                   bars_context.extract_mfo(branch) mfo
            from   branch
            where  branch like l_branch2)
    order  by 2,1;

    for i in 1..l_branch.count
    loop

      bars_audit.trace(p_errmask||'info(4): '||l_branch(i).branch_id||'...');

--    ъюф ALEGRO ЁюфшЄхы№ёъюую яюфЁрчфхыхэш  фы  ЇюЁьшЁютрэш  ╣ ёўхЄр
      l_branch(i).branch_num := substr(migraSK.get_alegrocode(l_branch(i).branch_prnt),1,3);
      if l_branch(i).branch_num is null then
        bars_audit.error(p_errmask||'err(3): эх юяЁхфхы╕э ъюф ALEGRO (яюых PODR шч ASVO_FFF_PODR) фы  '||l_branch(i).branch_prnt);
        p_code := p_code+1;
      end if;

--    Ёху.╣ ъышхэЄр-ЁюфшЄхы№ёъюую яюфЁрчфхыхэш  фы  юЄъЁ√Єш  ёў╕Єр
      begin
        select rnk
        into   l_branch(i).branch_rnk
        from   customer
        where  to_char(rnk)=branch_edit.getbranchparams(l_branch(i).branch_prnt,'RNK') and
               custtype in (1,2)                                                       and
               date_off is null;
      exception when no_data_found then
        bars_audit.error(p_errmask||'err(4): эх эрщфхэ ╨═╩ ЁюфшЄхы№ёъюую яюфЁрчфхыхэш  фы  юЄъЁ√Єш  ёў╕Єр');
        p_code := p_code+1;
                when too_many_rows then
        bars_audit.error(p_errmask||'err(5): эрщфхэю эхёъюы№ъю ╨═╩ ЁюфшЄхы№ёъюую яюфЁрчфхыхэш  фы  юЄъЁ√Єш  ёў╕Єр');
        p_code := p_code+1;
      end;

      if l_branch(i).branch_rnk is not null and
         l_branch(i).branch_num is not null then

        bars_audit.trace(p_errmask||'info(5): ALEGRO ╣ '||
                         l_branch(i).branch_num||' '||'ъышхэЄ ╣ '||
                         to_char(l_branch(i).branch_rnk));

--       bars_context.subst_branch(l_branch(i).branch_id);
         bars_context.subst_branch(l_branch(i).branch_prnt);
         for exp in (select 0                          code,
                            v.vidd                         ,
                            v.kv                           ,
                            v.tip_ost                      ,
                            v.bsd                          ,
                            v.bsn                          ,
                            (case when v.bsd='2620' then
                               '7040'
                                  when v.bsd='3320' then
                               '7052'
                                  when v.bsd='3330' then
                               '7053'
                             else
                               '7041'
                             end)                      nbs ,
                            '╧ЁюЎ.тшЄЁ. '||v.type_name name,
                            (select substr(p.val,1,2)
                             from   dpt_vidd_params p
                             where  p.vidd=v.vidd and
                                    p.tag='DB7_OB22')  ob22
                     from   dpt_vidd v
                     where  not exists (select 1
                                        from   proc_dr$base p
                                        where  p.branch=l_branch(i).branch_id and
                                               p.nbs=v.bsd                    and
                                               p.rezid=v.vidd                 and
                                               p.sour=c_sourid                and
                                               decode(v.kv,c_baseval,p.g67,p.v67) is not null)
                     union  all
                     select 1                                             code,
                            v.vidd                                            ,
                            v.kv                                              ,
                            v.tip_ost                                         ,
                            v.bsd                                             ,
                            v.bsn                                             ,
                            (case when v.bsd='2620' then
                               '7040'
                                  when v.bsd='3320' then
                               '7052'
                                  when v.bsd='3330' then
                               '7053'
                             else
                               '7041'
                             end)                                         nbs ,
                            '╧ЁюЎ.тшЄЁ.яЁш фюёЄЁюъ.Ёюч│Ёт. '||v.type_name name,
                            (select substr(p.val,1,2)
                             from   dpt_vidd_params p
                             where  p.vidd=v.vidd and
                                    p.tag='KR7_OB22')                     ob22
                     from   dpt_vidd v
                     where  not exists (select 1
                                        from   proc_dr$base p
                                        where  p.branch=l_branch(i).branch_id and
                                               p.nbs=v.bsd                    and
                                               p.rezid=v.vidd                 and
                                               p.sour=c_sourid                and
                                               decode(v.kv,c_baseval,p.g67n,p.v67n) is not null)
                     order  by 2,1)
         loop

           if exp.ob22 is not null then

              l_accid   := null;
              l_accnum  := null;
              l_accname := null;

-- (old)      ьрёър ёўхЄр NBS + 0 + 9 + ALEGRO(-2,2) + OB22(3)
--            l_accmask := exp.nbs||'09'||l_branch(i).branch_num||migraSK.get_numob22(exp.ob22);

-- (new)      ьрёър ёўхЄр NBS + 0 + OB22(3) + ALEGRO(-3,3)
              l_accmask := exp.nbs||'0'||lpad(migraSK.get_numob22(exp.ob22),3,'0')||lpad(l_branch(i).branch_num,3,'0');

              l_accmask := vkrzn(substr(l_branch(i).branch_mfo,1,5),l_accmask);

--            яюшёъ ёўхЄр Ёрёїюфют яю proc_dr$base фы  ЁюфшЄ.яюфЁрчфхыхэш 
              if l_branch(i).branch_id != l_branch(i).branch_prnt then
                begin
                select a.nls
                  into   l_accnum
                  from   proc_dr$base  p,
                         accounts      a,
                         specparam_int s
                  where  p.nbs=exp.bsd                                           and
                         p.sour=c_sourid                                         and
                         p.rezid=exp.vidd                                        and
                         p.branch=l_branch(i).branch_prnt                        and
                         a.acc=s.acc                                             and
                         s.ob22=exp.ob22                                         and
                         a.nbs=exp.nbs                                           and
                         a.kv=c_baseval                                          and
                         a.branch=l_branch(i).branch_prnt                        and
                         a.nls=(case when exp.code=0 then p.g67 else p.g67n end) and
                         a.dazs is null                                          and
                         rownum<2;
                  bars_audit.trace(p_errmask||'info(6): эрщфхэ ёў╕Є яю proc_dr$base - '||l_accnum);
                exception when no_data_found then
                  l_accnum := null;
                  end;
              end if;

--            яюшёъ ёўхЄр Ёрёїюфют яю сры.ёўхЄє ш ╬┴22 фы  ЁюфшЄ.яюфЁрчфхыхэш 
              if l_accnum is null then
                migraSK.get_account(p_errmask => p_errmask              ,
                                    p_ob22    => exp.ob22               ,
                                    p_branch  => l_branch(i).branch_prnt,
                                    p_nbs     => exp.nbs                ,
                                    p_kv      => exp.kv                 ,
                                    p_accmask => l_accmask              ,
                                    p_accnum  => l_accnum);
              end if;

              if l_accnum is not null then
                bars_audit.trace(p_errmask||'info(7): эрщфхэ ёў╕Є - '||l_accnum);
              else
                if l_branch(i).branch_id!=l_branch(i).branch_prnt then
/*                фрээр  ю°шсър т√фрхЄё  Єюы№ъю фы  юЄфхыхэшщ 3-ую єЁютэ  т Єюь
                  ёыєўрх, ъюуфр яЁютрышышё№ юсх яюя√Єъш эрщЄш ёў╕Є Ёрёїюфют фы 
                  фрээюую тшфр тъырфр т ЁюфшЄхы№ёъюь яюфЁрчфхыхэшш 2-ую єЁютэ .
                  ╧юя√Єър ╣ 1. ╤яЁртюўэшъ proc_dr$base эх(ъюЁЁхъЄэю) чряюыэхэ
                  фы  фрээюую тшфр тъырфр ш ЁюфшЄхы№ёъюую яюфЁрчфхыхэш . ╥.х.
                  хёыш т proc_dr$base чрфрЄ№ Їшы№ЄЁ
                    nbs=exp.bsd    and
                    sour=4         and
                    rezid=exp.vidd and
                    branch=l_branch(i).branch_prnt, Єю
                  - эх сєфхЄ юЄюсЁрэю эш юфэющ ёЄЁюъш
                  шыш
                  - яюых g67 (exp.code=0) / g67n (exp.code=1) эх чряюыэхэю
                  шыш
                  - т яюых g67 (exp.code=0) / g67n (exp.code=1) сєфхЄ єърчрэ
                    ёў╕Є, эю фы  эхую ═┼ т√яюыэ хЄё  їюЄ  с√ юфэю шч єёыютшщ:
                        a) ёў╕Є эх чръЁ√Є
                        b) ёў╕Є юЄъЁ√Є т ЁюфшЄхы№ёъюь яюфЁрчфхыхэшш
                        c) ёў╕Є юЄъЁ√Є т эрЎ.тры■Єх
                        d) сры.ёў╕Є ёў╕Єр = exp.nbs
                        e) фы  ёў╕Єр чряюыэхэ OB22
                        f) OB22 ёўхЄр = exp.ob22
                  ╧юя√Єър ╣ 2. ┬ ьрёёштх юЄъЁ√Є√ї (!) т ЁюфшЄхы№ёъюь
                  яюфЁрчфхыхэшш(!) ёўхЄют т эрЎ.тры■Єх:
                  - эхЄ эш юфэюую ёў╕Єр ё срырэёют√ь ёў╕Єюь exp.nbs ш
                    OB22 = exp.ob22;
                  - хёЄ№ эхёъюы№ъю ёўхЄют ё срырэёют√ь ёў╕Єюь exp.nbs ш
                    OB22 = exp.ob22, эю эш юфшэ шч эшї эх яюфїюфшЄ эш яю ьрёъх
                    ёў╕Єр, эш яю "їтюёЄє" ёў╕Єр (фюыцхэ чрърэўштрЄ№ё  эр ъюф
                    тры■Є√ тшфр тъырфр).

                  ╨х°хэшх: ¤Єр ю°шсър - Єюы№ъю ёыхфёЄтшх ю°шсъш яЁш чряюыэхэшш
                  ёяЁртюўэшър фы  ЁюфшЄхы№ёъюую яюфЁрчфхыхэш , ъюЄюЁє■ ш эєцэю              exp.nbs
                  шёяЁртшЄ№!
*/
                  bars_audit.error(p_errmask||'err(6): эх эрщфхэ ёў╕Є Ёрёїюфют'                                                                  ||Chr(13)||Chr(10)||
                                              '(vidd='||exp.vidd||', ob22='||exp.ob22||', nbs='||exp.nbs||', branch='||l_branch(i).branch_id||')'||Chr(13)||Chr(10)||
                                              'фы  тшфр тъырфр vidd т ЁюфшЄхы№ёъюь яюфЁрчфхыхэшш 2-ую єЁютэ '                                    ||Chr(13)||Chr(10)||
                                              '(эхюсїюфшью шёяЁртшЄ№ ю°шсъє чряюыэхэш  ёяЁртюўэшър фы  ЁюфшЄхы№ёъюую яюфЁрчфхыхэш )');
                  p_code := p_code+1;
                else
                  bars_audit.trace(p_errmask||'info(8): эх эрщфхэ ёў╕Є');
                end if;
              end if;

--            юЄъЁ√Єшх ёўхЄр фы  яюфЁрчфхыхэшщ 1-ую ш 2-ую єЁютэ 
              if l_accnum is null and
                l_branch(i).branch_id=l_branch(i).branch_prnt then

                l_accnum  := l_accmask;
                l_accname := trim(substr(exp.name,1,70));

                migraSK.open_account(p_errmask => p_errmask             ,
                                     p_mfo     => l_branch(i).branch_mfo,
                                     p_branch  => l_branch(i).branch_id ,
                                     p_accnum  => l_accnum              ,
                                     p_acccur  => c_baseval             ,
                                     p_accname => l_accname             ,
                                     p_custid  => l_branch(i).branch_rnk,
                                     p_ob22    => exp.ob22              ,
                                     p_accid   => l_accid               ,
                                     p_opena   => p_open                ,
                                     p_codea   => p_code);

                if l_accid is null then
                  l_accnum := null;
                end if;
              end if; -- юЄъЁ√Єшх ёўхЄр фы  яюфЁрчфхыхэшщ 1-ую ш 2-ую єЁютэ 

              if l_accnum is not null then
                migraSK.fill_procdr(p_errmask => p_errmask             ,
                                    p_bsd     => exp.bsd               ,
                                    p_bsn     => exp.bsn               ,
                                    p_rezid   => exp.vidd              ,
                                    p_io      => exp.tip_ost           ,
                                    p_kf      => l_branch(i).branch_mfo,
                                    p_branch  => l_branch(i).branch_id ,
                                    p_code    => exp.code              ,
                                    p_accnum  => l_accnum);
              end if;

           end if; -- ob22 is not null

         end loop; -- exp

      end if;

      commit;

    end loop; -- branch_loop

    bars_context.set_context;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 disable';
    exception when OTHERS then
      null;
    end;

  exception when others then

    bars_context.set_context;
    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 disable';
    exception when OTHERS then
      null;
    end;
    bars_audit.error('open_proc_dr - err(7): '||sqlerrm||' '||dbms_utility.format_error_backtrace);
    p_code := p_code+1;

  end open_proc_drm;

--

  --
  -- тэєЄЁ.ЇєэъЎш  яюшёър ёўхЄр яю сры.ёўхЄє ш ╬┴22 фы  чрфрээюую яюфЁрчфхыхэш 
  --
  procedure get_account
    (p_errmask in varchar2            ,
     p_ob22    in char                ,  -- ярЁрьхЄЁ ╬┴22
     p_branch  in accounts.branch%type,  -- яюфЁрчфхыхэшх
     p_nbs     in accounts.nbs%type   ,  -- сры.ёўхЄ
     p_kv      in accounts.kv%type    ,  -- тры■Єр
     p_accmask in accounts.nls%type   ,  -- ьрёър ёўхЄр
     p_accnum out accounts.nls%type)     -- эюьхЁ ёўхЄр
  is
    l_attempt  number(1);
    c_baseval  constant number(3) := 980;
  begin

    l_attempt := 1;

    begin
      select a.nls
      into   p_accnum
      from   accounts      a,
             specparam_int s
      where  a.acc=s.acc       and
             s.ob22=p_ob22     and
             a.nbs=p_nbs       and
             a.kv=c_baseval    and
             a.branch=p_branch and
             a.dazs is null;
    exception when no_data_found then
      p_accnum := null;
              when too_many_rows then
      l_attempt := 2;
    end;

    if l_attempt=2 then
--    яюшёъ яю ьрёъх ёўхЄр
      begin
        select a.nls
        into   p_accnum
        from   accounts      a,
               specparam_int s
        where  a.acc=s.acc       and
               s.ob22=p_ob22     and
               a.nbs=p_nbs       and
               a.kv=c_baseval    and
               a.branch=p_branch and
               a.dazs is null    and
               a.nls=p_accmask;
      exception when no_data_found or too_many_rows then
        l_attempt := 3;
      end;
    end if;

    if l_attempt=3 then
--    яюшёъ яю їтюёЄє ёўхЄр
      begin
        select a.nls
        into   p_accnum
        from   accounts      a,
               specparam_int s
        where  a.acc=s.acc       and
               s.ob22=p_ob22     and
               a.nbs=p_nbs       and
               a.kv=c_baseval    and
               a.branch=p_branch and
               a.dazs is null    and
               substr(a.nls,-length(to_char(p_kv)))=to_char(p_kv);
      exception
        when no_data_found or too_many_rows then
          l_attempt := 4;
      end;
    end if;

    if l_attempt=4 then
--    яюшёъ ёрьюую "ётхцхую" ёўхЄр
      select max(nls)
      into   p_accnum
      from   (select (case
                      when nvl(a.dapp,a.daos)=max(nvl(a.dapp,a.daos))
                           over (partition by a.branch) then
                        a.nls
                      else
                        null
                      end) nls
              from   accounts      a,
                     specparam_int s
              where  a.acc=s.acc       and
                     s.ob22=p_ob22     and
                     a.branch=p_branch and
                     a.nbs= p_nbs      and
                     a.kv=c_baseval    and
                     a.dazs is null    and
                     substr(a.nls,-length(to_char(p_kv)))!=to_char(p_kv));
    end if;
    bars_audit.trace(p_errmask||'info(1): get - чръюэўхэ яюшёъ эр яюя√Єъх ╣ '||to_char(l_attempt));

  end get_account;

--

  --
  -- тэєЄЁ.яЁюЎхфєЁр юЄъЁ√Єш  ёўхЄр ш чряюыэхэш  ярЁрьхЄЁр OB22
  --
  procedure open_account
   (p_errmask in     varchar2            ,
    p_mfo     in     accounts.kf%type    ,
    p_branch  in     accounts.branch%type,
    p_accnum  in     accounts.nls%type   ,
    p_acccur  in     accounts.kv%type    ,
    p_accname in     accounts.nms%type   ,
    p_custid  in     accounts.rnk%type   ,
    p_ob22    in     varchar2            ,
    p_accid      out accounts.acc%type   ,
    p_opena   in out number              ,
    p_codea   in out number)
  is
    l_accid    accounts.acc%type;
    l_branch   accounts.branch%type;
    l_dazs     accounts.dazs%type;
    l_tmp      number;
    c_accgrp   constant number(38) := 26;
    c_acctype  constant char(3)    := 'ODB';
    c_accuser  constant number(38) := gl.auid;
  begin

    begin

      select acc   ,
             branch,
             dazs
      into   l_accid ,
             l_branch,
             l_dazs
      from   accounts
      where  nls=p_accnum and
             kv=p_acccur  and
             kf=p_mfo;

/*    ю°шсъш ╣1 ш ╣3 т√фр■Єё  Єюы№ъю яЁш чряюыэхэшш proc_dr$base фы  юЄфхыхэшщ
      2-ую єЁютэ  т Єюь ёыєўрх, ъюуфр яюёых 2-ї эхєёях°э√ї яюя√Єюъ эрщЄш ёў╕Є
      Ёрёїюфют фы  фрээюую тшфр тъырфр т юЄфхыхэшш 2-ую єЁютэ  (ёь. ъюььхэЄрЁшщ
      т√°х), ь√ эр°ыш ёў╕Є, эюьхЁ ъюЄюЁюую = ЁрёёўшЄрээющ Ёрэхх ьрёъх, эю ¤ЄюЄ
      ёў╕Є ышсю чръЁ√Є, ышсю юЄъЁ√Є т фЁєуюь яюфЁрчфхыхэшш
*/
      if    l_dazs is not null then
        bars_audit.error(p_errmask||'err(1): open - ёў╕Є '||p_accnum||' чръЁ√Є, эхюсїюфшью "ЁхрэшьшЁютрЄ№" ¤ЄюЄ ёў╕Є шыш юЄъЁ√Є№ фЁєующ, яюфюсэ√щ ¤Єюьє');
        p_codea := p_codea+1;
        p_accid := null;
      elsif p_branch=l_branch then
        bars_audit.trace(p_errmask||'info(2): open - ёў╕Є '||p_accnum||' эрщфхэ');
        p_opena := p_opena+1;
        p_accid := l_accid;
      else
        bars_audit.error(p_errmask||'err(2): open - ёў╕Є '||p_accnum||' ўєцющ - '||l_branch||', эхюсїюфшью ¤Єюьє ёў╕Єє єёЄрэютшЄ№ яЁртшы№э√щ сЁрэў');
        p_codea := p_codea+1;
        p_accid := null;
      end if;

    exception when no_data_found then
      op_reg_exfl(99       ,
                  0        ,
                  0        ,
                  c_accgrp ,
                  l_tmp    ,
                  p_custid ,
                  p_accnum ,
                  p_acccur ,
                  p_accname,
                  c_acctype,
                  c_accuser,
                  l_accid  ,
                  '1'      ,
                  null     ,
                  null     ,
                  null     ,
                  null     ,
                  null     ,
                  null     ,
                  null     ,
                  null     ,
                  null     ,
                  null     ,
                  null     ,
                  p_branch ,
                  null     ,
                  0);
      p_opena := p_opena+1;
      p_accid := l_accid;
      bars_audit.trace(p_errmask||'info(3): open - ёў╕Є '||p_accnum||' юЄъЁ√Є');
    end;

    if p_accid is not null then
      begin
        insert
        into   specparam_int (acc,
                              ob22)
                      values (p_accid,
                              p_ob22);
      exception when dup_val_on_index then
        update specparam_int
        set    ob22=p_ob22
        where  ob22 is null and
               acc=p_accid;
      end;
    end if;

  end open_account;

--

  --
  -- тэєЄЁ.яЁюЎхфєЁр чряюыэхэш  ёяЁ-ър PROC_DR$BASE
  --
  procedure fill_procdr
   (p_errmask in varchar2                ,
    p_bsd     in proc_dr$base.nbs%type   ,
    p_bsn     in proc_dr$base.nbsn%type  ,
    p_rezid   in proc_dr$base.rezid%type ,
    p_io      in proc_dr$base.io%type    ,
    p_kf      in proc_dr$base.kf%type    ,
    p_branch  in proc_dr$base.branch%type,
    p_code    in number                  ,
    p_accnum  in proc_dr$base.g67%type)
  is
    c_sourid  constant number(1) := 4;
  begin
    begin
      insert
      into   proc_dr$base (nbs   ,
                           sour  ,
                           rezid ,
                           branch,
                           nbsn  ,
                           io    ,
                           kf    ,
                           g67   ,
                           v67   ,
                           g67n  ,
                           v67n)
                   values  (p_bsd                                           ,
                            c_sourid                                        ,
                            p_rezid                                         ,
                            p_branch                                        ,
                            p_bsn                                           ,
                            p_io                                            ,
                            p_kf                                            ,
                            (case when p_code=0 then p_accnum else null end),
                            (case when p_code=0 then p_accnum else null end),
                            (case when p_code=1 then p_accnum else null end),
                            (case when p_code=1 then p_accnum else null end));
    exception when dup_val_on_index then
      update proc_dr$base
      set    g67 =(case when p_code=0 then p_accnum else g67  end),
             v67 =(case when p_code=0 then p_accnum else v67  end),
             g67n=(case when p_code=1 then p_accnum else g67n end),
             v67n=(case when p_code=1 then p_accnum else v67n end)
      where  nbs=p_bsd     and
             sour=c_sourid and
             rezid=p_rezid and
             branch=p_branch;
    end;
  end fill_procdr;

--

  --
  -- тэєЄЁ.ЇєэъЎш  юяЁхфхыхэш  ъюфр ALEGRO фы  чрфрээюую яюфЁрчфхыхэш 
  --
  function get_alegrocode (p_branch in branch.branch%type) return varchar2
  is
    l_code  varchar2(3);
  begin
    begin
      select substr(lpad(trim(podr),3,'0'),-3)
      into   l_code
      from   asvo_fff_podr
      where  substr(branch,1,15)=p_branch and
             rownum<2;
    exception when no_data_found then
      l_code := null;
    end;
    return l_code;
  end get_alegrocode;

--

  --
  -- тэєЄЁ.ЇєэъЎш  юяЁхфхыхэш  ўшёы.чэрўхэш  OB22
  --
  function get_numob22 (p_ob22 in char) return varchar2
  is
    l_result  varchar2(3);
    l_tmp     number;
  begin
    begin
      l_result := substr('00'||to_char(to_number(p_ob22)),-2);
    exception when value_error then
      l_tmp := ascii(substr(p_ob22,1,1));
      if l_tmp>=65 then
        l_result := substr('00'||to_char(l_tmp-55),-2);
      else
        l_result := substr(p_ob22,1,1);
      end if;
      l_tmp := ascii(substr(p_ob22,2,1));
      if l_tmp>=65 then
        l_result := l_result||substr('00'||to_char(l_tmp-55),-2);
      else
        l_result := l_result||substr(p_ob22,2,1);
      end if;
    end;
    return l_result;
  end get_numob22;

--

  function valid_string (p_str in varchar2) return varchar2
  is
    ret_  varchar2(4096);
    s_    char(1);
  begin
    ret_ := '';
    for i in 1..length(p_str)
    loop
      s_:=substr(p_str,i,1);
      if (s_>='0' and s_<='9') or
         (s_>='a' and s_<='z') or
         (s_>='A' and s_<='Z') then
        ret_:=ret_||s_;
      end if;
    end loop;
    return ret_;
  end valid_string;

--

  function valid_symbol (p_str in varchar2) return varchar2
  is
    ret_  varchar2(4096);
  begin
    ret_ := replace(p_str,chr(0) );
    ret_ := replace(ret_ ,chr(1) );
    ret_ := replace(ret_ ,chr(2) );
    ret_ := replace(ret_ ,chr(3) );
    ret_ := replace(ret_ ,chr(4) );
    ret_ := replace(ret_ ,chr(5) );
    ret_ := replace(ret_ ,chr(6) );
    ret_ := replace(ret_ ,chr(7) );
    ret_ := replace(ret_ ,chr(8) );
    ret_ := replace(ret_ ,chr(9) );
    ret_ := replace(ret_ ,chr(10));
    ret_ := replace(ret_ ,chr(11));
    ret_ := replace(ret_ ,chr(12));
    ret_ := replace(ret_ ,chr(13));
    ret_ := replace(ret_ ,chr(14));
    ret_ := replace(ret_ ,chr(15));
    ret_ := replace(ret_ ,chr(16));
    ret_ := replace(ret_ ,chr(17));
    ret_ := replace(ret_ ,chr(18));
    ret_ := replace(ret_ ,chr(19));
    ret_ := replace(ret_ ,chr(20));
    ret_ := replace(ret_ ,chr(21));
    ret_ := replace(ret_ ,chr(22));
    ret_ := replace(ret_ ,chr(23));
    ret_ := replace(ret_ ,chr(24));
    ret_ := replace(ret_ ,chr(25));
    ret_ := replace(ret_ ,chr(26));
    ret_ := replace(ret_ ,chr(27));
    ret_ := replace(ret_ ,chr(28));
    ret_ := replace(ret_ ,chr(29));
    ret_ := replace(ret_ ,chr(30));
    return  replace(ret_ ,chr(31));

  end valid_symbol;

--

  function kodobl (p_mfo in varchar2) return char
  is
    ret_  char(2);
  begin
--  юЄъЁ√трхь√х USER√ ъюфшЁє■Єё  U17_..., (17 - ╨ютэю)
--  эрфю чрьхэ Є№ 17 эр ъюф ьшуЁшЁє■∙хщ юсырёЄш
--  фы  ¤Єюую шёяюы№чєхЄё  эютр  ЇєэъЎш  migraSK.kodobl
    if    p_mfo='333368' then -- ╨ютэю
      ret_ := '17';
    elsif p_mfo='303398' then -- ╦єЎъ
      ret_ := '02';
    elsif p_mfo='311647' then -- ╞шЄюьшЁ
      ret_ := '05';
    elsif p_mfo='315784' then -- ╒ьхы№эшЎъшщ
      ret_ := '22';
    elsif p_mfo='324805' then -- ╩Ё√ь
      ret_ := '11';
    elsif p_mfo='302076' then -- ┬шээшЎр
      ret_ := '01';
    elsif p_mfo='305482' then -- ─эхяЁюяхЄЁютёъ
      ret_ := '03';
    elsif p_mfo='335106' then -- ─юэхЎъ
      ret_ := '04';
    elsif p_mfo='312356' then -- ╙цуюЁюф
      ret_ := '06';
    elsif p_mfo='313957' then -- ╟ряюЁюц№х
      ret_ := '07';
    elsif p_mfo='336503' then -- ╚трэю-╘Ёрэъютёъ
      ret_ := '08';
    elsif p_mfo='323475' then -- ╩шЁютюуЁрф
      ret_ := '10';
    elsif p_mfo='304665' then -- ╦єурэёъ
      ret_ := '12';
    elsif p_mfo='325796' then -- ╦№тют
      ret_ := '13';
    elsif p_mfo='326461' then -- ═шъюырхт
      ret_ := '14';
    elsif p_mfo='328845' then -- ╬фхёёр
      ret_ := '15';
    elsif p_mfo='388142' then -- └ЁЎ√ч ╬фхёёъющ
      ret_ := '95';
    elsif p_mfo='331467' then -- ╧юыЄртр
      ret_ := '16';
    elsif p_mfo='337568' then -- ╤єь√
      ret_ := '18';
    elsif p_mfo='338545' then -- ╥хЁэюяюы№
      ret_ := '19';
    elsif p_mfo='351823' then -- ╒рЁ№ъют
      ret_ := '20';
    elsif p_mfo='352457' then -- ╒хЁёюэ
      ret_ := '21';
    elsif p_mfo='354507' then -- ╫хЁърёё√
      ret_ := '23';
    elsif p_mfo='353553' then -- ╫хЁэшуют
      ret_ := '25';
    elsif p_mfo='356334' then -- ╫хЁэютЎ√
      ret_ := '24';
    elsif p_mfo='322669' then -- ╩шхт ш юсырёЄ№
      ret_ := '26';

--  ═└─╨└

    elsif p_mfo='302355' then -- ╘▓╦▓▀ └╩┴ "═└─╨└" ╙ ╠. ┬▓══╚╓▓
      ret_ := '01';
    elsif p_mfo='303525' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└" ╦╙╓▄╩┼ ╨┼├.╙╧╨└┬.
      ret_ := '02';
    elsif p_mfo='306674' then -- ╘-▀ ╩╚п┬╤. └╩┴ "═└─╨└" ┬ ╠. ╧└┬╦╬├╨└─▓
      ret_ := '28';
    elsif p_mfo='306016' then -- ╘▓╦▓▀ ┬└╥ ╩┴"═└─╨└"─═▓╧╨╬╧┼╥╨╬┬╤▄╩┼ ╨╙
      ret_ := '03';
    elsif p_mfo='334862' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└", ─╬═┼╓▄╩┼ ╨╙
      ret_ := '04';
    elsif p_mfo='335355' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└" ┬ ╠.╠└╩▓п┬╓▓
      ret_ := '34';
    elsif p_mfo='335504' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└" ┬ ╠.─╟┼╨╞╚═╤▄╩╙
      ret_ := '44';
    elsif p_mfo='335719' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└" ┬ ╠.├╬╨╦▓┬╓▓
      ret_ := '54';
    elsif p_mfo='311818' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└" ╞╚╥╬╠╚╨╤▄╩┼ ╨╙
      ret_ := '05';
    elsif p_mfo='312538' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└" ╙╞├╬╨╬─╤▄╩┼ ╨╙
      ret_ := '06';
    elsif p_mfo='313968' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└" ╟╨╙
      ret_ := '07';
    elsif p_mfo='336871' then -- ▓┬└═╬-╘╨└═╩▓┬╤▄╩└ ╘▓╦▓▀ └╩┴ "═└─╨└"
      ret_ := '08';
    elsif p_mfo='320973' then -- ╪┼┬╫┼═╩▓┬╤▄╩└ ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└"
      ret_ := '00';
    elsif p_mfo='320003' then -- └╩┴ "═└─╨└", ╠.╩╚п┬
      ret_ := '26';
    elsif p_mfo='320564' then -- ╘└╩┴ "═└─╨└",╩╚п┬╤▄╩┼ ╨┼├▓╬═└╦▄═┼ ╙╧╨.
      ret_ := '27';
    elsif p_mfo='323602' then -- ╬╦┼╩╤└═─╨▓╔╤▄╩└ ╘-▀ └╩┴ "═└─╨└"
      ret_ := '30';
    elsif p_mfo='323624' then -- ╩▓╨╬┬╬├╨└─╤▄╩┼ ╨┼├.╙╧╨└┬╦.└╩┴ "═└─╨└"
      ret_ := '10';
    elsif p_mfo='384823' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└" ╩╨╚╠╤▄╩┼ ╨╙
      ret_ := '11';
    elsif p_mfo='304193' then -- ╘-▀ ┬└╥ ╩┴ "═└─╨└" ╦╙├└═╤▄╩ ╨╙
      ret_ := '12';
    elsif p_mfo='304397' then -- ╘-▀ ┬└╥ ╩┴"═└─╨└"┬ ╠.╤к┬к╨╬─╬═┼╓▄╩╙
      ret_ := '32';
    elsif p_mfo='304762' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└" ╠.╧┼╨┬╬╠└╔╤▄╩
      ret_ := '42';
    elsif p_mfo='325246' then -- ─╨╙├└ ╦▄┬▓┬╤▄╩└ ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└"
      ret_ := '13';
    elsif p_mfo='326803' then -- ╘▓╦▓▀ └╩┴ "═└─╨└" ╙ ╠.╠╚╩╬╦└к┬▓
      ret_ := '14';
    elsif p_mfo='328975' then -- ╘-▀ └╩╓. ╩╬╠. ┴└═╩╙ "═└─╨└" ┬ ╠.╬─┼╤▓
      ret_ := '15';
    elsif p_mfo='331780' then -- ╘▓╦▓▀ └╩┴ "═└─╨└" ┬ ╠.╦╙┴═╚
      ret_ := '36';
    elsif p_mfo='331809' then -- ╘▓╦▓▀ └╩┴ "═└─╨└" ┬ ╠.╧╬╦╥└┬▓
      ret_ := '16';
    elsif p_mfo='333681' then -- ╨▓┬═┼═╤▄╩└ ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└"
      ret_ := '17';
    elsif p_mfo='337535' then -- ╘└╩┴ "═└─╨└" ╤╙╠╤▄╩┼ ╨╙ "╤╦╬┴╬╞└═┘╚═└"
      ret_ := '18';
    elsif p_mfo='337331' then -- ╘▓╦▓▀ └╩┴ "═└─╨└" ┬ ╠. ╬╒╥╚╨╩└
      ret_ := '38';
    elsif p_mfo='337591' then -- ╘▓╦▓▀ └╩┴ "═└─╨└" ╙ ╠.╩╬═╬╥╬╧
      ret_ := '48';
    elsif p_mfo='337773' then -- ╘▓╦▓▀ └╩┴ "═└─╨└" ╙ ╠.╨╬╠═╚
      ret_ := '58';
    elsif p_mfo='338705' then -- ╘▓╦▓▀ └╩┴ "═└─╨└" ┬ ╠. ╥┼╨═╬╧╬╦▓
      ret_ := '19';
    elsif p_mfo='351834' then -- "╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└" ╒└╨╩▓┬╤▄╩┼ ╨╙"
      ret_ := '20';
    elsif p_mfo='352770' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└" ╒┼╨╤╬═╤▄╩┼ ╨╙
      ret_ := '21';
    elsif p_mfo='352695' then -- ╘▓╦▓▀ └╩┴ "═└─╨└" ╙ ╠.═╬┬└ ╩└╒╬┬╩└
      ret_ := '31';
    elsif p_mfo='315137' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└" ╒╠┼╦▄═╚╓▄╩┼ ╨╙
      ret_ := '22';
    elsif p_mfo='354916' then -- ╘▓╦▓▀ ┬└╥ ╩┴ "═└─╨└", ╫┼╨╩└╤▄╩┼ ╨╙
      ret_ := '23';
    elsif p_mfo='353627' then -- ╘-▀ ╩┴ "═└─╨└" ╫┼╨═▓├▓┬╤▄╩┼ ╨┼├.╙╧╨-▀
      ret_ := '25';
    else
      ret_ := '00';
    end if;
    return ret_;
  end kodobl;

--

  function prov_bal (p_mask varchar2, p_bal number) return number
  is
    ret_   number;
    s7_    number;
    s8_    number;
    s9_    number;
    sql_   varchar2(32000);
    mfog_  varchar2(12);
  begin
    if p_bal=0 or p_bal is null then
      ret_ := 0;
    else
      ret_ := 0;
      execute immediate 'select C_MFO from S6_SETUP_BANK where rownum=1' into mfog_;

      sql_:='select distinct   /* to ACCOUNTS */
                    nvl(cw.rnk,/* mrnk_ */ 1)                                                                                                              rnk      ,
                    s.DAPP                                                                                                                                 DAPP     ,
                    trunc(s.DOP)                                                                                                                           daos     ,
                    s.I_VA                                                                                                                                 kv       ,
                  --s.ISP_OWNER                                                                                                                            isp      ,
                    nvl(u.UBARS,/* ispg_ */ 1)                                                                                                             isp      ,
--                  substr(''0000''||to_char(s."BalS"),-4)                                                                                                 nbs      ,
                    substr(s.NLS,1,4)                                                                                                                      nbs      ,
--                  decode(s.ps,98,2,1)                                                                                                                    pos      ,
                    decode(s.ps,98,decode(substr(s.NLS,1,4),''9809'',2,''9910'',2,1),1)                                                                    pos      ,
                    decode(s.I_VA,980,s.ISH*100,s.ISH_V*100)                                                                                               ostc     ,
                    s.ISH*100                                                                                                                              ostq     ,
                    s.LIMIT*100                                                                                                                            lim      ,
                    migraSK.valid_symbol(
                    trim(substr(nvl(s.NK,''эх юяЁхфхыхэю''),1,70)))                                                                                        nms      ,
                    trim(substr(s.NLS,1,4)||s.KSS||substr(s.NLS,5))                                                                                        nls      ,
                    trim(substr(s.NLS_ALT,1,14))                                                                                                           nlsalt   ,
                    nvl((select branch
                         from   branch_parameters
                         where  tag=''DEPARTS6''                                        and
                                (val=to_char(nvl(s.DEPART,0))                        or
                                 instr(val,to_char(nvl(s.DEPART,0))||'','')=1        or
                                 instr(val,'',''||to_char(nvl(s.DEPART,0))||'','')>1 or
                                 (instr(val,'',''||to_char(nvl(s.DEPART,0)))=
                                  length(val)-length(to_char(nvl(s.DEPART,0))) and
                                  instr(val,'',''||to_char(nvl(s.DEPART,0)))>0))        and
                                rownum<2),''/''||'''||mfog_||'''||''/000000/'')                                                                            branch   ,
                    /* to SPECPARAM_INT */
                    substr(''00''||p.OB22,-2)                                                                                                              OB22     ,
                    p.OB88                                                                                                                                 OB88     ,
                    p.P080                                                                                                                                 P080     ,
                    to_char(p.MFO)                                                                                                                         MFO      ,
                    p.R020_FA                                                                                                                              R020_FA  ,
                    /* to SPECPARAM */
                    trim(p.R011)                                                                                                                           R011     ,
                    trim(p.R013)                                                                                                                           R013     ,
                    decode(upper(trim(p.S240)),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(trim(p.S240)))    S240     ,
                    nullif(to_char(co.C_RISK),''0'')                                                                                                       S080     ,
                    decode(upper(trim(co.TERM)),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(trim(co.TERM)))  S180     ,
                    trim(co.PROLONG)                                                                                                                       S190     ,
                    to_char(t.S181)                                                                                                                        S181     ,
                    t.S260                                                                                                                                 S260     ,
                    to_char(co.SOURCE)                                                                                                                     S200     ,
                    to_char(co.EMIS)                                                                                                                       S120     ,
                    to_char(co.V_MAIN)                                                                                                                     S031     ,
                    to_char(co.T_KR)                                                                                                                       S182     ,
                    migraSK.valid_symbol(
                    trim(substr(nvl(co."IdContract",''NULL''),1,20)))                                                                                      NKD      ,
                    /* to INT_RATN */
                    ps.pap                                                                                                                                 pap      ,
                    trim(s.NLS)                                                                                                                            NLSs6    ,
                    s.I_VA                                                                                                                                 I_VAs6
             from   customerw         cw,
                    S6_SALDO          s ,
                    "S6_Clients"      c ,
                    "S6_Contract"     co,
                    "S6_Target"       t ,
                    S6_P__SALDO       p ,
                    USERS_SKARB6_BARS u ,
                    ps
             where  cw.tag(+)=''RNKS6''                                                                          and
                    to_number(cw.value(+))=c."IdClient"*10+c.GROUP_C                                             and
                    c."IdClient"=co."IdClient"                                                                   and
                    c.GROUP_C=co.GROUP_C                                                                         and
                    s.BIC='||mfog_||'                                                                            and
                    c.BIC=co.BIC                                                                                 and
                    s.BIC=co.BIC                                                                                 and
                    upper(rtrim(nvl(co."IdContract",''NULL'')))=upper(rtrim(nvl(s."IdContract",''NULL'')))       and
                    (s.DCL is null                                                          or
                     (s.DCL is not null and s.DCL>=add_months(trunc(sysdate,''YEAR''),-12)) or
                     (s.DCL is not null and substr(s.NLS,1,4) in (select NBS
                                                                  from   DPA_NBS)))                              and
                    s.ISP_OWNER=u.USKARB6(+)                                                                     and
                    co."Target"=t."Id"(+)                                                                        and
                    trim(s.NLS)=trim(p.NLS(+))                                                                   and
                    s.I_VA=p.I_VA(+)                                                                             and
                    mod(nvl(nullif(s.GROUP_U,'||mfog_||'),0),10)=mod(nvl(nullif(p.GROUP_U(+),'||mfog_||'),0),10) and
                    ((mod(nvl(nullif(s.GROUP_U,'||mfog_||'),0),10)=0 and substr(s.NLS,1,1)<>''8'') or
                     (mod(nvl(nullif(s.GROUP_U,'||mfog_||'),0),10) in (1,2) and substr(s.NLS,1,1)=''8''))        and
                    substr(s.NLS,1,4)=ps.nbs(+)';

      execute immediate 'select sum(ostc)
                         from   ('||sql_||')
                         where  substr(nls,1,1)<''8''' into s7_;
      execute immediate 'select sum(ostc)
                         from   ('||sql_||')
                         where  substr(nls,1,1)=''8''' into s8_;
      execute immediate 'select sum(ostc)
                         from   ('||sql_||')
                         where  substr(nls,1,1)>''8''' into s9_;

      if s7_<>0 then
         bars_audit.error(p_mask||' - err(7): юЄёєЄёЄтєхЄ срырэё фы  ёўхЄют 1-7 ъырёёр (эр '||s7_||')');
         ret_ := 1;
      end if;

      if s8_<>0 then
         bars_audit.error(p_mask||' - err(8): юЄёєЄёЄтєхЄ срырэё фы  ёўхЄют 8 ъырёёр (эр '||s8_||')');
         ret_ := ret_+1;
      end if;

      if s9_<>0 then
         bars_audit.error(p_mask||' - err(9): юЄёєЄёЄтєхЄ срырэё фы  ёўхЄют 9 ъырёёр (эр '||s9_||')');
         ret_ := ret_+1;
      end if;
    end if;
--  bars_audit.info('prov_bal - ret_='||ret_);
    return ret_;
  end prov_bal;

--

  procedure drop_customerNA (p_open out number, p_code out number)
  is
    mfo_     varchar2(12);
    rnkmax_  number;
    Job_     number;
  begin

    bars_alerter(0);

    mfo_ := f_ourmfo_g;

    p_open := 0;
    p_code := 0;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_customerNA - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  delete from TABLEs

    begin
      bc.subst_mfo(mfo_);
      delete from customerw          where rnk            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from customerw_update   where rnk            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from person             where rnk            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from corps_acc          where rnk            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from corps              where rnk            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from customer_address   where rnk            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from CC_DEAL            where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from CC_SWTRACE         where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(8): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from CUSTBANK           where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from CUSTCOUNT          where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete
                         from   CUSTOMER_REL
                         where  RNK in (select rnk
                                        from   customer
                                        where  (notes=''Imported from Nadra'' or
                                                notes=''BRANCH<->RNK'') and
                                               bc.extract_mfo(branch)='''||mfo_||''')';
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from CUST_NAL           where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from CUST_ZAY           where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(13): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_AGREEMENTS     where CUST_ID        in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(14): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_DEPOSIT        where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(15): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_DEPOSIT_CLOS   where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(16): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_INHERITORS     where INHERIT_CUSTID in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(17): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_JOBS_LOG       where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(18): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPT_TECHACCOUNTS   where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(19): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from DPT_TRUSTEE        where RNK_TR         in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from DPT_TRUSTEE        where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL           where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL_UPDATE    where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
--  delete from E_DEAL             where RNK            in (select rnk from customer where notes='Imported from SKARB6' and kf=mfo_);
    begin
      bc.subst_mfo(mfo_);
      delete from FINMON_QUE         where RNK_A          in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from FINMON_QUE         where RNK_B          in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(25): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from KL_CUSTOMER_PARAMS where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from RNK_REKV           where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SURVEY_SESSION     where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(28): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_REG_DIRS        where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(29): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_SB_TELEX        where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(30): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from TOP_CONTRACTS      where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(31): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from ZAYAVKA            where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from ZAY_COMISS         where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from CUSTOMER_UPDATE    where RNK            in (select rnk from customer where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    commit;  -- ьюцхЄ яюьюцхЄ

    begin
      delete from customer           where (notes='Imported from Nadra' or notes='BRANCH<->RNK') and bc.extract_mfo(branch)=mfo_;
      p_open := p_open+SQL%rowcount;
    exception when OTHERS then
      bars_audit.error('drop_customerNA - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_customerNA - err(37): '||sqlerrm||' - '||k.table_name||', '||k.constraint_name);
        p_code := p_code+1;
      end;
    end loop;

    commit;

--  recreate customer SEQUENCE

    select nvl(max(rnk),0)+1 into rnkmax_ from customer;

    execute immediate 'DROP SEQUENCE S_CUSTOMER';
    execute immediate 'CREATE SEQUENCE S_CUSTOMER
                       START WITH '||rnkmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_CUSTOMER TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_CUSTOMER

    sys.utl_recomp.recomp_serial('BARS');

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ъышхэЄют (CUSTOMER ш ёт чрээ√х)

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tableCU_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('drop_customerNA - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

    bars_alerter(1);

  end drop_customerNA;

--

  procedure create_customerNA (p_open out number, p_code out number)
  is
    type        cur is ref cursor;
    cur_        cur;
    sql_        varchar2(32000);
    rnk_        number;
    fl_         number;
    mfog_       varchar2(12);
    ispg_       varchar2(32);

    TAXF_       varchar2(12);
    DATEON_     date;
    DATEA_      date;
    DATET_      date;
    BDAY_       date;
    FS_         varchar2(3);
--  K050_       varchar2(3);
    SED_        char(4);
    NMK_        varchar2(70);
    IDCLIENT_   number;
    GROUP_C_    number;
    OKPO_       varchar2(12);
    COUNTRY_    number;
    CDST_       number;
    CREG_       number;
    PRINSIDER_  number;
    ISP_        number;
    NMKK_       varchar2(38);
    OE_         varchar2(5);
    CODCAGENT_  number;
    ISE_        varchar2(5);
    SEX_        number;
    TGR_        number;
    CUSTTYPE_   number;
    VED_        varchar2(5);
    ND_         varchar2(10);
    CRISK_      number;
    PHONE_      varchar2(20);
    POSTIND_    varchar2(10);
    OBLAST_     varchar2(40);
    RAYON_      varchar2(25);
    CITY_       varchar2(40);
    STREET_     varchar2(80);
    HOUSE_      varchar2(20);
    KVARTIRA_   varchar2(20);
--  TEL_        varchar2(20);
    SAB_        varchar2(6);
    STMT_       number;
    RGTAX_      varchar2(30);
    RGADM_      varchar2(30);
    MFO_        varchar2(12);
    ADM_        varchar2(70);
    PINCODE_    varchar2(10);
    LIM_        number;
--  MB_         varchar2(1);
    NOMPDV_     varchar2(9);

    NMKU_       varchar2(250);
    RUK_        varchar2(70);
    TELR_       varchar2(20);
    BUH_        varchar2(70);
    TELB_       varchar2(20);
    DOV_        varchar2(35);
    BDOV_       date;
    EDOV_       date;
    PASSP_      number(1);
    SER_        varchar2(10);
    NUMDOC_     varchar2(20);
    PDATE_      date;
    ORGAN_      varchar2(50);
    BPLACE_     varchar2(70);
    TELD_       varchar2(20);
    TELW_       varchar2(20);
    EMAIL_      varchar2(100);
    TEL_FAX_    varchar2(20);
    BIC_        varchar2(12);

    l_rnk       number;
    l_okpo      varchar2(14);
    l_branch    varchar2(30);
    l_ins_      number;

    adr_        customer.adr%type;
    len_adr_    number;
    len_raz_    number;

--  Ser_        person.ser%type;
--  Numdoc_     person.numdoc%type;
--  PDate_      person.pdate%type;
--  Organ_      person.organ%type;
--  Orgao_      person.organ%type;
--  i_          int;
    len_organ_  number;

    Job_        number;

  begin

    tokf;
    l_okpo := f_ourokpo;
    toroot;

    bars_alerter(0);

    mfog_ := f_ourmfo_g;

    l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    select data_length
    into   len_adr_
    from   user_tab_columns
    where  table_name='CUSTOMER' and
           column_name='ADR';

    select data_length
    into   len_organ_
    from   user_tab_columns
    where  table_name='PERSON' and
           column_name='ORGAN';

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=mfog_                  and
           logname like 'U'||migraSK.kodobl(mfog_)||'_%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=mfog_ and
             logname like 'U'||migraSK.kodobl(mfog_)||'_%';
    end if;

--  └э  for Offline

    begin
      for c in (select branch,
                       name
                from   branch
                where  branch like '/'||mfog_||'/%'
                order  by branch)
      loop
        begin
          bc.subst_branch(c.branch);
          begin
            select rnk
            into   l_rnk
            from   customer
            where  branch=c.branch and
                   notes='BRANCH<->RNK';
          exception when no_data_found then

--          select s_customer.nextval
--          into   l_rnk
--          from   dual;

            execute immediate 'select s_customer.nextval from dual' into l_rnk;

            insert
            into   customer (rnk      ,
                             tgr      ,
                             custtype ,
                             codcagent,
                             okpo     ,
                             country  ,
                             nmk      ,
                             nmkk     ,
                             notes    ,
                             ise      ,
                             fs       ,
                             oe       ,
                             ved      ,
                             sed      ,
                             k050     ,
                             branch)
                     values (l_rnk                    ,
                             1                        ,
                             1                        ,
                             1                        ,
                             l_okpo                   ,
                             804                      ,
                             trim(substr(c.name,1,70)),
                             trim(substr(c.name,1,38)),
                             'BRANCH<->RNK'           ,
                             '12201'                  ,
                             '31'                     ,
                             '96130'                  ,
                             '65120'                  ,
                             '80  '                   ,
                             '610'                    ,
                             c.branch);
          end;

          begin
            update branch_parameters
            set    val=to_char(l_rnk)
            where  tag='RNK' and
                   branch=c.branch;

            if SQL%ROWCOUNT=0 then
             insert
             into   branch_parameters (branch,
                                       tag   ,
                                       val)
                               values (c.branch,
                                       'RNK'   ,
                                       to_char(l_rnk));
            end if;
          end;
        exception when others then
          null;
        end;
        bc.set_context;
      end loop;
    end;

    commit;

    select count(*)
    into   p_open
    from   customer
    where  notes='BRANCH<->RNK';

    MFO_ := null; -- эр ¤Єющ їхЁэх чрфтрЄЁрштрыю ъышхэЄют

    sql_:='select distinct
                  c.TAXF                                                                        TAXF     ,  -- ╩юф яырЄэшър яюфрЄъiт
                  nvl(c.DATE_ON,add_months(trunc(sysdate,''YEAR''),-12))                        DATEON   ,  -- ─рЄр Ёх║ёЄЁрЎi┐
                  nullif(c.DATEA,to_date(''30.12.1899'',''DD.MM.YYYY''))                        DATEA    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т рфьiэiёЄЁрЎi┐
                  nullif(c.DATET,to_date(''30.12.1899'',''DD.MM.YYYY''))                        DATET    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т яюфрЄъютiщ iэёяхъЎi┐
                  nullif(c.BDAY,to_date(''30.12.1899'',''DD.MM.YYYY''))                         BDAY     ,  -- ─рЄр эрЁюфцхээ 
                  nvl(nullif(substr(''00''||trim(c.FS),-2),''99''),''ZZ'')                      FS       ,  -- ╘юЁьр тырёэюёЄi
--                substr(ltrim(c.SED),1,3)                                                      K050     ,
--                (select k051 from sp_k050 where k050=substr(ltrim(c.SED),1,3))                SED      ,
                  substr(nvl(ltrim(c.SED),''00'')||''    '',1,4)                                SED      ,  -- ╘юЁьр уюёяюфрЁ■трээ 
                  migraSK.valid_symbol(trim(substr(trim(nvl(c.NMK,c.NMKK)),1,70)))              NMK      ,  -- ╧ютэх эрщьхэєтрээ 
                  c.RNK                                                                         IDCLIENT ,  -- ╩юф
                  0                                                                             GROUP_C  ,  -- ╩юф+
                  migraSK.valid_symbol(c.OKPO)                                                  OKPO     ,  -- IфхэЄшЇiърЎiщэшщ ъюф
                  nvl(nullif(nvl(c.COUNTRY,0),0),804)                                           COUNTRY  ,  -- ╩Ёр┐эр
                  nullif(c.C_DST,0)                                                             CDST     ,  -- ╧юфрЄъютр iэёяхъЎi 
                  nullif(c.C_REG,0)                                                             CREG     ,  -- ╨хуiюэ
                  c.PRINSIDER                                                                   PRINSIDER,  -- IэёрщфхЁ
                  nvl(u.UBARS,'||ispg_||')                                                      ISP      ,  -- ╩юф ъюЁшёЄєтрўр
                  migraSK.valid_symbol(trim(substr(trim(nvl(c.NMKK,c.NMK)),1,38)))              NMKK     ,  -- ╩юЁюЄъх эрщьхэєтрээ 
                  substr(''00000''||trim(c.OE),-5)                                              OE       ,  -- ├рыєч№
                  decode(c.CUSTTYPE,0,decode(c.COUNTRY,804,5,6),1,decode(c.COUNTRY,804,3,4),0)  CODCAGENT,  -- ╒рЁръЄхЁшёЄшър
                  substr(''00000''||trim(c.ISE),-5)                                             ISE      ,  -- IэёЄшЄ.ёхъЄюЁ хъюэюьiъш
                  decode(c.SEX,''0'',''2'',''1'',''1'',''0'')                                   SEX      ,  -- ╤ЄрЄ№
                  nullif(c.TGR,0)                                                               TGR      ,  -- ╥шя фхЁцЁх║ёЄЁє
                  decode(c.CUSTTYPE,1,2,0,3,1)                                                  CUSTTYPE ,  -- ╥шя ъыi║эЄр
                  substr(''00000''||trim(c.VED),-5)                                             VED      ,  -- ┬шф хъюэюь.фi ы№эюёЄi
                  c.ND                                                                          ND       ,
                  decode(c.CRISK,1,1,2,2,3,3,4,4,5,5,null)                                      CRISK    ,
                  migraSK.valid_symbol(nvl(c.TELR,nvl(c.TELB,nvl(c.TELD,nvl(c.TELW,'''')))))    PHONE    ,  -- ╥хыхЇюэ             --varchar(20)
                  c.POSTIND                                                                     POSTIND  ,  -- ╧ю°Єютшщ iэфхъё     --varchar(10)
                  c.OBLAST                                                                      OBLAST   ,  -- ╬сырёЄ№             --varchar(40)
                  c.RAYON                                                                       RAYON    ,  -- ╨рщюэ               --varchar(25)
                  c.CITY                                                                        CITY     ,  -- ╠iёЄю, эрёхы.яєэъЄ  --varchar(40)
                  c.STREET                                                                      STREET   ,  -- ┬єышЎ               --varchar(40)
                  ''''                                                                          HOUSE    ,  -- ─iь                 --varchar(20)
                  ''''                                                                          KVARTIRA ,  -- ╩трЁЄшЁр            --varchar(20)
                  null                                                                          SAB      ,
                  0                                                                             STMT     ,
                  c.RGTAX                                                                       RGTAX    ,
                  c.RGADM                                                                       RGADM    ,
                  c.ADM                                                                         ADM      ,
                  null                                                                          PINCODE  ,
                  null                                                                          LIM      ,
--                c.MB                                                                          MB       ,
                  c.NOMPDV                                                                      NOMPDV   ,
                  c.NMKU                                                                        NMKU     ,
                  c.RUK                                                                         RUK      ,
                  c.TELR                                                                        TELR     ,
                  c.BUH                                                                         BUH      ,
                  c.TELB                                                                        TELB     ,
                  c.DOV                                                                         DOV      ,
                  nullif(c.BDOV,to_date(''30.12.1899'',''DD.MM.YYYY''))                         BDOV     ,
                  nullif(c.EDOV,to_date(''30.12.1899'',''DD.MM.YYYY''))                         EDOV     ,
                  decode(nvl(c.PASSP,0),0,1,2,1,6,1,7,1,5,2,8,3,-1)                             PASSP    ,
                  c.SER                                                                         SER      ,
                  c.NUMDOC                                                                      NUMDOC   ,
                  nullif(c.PDATE,to_date(''30.12.1899'',''DD.MM.YYYY''))                        PDATE    ,
                  c.ORGAN                                                                       ORGAN    ,
                  c.BPLACE                                                                      BPLACE   ,
                  c.TELD                                                                        TELD     ,
                  c.TELW                                                                        TELW     ,
                  c.EMAIL                                                                       EMAIL    ,  -- ┼ыхъЄЁюээр рфЁхёр   --varchar(10)
                  c.TEL_FAX                                                                     TEL_FAX  ,
                  c.adr                                                                         ADR      ,
                  null                                                                          BIC
           from   S6_NA_CLIOUT      c,
                  USERS_SKARB6_BARS u
           where  c.ISP=u.USKARB6(+) and
                  nullif(c.DATE_OFF,to_date(''30.12.1899'',''DD.MM.YYYY'')) is null';

    open cur_ for sql_;

    loop
      fetch cur_ into TAXF_     ,
                      DATEON_   ,
                      DATEA_    ,
                      DATET_    ,
                      BDAY_     ,
                      FS_       ,
--                    K050_     ,
                      SED_      ,
                      NMK_      ,
                      IDCLIENT_ ,
                      GROUP_C_  ,
                      OKPO_     ,
                      COUNTRY_  ,
                      CDST_     ,
                      CREG_     ,
                      PRINSIDER_,
                      ISP_      ,
                      NMKK_     ,
                      OE_       ,
                      CODCAGENT_,
                      ISE_      ,
                      SEX_      ,
                      TGR_      ,
                      CUSTTYPE_ ,
                      VED_      ,
                      ND_       ,
                      CRISK_    ,
                      PHONE_    ,
                      POSTIND_  ,
                      OBLAST_   ,
                      RAYON_    ,
                      CITY_     ,
                      STREET_   ,
                      HOUSE_    ,
                      KVARTIRA_ ,
                      SAB_      ,
                      STMT_     ,
                      RGTAX_    ,
                      RGADM_    ,
                      ADM_      ,
                      PINCODE_  ,
                      LIM_      ,
--                    MB_       ,
                      NOMPDV_   ,
                      NMKU_     ,
                      RUK_      ,
                      TELR_     ,
                      BUH_      ,
                      TELB_     ,
                      DOV_      ,
                      BDOV_     ,
                      EDOV_     ,
                      PASSP_    ,
                      SER_      ,
                      NUMDOC_   ,
                      PDATE_    ,
                      ORGAN_    ,
                      BPLACE_   ,
                      TELD_     ,
                      TELW_     ,
                      EMAIL_    ,
                      TEL_FAX_  ,
                      adr_      ,
                      BIC_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        select rnk
        into   rnk_
        from   customerw
        where  tag='RNKNA'                                 and
               value=to_char(IDCLIENT_)||to_char(GROUP_C_) and
               rownum<2;
      exception when no_data_found then
        rnk_ := null;
      end;

      if rnk_ is not null then
        fl_ := 1;
        p_open := p_open+1;
      else
        fl_ := 0;
      end if;

      if fl_=0 then

        bc.subst_mfo(mfog_);

        RNK_ := null;

        begin

          select length(trim(OBLAST_||' '||
                             RAYON_ ||' '||
                             CITY_  ||' '||
                             STREET_||' '||
                             HOUSE_ ||' '||
                             KVARTIRA_))-len_adr_
          into   len_raz_
          from   dual;

          if len_raz_>0 and length(CITY_)>=len_raz_ then
            CITY_ := trim(substr(CITY_,1,length(CITY_)-len_raz_));
          else
            if len_raz_>0 and length(STREET_)>=len_raz_ then
              STREET_ := trim(substr(STREET_,1,length(STREET_)-len_raz_));
            end if;
          end if;

          if adr_ is null then
            adr_ := trim(
     /*FGOBL*/      OBLAST_||' '||
     /*FGDST*/      RAYON_ ||' '||
     /*FGTWN*/      CITY_  ||' '||
     /*FGADR(+3)*/  STREET_||' '||
                    HOUSE_ ||' '||
                    KVARTIRA_);
          end if;

          kl.setCustomerAttr(RNK_                 ,  -- Rnk_ IN OUT customer.rnk%type        -- Customer number
                             CUSTTYPE_            ,  -- Custtype_   customer.custtype%type   -- ╥шя ъышхэЄр: 1-срэъ, 2-■Ё.ышЎю, 3-Їшч.ышЎю
                             ND_                  ,  -- Nd_         customer.nd%type         -- ╣ фюуютюЁр
                             NMK_                 ,  -- Nmk_        customer.nmk%type        -- ═ршьхэютрэшх ъышхэЄр
                             null                 ,  -- Nmkv_       customer.nmkv%type       -- ═ршьхэютрэшх ъышхэЄр ьхцфєэрЁюфэюх
                             NMKK_                ,  -- Nmkk_       customer.nmkk%type       -- ═ршьхэютрэшх ъышхэЄр ъЁрЄъюх
                             adr_                 ,  -- Adr_        customer.adr%type        -- └фЁхё ъышхэЄр
                             CODCAGENT_           ,  -- Codcagent_  customer.codcagent%type  -- ╒рЁръЄхЁшёЄшър
                             COUNTRY_             ,  -- Country_    customer.country%type    -- ╤ЄЁрэр
                             PRINSIDER_           ,  -- Prinsider_  customer.prinsider%type  -- ╧Ёшчэръ шэёрщфхЁр
                             TGR_                 ,  -- Tgr_        customer.tgr%type        -- ╥шя уюё.ЁххёЄЁр
                             OKPO_                ,  -- Okpo_       customer.okpo%type       -- ╬╩╧╬
                             STMT_                ,  -- Stmt_       customer.stmt%type       -- ╘юЁьрЄ т√яшёъш
                             SAB_                 ,  -- Sab_        customer.sab%type        -- ▌ы.ъюф
                             DATEON_              ,  -- DateOn_     customer.date_on%type    -- ─рЄр ЁхушёЄЁрЎшш
                             TAXF_                ,  -- Taxf_       customer.taxf%type       -- ═рыюуют√щ ъюф
                             CREG_                ,  -- CReg_       customer.c_reg%type      -- ╩юф юсы.═╚
                             CDST_                ,  -- CDst_       customer.c_dst%type      -- ╩юф Ёрщюэ.═╚
                             ADM_                 ,  -- Adm_        customer.adm%type        -- └фьшэ.юЁурэ
                             RGTAX_               ,  -- RgTax_      customer.rgtax%type      -- ╨ху эюьхЁ т ═╚
                             RGADM_               ,  -- RgAdm_      customer.rgadm%type      -- ╨ху эюьхЁ т └фь.
                             DATET_               ,  -- DateT_      customer.datet%type      -- ─рЄр Ёху т ═╚
                             DATEA_               ,  -- DateA_      customer.datea%type      -- ─рЄр Ёху. т рфьшэшёЄЁрЎшш
                             ISE_                 ,  -- Ise_        customer.ise%type        -- ╚эёЄ. ёхъ. ¤ъюэюьшъш
                             FS_                  ,  -- Fs_         customer.fs%type         -- ╘юЁьр ёюсёЄтхээюёЄш
                             OE_                  ,  -- Oe_         customer.oe%type         -- ╬ЄЁрёы№ ¤ъюэюьшъш
                             VED_                 ,  -- Ved_        customer.ved%type        -- ┬шф ¤ъ. фх Єхы№эюёЄш
                             SED_                 ,  -- Sed_        customer.sed%type        -- ╘юЁьр їюч щёЄтютрэш 
                             'Imported from Nadra',  -- Notes_      customer.notes%type      -- ╧Ёшьхўрэшх
                             null                 ,  -- Notesec_    customer.notesec%type    -- ╧Ёшьхўрэшх фы  ёыєцс√ схчюярёэюёЄш
                             CRISK_ /* null */    ,  -- CRisk_      customer.crisk%type      -- ╩рЄхуюЁш  Ёшёър
                             PINCODE_             ,  -- Pincode_    customer.pincode%type    --
                             null                 ,  -- RnkP_       customer.rnkp%type       -- ╨ху. эюьхЁ їюыфшэур
                             LIM_                 ,  -- Lim_        customer.lim%type        -- ╦шьшЄ ърёё√
                             NOMPDV_              ,  -- NomPDV_     customer.nompdv%type     -- ╣ т ЁххёЄЁх яырЄ. ╧─┬
                             '9'                  ,  -- MB_         customer.mb%type         -- ╧Ёшэрфы. ьрыюьє сшчэхёє
                             null                 ,  -- BC_         customer.bc%type         -- ╧Ёшчэръ ═┼ъышхэЄр срэър
                             '/'||mfog_||'/'      ,  -- Tobo_       customer.tobo%type       -- ╩юф схчсрырэёютюую юЄфхыхэш 
                    /* 2 */  ISP_                    -- Isp_        customer.isp%type        -- ╠хэхфцхЁ ъышхэЄр (юЄтхЄ. шёяюыэшЄхы№)
                            );
          fl_ := 0;
          p_open := p_open+1;
          l_ins_ := l_ins_+1;
        exception when others then
          bars_audit.error('create_customerNA - err(1): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                           'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                           'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                           'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                           'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                           'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                           'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                           'ADRES     = '||trim(OBLAST_ ||' '||
                                                RAYON_  ||' '||
                                                CITY_   ||' '||
                                                STREET_ ||' '||
                                                HOUSE_  ||' '||
                                                KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                           'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                           'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                           'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                           'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                           'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                           'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                           'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                           'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                           'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                           'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                           'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                           'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                           'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                           'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                           'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                           'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                           'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                           'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                           'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                           'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                         'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                           'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                           'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                           'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          fl_ := 1;
          p_code := p_code+1;
          bc.set_context;
        end;

      end if;

      if fl_=0 then
        if CUSTTYPE_=1 then
          begin
            kl.setBankAttr(RNK_ ,  -- Rnk_    NUMBER,
                           MFO_ ,  -- Mfo_    VARCHAR2,
                           BIC_ ,  -- Bic_    VARCHAR2,
                           null ,  -- BicAlt_ VARCHAR2,
                           null ,  -- Rating_ VARCHAR2,
                           null ,  -- Kod_b_  NUMBER,
                           RUK_ ,  -- Ruk_    VARCHAR2,
                           TELR_,  -- TelR_   VARCHAR2,
                           BUH_ ,  -- Buh_    VARCHAR2,
                           TELB_   -- TelB_   VARCHAR2
                          );
            if NMKU_ is not null then
              begin
                update customerw
                set    value=NMKU_
                where  tag='FIRMA' and
                       rnk=RNK_;
                if sql%rowcount=0 then
                  begin
                    insert
                    into   customerw (rnk,
                                      tag,
                                      value)
                              values (RNK_   ,
                                      'FIRMA',
                                      NMKU_);
                  exception when OTHERS then
                    null;
                  end;
                end if;
              end;
            end if;
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNA - err(2): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=2 then
          begin
            kl.setCorpAttr(RNK_    ,  -- Rnk_    NUMBER,
                           NMKU_   ,  -- Nmku_   VARCHAR2,
                           RUK_    ,  -- Ruk_    VARCHAR2,
                           TELR_   ,  -- TelR_   VARCHAR2,
                           BUH_    ,  -- Buh_    VARCHAR2,
                           TELB_   ,  -- TelB_   VARCHAR2,
                           TEL_FAX_,  -- TelFax_ varchar2,
                           EMAIL_  ,  -- EMail_  varchar2,
                           null       -- SealId_ number
                          );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNA - err(3): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=3 then
--        ЁшїЄютър фрЄ√ Ёюцфхэш 
          BDAY_ := CorrectBdayOkpo(BDAY_,OKPO_);
          begin
            kl.setPersonAttr(RNK_   ,  -- Rnk_    NUMBER,
                             SEX_   ,  -- Sex_    CHAR,
                             1      ,  -- Passp_  NUMBER,
                 /* null */  SER_   ,  -- Ser_    VARCHAR2,
                 /* null */  NUMDOC_,  -- Numdoc_ VARCHAR2,
                 /* null */  PDATE_ ,  -- PDate_  DATE,
                 /* null */  ORGAN_ ,  -- Organ_  VARCHAR2,
                             BDAY_  ,  -- BDay_   DATE,
                             BPLACE_,  -- BPlace_ VARCHAR2,
                             TELD_  ,  -- TelD_   VARCHAR2,
                             TELW_     -- TelW_   VARCHAR2
                             );
            if NMKU_ is not null then
              begin
                update customerw
                set    value=NMKU_
                where  tag='FIRMA' and
                       rnk=RNK_;
                if sql%rowcount=0 then
                  begin
                    insert
                    into   customerw (rnk,
                                      tag,
                                      value)
                              values (RNK_   ,
                                      'FIRMA',
                                      NMKU_);
                  exception when OTHERS then
                    null;
                  end;
                end if;
              end;
            end if;
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNA - err(4): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

--      kl.setCustomerRekv(RNK_,  -- Rnk_     INTEGER,
--                         null,  -- LimKass_ NUMBER,
--                         null,  -- AdrAlt_  VARCHAR2,
--                         null   -- NomDog_  VARCHAR2
--                        );

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_                                 ,  -- Rnk_ INTEGER,
                                  'RNKNA'                              ,  -- Tag_ VARCHAR2,
                                  to_char(IDCLIENT_)||to_char(GROUP_C_),  -- Val_ VARCHAR2,
                                  0                                       -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNA - err(5): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGOBL',  -- Tag_ VARCHAR2,
                                  OBLAST_,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNA - err(6): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGDST',  -- Tag_ VARCHAR2,
                                  RAYON_ ,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNA - err(10): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGTWN',  -- Tag_ VARCHAR2,
                                  CITY_  ,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNA - err(11): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_           ,     -- Rnk_ INTEGER,
                                  'FGADR'        ,     -- Tag_ VARCHAR2,
                                  trim(STREET_||' '||  -- Val_ VARCHAR2,
                                       HOUSE_ ||' '||
                                       KVARTIRA_),
                                  0                    -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNA - err(12): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        bc.set_context;
      end if;
      if fl_=0 then
         commit;
      else
         rollback;
      end if;

      if l_ins_>0 and mod(l_ins_,10000)=0 then

--      ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ъышхэЄют (CUSTOMER ш ёт чрээ√х)

        BEGIN
          DBMS_JOB.SUBMIT (job       => Job_                    ,
                           what      => 'migraSK.tableCU_stats;',
                           next_date => sysdate                 ,
                           interval  => null                    ,
                           no_parse  => FALSE);
        exception when others then
          bars_audit.error('create_customerNA - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        END;

      end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(1);

  end create_customerNA;

--

  procedure create_userNA (p_open out number, p_code out number)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    mfo_      varchar2(12);
    id_       staff$base.id%type;
    idugo_    staff$base.id%type;
    on_       int;

    ISP_      number;
    TABN_     varchar2(10);
    FIO_      varchar2(40);
    logname_  varchar2(30);
    branch_   varchar2(30);
  begin

    bars_alerter(0);

    mfo_ := f_ourmfo_g;

    p_open := 0;
    p_code := 0;

    sql_:='select u.ISP                                                                               ISP    ,
                  trim(substr(trim(u.IKEY),-6))                                                       TABN   ,
                  nvl(migraSK.valid_symbol(u.FIO),''яюы№чютрЄхы№ эх шфхэЄшЇшЎшЁютрэ'')                FIO    ,
                  ''U'||migraSK.kodobl('''||mfo_||''')||'_''||nvl(m.USERSUFFIX,''S''||to_char(u.ISP)) logname,
                  nvl(u.BRANCH,''/''||'''||mfo_||'''||''/'')                                          branch
           from   S6_NA_USERS u,
                  S6_USERMAP  m
           where  m.ISPS6(+)=u.ISP';

    open cur_ for sql_;

    loop

      fetch cur_ into ISP_    ,
                      TABN_   ,
                      FIO_    ,
                      logname_,
                      branch_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      select min(num)
      into   id_
      from   conductor
      where  num not in (select id from staff$base) and
             num<(select max(id) from staff$base);

      begin

        begin
          select id
          into   idugo_
          from   staff$base
          where  logname=logname_;
        exception when no_data_found then
          idugo_ := null;
        end;

        if idugo_ is null then

          begin
            execute immediate 'drop user '||logname_;
          exception when OTHERS then
            bars_audit.warning('create_userNA - warn(1): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          end;

          bc.subst_branch(branch_);

          begin
            BARS_USERADM.create_user(FIO_             ,  -- p_usrfio      in  staff$base.fio%type
                                     TABN_            ,  -- p_usrtabn     in  staff$base.tabn%type
                                     0                ,  -- p_usrtype     in  staff$base.clsid%type
                                     1                ,  -- p_usraccown   in  staff$base.type%type
                                     branch_          ,  -- p_usrbranch   in  varchar2
                                     0                ,  -- p_usrusearc   in  staff$base.usearc%type
                                     0                ,  -- p_usrusegtw   in  staff$base.usegtw%type
                                     'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
                                     logname_         ,  -- p_reclogname  in  staff$base.logname%type
                                     'qwerty'         ,  -- p_recpasswd   in  varchar2
                                     null             ,  -- p_recappauth  in  varchar2
                                     null             ,  -- p_recprof     in  varchar2
                                     'BARS_CONNECT'   ,  -- p_recdefrole  in  varchar2
                                     null             ,  -- p_recrsgrp    in  varchar2
                                     id_                 -- p_usrid       in  staff$base.id%type default null
                                    );
          exception when OTHERS then
            bars_audit.error('create_userNA - err(1): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;

        else

          begin
            execute immediate 'create user '||logname_||' identified by qwerty';
          exception when OTHERS then
            bars_audit.warning('create_userNA - warn(2): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--          p_code := p_code+1;
          end;

          bc.subst_branch(branch_);

          begin

            BARS_USERADM.alter_user(idugo_           ,
                                    FIO_             ,  -- p_usrfio      in  staff$base.fio%type
                                    TABN_            ,  -- p_usrtabn     in  staff$base.tabn%type
                                    0                ,  -- p_usrtype     in  staff$base.clsid%type
                                    1                ,  -- p_usraccown   in  staff$base.type%type
                                    branch_          ,  -- p_usrbranch   in  varchar2
                                    0                ,  -- p_usrusearc   in  staff$base.usearc%type
                                    0                ,  -- p_usrusegtw   in  staff$base.usegtw%type
                                    'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
                                  --logname_         ,  -- p_reclogname  in  staff$base.logname%type
                                    'qwerty'         ,  -- p_recpasswd   in  varchar2
                                    null             ,  -- p_recappauth  in  varchar2
                                    null             ,  -- p_recprof     in  varchar2
                                    'BARS_CONNECT'   ,  -- p_recdefrole  in  varchar2
                                    null                -- p_recrsgrp    in  varchar2
                                   );
          exception when OTHERS then
            bars_audit.error('create_userNA - err(2): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;

        end if;

        bc.set_context;

        delete
        from   USERS_SKARB6_BARS
        where  KF=mfo_ and
               USKARB6=ISP_;
        insert
        into   USERS_SKARB6_BARS (KF     ,
                                  USKARB6,
                                  UBARS)
                          values (mfo_,
                                  ISP_,
                                  nvl(idugo_,id_));
        commit;

        p_open := p_open+1;

      exception when OTHERS then

        bars_audit.error('create_userNA - err(3): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;

      end;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(1);

  end create_userNA;

--

  procedure drop_userNA (p_open out number, p_code out number)
  is
    mfo_  varchar2(12);
    id_   staff$base.id%type;
  begin

    bars_alerter(0);

    mfo_ := f_ourmfo_g;

    p_open := 0;
    p_code := 0;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_userNA - err(0): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    for k in (SELECT id
              from   staff$base
              where  bc.extract_mfo(branch)=mfo_ and
--                   tabn like mfo_||'%'
                     logname like 'U'||migraSK.kodobl(mfo_)||'_%')
    loop
      begin
        delete
        from   USERS_SKARB6_BARS
        where  kf=mfo_ and
               ubars=k.id;
        BARS_USERADM.drop_user(k.id);
        delete
        from   staff$base
        where  id=k.id;
        p_open := p_open+SQL%rowcount;
        commit;
      exception when OTHERS then
        bars_audit.error('drop_userNA - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_userNA - err(2): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    bars_alerter(1);

  end drop_userNA;

--

  procedure drop_accountNA (p_open out number, p_code out number)
  is
    mfo_     varchar2(12);
    accmax_  number;
    Job_     number;
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    mfo_ := f_ourmfo_g;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_accountNA - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  delete from TABLEs

    begin
      bc.subst_mfo(mfo_);
      delete from accounts_update           where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from saldoa                    where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from specparam                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from specparam_int             where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from specparam_update          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from rko_lst                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_deposit               where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(8): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_deposit               where acc_d      in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_deposit_clos          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_deposit_clos          where acc_d      in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_techaccounts          where dpt_acc    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from dpt_techaccounts          where tech_acc   in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(13): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from DPT_VIDD                  where ACC7       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(14): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(15): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL                  where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(16): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL_UPDATE           where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(17): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from DPU_DEAL_UPDATE           where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(18): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from DPU_VIDD                  where ACC7       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(19): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_RATN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_RATN_ARC              where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_ACCN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_ACCN                  where ACRA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from INT_ACCN                  where ACRB       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from KLPACC                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(25): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from ND_ACC                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from NLK_REF                   where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from OPLDOK                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(28): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from PAWN_ACC                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(29): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from PEREKR_J                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(30): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from PEREKR_J                  where ACCS       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(31): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from RKO_LST                   where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(32): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from RKO_LST                   where ACCD       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from RKO_LST                   where ACC1       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SALDOA_TURN_QUEUE         where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SALDOB                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_950                    where NOSTRO_ACC in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(37): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_950D                   where CONTRA_ACC in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(38): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_ACC_SPARAM             where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(39): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_JOURNAL                where ACCD       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_JOURNAL                where ACCK       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(41): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from SW_STMT_INFO              where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(42): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from TMP_INTARC                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(43): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from TMP_INTPAY                where ACCA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(44): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from TMP_INTPAY                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(45): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from TTS                       where S6201      in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(46): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      delete from TTS                       where S7201      in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(47): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC3801    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(48): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC_RRS    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(49): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC_RRR    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(50): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC_RRD    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(51): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC6204    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(52): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from VP_LIST                   where ACC3800    in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(53): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acce                      where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(54): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acci                      where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(55): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from accountsw                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(56): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acc_over                  where acc_8000   in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(57): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acc_over                  where acc_9129   in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(58): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acc_sob                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(59): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from acc_tarif                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(60): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from bank_acc                  where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(61): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from cc_accp                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(62): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from cc_accp                   where accs       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(63): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from cc_add                    where accs       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(64): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from bpk_acc                   where acc_pk     in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(65): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from BARSAQ.AQ_SUBSCRIBERS_ACC where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag=''RNKNA'') and ostc=0 and bc.extract_mfo(branch)='''||mfo_||''')';
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(66): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(mfo_);
      delete from accounts_all              where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(67): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

    commit;  -- ьюцхЄ яюьюцхЄ

    begin
      bc.subst_mfo(mfo_);
      delete from accounts                  where rnk        in (select rnk from customerw where tag='RNKNA') and ostc=0 and bc.extract_mfo(branch)=mfo_;
      p_open := p_open+SQL%rowcount;
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNA - err(72): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_accountNA - err(73): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    commit;

--  recreate accounts SEQUENCE

    select nvl(max(acc),0)+1 into accmax_ from accounts;

    execute immediate 'DROP SEQUENCE S_ACCOUNTS';
    execute immediate 'CREATE SEQUENCE S_ACCOUNTS
                       START WITH '||accmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_ACCOUNTS TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_ACCOUNTS

    sys.utl_recomp.recomp_serial('BARS');

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ёўхЄют (ACCOUNTS ш ёт чрээ√х)

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tableAC_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('drop_accountNA - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

    bars_alerter(1);

  end drop_accountNA;

--

  procedure open_accountNA (p_open out number, p_code out number)
  is
    fl_        number;
    type       cur is ref cursor;
    cur_       cur;
    sql_       varchar2(32000);
    accR_      number;
    ndz_       number;
    mfog_      varchar2(12);
    id_        number;
    ispg_      varchar(32);
    kvv_       accounts.kv%type;

    rnk_       customer.rnk%type;
    DAPP_      date;
    daos_      date;
    dazs_      date;
    kv_        accounts.kv%type;
    isp_       number;
    nbs_       char(4);
    tip_       char(3);
    vid_       number;
    ostc_      number;
    ostq_      number;
    lim_       number;
    OSTX_      number;
    nms_       varchar2(70);
    nls_       varchar2(64);
    nlsalt_    accounts.nlsalt%type;
    branch_    accounts.branch%type;
    OB22_      SPECPARAM_INT.ob22%type;
    OB88_      SPECPARAM_INT.ob88%type;
    P080_      SPECPARAM_INT.P080%type;
    MFO_       SPECPARAM_INT.MFO%type;
    R020_FA_   SPECPARAM_INT.R020_FA%type;
    R011_      SPECPARAM.R011%type;
    R013_      SPECPARAM.R013%type;
    S240_      SPECPARAM.S240%type;
    S080_      SPECPARAM.S080%type;
    S180_      SPECPARAM.S180%type;
    S190_      SPECPARAM.S190%type;
    S181_      SPECPARAM.S181%type;
--  S260_      SPECPARAM.S260%type;
    S200_      SPECPARAM.S200%type;
    S230_      SPECPARAM.S230%type;
    S120_      SPECPARAM.S120%type;
    S031_      SPECPARAM.S031%type;
    S182_      SPECPARAM.S182%type;
    R014_      SPECPARAM.R014%type;
    K072_      SPECPARAM.K072%type;
    S130_      SPECPARAM.S130%type;
    S250_      SPECPARAM.S250%type;
    S090_      date;
    NKD_       SPECPARAM.NKD%type;
    IR_        int_ratn.ir%type;
    BDAT_      int_ratn.bdat%type;
    PAP_       ps.pap%type;
    flNA_      number;
    open_      number;
    s7_        number;
    s8_        number;
    s9_        number;
    l_ins_     number;
    mrnk_      varchar2(32);

    NLSNPROC_  accounts.nls%type;
    NLSDR_     accounts.nls%type;
    acra_      accounts.acc%type;
    acrb_      accounts.acc%type;
    DADN_      date;
    DADK_      date;

    pos_       number;
    Job_       number;

  begin

    bars_alerter(0);

    gl.frcvr := 1;

    mfog_ := f_ourmfo_g;

    l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=mfog_                  and
           logname like 'U'||migraSK.kodobl(mfog_)||'_%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=mfog_ and
             logname like 'U'||migraSK.kodobl(mfog_)||'_%';
    end if;

    select to_char(min(rnk))
    into   mrnk_
    from   customer
    where  date_off is null;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tai_accounts_tax disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbu_accounts_tax disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbu_accounts_1004 disable';
    exception when OTHERS then
      null;
    end;

    sql_:='select distinct  /* to ACCOUNTS */
                  nvl(cw.rnk,'||mrnk_||')                                                                                                  RNK     ,
                  nullif(s.DAPP,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                                    DAPP    ,
                  nullif(s.DAZS,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                                    DAZS    ,
                  s.DAOS                                                                                                                   DAOS    ,
                  s.KV                                                                                                                     KV      ,
                  nvl(u.UBARS,'||ispg_||')                                                                                                 ISP     ,
                  substr(s.NLS,1,4)                                                                                                        NBS     ,
                  1                                                                                                                        POS     ,
                  s.OSTC*100                                                                                                               OSTC    ,
                  s.OSTQ*100                                                                                                               OSTQ    ,
                  0                                                                                                                        LIM     ,
                  null                                                                                                                     OSTX    ,
                  (case when substr(s.NLS,1,2)=''25''                       then
                     11
                        when substr(s.NLS,1,4) in (''2610'',
                                                   ''2612'',
                                                   ''2615'',
                                                   ''2630'',
                                                   ''2635'',
                                                   ''2651'',
                                                   ''2652'',
                                                   ''1510'',
                                                   ''1511'',
                                                   ''1512'',
                                                   ''1515'',
                                                   ''1610'',
                                                   ''1611'',
                                                   ''1612'',
                                                   ''1615'')                then
                     4
                        when substr(s.NLS,1,4) in (''1500'',
                                                   ''1600'')                then
                     10
                        when substr(s.NLS,1,2) in (''20'',
                                                   ''21'',
                                                   ''22'',
                                                   ''27'')                  then
                     6
                        when substr(s.NLS,1,4)=''9802''                     then
                     5
                        when substr(s.NLS,1,4) in (''4310'',
                                                   ''4430'',
                                                   ''4432'',
                                                   ''4438'',
                                                   ''4439'',
                                                   ''4530'',
                                                   ''4532'',
                                                   ''4538'',
                                                   ''4539'')                then
                     8
                        when substr(s.NLS,1,4) in (select nbs from dpa_nbs) then
                     3
                   else
                     0
                   end)                                                                                                                    VID     ,
                  migraSK.valid_symbol(
                  trim(substr(nvl(s.NMS,''эх юяЁхфхыхэю''),1,70)))                                                                         NMS     ,
                  s.NLS                                                                                                                    NLS     ,
                  trim(substr(s.NLSALT,1,14))                                                                                              NLSALT  ,
                  s.BRANCH                                                                                                                 BRANCH  ,
                  /* to SPECPARAM_INT */
                  substr(''00''||s.OB22,-2)                                                                                                OB22    ,
                  s.OB88                                                                                                                   OB88    ,
                  s.P080                                                                                                                   P080    ,
                  s.MFO                                                                                                                    MFO     ,
                  s.R020_FA                                                                                                                R020_FA ,
                  /* to SPECPARAM */
                  s.R011                                                                                                                   R011    ,
                  s.R013                                                                                                                   R013    ,
                  nullif(s.S080,''0'')                                                                                                     S080    ,
--                decode(upper(s.S180),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(s.S180))  S180    ,
--                s.S181                                                                                                                   S181    ,
                  s.S190                                                                                                                   S190    ,
                  s.S200                                                                                                                   S200    ,
                  s.S230                                                                                                                   S230    ,
                  decode(upper(s.S240),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(s.S240))  S240    ,
                  s.S120                                                                                                                   S120    ,
                  s.S130                                                                                                                   S130    ,
                  s.S250                                                                                                                   S250    ,
                  s.S031                                                                                                                   S031    ,
                  s.S182                                                                                                                   S182    ,
                  s.R014                                                                                                                   R014    ,
                  s.K072                                                                                                                   K072    ,
                  s.S090                                                                                                                   S090    ,
--                s.S260                                                                                                                   S260    ,
                  nullif(s.BDAT,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                                    BDAT    ,
                  s.PR                                                                                                                     IR      ,
                  ps.pap                                                                                                                   PAP     ,
                  n.NLSNPROC                                                                                                               NLSNPROC,
                  n.NLSDR                                                                                                                  NLSDR   ,
                  nullif(s.DADN,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                                    DADN    ,
                  nullif(s.DADK,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                                    DADK
           from   customerw                                             cw,
--                S6_NA_ALCOUT                                          s ,
                  (select *
                   from   S6_NA_ALCOUT s
                   where  (s.nls,s.kv) in (select nls,kv
                                           from   (select nls,kv,count(*)
                                                   from   S6_NA_ALCOUT
                                                   group  by nls,kv
                                                   having count(*)>1)) and
                          nvl(s.dazs,trunc(sysdate)+36524)=
                          (select max(nvl(dazs,trunc(sysdate)+36524))
                           from   S6_NA_ALCOUT where nls=s.nls and kv=s.kv)
                  union all
                   select *
                   from   S6_NA_ALCOUT
                   where  (nls,kv) not in (select nls,kv
                                           from   (select nls,kv,count(*)
                                                   from   S6_NA_ALCOUT
                                                   group  by nls,kv
                                                   having count(*)>1))) s ,
                  S6_NA_CLIOUT                                          c ,
                  S6_NA_ALNLSN                                          n ,
                  USERS_SKARB6_BARS                                     u ,
                  ps
           where  cw.tag(+)=''RNKNA''                                                    and
                  to_number(cw.value(+))=c.RNK*10                                        and
                  (nullif(s.DAZS,to_date(''30.12.1899'',''DD.MM.YYYY'')) is null     or
                  (nullif(s.DAZS,to_date(''30.12.1899'',''DD.MM.YYYY'')) is not null and
                   nullif(s.DAZS,to_date(''30.12.1899'',''DD.MM.YYYY''))>=
                   add_months(trunc(sysdate,''YEAR''),-12))                          or
                  (nullif(s.DAZS,to_date(''30.12.1899'',''DD.MM.YYYY'')) is not null and
                   substr(s.NLS,1,4) in (select NBS from DPA_NBS)))                      and
                  s.ISP=u.USKARB6(+)                                                     and
                  substr(s.NLS,1,4)=ps.nbs(+)                                            and
                  n.nls(+)=s.nls                                                         and
                  n.kv(+)=s.kv                                                           and
                  c.rnk=s.rnk                                                            and
                  s.DAOS<trunc(sysdate)
           order  by substr(s.NLS,1,4) desc';
    open cur_ for sql_;

    NKD_ := null;

    LOOP

      S180_ := null;
      S181_ := null;

      fetch cur_ into RNK_     ,
                      DAPP_    ,
                      DAZS_    ,
                      DAOS_    ,
                      KV_      ,
                      ISP_     ,
                      NBS_     ,
                      POS_     ,
                      OSTC_    ,
                      OSTQ_    ,
                      LIM_     ,
                      OSTX_    ,
                      VID_     ,
                      NMS_     ,
                      NLS_     ,
                      NLSALT_  ,
                      BRANCH_  ,
                      OB22_    ,
                      OB88_    ,
                      P080_    ,
                      MFO_     ,
                      R020_FA_ ,
                      R011_    ,
                      R013_    ,
                      S080_    ,
--                    S180_    ,
--                    S181_    ,
                      S190_    ,
                      S200_    ,
                      S230_    ,
                      S240_    ,
                      S120_    ,
                      S130_    ,
                      S250_    ,
                      S031_    ,
                      S182_    ,
                      R014_    ,
                      K072_    ,
                      S090_    ,
--                    S260_    ,
                      BDAT_    ,
                      IR_      ,
                      PAP_     ,
                      NLSNPROC_,
                      NLSDR_   ,
                      DADN_    ,
                      DADK_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      if length(nls_)>14 then
        bars_audit.error('open_accountNA - err(0): фышэр ёў╕Єр сюы№°х 14, '||Chr(13)||Chr(10)||
                         'branch = '||branch_||', '                        ||Chr(13)||Chr(10)||
                         'NLS = '   ||nls_   ||', '                        ||Chr(13)||Chr(10)||
                         'KV = '    ||kv_);
        p_code := p_code+1;
        fl_ := 1;
        goto kakaxer;
      end if;

      fl_ := 0;

      bc.subst_branch(branch_);

      ndz_ := null;
      --1. OP_REG_ex
      begin

        tip_ := 'ODB';

        if    substr(nls_,1,3)='100' and substr(nls_,1,4)<>'1007' then
          if kv_=980 then
            tip_ := 'KAS';
          else
            tip_ := 'KAV';
          end if;
        elsif substr(nls_,1,3) in ('604','603','602') and kv_=980 then
            tip_ := 'SD ';
        elsif substr(nls_,1,4) in ('2625','2605','2655') then
            tip_ := 'PK1';
        end if;

        OP_REG_exfl(99     ,  -- mod_       INTEGER,   -- Opening mode :
                    null   ,  -- p1_        INTEGER,   -- 1st Par      :
                    0      ,  -- p2_        INTEGER,   -- 2nd Par      :
                    null   ,  -- p3_        INTEGER,   -- 3rd Par (Grp):
                    ndz_   ,  -- p4_ IN OUT INTEGER,   -- 4th Par      :
                    RNK_   ,  -- rnk_       INTEGER,   -- Customer number
                    NLS_   ,  -- p_nls_     VARCHAR2,  -- Account  number
                    KV_    ,  -- kv_        SMALLINT,  -- Currency code
                    NMS_   ,  -- nms_       VARCHAR2,  -- Account name
                    TIP_   ,  -- tip_       CHAR,      -- Account type
                    ISP_   ,  -- isp_       SMALLINT,
                    accR_  ,  -- accR_  OUT INTEGER,
                    '1'    ,  -- nbsnull_   VARCHAR2 DEFAULT '1',
                    null   ,  -- pap_       NUMBER   DEFAULT NULL,
                    VID_   ,  -- vid_       NUMBER   DEFAULT NULL,
                    POS_   ,  -- pos_       NUMBER   DEFAULT NULL,
                    null   ,  -- sec_       NUMBER   DEFAULT NULL,
                    null   ,  -- seci_      NUMBER   DEFAULT NULL,
                    null   ,  -- seco_      NUMBER   DEFAULT NULL,
                    0      ,  -- blkd_      NUMBER   DEFAULT NULL,
                    0      ,  -- blkk_      NUMBER   DEFAULT NULL,
                    LIM_   ,  -- lim_       NUMBER   DEFAULT NULL,
                    OSTX_  ,  -- ostx_      VARCHAR2 DEFAULT NULL,
                    NLSALT_,  -- nlsalt_    VARCHAR2 DEFAULT NULL,
                    BRANCH_,  -- tobo_      VARCHAR2 DEFAULT NULL,
                    null   ,  -- accc_      NUMBER   DEFAULT NULL,
                    0);       -- fl_        NUMBER   DEFAULT NULL,
        l_ins_ := l_ins_+1;
      exception when others then
        if dazs_ is null then
          bars_audit.error('open_accountNA - err(1): ' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                            'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                            'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                            'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          p_code := p_code+1;
          fl_ := 1;
        else
--        bars_audit.warning('open_accountS6 - warn(1): '||sqlerrm||', '||Chr(13)||Chr(10)||
--                                            'branch = '||branch_||', '||Chr(13)||Chr(10)||
--                                            'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
--                                            'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          if substr(sqlerrm,1,20)='ORA-20097: CAC-00005' then
            fl_ := 0;
          else
            fl_ := 1;
          end if;
        end if;
      end;
--    end if;

      if fl_=0 then
        if accR_ is not null then
          select count(*)
          into   flNA_
          from   accountsw
          where  acc=accR_ and
                 tag='IMPNA';
          if flNA_=0 then
            update accounts
            set    dapp=dapp_,
                   dazs=dazs_,
                   daos=daos_,
                   ostc=ostc_,
                   ostb=ostc_,
                   ostq=ostq_,
                   pos=pos_  ,
                   rnk=rnk_
            where  acc=accR_;
            begin
              update accounts
              set    nbs=nbs_
              where  acc=accR_;
            EXCEPTION WHEN OTHERS THEN
              bars_audit.error('open_accountNA - err(7): ' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                                'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                                'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
--            fl_ := 1;
            end;

            begin
               insert
               into   saldoa (acc ,
                              fdat,
                              pdat,
                              ostf,
                              dos ,
                              kos)
                      values (accR_   ,
                              gl.bdate,
                              dapp_   ,
                              ostc_   ,
                              0       ,
                              0);
            EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
               update saldoa
               set    pdat=dapp_,
                      ostf=ostc_,
                      dos=0     ,
                      kos=0
               where  acc=accR_ and
                      fdat=gl.bdate;
            end;

            begin
              insert
              into   accountsw (acc,
                                tag,
                                value)
                        values (accR_  ,
                                'IMPNA',
                                'Imported from Nadra');
            exception when others then
              bars_audit.error('open_accountNA - err(2): ' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                                'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;

            --2. INSERT or UPDATE SPECPARAM_INT

            if fl_=0 then
              begin
                insert
                into SPECPARAM_INT (acc    ,
                                    p080   ,
                                    ob22   ,
                                    mfo    ,
                                    r020_fa,
                                    ob88   ,
                                    deb02  ,
                                    deb03)
                            values (accR_   ,
                                    P080_   ,
                                    OB22_   ,
                                    MFO_    ,
                                    R020_FA_,
                                    OB88_   ,
                                    DADN_   ,
                                    DADK_);
              EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                begin
                update SPECPARAM_INT
                set    p080=P080_      ,
                       ob22=OB22_      ,
                       mfo=MFO_        ,
                       r020_fa=R020_FA_,
                       ob88=OB88_      ,
                       deb02=DADN_     ,
                       deb03=DADK_
                where  acc=accR_;
                EXCEPTION WHEN OTHERS THEN
                  bars_audit.error('open_accountNA - err(3u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                    'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                    'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                    'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                  p_code := p_code+1;
                  fl_ := 1;
                end;
                        WHEN OTHERS THEN
                bars_audit.error('open_accountNA - err(3): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                p_code := p_code+1;
                fl_ := 1;
              end;
            end if;

            --3. INSERT or UPDATE SPECPARAM

            if DADK_ is not null then
              update accounts
              set    mdate=DADK_
              where  acc=accR_;
              if DADN_ is not null then
                S180_ := fs180(accR_,null,null,DADN_);
                begin
                  select s181
                  into   S181_
                  from   kl_s180
                  where  s180=S180_;
                exception when no_data_found then
                  null;
                end;
                begin
                  insert
                  into   accountsw (acc,
                                    tag,
                                    value)
                            values (accR_ ,
                                    'DADN',
                                    to_char(DADN_,'DD/MM/YYYY'));
                exception when others then
                  null;
                end;
              end if;
            end if;

            if fl_ = 0 then
              begin
                insert
                into   SPECPARAM (acc ,
                                  R011,
                                  R013,
                                  S240,
                                  S080,
                                  S180,
                                  S190,
                                  S181,
--                                S260,
                                  S200,
                                  S120,
                                  S031,
                                  S182,
                                  S130,
                                  S090,
                                  NKD)
                          values (accR_,
                                  R011_,
                                  R013_,
                                  S240_,
                                  S080_,
                                  S180_,
                                  S190_,
                                  S181_,
--                                S260_,
                                  S200_,
                                  S120_,
                                  S031_,
                                  S182_,
                                  S130_,
                                  S090_,
                                  NKD_);
              EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                begin
                  update SPECPARAM
                  set    R011=R011_,
                         R013=R013_,
                         S240=S240_,
                         S080=S080_,
                         S180=S180_,
                         S190=S190_,
                         S181=S181_,
--                       S260=S260_,
                         S200=S200_,
                         S120=S120_,
                         S031=S031_,
                         S182=S182_,
                         S130=S130_,
                         S090=S090_,
                         NKD=NKD_
                  where  acc=accR_;
                EXCEPTION WHEN OTHERS THEN
                  bars_audit.error('open_accountNA - err(4u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                    'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                    'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                    'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                  p_code := p_code+1;
                  fl_ := 1;
                end;
                        WHEN OTHERS THEN
                bars_audit.error('open_accountNA - err(4): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                 'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                 'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                 'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                p_code := p_code+1;
                fl_ := 1;
              end;
            end if;

            if substr(nls_,1,1) in ('2','3','9') then

--            ╧ЁюЎхэЄэ√х ърЁЄюўъш ???

              if fl_=0 then

                if IR_ is not null then

                  if pap_=1 then
                     id_ := 0;
                  else
                     id_ := 1;
                  end if;

                  if NLSNPROC_ is not null then
                    begin
                      select acc
                      into   acra_
                      from   accounts
                      where  nls=NLSNPROC_ and
                             kv=kv_;
                    exception when no_data_found then
                      acra_ := null;
                    end;
                  else
                    acra_ := null;
                  end if;

                  if NLSDR_ is not null then
                    begin
                      select acc
                      into   acrb_
                      from   accounts
                      where  nls=NLSDR_ and
                             kv=980;
                    exception when no_data_found then
                      acrb_ := null;
                    end;
                  else
                    acrb_ := null;
                  end if;

--                4. INSERT or UPDATE INT_ACCN

                  begin
                    insert
                    into   INT_ACCN (ACC    ,  -- accR_
                                     ID     ,  -- id_
                                     METR   ,  -- 0
                                     BASEY  ,  -- 0
                                     FREQ   ,  -- 1
                                     ACR_DAT,  -- bankdate
                                     ACRA   ,  -- ???
                                     ACRB)
                             values (accR_   ,
                                     id_     ,
                                     0       ,
                                     0       ,
                                     1       ,
                                     bankdate,
                                     acra_   ,
                                     acrb_);
                  EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                    update INT_ACCN
                    set    METR=0          ,
                           BASEY=0         ,
                           FREQ=1          ,
                           ACR_DAT=bankdate,
                           ACRA=acra_      ,
                           ACRB=acrb_
                    where  acc=accR_ and
                           id=id_;
                            WHEN OTHERS THEN
                    bars_audit.error('open_accountNA - err(5): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                     'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                     'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                     'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                    p_code := p_code+1;
                    fl_ := 1;
                  end;

--                5. INSERT or UPDATE INT_RATN

                  if fl_=0 then
                    begin
                      insert
                      into   INT_RATN (acc ,
                                       id  ,
                                       BDAT,
                                       IR  ,
                                       IDU
                                      )
                               values (accR_              ,
                                       id_                ,
                                       nvl(BDAT_,gl.bdate),
                                       IR_                ,
                                       1
                                      );
                    EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
                      update INT_RATN
                      set    IR=IR_ ,
                             BR=null,
                             OP=null,
                             IDU=1
                      where  acc=accR_ and
                             id=id_    and
                             BDAT=BDAT_;
                              WHEN OTHERS THEN
                      bars_audit.error('open_accountNA - err(6):' ||sqlerrm||', '||Chr(13)||Chr(10)||
                                                       'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                       'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                       'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
                      p_code := p_code+1;
                      fl_ := 1;
                    end;
                  end if;
                end if;
              end if;
            end if;
          end if;
        end if;
      end if;

<<kakaxer>> null;

      bc.set_context;

      if fl_=0 then
        commit;
        p_open := p_open+1;
      else
        rollback;
      end if;

      open_ := p_open;

      if l_ins_>0 and mod(l_ins_,10000)=0 then

--      ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ёўхЄют (ACCOUNTS ш ёт чрээ√х)

        BEGIN
          DBMS_JOB.SUBMIT (job       => Job_                    ,
                           what      => 'migraSK.tableAC_stats;',
                           next_date => sysdate                 ,
                           interval  => null                    ,
                           no_parse  => FALSE);
        exception when others then
          bars_audit.error('open_accountNA - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        END;

      end if;

      p_open := open_;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    begin
      execute immediate 'alter trigger tbu_accounts_1004 enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbu_accounts_tax enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tai_accounts_tax enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 enable';
    exception when OTHERS then
      null;
    end;

    gl.frcvr := 0;

--  уЁштэр яю тёхь сЁрэўрь т cur_rates$base

    migraSK.grn11tocurrates;

    bars_alerter(1);

  end open_accountNA;

--

  procedure balans_firstostNA (p_open out number, p_code out number)
  is
    dat_  date;
  begin
    bars_alerter(0);
    tokf;
    dat_ := gl.bdate;
    toroot;
    p_open := 0;
    p_code := 0;
    begin
      NACH_VN1(f_ourmfo_g,dat_);
      p_open := 1;
    exception when OTHERS then
      bars_audit.error('balans_firstostNA - err(1): '||sqlerrm);
      p_code := 1;
    end;
    bars_alerter(1);
  end balans_firstostNA;

--

  procedure load_obnlsNA (p_open out number, p_code out number)
  is
    dat_  date;
    Job_  number;
  begin
    bars_alerter(0);
    tokf;
    dat_ := gl.bdate;
    p_open := 0;
    p_code := 0;
    begin
--    NACH_VN2un(f_ourmfo_g,dat_);
      NACH_VN2AUN(f_ourmfo_g,dat_);
--    т√чтрЄ№ JOBюь NACH_VN2BUN
      BEGIN
        DBMS_JOB.SUBMIT (job       => Job_                            ,
                         what      => 'NACH_VN2BUN(MFOg_,gl.bd);',
                         next_date => sysdate                         ,
                         interval  => null                            ,
                         no_parse  => FALSE);
      exception when others then
        bars_audit.error('load_obnlsNA - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := 1;
      END;
      p_open := 1;
    exception when OTHERS then
      bars_audit.error('load_obnlsNA - err(1): '||sqlerrm);
      p_code := 1;
    end;
--  toroot;
    bars_alerter(1);
  end load_obnlsNA;

--

  procedure drop_obnlsNA (p_open out number, p_code out number)
  is
    dat_  date;
  begin
    bars_alerter(0);
    tokf;
    p_open := 0;
    p_code := 0;
    begin
      delete
      from   saldoa;
      p_open := 1;
      begin
        execute immediate 'insert
                           into   saldoa
                           select *
                           from   TEST_SALDOA';
        commit;
        p_open := 2;
      exception when OTHERS then
        bars_audit.error('drop_obnlsNA - err(0): '||sqlerrm);
        p_code := 1;
        rollback;
      end;
    exception when OTHERS then
      bars_audit.error('drop_obnlsNA - err(1): '||sqlerrm);
      p_code := 1;
      rollback;
    end;
--  toroot;
    bars_alerter(1);
  end drop_obnlsNA;

--

  procedure open_vplistNA (p_open out number, p_code out number)
  is
    dat_  date;
  begin
    bars_alerter(0);
    tokf;
    dat_ := gl.bdate;
    toroot;
    p_open := 0;
    p_code := 0;
    begin
      NACH_VN3(f_ourmfo_g,dat_);
      p_open := 1;
    exception when OTHERS then
      bars_audit.error('open_vplistNA - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := 1;
    end;
    bars_alerter(1);
  end open_vplistNA;

--

  procedure create_documNA (p_open out number, p_code out number)
  is
    dat_  date;
    Job_  number;
  begin

    bars_alerter(0);

    tokf;
    dat_ := gl.bdate;
    toroot;

    p_open := 0;
    p_code := 0;

--  ъюЁЁхъЄшЁютър accounts яю saldoa, saldob (ўхЁхч чрфрэшх)

    BEGIN
      DBMS_JOB.SUBMIT (job       => Job_               ,
                       what      => 'correct_accounts;',
                       next_date => sysdate            ,
                       interval  => null               ,
                       no_parse  => FALSE);
    exception when others then
      bars_audit.error('create_documNA - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    END;

    begin
      execute immediate 'alter trigger TIU_OPER_INFDOC disable';
    exception when OTHERS then
      null;
    end;

    begin
      NACH_VN4un(f_ourmfo_g,dat_);
      p_open := 1;
    exception when OTHERS then
      bars_audit.error('create_documNA - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := 1;
    end;

    begin
      execute immediate 'alter trigger TIU_OPER_INFDOC enable';
    exception when OTHERS then
      null;
    end;

    bars_alerter(1);

  end create_documNA;

--

  procedure open_proc_drNA (p_open out number, p_code out number)
  is
  begin
    bars_alerter(0);
    p_open := 0;
    p_code := 0;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOB_ACCM disable';
    exception when OTHERS then
      null;
    end;

    migraSK.open_proc_drm('open_proc_drNA - ',p_open,p_code,0);

    begin
      execute immediate 'alter trigger TIUD_SALDOB_ACCM enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIUD_SALDOA_ACCM enable';
    exception when OTHERS then
      null;
    end;

    bars_alerter(1);
  end open_proc_drNA;

--

  procedure create_userNF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    id_       staff$base.id%type;
    idugo_    staff$base.id%type;
    ISP_      number;
    TABN_     varchar2(10);
    FIO_      varchar2(40);
    logname_  varchar2(30);
    branch_   varchar2(30);
    fi3_      char(3);
    MFOg_     varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),12,3),
                              substr(min(branch),1,15)
                       from   s6_nf_users'
                       into   fi3_   ,
                              branch_;

    sql_:='select ISP                                                                   ISP    ,
                  trim(substr(trim(IKEY),-6))                                           TABN   ,
                  nvl(migraSK.valid_symbol(FIO),''яюы№чютрЄхы№ эх шфхэЄшЇшЎшЁютрэ'')    FIO    ,
                  ''U'||migraSK.kodobl('''||MFOg_||''')||'_'||fi3_||'_S''||to_char(ISP) logname
           from   S6_NF_USERS';

    open cur_ for sql_;

    loop

      fetch cur_ into ISP_    ,
                      TABN_   ,
                      FIO_    ,
                      logname_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      select min(num)
      into   id_
      from   conductor
      where  num not in (select id from staff$base) and
             num<(select max(id) from staff$base);

      begin

        begin
          select id
          into   idugo_
          from   staff$base
          where  logname=logname_;
        exception when no_data_found then
          idugo_ := null;
        end;

        if idugo_ is null then

          begin
            execute immediate 'drop user '||logname_;
          exception when OTHERS then
            bars_audit.warning('create_userNF - warn(1): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--          p_code := p_code+1;
          end;

          bc.subst_branch(branch_);

          begin
            BARS_USERADM.create_user(FIO_             ,  -- p_usrfio      in  staff$base.fio%type
                                     TABN_            ,  -- p_usrtabn     in  staff$base.tabn%type
                                     0                ,  -- p_usrtype     in  staff$base.clsid%type
                                     1                ,  -- p_usraccown   in  staff$base.type%type
                                     branch_          ,  -- p_usrbranch   in  varchar2
                                     0                ,  -- p_usrusearc   in  staff$base.usearc%type
                                     0                ,  -- p_usrusegtw   in  staff$base.usegtw%type
                                     'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
                                     logname_         ,  -- p_reclogname  in  staff$base.logname%type
                                     'qwerty'         ,  -- p_recpasswd   in  varchar2
                                     null             ,  -- p_recappauth  in  varchar2
                                     null             ,  -- p_recprof     in  varchar2
                                     'BARS_CONNECT'   ,  -- p_recdefrole  in  varchar2
                                     null             ,  -- p_recrsgrp    in  varchar2
                                     id_                 -- p_usrid       in  staff$base.id%type default null
                                    );
          exception when OTHERS then
            bars_audit.error('create_userNF - err(2): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;

        else

          begin
            execute immediate 'create user '||logname_||' identified by qwerty';
          exception when OTHERS then
            bars_audit.warning('create_userNF - warn(3): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--          p_code := p_code+1;
          end;

          bc.subst_branch(branch_);

          begin

            BARS_USERADM.alter_user(idugo_           ,
                                    FIO_             ,  -- p_usrfio      in  staff$base.fio%type
                                    TABN_            ,  -- p_usrtabn     in  staff$base.tabn%type
                                    0                ,  -- p_usrtype     in  staff$base.clsid%type
                                    1                ,  -- p_usraccown   in  staff$base.type%type
                                    branch_          ,  -- p_usrbranch   in  varchar2
                                    0                ,  -- p_usrusearc   in  staff$base.usearc%type
                                    0                ,  -- p_usrusegtw   in  staff$base.usegtw%type
                                    'DEFAULT_PROFILE',  -- p_usrwprof    in  staff$base.web_profile%type
                                  --logname_         ,  -- p_reclogname  in  staff$base.logname%type
                                    'qwerty'         ,  -- p_recpasswd   in  varchar2
                                    null             ,  -- p_recappauth  in  varchar2
                                    null             ,  -- p_recprof     in  varchar2
                                    'BARS_CONNECT'   ,  -- p_recdefrole  in  varchar2
                                    null                -- p_recrsgrp    in  varchar2
                                   );
          exception when OTHERS then
            bars_audit.error('create_userNF - err(4): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;

        end if;

        bc.set_context;

        delete
        from   USERS_SKARB6_BARS
        where  KF=MFOg_     and
               USKARB6=ISP_ and
               filial=p_filial;
        insert
        into   USERS_SKARB6_BARS (KF     ,
                                  USKARB6,
                                  UBARS  ,
                                  filial)
                          values (MFOg_          ,
                                  ISP_           ,
                                  nvl(idugo_,id_),
                                  p_filial);
        commit;

        p_open := p_open+1;

      exception when OTHERS then

        bars_audit.error('create_userNF - err(5): ('||logname_||') '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;

      end;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(0);

  end create_userNF;

--

  procedure create_customerNF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type        cur is ref cursor;
    cur_        cur;
    sql_        varchar2(32000);
    rnk_        number;
    fl_         number;
    mfog_       varchar2(12);
    ispg_       varchar2(32);

    TAXF_       varchar2(12);
    DATEON_     date;
    DATEA_      date;
    DATET_      date;
    BDAY_       date;
    FS_         varchar2(3);
    SED_        char(4);
    NMK_        varchar2(70);
    IDCLIENT_   number;
    GROUP_C_    number;
    OKPO_       varchar2(12);
    COUNTRY_    number;
    CREG_       number;
    CDST_       number;
    PRINSIDER_  number;
    ISP_        number;
    NMKK_       varchar2(38);
    OE_         varchar2(5);
    CODCAGENT_  number;
    ISE_        varchar2(5);
    SEX_        number;
    TGR_        number;
    CUSTTYPE_   number;
    VED_        varchar2(5);
    ND_         varchar2(10);
    CRISK_      number;
    PHONE_      varchar2(20);
    POSTIND_    varchar2(10);
    OBLAST_     varchar2(40);
    RAYON_      varchar2(25);
    CITY_       varchar2(40);
    STREET_     varchar2(40);
    HOUSE_      varchar2(20);
    KVARTIRA_   varchar2(20);
    TEL_        varchar2(20);
    EMAIL_      varchar2(100);
    SAB_        varchar2(6);
    STMT_       number;
    RGTAX_      varchar2(30);
    RGADM_      varchar2(30);
    MFO_        varchar2(12);
    BIC_        varchar2(12);

    ADM_        varchar2(70);
    PINCODE_    varchar2(10);
    LIM_        number;
    NOMPDV_     varchar2(9);
    NMKU_       varchar2(250);
    RUK_        varchar2(70);
    TELR_       varchar2(20);
    BUH_        varchar2(70);
    TELB_       varchar2(20);
    DOV_        varchar2(35);
    BDOV_       date;
    EDOV_       date;
    PASSP_      number(1);
    SER_        varchar2(10);
    NUMDOC_     varchar2(20);
    PDATE_      date;
    BPLACE_     varchar2(70);
    TELD_       varchar2(20);
    TELW_       varchar2(20);
    TEL_FAX_    varchar2(20);

    l_rnk       number;
    l_okpo      varchar2(14);
    l_branch    varchar2(30);
    l_ins_      number;

    SERIA_      VARCHAR2(10);
    NOMBER_     VARCHAR2(20);
    ORGAN_      VARCHAR2(50);
    DOTE_       date;

    adr_        customer.adr%type;
    len_adr_    number;
    len_raz_    number;
    len_organ_  number;

    fi3_        char(3);
    K050_       char(3);
    segm_       char(4);
    K013_       char(1);

    Job_        number;
    sthokv_     varchar2(960);

  begin

    bars_alerter(0);

    mfog_ := f_ourmfo_g;

    l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    execute immediate 'select substr(min(branch),12,3)
                       from   s6_nf_users'
                       into   fi3_;

    select data_length
    into   len_adr_
    from   user_tab_columns
    where  table_name='CUSTOMER' and
           column_name='ADR';

    select data_length
    into   len_organ_
    from   user_tab_columns
    where  table_name='PERSON' and
           column_name='ORGAN';

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=mfog_                              and
           logname like 'U'||migraSK.kodobl(mfog_)||'_'||fi3_||'_S%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=mfog_ and
             logname like 'U'||migraSK.kodobl(mfog_)||'_'||fi3_||'_S%';
      if ispg_ is null then
        select to_char(min(id))
        into   ispg_
        from   staff$base
        where  bc.extract_mfo(branch)=mfog_ and
               tabn is not null;
        if ispg_ is null then
          select to_char(min(id))
          into   ispg_
          from   staff$base
          where  bc.extract_mfo(branch)=mfog_;
        end if;
      end if;
    end if;

    MFO_  := null;
--  K050_ := null;

    sql_:='select distinct
                  TAXF     ,
                  K050     ,
                  K013     ,
                  SEGM     ,
                  DATEON   ,
                  DATEA    ,
                  DATET    ,
                  BDAY     ,
                  FS       ,
                  SED      ,
                  NMK      ,
                  IDCLIENT ,
                  GROUP_C  ,
                  OKPO     ,
                  COUNTRY  ,
                  CDST     ,
                  CREG     ,
                  PRINSIDER,
                  ISP      ,
                  NMKK     ,
                  OE       ,
                  CODCAGENT,
                  ISE      ,
                  SEX      ,
                  TGR      ,
                  CUSTTYPE ,
                  VED      ,
                  ND       ,
                  CRISK    ,
                  PHONE    ,
                  POSTIND  ,
                  OBLAST   ,
                  RAYON    ,
                  CITY     ,
                  STREET   ,
                  HOUSE    ,
                  KVARTIRA ,
                  TEL      ,
                  EMAIL    ,
                  SAB      ,
                  STMT     ,
                  RGADM    ,
                  BIC      ,
                  SERIA    ,
                  NOMBER   ,
                  ORGAN    ,
                  DOTE     ,
                  Adr      ,
                  ADM      ,
                  PINCODE  ,
                  LIM      ,
                  NOMPDV   ,
                  NMKU     ,
                  RUK      ,
                  TELR     ,
                  BUH      ,
                  TELB     ,
                  DOV      ,
                  BDOV     ,
                  EDOV     ,
                  PASSP    ,
                  BPLACE   ,
                  TELD     ,
                  TELW     ,
                  TEL_FAX
           from   (select distinct
                          c.TAXF                                                                                                 TAXF     ,  -- ╩юф яырЄэшър яюфрЄъiт                   varchar(5)
                          decode(c.K050,''└'',''└  '',''┴'',''┴  '',''┬'',''┬  '',''A'',''A  '',''B'',''┬  '',
                                 rpad(nvl(c.K050,''000''),3,''0''))                                                              K050     ,  -- ╧юърчрЄхы№ k050                         CHAR(3)
                          c.K013                                                                                                 K013     ,  -- ╧юърчрЄхы№ k013                         CHAR(1)
                          c.SEGM                                                                                                 SEGM     ,  -- ёхуьхэЄ (ъюф ърЄхуюЁшш - ярЁ. 5060)     CHAR(4)
                          nvl(nullif(c.DATE_ON,to_date(''30.12.1899'',''DD.MM.YYYY'')),add_months(trunc(sysdate,''YEAR''),-12))  DATEON   ,  -- ─рЄр Ёх║ёЄЁрЎi┐                         smalldatetime
                          nullif(c.DATEA,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                 DATEA    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т рфьiэiёЄЁрЎi┐         smalldatetime
                          nullif(c.DATET,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                 DATET    ,  -- ─рЄр Ёх║ёЄЁрЎi┐ т яюфрЄъютiщ iэёяхъЎi┐  smalldatetime
                          nullif(c.BDAY,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                  BDAY     ,  -- ─рЄр эрЁюфцхээ                          smalldatetime
                          nvl(nullif(substr(''00''||trim(c.FS),-2),''99''),''ZZ'')                                               FS       ,  -- ╘юЁьр тырёэюёЄi                         tinyint
                          substr(nvl(ltrim(c.SED),''00'')||''  '',1,4)                                                           SED      ,  -- ╘юЁьр уюёяюфрЁ■трээ                     char(4)
                          migraSK.valid_symbol(trim(substr(trim(coalesce(c.NMK,c.NMKK,
                                               ''╩ышхэЄ ''||to_char(mod(c.RNK,1000000)))),1,70)))                                NMK      ,  -- ╧ютэх эрщьхэєтрээ                       varchar(150)
                          mod(c.RNK,1000000)                                                                                     IDCLIENT ,  -- ╩юф                                     int
                          0                                                                                                      GROUP_C  ,  -- ╩юф+                                    int
                          migraSK.valid_symbol(nvl(c.OKPO,''000000000''))                                                        OKPO     ,  -- IфхэЄшЇiърЎiщэшщ ъюф                    varchar(10)
                          nvl(nullif(nvl(c.COUNTRY,0),0),804)                                                                    COUNTRY  ,  -- ╩Ёр┐эр                                  smallint
                          nullif(c.C_DST,0)                                                                                      CDST     ,  -- ╧юфрЄъютр iэёяхъЎi                      tinyint
                          nullif(c.C_REG,0)                                                                                      CREG     ,  -- ╨хуiюэ                                  tinyint
                          c.PRINSIDER                                                                                            PRINSIDER,  -- IэёрщфхЁ                                tinyint
                          nvl(u.UBARS,'||ispg_||')                                                                               ISP      ,  -- ╩юф ъюЁшёЄєтрўр                         smallint
                          migraSK.valid_symbol(trim(substr(trim(nvl(c.NMKK,c.NMK)),1,38)))                                       NMKK     ,  -- ╩юЁюЄъх эрщьхэєтрээ                     varchar(40)
                          substr(''00000''||trim(c.OE),-5)                                                                       OE       ,  -- ├рыєч№                                  int
                          decode(c.CUSTTYPE,0,decode(c.COUNTRY,nvl(nullif(nvl(c.COUNTRY,0),0),804),5,6),
                                            1,decode(c.COUNTRY,nvl(nullif(nvl(c.COUNTRY,0),0),804),3,4),
                                              decode(c.COUNTRY,nvl(nullif(nvl(c.COUNTRY,0),0),804),1,2))                         CODCAGENT,  -- ╒рЁръЄхЁшёЄшър
                          substr(''00000''||trim(c.ISE),-5)                                                                      ISE      ,  -- IэёЄшЄ.ёхъЄюЁ хъюэюьiъш                 int
                          decode(c.SEX,''0'',2,''1'',1,0)                                                                        SEX      ,  -- ╤ЄрЄ№                                   tinyint
--                        nullif(c.TGR,0)                                                                                        TGR      ,  -- ╥шя фхЁцЁх║ёЄЁє                         tinyint
                          decode(c.CUSTTYPE,0,2,1,1,3)                                                                           TGR      ,  -- ╥шя фхЁцЁх║ёЄЁє                         tinyint
                          decode(c.CUSTTYPE,1,2,0,3,1)                                                                           CUSTTYPE ,  -- ╥шя ъыi║эЄр                             tinyint
                          substr(''00000''||trim(c.VED),-5)                                                                      VED      ,  -- ┬шф хъюэюь.фi ы№эюёЄi                   int
                          c.ND                                                                                                   ND       ,
                          decode(c.CRISK,1,1,2,2,3,3,4,4,5,5,null)                                                               CRISK    ,
                          migraSK.valid_symbol(nvl(c.TELR,nvl(c.TELB,nvl(c.TELD,nvl(c.TELW,'''')))))                             PHONE    ,  -- ╥хыхЇюэ                                 varchar(20)
                          c.POSTIND                                                                                              POSTIND  ,  -- ╧ю°Єютшщ iэфхъё                         varchar(10)
                          c.OBLAST                                                                                               OBLAST   ,  -- ╬сырёЄ№                                 varchar(40)
                          c.RAYON                                                                                                RAYON    ,  -- ╨рщюэ                                   varchar(25)
                          c.CITY                                                                                                 CITY     ,  -- ╠iёЄю, эрёхы.яєэъЄ                      varchar(40)
                          c.STREET                                                                                               STREET   ,  -- ┬єышЎ                                   varchar(40)
                          ''''                                                                                                   HOUSE    ,  -- ─iь                                     varchar(20)
                          ''''                                                                                                   KVARTIRA ,  -- ╩трЁЄшЁр                                varchar(20)
                          c.TELD                                                                                                 TEL      ,  -- ╥хыхЇюэ                                 varchar(20)
                          c.EMAIL                                                                                                EMAIL    ,  -- ┼ыхъЄЁюээр рфЁхёр                       varchar(20)
                          null                                                                                                   SAB      ,  -- SAB
                          null                                                                                                   STMT     ,
                          c.RGADM                                                                                                RGADM    ,
                          null                                                                                                   BIC      ,
                          c.SER                                                                                                  SERIA    ,  -- ╤хЁш  ярёяюЁЄр
                          c.NUMDOC                                                                                               NOMBER   ,  -- ═юьхЁ ярёяюЁЄр
                          c.ORGAN                                                                                                ORGAN    ,  -- ╩хь т√фрэ
                          nullif(c.PDATE,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                 DOTE     ,  -- ╩юуфр т√фрэ
                          nvl(c.adr,''рфЁхё'')                                                                                   Adr      ,
                          c.ADM                                                                                                  ADM      ,
                          null                                                                                                   PINCODE  ,
                          null                                                                                                   LIM      ,
                          c.NOMPDV                                                                                               NOMPDV   ,
                          c.NMKU                                                                                                 NMKU     ,
                          c.RUK                                                                                                  RUK      ,
                          c.TELR                                                                                                 TELR     ,
                          c.BUH                                                                                                  BUH      ,
                          c.TELB                                                                                                 TELB     ,
                          c.DOV                                                                                                  DOV      ,
                          nullif(c.BDOV,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                  BDOV     ,
                          nullif(c.EDOV,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                  EDOV     ,
                          decode(nvl(c.PASSP,0),0,1,2,1,6,1,7,1,5,2,8,3,-1)                                                      PASSP    ,
                          c.BPLACE                                                                                               BPLACE   ,
                          c.TELD                                                                                                 TELD     ,
                          c.TELW                                                                                                 TELW     ,
                          c.TEL_FAX                                                                                              TEL_FAX
                   from   S6_NF_CLIOUT      c,
                          USERS_SKARB6_BARS u
                   where  c.ISP=u.USKARB6(+)                                                and
--                        nullif(c.DATE_OFF,to_date(''30.12.1899'',''DD.MM.YYYY'')) is null and
                          u.FILIAL(+)='''||p_filial||''')
           order  by IDCLIENT,GROUP_C';

    open cur_ for sql_;

    loop
      fetch cur_ into TAXF_     ,
                      K050_     ,
                      K013_     ,
                      SEGM_     ,
                      DATEON_   ,
                      DATEA_    ,
                      DATET_    ,
                      BDAY_     ,
                      FS_       ,
                      SED_      ,
                      NMK_      ,
                      IDCLIENT_ ,
                      GROUP_C_  ,
                      OKPO_     ,
                      COUNTRY_  ,
                      CDST_     ,
                      CREG_     ,
                      PRINSIDER_,
                      ISP_      ,
                      NMKK_     ,
                      OE_       ,
                      CODCAGENT_,
                      ISE_      ,
                      SEX_      ,
                      TGR_      ,
                      CUSTTYPE_ ,
                      VED_      ,
                      ND_       ,
                      CRISK_    ,
                      PHONE_    ,
                      POSTIND_  ,
                      OBLAST_   ,
                      RAYON_    ,
                      CITY_     ,
                      STREET_   ,
                      HOUSE_    ,
                      KVARTIRA_ ,
                      TEL_      ,
                      EMAIL_    ,
                      SAB_      ,
                      STMT_     ,
                      RGADM_    ,
                      BIC_      ,
                      SERIA_    ,
                      NOMBER_   ,
                      ORGAN_    ,
                      DOTE_     ,
                      Adr_      ,
                      ADM_      ,
                      PINCODE_  ,
                      LIM_      ,
                      NOMPDV_   ,
                      NMKU_     ,
                      RUK_      ,
                      TELR_     ,
                      BUH_      ,
                      TELB_     ,
                      DOV_      ,
                      BDOV_     ,
                      EDOV_     ,
                      PASSP_    ,
                      BPLACE_   ,
                      TELD_     ,
                      TELW_     ,
                      TEL_FAX_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        select c.rnk
        into   rnk_
        from   customerw w,
               customer  c
        where  w.tag='RNKNF'                                           and
               w.value=to_char(IDCLIENT_)||to_char(GROUP_C_)||p_filial and
               w.rnk=c.rnk                                             and
               bc.extract_mfo(c.branch)=MFOg_                          and
               rownum<2;
      exception when no_data_found then
        RNK_ := null;
--      RNK_ := IDCLIENT_;
      end;

      bc.subst_mfo(MFOg_);

      begin

        kl.setCustomerAttr(RNK_                  ,  -- Rnk_  IN OUT customer.rnk%type        -- Customer number
                           CUSTTYPE_             ,  -- Custtype_    customer.custtype%type   -- ╥шя ъышхэЄр: 1-срэъ, 2-■Ё.ышЎю, 3-Їшч.ышЎю
                           ND_                   ,  -- Nd_          customer.nd%type         -- ╣ фюуютюЁр
                           NMK_                  ,  -- Nmk_         customer.nmk%type        -- ═ршьхэютрэшх ъышхэЄр
                           null                  ,  -- Nmkv_        customer.nmkv%type       -- ═ршьхэютрэшх ъышхэЄр ьхцфєэрЁюфэюх
                           NMKK_                 ,  -- Nmkk_        customer.nmkk%type       -- ═ршьхэютрэшх ъышхэЄр ъЁрЄъюх
                           Adr_                  ,  -- Adr_         customer.adr%type        -- └фЁхё ъышхэЄр
                           CODCAGENT_            ,  -- Codcagent_   customer.codcagent%type  -- ╒рЁръЄхЁшёЄшър
                           COUNTRY_              ,  -- Country_     customer.country%type    -- ╤ЄЁрэр
                           PRINSIDER_            ,  -- Prinsider_   customer.prinsider%type  -- ╧Ёшчэръ шэёрщфхЁр
                           TGR_                  ,  -- Tgr_         customer.tgr%type        -- ╥шя уюё.ЁххёЄЁр
                           OKPO_                 ,  -- Okpo_        customer.okpo%type       -- ╬╩╧╬
                           STMT_                 ,  -- Stmt_        customer.stmt%type       -- ╘юЁьрЄ т√яшёъш
                           SAB_                  ,  -- Sab_         customer.sab%type        -- ▌ы.ъюф
                           DATEON_               ,  -- DateOn_      customer.date_on%type    -- ─рЄр ЁхушёЄЁрЎшш
                           TAXF_                 ,  -- Taxf_        customer.taxf%type       -- ═рыюуют√щ ъюф
                           CREG_                 ,  -- CReg_        customer.c_reg%type      -- ╩юф юсы.═╚
                           CDST_                 ,  -- CDst_        customer.c_dst%type      -- ╩юф Ёрщюэ.═╚
                           ADM_                  ,  -- Adm_         customer.adm%type        -- └фьшэ.юЁурэ
                           null                  ,  -- RgTax_       customer.rgtax%type      -- ╨ху эюьхЁ т ═╚
                           RGADM_                ,  -- RgAdm_       customer.rgadm%type      -- ╨ху эюьхЁ т └фь.
                           DATET_                ,  -- DateT_       customer.datet%type      -- ─рЄр Ёху т ═╚
                           DATEA_                ,  -- DateA_       customer.datea%type      -- ─рЄр Ёху. т рфьшэшёЄЁрЎшш
                           ISE_                  ,  -- Ise_         customer.ise%type        -- ╚эёЄ. ёхъ. ¤ъюэюьшъш
                           FS_                   ,  -- Fs_          customer.fs%type         -- ╘юЁьр ёюсёЄтхээюёЄш
                           OE_                   ,  -- Oe_          customer.oe%type         -- ╬ЄЁрёы№ ¤ъюэюьшъш
                           VED_                  ,  -- Ved_         customer.ved%type        -- ┬шф ¤ъ. фх Єхы№эюёЄш
                           SED_                  ,  -- Sed_         customer.sed%type        -- ╘юЁьр їюч щёЄтютрэш 
                           'Imported from NadraF',  -- Notes_       customer.notes%type      -- ╧Ёшьхўрэшх
                           null                  ,  -- Notesec_     customer.notesec%type    -- ╧Ёшьхўрэшх фы  ёыєцс√ схчюярёэюёЄш
                           CRISK_                ,  -- CRisk_       customer.crisk%type      -- ╩рЄхуюЁш  Ёшёър
                           PINCODE_              ,  -- Pincode_     customer.pincode%type    --
                           null                  ,  -- RnkP_        customer.rnkp%type       -- ╨ху. эюьхЁ їюыфшэур
                           LIM_                  ,  -- Lim_         customer.lim%type        -- ╦шьшЄ ърёё√
                           NOMPDV_               ,  -- NomPDV_      customer.nompdv%type     -- ╣ т ЁххёЄЁх яырЄ. ╧─┬
                           '9'                   ,  -- MB_          customer.mb%type         -- ╧Ёшэрфы. ьрыюьє сшчэхёє
                           null                  ,  -- BC_          customer.bc%type         -- ╧Ёшчэръ ═┼ъышхэЄр срэър
                           '/'||MFOg_||'/'       ,  -- Tobo_        customer.tobo%type       -- ╩юф схчсрырэёютюую юЄфхыхэш 
                           ISP_                     -- Isp_         customer.isp%type        -- ╠хэхфцхЁ ъышхэЄр (юЄтхЄ. шёяюыэшЄхы№)
                          );

--      kl.open_client(RNK_                  ,  -- Rnk_  IN OUT customer.rnk%type        -- Customer number
--                     CUSTTYPE_             ,  -- Custtype_    customer.custtype%type   -- ╥шя ъышхэЄр: 1-срэъ, 2-■Ё.ышЎю, 3-Їшч.ышЎю
--                     ND_                   ,  -- Nd_          customer.nd%type         -- ╣ фюуютюЁр
--                     NMK_                  ,  -- Nmk_         customer.nmk%type        -- ═ршьхэютрэшх ъышхэЄр
--                     null                  ,  -- Nmkv_        customer.nmkv%type       -- ═ршьхэютрэшх ъышхэЄр ьхцфєэрЁюфэюх
--                     NMKK_                 ,  -- Nmkk_        customer.nmkk%type       -- ═ршьхэютрэшх ъышхэЄр ъЁрЄъюх
--                     Adr_                  ,  -- Adr_         customer.adr%type        -- └фЁхё ъышхэЄр
--                     CODCAGENT_            ,  -- Codcagent_   customer.codcagent%type  -- ╒рЁръЄхЁшёЄшър
--                     COUNTRY_              ,  -- Country_     customer.country%type    -- ╤ЄЁрэр
--                     PRINSIDER_            ,  -- Prinsider_   customer.prinsider%type  -- ╧Ёшчэръ шэёрщфхЁр
--                     TGR_                  ,  -- Tgr_         customer.tgr%type        -- ╥шя уюё.ЁххёЄЁр
--                     OKPO_                 ,  -- Okpo_        customer.okpo%type       -- ╬╩╧╬
--                     STMT_                 ,  -- Stmt_        customer.stmt%type       -- ╘юЁьрЄ т√яшёъш
--                     SAB_                  ,  -- Sab_         customer.sab%type        -- ▌ы.ъюф
--                     DATEON_               ,  -- DateOn_      customer.date_on%type    -- ─рЄр ЁхушёЄЁрЎшш
--                     TAXF_                 ,  -- Taxf_        customer.taxf%type       -- ═рыюуют√щ ъюф
--                     CREG_                 ,  -- CReg_        customer.c_reg%type      -- ╩юф юсы.═╚
--                     CDST_                 ,  -- CDst_        customer.c_dst%type      -- ╩юф Ёрщюэ.═╚
--                     ADM_                  ,  -- Adm_         customer.adm%type        -- └фьшэ.юЁурэ
--                     null                  ,  -- RgTax_       customer.rgtax%type      -- ╨ху эюьхЁ т ═╚
--                     RGADM_                ,  -- RgAdm_       customer.rgadm%type      -- ╨ху эюьхЁ т └фь.
--                     DATET_                ,  -- DateT_       customer.datet%type      -- ─рЄр Ёху т ═╚
--                     DATEA_                ,  -- DateA_       customer.datea%type      -- ─рЄр Ёху. т рфьшэшёЄЁрЎшш
--                     ISE_                  ,  -- Ise_         customer.ise%type        -- ╚эёЄ. ёхъ. ¤ъюэюьшъш
--                     FS_                   ,  -- Fs_          customer.fs%type         -- ╘юЁьр ёюсёЄтхээюёЄш
--                     OE_                   ,  -- Oe_          customer.oe%type         -- ╬ЄЁрёы№ ¤ъюэюьшъш
--                     VED_                  ,  -- Ved_         customer.ved%type        -- ┬шф ¤ъ. фх Єхы№эюёЄш
--                     SED_                  ,  -- Sed_         customer.sed%type        -- ╘юЁьр їюч щёЄтютрэш 
--                     K050_                 ,  -- K050_        customer.k050%type       -- ╧юърчрЄхы№ k050
--                     'Imported from NadraF',  -- Notes_       customer.notes%type      -- ╧Ёшьхўрэшх
--                     null                  ,  -- Notesec_     customer.notesec%type    -- ╧Ёшьхўрэшх фы  ёыєцс√ схчюярёэюёЄш
--                     CRISK_                ,  -- CRisk_       customer.crisk%type      -- ╩рЄхуюЁш  Ёшёър
--                     PINCODE_              ,  -- Pincode_     customer.pincode%type    --
--                     null                  ,  -- RnkP_        customer.rnkp%type       -- ╨ху. эюьхЁ їюыфшэур
--                     LIM_                  ,  -- Lim_         customer.lim%type        -- ╦шьшЄ ърёё√
--                     NOMPDV_               ,  -- NomPDV_      customer.nompdv%type     -- ╣ т ЁххёЄЁх яырЄ. ╧─┬
--                     '9'                   ,  -- MB_          customer.mb%type         -- ╧Ёшэрфы. ьрыюьє сшчэхёє
--                     null                  ,  -- BC_          customer.bc%type         -- ╧Ёшчэръ ═┼ъышхэЄр срэър
--                     '/'||MFOg_||'/'       ,  -- Tobo_        customer.tobo%type       -- ╩юф схчсрырэёютюую юЄфхыхэш 
--                     ISP_                     -- Isp_         customer.isp%type        -- ╠хэхфцхЁ ъышхэЄр (юЄтхЄ. шёяюыэшЄхы№)
--                    );

        begin
          kl.setCustomerEN(RNK_ ,  -- customer.rnk%type
                           ISE_ ,  -- customer.ise%type
                           FS_  ,  -- customer.fs%type
                           VED_ ,  -- customer.ved%type
                           OE_  ,  -- customer.oe%type
                           K050_,  -- customer.k050%type
                           SED_);  -- customer.sed%type
        exception when others then
          bars_audit.error('create_customerNF - err(1): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                           'RNK       = '||RNK_          ||', '||Chr(13)||Chr(10)||
                           'CUSTTYPE  = '||CUSTTYPE_     ||', '||Chr(13)||Chr(10)||
                           'ND        = '||ND_           ||', '||Chr(13)||Chr(10)||
                           'NMK       = '||NMK_          ||', '||Chr(13)||Chr(10)||
                           'NMKK      = '||NMKK_         ||', '||Chr(13)||Chr(10)||
                           'CODCAGENT = '||CODCAGENT_    ||', '||Chr(13)||Chr(10)||
                           'COUNTRY   = '||COUNTRY_      ||', '||Chr(13)||Chr(10)||
                           'PRINSIDER = '||PRINSIDER_    ||', '||Chr(13)||Chr(10)||
                           'TGR       = '||TGR_          ||', '||Chr(13)||Chr(10)||
                           'OKPO      = '||OKPO_         ||', '||Chr(13)||Chr(10)||
                           'STMT      = '||STMT_         ||', '||Chr(13)||Chr(10)||
                           'SAB       = '||SAB_          ||', '||Chr(13)||Chr(10)||
                           'DATEON    = '||DATEON_       ||', '||Chr(13)||Chr(10)||
                           'TAXF      = '||TAXF_         ||', '||Chr(13)||Chr(10)||
                           'CDST      = '||CDST_         ||', '||Chr(13)||Chr(10)||
                           'CREG      = '||CREG_         ||', '||Chr(13)||Chr(10)||
                           'RGADM     = '||RGADM_        ||', '||Chr(13)||Chr(10)||
                           'DATET     = '||DATET_        ||', '||Chr(13)||Chr(10)||
                           'DATEA     = '||DATEA_        ||', '||Chr(13)||Chr(10)||
                           'ISE       = '||ISE_          ||', '||Chr(13)||Chr(10)||
                           'FS        = '||FS_           ||', '||Chr(13)||Chr(10)||
                           'OE        = '||OE_           ||', '||Chr(13)||Chr(10)||
                           'VED       = '||VED_          ||', '||Chr(13)||Chr(10)||
                           'SED       = '||SED_          ||', '||Chr(13)||Chr(10)||
                           'CRISK     = '||CRISK_        ||', '||Chr(13)||Chr(10)||
                           'ISP       = '||ISP_          ||', '||Chr(13)||Chr(10)||
                           'IdClient  = '||IDCLIENT_     ||', '||Chr(13)||Chr(10)||
                           'GROUP_C   = '||GROUP_C_      ||', '||Chr(13)||Chr(10)||
                           'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          fl_ := 1;
          p_code := p_code+1;
          bc.set_context;
          goto custplus;
        end;

        fl_ := 0;
        p_open := p_open+1;
--      l_ins_ := l_ins_+1;
      exception when others then
        bars_audit.error('create_customerNF - err(0): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                         'RNK       = '||RNK_          ||', '||Chr(13)||Chr(10)||
                         'CUSTTYPE  = '||CUSTTYPE_     ||', '||Chr(13)||Chr(10)||
                         'ND        = '||ND_           ||', '||Chr(13)||Chr(10)||
                         'NMK       = '||NMK_          ||', '||Chr(13)||Chr(10)||
                         'NMKK      = '||NMKK_         ||', '||Chr(13)||Chr(10)||
                         'CODCAGENT = '||CODCAGENT_    ||', '||Chr(13)||Chr(10)||
                         'COUNTRY   = '||COUNTRY_      ||', '||Chr(13)||Chr(10)||
                         'PRINSIDER = '||PRINSIDER_    ||', '||Chr(13)||Chr(10)||
                         'TGR       = '||TGR_          ||', '||Chr(13)||Chr(10)||
                         'OKPO      = '||OKPO_         ||', '||Chr(13)||Chr(10)||
                         'STMT      = '||STMT_         ||', '||Chr(13)||Chr(10)||
                         'SAB       = '||SAB_          ||', '||Chr(13)||Chr(10)||
                         'DATEON    = '||DATEON_       ||', '||Chr(13)||Chr(10)||
                         'TAXF      = '||TAXF_         ||', '||Chr(13)||Chr(10)||
                         'CDST      = '||CDST_         ||', '||Chr(13)||Chr(10)||
                         'CREG      = '||CREG_         ||', '||Chr(13)||Chr(10)||
                         'RGADM     = '||RGADM_        ||', '||Chr(13)||Chr(10)||
                         'DATET     = '||DATET_        ||', '||Chr(13)||Chr(10)||
                         'DATEA     = '||DATEA_        ||', '||Chr(13)||Chr(10)||
                         'ISE       = '||ISE_          ||', '||Chr(13)||Chr(10)||
                         'FS        = '||FS_           ||', '||Chr(13)||Chr(10)||
                         'OE        = '||OE_           ||', '||Chr(13)||Chr(10)||
                         'VED       = '||VED_          ||', '||Chr(13)||Chr(10)||
                         'SED       = '||SED_          ||', '||Chr(13)||Chr(10)||
                         'CRISK     = '||CRISK_        ||', '||Chr(13)||Chr(10)||
                         'ISP       = '||ISP_          ||', '||Chr(13)||Chr(10)||
                         'IdClient  = '||IDCLIENT_     ||', '||Chr(13)||Chr(10)||
                         'GROUP_C   = '||GROUP_C_      ||', '||Chr(13)||Chr(10)||
                         'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        fl_ := 1;
        p_code := p_code+1;
        bc.set_context;
      end;

<<custplus>> null;

      if fl_=0 then
        if CUSTTYPE_=1 then
          begin
            kl.setBankAttr(RNK_,  -- Rnk_    NUMBER,
                           MFO_,  -- Mfo_    VARCHAR2,
                           BIC_,  -- Bic_    VARCHAR2,
                           null,  -- BicAlt_ VARCHAR2,
                           null,  -- Rating_ VARCHAR2,
                           null,  -- Kod_b_  NUMBER,
                           RUK_,  -- Ruk_    VARCHAR2,
                           TEL_,  -- TelR_   VARCHAR2,
                           BUH_,  -- Buh_    VARCHAR2,
                           TELB_  -- TelB_   VARCHAR2
                          );
            if NMKU_ is not null then
              begin
                update customerw
                set    value=NMKU_
                where  tag='FIRMA' and
                       rnk=RNK_;
                if sql%rowcount=0 then
                  begin
                    insert
                    into   customerw (rnk,
                                      tag,
                                      value)
                              values (RNK_   ,
                                      'FIRMA',
                                      NMKU_);
                  exception when OTHERS then
                    null;
                  end;
                end if;
              end;
            end if;
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNF - err(2): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_          ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_     ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_           ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_          ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_         ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_    ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_      ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_    ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_          ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_         ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_         ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_          ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_       ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_         ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_         ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_         ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_        ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_        ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_        ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_          ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_           ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_           ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_          ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_          ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_        ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_          ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_     ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_      ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=2 then
          begin
            kl.setCorpAttr(RNK_    ,  -- Rnk_    NUMBER,
                           NMK_    ,  -- Nmku_   VARCHAR2,
                           RUK_    ,  -- Ruk_    VARCHAR2,
                           TEL_    ,  -- TelR_   VARCHAR2,
                           BUH_    ,  -- Buh_    VARCHAR2,
                           TELB_   ,  -- TelB_   VARCHAR2,
                           TEL_FAX_,  -- TelFax_ varchar2,
                           EMAIL_  ,  -- EMail_  varchar2,
                           null       -- SealId_ number
                          );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNF - err(3): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_          ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_     ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_           ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_          ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_         ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_    ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_      ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_    ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_          ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_         ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_         ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_          ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_       ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_         ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_         ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_         ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_        ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_        ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_        ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_          ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_           ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_           ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_          ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_          ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_        ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_          ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_     ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_      ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        elsif CUSTTYPE_=3 then
          begin
--          ЁшїЄютър фрЄ√ Ёюцфхэш 
            BDAY_ := CorrectBdayOkpo(BDAY_,OKPO_);
            kl.setPersonAttr(RNK_   ,  -- Rnk_    NUMBER,
                             SEX_   ,  -- Sex_    CHAR,
                             1      ,  -- Passp_  NUMBER,
                             SERIA_ ,  -- Ser_    VARCHAR2,
                             NOMBER_,  -- Numdoc_ VARCHAR2,
                             DOTE_  ,  -- PDate_  DATE,
                             ORGAN_ ,  -- Organ_  VARCHAR2,
                             BDAY_  ,  -- BDay_   DATE,
                             BPLACE_,  -- BPlace_ VARCHAR2,
                             TELD_  ,  -- TelD_   VARCHAR2,
                             TELW_     -- TelW_   VARCHAR2
                             );
            if NMKU_ is not null then
              begin
                update customerw
                set    value=NMKU_
                where  tag='FIRMA' and
                       rnk=RNK_;
                if sql%rowcount=0 then
                  begin
                    insert
                    into   customerw (rnk,
                                      tag,
                                      value)
                              values (RNK_   ,
                                      'FIRMA',
                                      NMKU_);
                  exception when OTHERS then
                    null;
                  end;
                end if;
              end;
            end if;
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNF - err(4): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_          ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_     ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_           ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_          ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_         ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_    ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_      ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_    ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_          ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_         ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_         ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_          ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_       ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_         ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_         ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_         ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_        ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_        ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_        ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_          ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_           ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_           ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_          ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_          ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_        ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_          ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_     ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_      ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_             ,  -- Rnk_ INTEGER,
                                  'RNKNF'          ,  -- Tag_ VARCHAR2,
                                  to_char(IDCLIENT_)||
                                  to_char(GROUP_C_) ||
                                  to_char(p_filial),  -- Val_ VARCHAR2,
                                  0                   -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNF - err(5): '||sqlerrm      ||' - '  ||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_          ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_     ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_           ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_          ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_         ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_    ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_      ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_    ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_          ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_         ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_         ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_          ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_       ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_         ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_         ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_         ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_        ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_        ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_        ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_          ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_           ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_           ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_          ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_          ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_        ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_          ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_     ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_      ||', '||Chr(13)||Chr(10)||
                             'p_filial  = '||p_filial||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGOBL',  -- Tag_ VARCHAR2,
                                  OBLAST_,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNF - err(6): ' ||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGDST',  -- Tag_ VARCHAR2,
                                  RAYON_ ,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNF - err(10): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'FGTWN',  -- Tag_ VARCHAR2,
                                  CITY_  ,  -- Val_ VARCHAR2,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNF - err(11): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_           ,     -- Rnk_ INTEGER,
                                  'FGADR'        ,     -- Tag_ VARCHAR2,
                                  trim(STREET_||' '||  -- Val_ VARCHAR2,
                                       HOUSE_ ||' '||
                                       KVARTIRA_),
                                  0                    -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNF - err(12): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'K013 ',  -- Tag_ VARCHAR2,
                                  K013_  ,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNF - err(13): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          begin
            kl.setCustomerElement(RNK_   ,  -- Rnk_ INTEGER,
                                  'SEGM ',  -- Tag_ VARCHAR2,
                                  SEGM_  ,
                                  0         -- Otd_ NUMBER
                                 );
            fl_ := 0;
          exception when others then
            bars_audit.error('create_customerNF - err(14): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                             'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                             'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                             'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                             'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                             'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                             'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                             'ADRES     = '||trim(OBLAST_ ||' '||
                                                  RAYON_  ||' '||
                                                  CITY_   ||' '||
                                                  STREET_ ||' '||
                                                  HOUSE_  ||' '||
                                                  KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                             'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                             'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                             'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                             'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                             'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                             'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                             'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                             'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                             'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                             'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                             'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                             'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                             'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                             'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                             'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                             'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                             'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                             'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                             'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                             'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                           'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                             'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                             'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                             'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
            bc.set_context;
          end;
        end if;

        if fl_=0 then
          if POSTIND_ is not null or
             OBLAST_  is not null or
             RAYON_   is not null or
             CITY_    is not null or
             STREET_  is not null then
            sthokv_ := STREET_||','||HOUSE_||' ът.'||KVARTIRA_;
            if substr(sthokv_,-4)=' ът.' then
              sthokv_ := substr(sthokv_,1,length(sthokv_)-4);
            end if;
            if substr(sthokv_,-1)=',' then
              sthokv_ := substr(sthokv_,1,length(sthokv_)-1);
            end if;
            sthokv_ := trim(substr(sthokv_,1,100));

            begin
              update customer_address
              set    COUNTRY=COUNTRY_                 ,
                     zip=POSTIND_                     ,
                     domain=trim(substr(OBLAST_,1,30)),
                     region=RAYON_                    ,
                     locality=trim(substr(CITY_,1,30)),
                     address=sthokv_
              where  rnk=RNK_ and
                     type_id=1;
              if SQL%rowcount=0 then
                insert
                into   customer_address (rnk     ,
                                         type_id ,
                                         COUNTRY ,
                                         zip     ,
                                         domain  ,
                                         region  ,
                                         locality,
                                         address)
                                 values (RNK_                      ,
                                         1                         ,
                                         COUNTRY_                  ,
                                         POSTIND_                  ,
                                         trim(substr(OBLAST_,1,30)),
                                         RAYON_                    ,
                                         trim(substr(CITY_,1,30))  ,
                                         sthokv_);
              end if;
              fl_ := 0;
            exception when others then
              bars_audit.error('create_customerNF - err(15): '||sqlerrm||' - '||Chr(13)||Chr(10)||
                               'RNK       = '||RNK_              ||', '||Chr(13)||Chr(10)||
                               'CUSTTYPE  = '||CUSTTYPE_         ||', '||Chr(13)||Chr(10)||
                               'ND        = '||ND_               ||', '||Chr(13)||Chr(10)||
                               'NMK       = '||NMK_              ||', '||Chr(13)||Chr(10)||
                               'NMKK      = '||NMKK_             ||', '||Chr(13)||Chr(10)||
                               'ADR       = '||adr_              ||', '||Chr(13)||Chr(10)||
                               'ADRES     = '||trim(OBLAST_ ||' '||
                                                    RAYON_  ||' '||
                                                    CITY_   ||' '||
                                                    STREET_ ||' '||
                                                    HOUSE_  ||' '||
                                                    KVARTIRA_)   ||', '||Chr(13)||Chr(10)||
                               'CODCAGENT = '||CODCAGENT_        ||', '||Chr(13)||Chr(10)||
                               'COUNTRY   = '||COUNTRY_          ||', '||Chr(13)||Chr(10)||
                               'PRINSIDER = '||PRINSIDER_        ||', '||Chr(13)||Chr(10)||
                               'TGR       = '||TGR_              ||', '||Chr(13)||Chr(10)||
                               'OKPO      = '||OKPO_             ||', '||Chr(13)||Chr(10)||
                               'STMT      = '||STMT_             ||', '||Chr(13)||Chr(10)||
                               'SAB       = '||SAB_              ||', '||Chr(13)||Chr(10)||
                               'DATEON    = '||DATEON_           ||', '||Chr(13)||Chr(10)||
                               'TAXF      = '||TAXF_             ||', '||Chr(13)||Chr(10)||
                               'CDST      = '||CDST_             ||', '||Chr(13)||Chr(10)||
                               'CREG      = '||CREG_             ||', '||Chr(13)||Chr(10)||
                               'RGADM     = '||RGADM_            ||', '||Chr(13)||Chr(10)||
                               'DATET     = '||DATET_            ||', '||Chr(13)||Chr(10)||
                               'DATEA     = '||DATEA_            ||', '||Chr(13)||Chr(10)||
                               'ISE       = '||ISE_              ||', '||Chr(13)||Chr(10)||
                               'FS        = '||FS_               ||', '||Chr(13)||Chr(10)||
                               'OE        = '||OE_               ||', '||Chr(13)||Chr(10)||
                               'VED       = '||VED_              ||', '||Chr(13)||Chr(10)||
                               'SED       = '||SED_              ||', '||Chr(13)||Chr(10)||
                               'CRISK     = '||CRISK_            ||', '||Chr(13)||Chr(10)||
--                             'MB        = '||MB_               ||', '||Chr(13)||Chr(10)||
                               'ISP       = '||ISP_              ||', '||Chr(13)||Chr(10)||
                               'IdClient  = '||IDCLIENT_         ||', '||Chr(13)||Chr(10)||
                               'GROUP_C   = '||GROUP_C_                ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
              bc.set_context;
            end;
          end if;
        end if;

        bc.set_context;
      end if;

      if fl_=0 then
         commit;
      else
         rollback;
      end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    bars_alerter(1);

  end create_customerNF;

--

  procedure open_accountNF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    fl_         number;
    type        cur is ref cursor;
    cur_        cur;
    sql_        varchar2(32000);
    accR_       number;
    ndz_        number;
    MFOg_       varchar2(12);
    id_         number;
    ispg_       varchar(32);
    kvv_        accounts.kv%type;

    rnk_        customer.rnk%type;
    DAPP_       date;
    daos_       date;
    dazs_       date;
    kv_         accounts.kv%type;
    isp_        number;
    nbs_        char(4);
    tip_        char(3);
    vid_        number;
    ostc_       number;
    ostq_       number;
    lim_        number;
    OSTX_       number;
    nms_        varchar2(70);
    nls_        varchar2(64);
    nlsalt_     accounts.nlsalt%type;
    branch_     accounts.branch%type;
    OB22_       SPECPARAM_INT.ob22%type;
    OB88_       SPECPARAM_INT.ob88%type;
    P080_       SPECPARAM_INT.P080%type;
    MFO_        SPECPARAM_INT.MFO%type;
    R020_FA_    SPECPARAM_INT.R020_FA%type;
    R011_       SPECPARAM.R011%type;
    R013_       SPECPARAM.R013%type;
    S240_       SPECPARAM.S240%type;
    S080_       SPECPARAM.S080%type;
    S180_       SPECPARAM.S180%type;
    S190_       SPECPARAM.S190%type;
    S181_       SPECPARAM.S181%type;
    S260_       SPECPARAM.S260%type;
    S200_       SPECPARAM.S200%type;
    S230_       SPECPARAM.S230%type;
    S120_       SPECPARAM.S120%type;
    S031_       SPECPARAM.S031%type;
    S182_       SPECPARAM.S182%type;
    R014_       SPECPARAM.R014%type;
    K072_       SPECPARAM.K072%type;
    S130_       SPECPARAM.S130%type;
    S250_       SPECPARAM.S250%type;
--  S090_       date;
    NKD_        SPECPARAM.NKD%type;
    IR_         int_ratn.ir%type;
    BDAT_       int_ratn.bdat%type;
    PAP_        ps.pap%type;
    flUN_       number;
    open_       number;
    s7_         number;
    s8_         number;
    s9_         number;
    l_ins_      number;
    mrnk_       varchar2(32);

    NLSNPROC_   accounts.nls%type;
    NLSDR_      accounts.nls%type;
    acra_       accounts.acc%type;
    acrb_       accounts.acc%type;
    DADN_       date;
    DADK_       date;

    pos_        number;
    Job_        number;
    fi3_        char(3);
    op_         int;
    newnls_     accounts.nls%type;
    ffff_       char(4);
    fff_        char(3);
    ff_         char(2);
    i_          int;
    OB22aaa_    varchar2(3);
    OB22aa_     varchar2(3);
    flS6_       number;
    ugosaldoa_  int;

    SHTAR_      int;
    idshtar_    varchar2(32);
    branchugo_  accounts.branch%type;

    prc_        int;
    forsoot_    varchar2(64);

  begin

    bars_alerter(0);

    gl.frcvr := 1;

--  l_ins_ := 0;
    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

    execute immediate 'select substr(min(branch),12,3)
                       from   s6_nf_users'
                       into   fi3_;

    select to_char(min(id))
    into   ispg_
    from   staff$base
    where  bc.extract_mfo(branch)=MFOg_                              and
           logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%' and
           tabn is not null;
    if ispg_ is null then
      select to_char(min(id))
      into   ispg_
      from   staff$base
      where  bc.extract_mfo(branch)=MFOg_ and
             logname like 'U'||migraSK.kodobl(MFOg_)||'_'||fi3_||'_S%';
      if ispg_ is null then
        select to_char(min(id))
        into   ispg_
        from   staff$base
        where  bc.extract_mfo(branch)=MFOg_ and
               tabn is not null;
        if ispg_ is null then
          select to_char(min(id))
          into   ispg_
          from   staff$base
          where  bc.extract_mfo(branch)=MFOg_;
        end if;
      end if;
    end if;

    mrnk_ := -1;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 disable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 disable';
    exception when OTHERS then
      null;
    end;

    sql_:='select distinct  /* to ACCOUNTS */
                  nvl(cw.rnk,'||mrnk_||')                                                                                                  RNK     ,
                  nullif(s.DAPP,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                                    DAPP    ,
                  nullif(s.DAZS,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                                    DAZS    ,
--                s.DAOS                                                                                                                   DAOS    ,
                  to_date('''||p_datx||''')-4                                                                                              daos    ,
                  s.KV                                                                                                                     KV      ,
                  nvl(u.UBARS,'||ispg_||')                                                                                                 ISP     ,
                  substr(s.NLS,1,4)                                                                                                        NBS     ,
                  1                                                                                                                        POS     ,
                  s.OSTC*100                                                                                                               OSTC    ,
                  s.OSTQ*100                                                                                                               OSTQ    ,
                  0                                                                                                                        LIM     ,
                  null                                                                                                                     OSTX    ,
                  (case when substr(s.NLS,1,2)=''25''                       then
                     11
                        when substr(s.NLS,1,4) in (''2610'',
                                                   ''2612'',
                                                   ''2615'',
                                                   ''2630'',
                                                   ''2635'',
                                                   ''2651'',
                                                   ''2652'',
                                                   ''1510'',
                                                   ''1511'',
                                                   ''1512'',
                                                   ''1515'',
                                                   ''1610'',
                                                   ''1611'',
                                                   ''1612'',
                                                   ''1615'')                then
                     4
                        when substr(s.NLS,1,4) in (''1500'',
                                                   ''1600'')                then
                     10
                        when substr(s.NLS,1,2) in (''20'',
                                                   ''21'',
                                                   ''22'',
                                                   ''27'')                  then
                     6
                        when substr(s.NLS,1,4)=''9802''                     then
                     5
                        when substr(s.NLS,1,4) in (''4310'',
                                                   ''4430'',
                                                   ''4432'',
                                                   ''4438'',
                                                   ''4439'',
                                                   ''4530'',
                                                   ''4532'',
                                                   ''4538'',
                                                   ''4539'')                then
                     8
                        when substr(s.NLS,1,4) in (select nbs from dpa_nbs) then
                     3
                   else
                     0
                   end)                                                                                                                    VID     ,
                  migraSK.valid_symbol(
                  trim(substr(nvl(s.NMS,''эх юяЁхфхыхэю''),1,70)))                                                                         NMS     ,
                  s.NLS                                                                                                                    NLS     ,
                  trim(substr(s.NLSALT,1,14))                                                                                              NLSALT  ,
                  s.BRANCH                                                                                                                 BRANCH  ,
                  /* to SPECPARAM_INT */
                  substr(''00''||s.OB22,-2)                                                                                                OB22    ,
                  null                                                                                                                     OB88    ,
                  s.P080                                                                                                                   P080    ,
                  null                                                                                                                     MFO     ,
                  null                                                                                                                     R020_FA ,
                  /* to SPECPARAM */
                  s.R011                                                                                                                   R011    ,
                  s.R013                                                                                                                   R013    ,
                  nullif(s.S080,''0'')                                                                                                     S080    ,
                  decode(upper(s.S180),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(s.S180))  S180    ,
                  null                                                                                                                     S181    ,
                  s.S190                                                                                                                   S190    ,
                  s.S200                                                                                                                   S200    ,
                  s.S230                                                                                                                   S230    ,
                  decode(upper(s.S240),''╤'',''C'',''└'',''A'',''┬'',''B'',''┼'',''E'',''═'',''H'',''8'',''B'',''9'',''C'',upper(s.S240))  S240    ,
                  s.S120                                                                                                                   S120    ,
                  s.S130                                                                                                                   S130    ,
                  s.S250                                                                                                                   S250    ,
                  s.S031                                                                                                                   S031    ,
                  s.S182                                                                                                                   S182    ,
                  s.R014                                                                                                                   R014    ,
                  s.K072                                                                                                                   K072    ,
--                s.S090                                                                                                                   S090    ,
                  s.S260                                                                                                                   S260    ,
                  nullif(s.BDAT,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                                    BDAT    ,
                  s.PR                                                                                                                     IR      ,
                  ps.pap                                                                                                                   PAP     ,
                  ps.prc                                                                                                                   PRC     ,
                  n.NLSNPROC                                                                                                               NLSNPROC,
                  n.NLSDR                                                                                                                  NLSDR   ,
                  s.SHTAR                                                                                                                  SHTAR   ,
                  nullif(s.DADN,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                                    DADN    ,
                  nullif(s.DADK,to_date(''30.12.1899'',''DD.MM.YYYY''))                                                                    DADK
           from   customerw                                             cw,
--                S6_NF_ALCOUT                                          s ,
                  (select *
                   from   S6_NF_ALCOUT s
                   where  (s.nls,s.kv) in (select nls,kv
                                           from   (select nls,kv,count(*)
                                                   from   S6_NF_ALCOUT
                                                   group  by nls,kv
                                                   having count(*)>1)) and
                          nvl(s.dazs,trunc(sysdate)+36524)=
                          (select max(nvl(dazs,trunc(sysdate)+36524))
                           from   S6_NF_ALCOUT where nls=s.nls and kv=s.kv)
                  union all
                   select *
                   from   S6_NF_ALCOUT
                   where  (nls,kv) not in (select nls,kv
                                           from   (select nls,kv,count(*)
                                                   from   S6_NF_ALCOUT
                                                   group  by nls,kv
                                                   having count(*)>1))) s ,
                  S6_NF_CLIOUT                                          c ,
                  S6_NF_ALNLSN                                          n ,
                  USERS_SKARB6_BARS                                     u ,
                  ps
           where  cw.tag(+)=''RNKNF''                                                      and
                  to_number(cw.value(+))=nvl(mod(c.RNK,1000000),0)*10000000+'||p_filial||' and
                  (nullif(s.DAZS,to_date(''30.12.1899'',''DD.MM.YYYY'')) is null      or
                   (nullif(s.DAZS,to_date(''30.12.1899'',''DD.MM.YYYY'')) is not null and
                    nullif(s.DAZS,to_date(''30.12.1899'',''DD.MM.YYYY''))>=
                    add_months(trunc(sysdate,''YEAR''),-12))                          or
                   (nullif(s.DAZS,to_date(''30.12.1899'',''DD.MM.YYYY'')) is not null and
                    substr(s.NLS,1,4) in (select NBS from DPA_NBS)))                       and
                  s.ISP=u.USKARB6(+)                                                       and
                  u.filial(+)='''||p_filial||'''                                           and
                  substr(s.NLS,1,4)=ps.nbs(+)                                              and
                  n.nls(+)=s.nls                                                           and
                  n.kv(+)=s.kv                                                             and
                  c.rnk=s.rnk
           order  by substr(s.NLS,1,4) desc,decode(s.kv,980,0,1)';
    open cur_ for sql_;

    NKD_ := null;

    LOOP

      fetch cur_ into RNK_     ,
                      DAPP_    ,
                      DAZS_    ,
                      DAOS_    ,
                      KV_      ,
                      ISP_     ,
                      NBS_     ,
                      POS_     ,
                      OSTC_    ,
                      OSTQ_    ,
                      LIM_     ,
                      OSTX_    ,
                      VID_     ,
                      NMS_     ,
                      NLS_     ,
                      NLSALT_  ,
                      BRANCH_  ,
                      OB22_    ,
                      OB88_    ,
                      P080_    ,
                      MFO_     ,
                      R020_FA_ ,
                      R011_    ,
                      R013_    ,
                      S080_    ,
                      S180_    ,
                      S181_    ,
                      S190_    ,
                      S200_    ,
                      S230_    ,
                      S240_    ,
                      S120_    ,
                      S130_    ,
                      S250_    ,
                      S031_    ,
                      S182_    ,
                      R014_    ,
                      K072_    ,
--                    S090_    ,
                      S260_    ,
                      BDAT_    ,
                      IR_      ,
                      PAP_     ,
                      prc_     ,
                      NLSNPROC_,
                      NLSDR_   ,
                      SHTAR_   ,
                      DADN_    ,
                      DADK_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      fl_ := 0;
      op_ := 0;

      if OSTC_<>0 and DAZS_ is not null then
        DAZS_ := null;
      end if;

--    юяЁхфхы хь шьяюЁЄшыш єцх ёў╕Є шыш эхЄ (т√сюЁър шч S6_MIGRNLS)

      begin
        select nls_bars
        into   newnls_
        from   S6_MIGRNLS
        where  nls_fil=nls_ and
               kv=kv_       and
               filial=p_filial;
      exception when no_data_found then
        newnls_ := null;
      end;

--    чфхё№ т√ўшёы хь newnls_ эр юёэютрэшш шэЇюЁьрЎшш шч ЄрсышЎ
--    S6_NF_SHABLON, S6_NF_DEPO, S6_NF_FILIAL

      if newnls_ is null then -- сєфхь юЄъЁ√трЄ№ эют√щ ёў╕Є яю ьрёъх

--      1. юяЁхфхы хь FF_, FFF_, BRANCH_ шч S6_NF_FILIAL

        begin
          execute immediate 'select substr(''0000''||trim(ff),-4),
                                    substr(''000''||trim(ff),-3) ,
                                    substr(''00''||trim(ff),-2)
                             from   S6_NF_FILIAL
                             where  branch='''||branch_||''' and
                                    rownum<2'
                             into   ffff_,
                                    fff_ ,
                                    ff_;
        exception when OTHERS then
          ffff_ := substr(branch_,-5,4);
          fff_  := substr(branch_,-4,3);
          ff_   := substr(branch_,-3,2);
        end;

--      2. ш∙хь ёў╕Є т S6_NF_DEPO, хёыш эр°ыш - newnls_ := vkrzn(KOTL) ш ┬╤и

        begin
          execute immediate 'select kotl,
                                    ob22
--                                  branch
                             from   S6_NF_DEPO
                             where  trim(nls)='''||nls_||'''           and
                                    i_va='||to_char(kv_)||'            and
                                    substr(kotl,1,4) not in (''1001'',
                                                             ''1101'',
                                                             ''1011'') and
                                    rownum<2'
                             into   newnls_,
                                    OB22_;
--                                  branch_;
--        nms_    := '╩юЄыютющ ёў╕Є '||substr(nls_,1,4)||' ╬┴22 '||OB22_;
          newnls_ := vkrzn(substr(MFOg_,1,5),newnls_);
          goto BCE;
        exception when OTHERS then
--        null;
          if substr(nls_,1,2) in ('10','11') then
            forsoot_ := 'эхтхЁэю';
          else
            forsoot_ := 'юЄёєЄёЄтєхЄ';
          end if;
          bars_audit.error('open_accountNF - err(11): '||forsoot_||' ёююЄтхЄёЄтшх т DEPO.DBF '||Chr(13)||Chr(10)||
                                                                    'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                                    'KV = '    ||kv_    ||', '||Chr(13)||Chr(10)||
                                                                    'branch = '||branch_      ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          p_code := p_code+1;
          fl_ := 1;
          goto notdepo;
        end;

--      3. шэрўх - ш∙хь срырэёют√щ т S6_NF_SHABLON, хёыш хёЄ№, Єю схЁ╕ь
--         ёююЄтхЄёЄтє■∙є■ ьрёъє ёў╕Єр юЄЄєфр

--      begin
--        execute immediate 'select maska
--                           from   S6_NF_SHABLON
--                           where  ((length(trim(BALS))=4 and
--                                    substr('''||nls_||''',1,4)=trim(BALS)) or
--                                   (length(trim(BALS))=3 and
--                                    substr('''||nls_||''',1,3)=trim(BALS)) or
--                                   (length(trim(BALS))=2 and
--                                    substr('''||nls_||''',1,2)=trim(BALS)) or
--                                   (length(trim(BALS))=1 and
--                                    substr('''||nls_||''',1,1)=trim(BALS))) and
--                                  rownum<2'
--                           into   newnls_;
--        goto MASKA;
--      exception when OTHERS then
--        null;
--      end;

--      5. шэрўх - фюсрты хь ъ ёў╕Єє рЁшЇьхЄшўхёъш 1 (Ўшъы) ш юяЁхфхы хь
--         яхЁт√щ яюярт°шщ ёў╕Є, хую ш яЁшётрштрхь т newnls_

--      newnls_ := nls_;
--
--      if substr(newnls_,1,4) in ('1001','1101','1011') then
--        newnls_ := substr(newnls_,1,3)||'2'||substr(newnls_,5);
--      end if;
--
--      newnls_ := vkrzn(substr(MFOg_,1,5),newnls_);
--
--      i_ := 0;
--      while i_=0
--      loop
--        begin
--          select 0
--          into   i_
--          from   accounts
--          where  nls=newnls_ and
--                 kv=kv_;
--          newnls_ := vkrzn(substr(MFOg_,1,5),to_char(to_number(newnls_)+1));
--        exception when no_data_found then
--          i_ := 1;
--        end;
--      end loop;
--
--      goto BCE; -- cў╕Є юяЁхфхыхэ!

<<MASKA>> null; -- чфхё№ ЁрчюсЁрЄ№ ьрёъє ╤┴┼╨┴└═╩└, т√ЁюфшЄ№ °рсыюэ т
                -- ьюфшЇшърЄюЁрї ┴└╨╤р ш юяЁхфхышЄ№ ёў╕Є яю хэЄюьє °рсыюэє!

--      BBBB          - срырэёют√щ ёў╕Є    (┬ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      GGGGGG, GGGGG - RNK
--      HHH, HH шыш H - эюьхЁ яю яюЁ фъє   (═ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      K             - ъюэЄЁюы№э√щ ЁрчЁ ф (╩ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)
--      FFF шыш FF    - ъюф юЄфхыхэш 
--      AAA шыш AA    - ъюф ╬┴22           (└ ьюуєЄ с√Є№ ёыєўрщэю Ёєёёъшх)

        newnls_ := replace(upper(newnls_),'┬','B');
        newnls_ := replace(upper(newnls_),'╩','K');
        newnls_ := replace(upper(newnls_),'└','A');
        newnls_ := replace(upper(newnls_),'═','H');

        OB22_   := replace(OB22_,'└','A');
        OB22_   := replace(OB22_,'┬','B');
        OB22_   := replace(OB22_,'╤','C');
        OB22_   := replace(OB22_,'═','H');
        OB22_   := replace(OB22_,'╩','K');
        OB22_   := replace(OB22_,'╠','M');
        OB22_   := replace(OB22_,'┼','E');
        OB22_   := replace(OB22_,'╒','X');
        OB22_   := replace(OB22_,'╨','P');
        OB22_   := replace(OB22_,'╬','O');
        OB22_   := replace(OB22_,'╥','T');

        OB22aaa_:= (case when upper(substr(nvl(OB22_,'00'),1,1))>'9' then
                      to_char(ascii(upper(substr(nvl(OB22_,'00'),1,1)))-55)||
                      substr(nvl(OB22_,'00'),-1)
                    else
                      '0'||to_char(substr(nvl(OB22_,'00'),1,1))||
                      substr(nvl(OB22_,'00'),-1)
                    end);
        OB22aa_ := substr(OB22aaa_,-2);

        newnls_ := replace(upper(newnls_),'BBBB',substr(nls_,1,4));
        newnls_ := replace(upper(newnls_),'G','R');
        newnls_ := replace(upper(newnls_),'H','╣');
        newnls_ := replace(upper(newnls_),'K','_');
        newnls_ := replace(upper(newnls_),'FFFF',ffff_);
        newnls_ := replace(upper(newnls_),'FFF',fff_);
        newnls_ := replace(upper(newnls_),'FF',ff_);
        newnls_ := replace(upper(newnls_),'AAA',OB22aaa_);
        newnls_ := replace(upper(newnls_),'AA',OB22aa_);

        if substr(nls_,1,4) in ('1001','1101','1011') then
          newnls_ := substr(nls_,1,3)||'2'||substr(newnls_,5);
        end if;

        toroot;
        delete
        from   nlsmask
        where  maskid='TemporaryM';

        insert
        into   nlsmask (MASKID,
                        DESCR ,
                        MASK)
                values ('TemporaryM'                           ,
                        '┬Ёхьхээр  ьрёър фы  °рсыюэр ёўхЄют ╤┴',
                        newnls_);
        commit;

--      яюыєўрхь ╨┼└╦▄═█╔ эюьхЁ ёў╕Єр

        tokf;
        newnls_ := f_newnls2(null               ,
                             'TemporaryM'       ,
                             substr(newnls_,1,4),
                             rnk_               ,
                             null               ,
                             kv_);
        i_ := 0;
        while i_=0
        loop
          begin
            select 0
            into   i_
            from   accounts
            where  nls=newnls_ and
                   kv=kv_;
            newnls_ := vkrzn(substr(MFOg_,1,5),to_char(to_number(newnls_)+1));
          exception when no_data_found then
            i_ := 1;
          end;
        end loop;

<<BCE>> null;

      end if;

      bc.subst_branch(branch_); -- єёЄрэртыштрхь сЁрэў фы  юЄъЁ√трхьюую ёў╕Єр

--    чфхё№ шьххь newnls_ ш kv_ фы  юЄъЁ√Єш  ═╬┬╬├╬ ёў╕Єр шыш шчьхэхэш  ёЄрЁюую

      if rnk_=-1 then
        bars_audit.error('open_accountNF - err(10): ёў╕Є эх яЁшт чрэ эш ъ юфэюьє ъышхэЄє '||Chr(13)||Chr(10)||
                                                              'NLS = '    ||nls_   ||', ' ||Chr(13)||Chr(10)||
                                                              'NEWNLS = ' ||newnls_||', ' ||Chr(13)||Chr(10)||
                                                              'KV = '     ||kv_    ||' '  ||Chr(13)||Chr(10)||
                                                              'branch = ' ||branch_||', ' ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
        fl_ := 1;
        goto kakaxer;
      end if;

      begin
        select acc,
               branch
        into   accR_,
               branchugo_
        from   accounts
        where  nls=newnls_ and
               kv=kv_;
      exception when no_data_found then
        accR_ := null;
                when OTHERS then
        bars_audit.error('open_accountNF - err(1): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                         'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                         'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                         'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                         'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
        fl_ := 1;
        goto kakaxer;
      end;

      if accR_ is null then
        ndz_ := null;
        --1. OP_REG_ex
        begin

          tip_ := 'ODB';

          if    substr(newnls_,1,3)='100' and substr(newnls_,1,4)<>'1007' then
            if kv_=980 then
              tip_ := 'KAS';
            else
              tip_ := 'KAV';
            end if;
          elsif substr(newnls_,1,3) in ('604','603','602') and kv_=980 then
              tip_ := 'SD ';
--        elsif substr(newnls_,1,4) in ('2625','2605','2655') then
--            tip_ := 'PK1';
          end if;

          if trunc(sysdate)<p_datx then
            begin
              insert
              into   fdat (fdat)
                   values (p_datx-4);
              commit;
            exception when OTHERS then
              null;
            end;
            gl.pl_dat(p_datx-4);
          else
            begin
              insert
              into   fdat (fdat)
                   values (p_datx);
              commit;
            exception when OTHERS then
              null;
            end;
            gl.pl_dat(p_datx);
          end if;

          gl.amfo := MFOg_;

          OP_REG_exfl(99     ,  -- mod_       INTEGER,   -- Opening mode :
                      null   ,  -- p1_        INTEGER,   -- 1st Par      :
                      0      ,  -- p2_        INTEGER,   -- 2nd Par      :
                      0      ,  -- p3_        INTEGER,   -- 3rd Par (Grp):
                      ndz_   ,  -- p4_ IN OUT INTEGER,   -- 4th Par      :
                      rnk_   ,  -- rnk_       INTEGER,   -- Customer number
                      newnls_,  -- p_nls_     VARCHAR2,  -- Account  number
                      kv_    ,  -- kv_        SMALLINT,  -- Currency code
                      nms_   ,  -- nms_       VARCHAR2,  -- Account name
                      tip_   ,  -- tip_       CHAR,      -- Account type
                      isp_   ,  -- isp_       SMALLINT,
                      accR_  ,  -- accR_  OUT INTEGER,
                      '1'    ,  -- nbsnull_   VARCHAR2 DEFAULT '1',
                      null   ,  -- pap_       NUMBER   DEFAULT NULL,
                      vid_   ,  -- vid_       NUMBER   DEFAULT NULL,
                      pos_   ,  -- pos_       NUMBER   DEFAULT NULL,
                      null   ,  -- sec_       NUMBER   DEFAULT NULL,
                      null   ,  -- seci_      NUMBER   DEFAULT NULL,
                      null   ,  -- seco_      NUMBER   DEFAULT NULL,
                      99     ,  -- blkd_      NUMBER   DEFAULT NULL,
                      99     ,  -- blkk_      NUMBER   DEFAULT NULL,
          /* lim_? */ null   ,  -- lim_       NUMBER   DEFAULT NULL,
                      null   ,  -- ostx_      VARCHAR2 DEFAULT NULL,
                      nlsalt_,  -- nlsalt_    VARCHAR2 DEFAULT NULL,
                      branch_,  -- tobo_      VARCHAR2 DEFAULT NULL,
                      null   ,  -- accc_      NUMBER   DEFAULT NULL,
                      0);
          op_ := 1;
          begin
            update accounts
            set    dapp=dapp_
            where  acc=accR_;
          EXCEPTION WHEN OTHERS THEN
            bars_audit.error('open_accountNF - err(2): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                             'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                             'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                             'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                             'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                             'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
--          fl_ := 1;
          end;
          begin
            update ree_tmp
            set    ot=6
            where  nls=newnls_ and
                   kv=kv_      and
                   ot=1        and
                   fn_o is null;
          EXCEPTION WHEN OTHERS THEN
            bars_audit.error('open_accountNF - err(9): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                             'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                             'NBS = '   ||nbs_   ||', '||Chr(13)||Chr(10)||
                                             'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                             'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                             'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
          end;
--        l_ins_ := l_ins_+1;
        exception when others then
          bars_audit.error('open_accountNF - err(3): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                           'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                           'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                           'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                           'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          p_code := p_code+1;
          fl_ := 1;
        end;
      else
        if substr(branchugo_,1,15)<>substr(branch_,1,15) then
          bars_audit.error('open_accountNF - err(13): ёў╕Є ╙╞┼ юЄъЁ√Є эр фЁєующ сЁрэў '||Chr(13)||Chr(10)||
                                                       'NLS = '      ||nls_      ||', '||Chr(13)||Chr(10)||
                                                       'NEWNLS = '   ||newnls_   ||', '||Chr(13)||Chr(10)||
                                                       'KV = '       ||kv_       ||', '||Chr(13)||Chr(10)||
                                                       'branchOLD = '||branchugo_||', '||Chr(13)||Chr(10)||
                                                       'branchNEW = '||branch_         ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
          p_code := p_code+1;
          fl_ := 1;
        end if;
      end if;

      if fl_=0 then
        select count(*)
        into   flS6_
        from   accountsw
        where  acc=accR_ and
               tag='IMPNF';
        if flS6_=0 then
          select count(1)
          into   ugosaldoa_
          from   saldoa
          where  acc=accr_;

          if ugosaldoa_=0 then
            begin
              insert
              into   saldoa (acc ,
                             fdat,
                             pdat,
                             ostf,
                             dos ,
                             kos)
                     values (accR_   ,
                             gl.bdate,
                             dapp_   ,
                             0       ,
                             0       ,
                             0);
            EXCEPTION WHEN OTHERS THEN
              null;
            end;
          end if;
        else
          update accounts
          set    daos=daos_
          where  acc=accR_;
        end if;

        if op_=1 then
          begin
            insert
            into   accountsw (acc,
                              tag,
                              value)
                      values (accR_  ,
                              'IMPNF',
                              'Imported from NardaF');
          exception when others then
            bars_audit.error('open_accountNF - err(4): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                             'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                             'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                             'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                             'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;

--        begin
--          execute immediate 'select SHTAR
--                             from   S6_NF_ALCOUT
--                             where  nls='''||NLS_||'''    and
--                                    kv='||to_char(KV_)||' and
--                                    rownum<2'
--                             into   SHTAR_;
--        exception when OTHERS then
--          SHTAR_ := null;
--        end;

          if SHTAR_ is not null then
            begin
              execute immediate 'select to_char(id)
                                 from   TARIF_SCHEME
                                 where  id_nadra='||to_char(SHTAR_)||' and
                                        rownum<2'
                                 into   idshtar_;
            exception when no_data_found then
              idshtar_ := null;
            end;
          end if;

          if idshtar_ is not null then
            begin
              insert
              into   accountsw (acc,
                                tag,
                                value)
                        values (accR_  ,
                                'SHTAR',
                                idshtar_);
            exception when others then
              bars_audit.error('open_accountNF - err(12): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;
          end if;

        end if;

        --2. INSERT or UPDATE SPECPARAM_INT

        if fl_=0 then
          begin
            insert
            into   SPECPARAM_INT (acc    ,
                                  p080   ,
                                  ob22   ,
                                  mfo    ,
                                  r020_fa,
                                  ob88)
                          values (accR_   ,
                                  P080_   ,
                                  OB22_   ,
                                  MFO_    ,
                                  R020_FA_,
                                  OB88_);
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
            null;
--          begin
--            update SPECPARAM_INT
--            set    p080=P080_      ,
--                   ob22=OB22_      ,
--                   mfo=MFO_        ,
--                   r020_fa=R020_FA_,
--                   ob88=OB88_
--            where  acc=accR_;
--          EXCEPTION WHEN OTHERS THEN
--            bars_audit.error('open_accountNF - err(7u): '||sqlerrm||', '||Chr(13)||Chr(10)||
--                                              'branch = '||branch_||', '||Chr(13)||Chr(10)||
--                                              'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
--                                              'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
--                                              'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--            p_code := p_code+1;
--            fl_ := 1;
--          end;
                    WHEN OTHERS THEN
            bars_audit.error('open_accountNF - err(7): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                             'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                             'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                             'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                             'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

        --3. INSERT or UPDATE SPECPARAM

        if DADK_ is not null then
          update accounts
          set    mdate=DADK_
          where  acc=accR_;
          if S180_ is null then
            if DADN_ is not null then
              S180_ := fs180(accR_,null,null,DADN_);
              begin
                select s181
                into   S181_
                from   kl_s180
                where  s180=S180_;
              exception when no_data_found then
                null;
              end;
              begin
                insert
                into   accountsw (acc,
                                  tag,
                                  value)
                          values (accR_ ,
                                  'DADN',
                                  to_char(DADN_,'DD/MM/YYYY'));
              exception when others then
                null;
              end;
            end if;
          end if;
        end if;

        if fl_=0 then
          begin
            insert
            into   SPECPARAM (acc ,
                              R011,
                              R013,
                              S240,
                              S080,
                              S180,
                              S190,
                              S181,
                              S260,
                              S200,
                              S120,
                              S031,
                              S182,
--                            S130,
                              NKD)
                      values (accR_,
                              R011_,
                              R013_,
                              S240_,
                              S080_,
                              S180_,
                              S190_,
                              S181_,
                              S260_,
                              S200_,
                              S120_,
                              S031_,
                              S182_,
--                            S130_,
                              NKD_);
          EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
            begin
              update SPECPARAM
              set    R011=nvl(R011,R011_),
                     R013=nvl(R013,R013_),
                     S240=nvl(S240,S240_),
                     S080=nvl(S080,S080_),
                     S180=nvl(S180,S180_),
                     S190=nvl(S190,S190_),
                     S181=nvl(S181,S181_),
                     S260=nvl(S260,S260_),
                     S200=nvl(S200,S200_),
                     S120=nvl(S120,S120_),
                     S031=nvl(S031,S031_),
                     S182=nvl(S182,S182_),
--                   S130=nvl(S130,S130_),
                     NKD=nvl(NKD,NKD_)
              where  acc=accR_;
            EXCEPTION WHEN OTHERS THEN
              bars_audit.error('open_accountNF - err(8u): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                                'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                                'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                                'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                                'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
              p_code := p_code+1;
              fl_ := 1;
            end;
                    WHEN OTHERS THEN
            bars_audit.error('open_accountNF - err(8): '||sqlerrm||', '||Chr(13)||Chr(10)||
                                             'branch = '||branch_||', '||Chr(13)||Chr(10)||
                                             'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
                                             'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
                                             'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
            p_code := p_code+1;
            fl_ := 1;
          end;
        end if;

--      if substr(nls_,1,1) in ('2','3','9') and
--         substr(nls_,1,4) not in ('2608','2618','2628','2638','2636','2616') then
        if prc_=1 then

--        ╧ЁюЎхэЄэ√х ърЁЄюўъш

          acra_ := null;
          acrb_ := null;

          if fl_=0 then

            if IR_ is not null /* and ACRA_ is not null */ then

              if pap_=1 then
                id_ := 0;
              else
                id_ := 1;
              end if;

--            4. INSERT or UPDATE INT_ACCN

              if NLSNPROC_ is not null then
                begin
                  select acc
                  into   acra_
                  from   accounts
                  where  nls=NLSNPROC_ and
                         kv=kv_;
                exception when no_data_found then
                  null;
                end;
              end if;

              if NLSDR_ is not null then
                begin
                  select acc
                  into   acrb_
                  from   accounts
                  where  nls=NLSDR_ and
                         kv=kv_;
                exception when no_data_found then
                  null;
                end;
              end if;

              begin
                insert
                into    INT_ACCN (ACC    ,  -- accR_
                                  ID     ,  -- id_
                                  METR   ,  -- 0
                                  BASEY  ,  -- 0
                                  FREQ   ,  -- 1
                                  ACR_DAT,  -- bankdate
                                  ACRA   ,  -- ???
                                  ACRB
                                 )
                          values (accR_   ,
                                  id_     ,
                                  0       ,
                                  0       ,
                                  1       ,
                                  bankdate,
                                  acra_   ,
                                  acrb_
                                 );
              EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
--              update INT_ACCN
--              set    METR   =0       ,
--                     BASEY  =0       ,
--                     FREQ   =1       ,
--                     ACR_DAT=bankdate,
--                     ACRA   =acra_   ,
--                     ACRB   =acrb_
--              where  acc=accR_ and
--                     id=id_;
--                      WHEN OTHERS THEN
--              bars_audit.error('open_accountNF - err(6): '||sqlerrm||', '||Chr(13)||Chr(10)||
--                                               'branch = '||branch_||', '||Chr(13)||Chr(10)||
--                                               'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
--                                               'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
--                                               'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--              p_code := p_code+1;
--              fl_ := 1;
                null;
              end;

--            5. INSERT or UPDATE INT_RATN

              if fl_=0 then
                if bdat_ is not null then
                  begin
                    insert
                    into   INT_RATN (acc   ,
                                     id    ,
                                     BDAT  ,
                                     IR    ,
                                     BR    ,
                                     OP    ,
                                     IDU --,
                                    )
                             values (accR_,
                                     id_  ,
                                     bdat_,
                                     IR_  ,
                                     null ,
                                     null ,
                                     1  --,
                                    );
                  EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
--                  update INT_RATN
--                  set    IR=IR_ ,
--                         BR=null,
--                         OP=null,
--                         IDU=1
--                  where  acc=accR_ and
--                         id=id_    and
--                         BDAT=bdat_;
--                          WHEN OTHERS THEN
--                  bars_audit.error('open_accountNF - err(5):'||sqlerrm||', '||Chr(13)||Chr(10)||
--                                                  'branch = '||branch_||', '||Chr(13)||Chr(10)||
--                                                  'NLS = '   ||nls_   ||', '||Chr(13)||Chr(10)||
--                                                  'NEWNLS = '||newnls_||', '||Chr(13)||Chr(10)||
--                                                  'KV = '    ||kv_          ||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--                  p_code := p_code+1;
--                  fl_ := 1;
                    null;
                  end;
                end if;
              end if;
            end if;
          end if;
        end if;
      end if;

<<kakaxer>> null;

      bc.set_context;

<<notdepo>> null;

      if fl_=0 then
        update S6_MIGRNLS
        set    NLS_BARS=newnls_
        where  NLS_FIL=nls_ and
               KV=kv_       and
               FILIAL=p_filial;
        if sql%rowcount=0 then
          insert
          into   S6_MIGRNLS (NLS_FIL ,
                             KV      ,
                             NLS_BARS,
                             FILIAL)
                     values (nls_   ,
                             kv_    ,
                             newnls_,
                             p_filial);
        end if;
        commit;
        p_open := p_open+1;
      else
        rollback;
      end if;

    end loop;
    close cur_;

    dbms_application_info.set_client_info(' ');

    begin
      execute immediate 'alter trigger TIU_ACCOUNT67 enable';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'alter trigger tbiu_specparamint_ob22 enable';
    exception when OTHERS then
      null;
    end;

    gl.frcvr := 0;

    bars_alerter(1);

--  ёсюЁ ёЄрЄшёЄшъш яю ЄрсышЎрь ёўхЄют (ACCOUNTS ш ёт чрээ√х)

--  BEGIN
--    DBMS_JOB.SUBMIT (job       => Job_                    ,
--                     what      => 'migraSK.tableAC_stats;',
--                     next_date => sysdate                 ,
--                     interval  => null                    ,
--                     no_parse  => FALSE);
--  exception when others then
--    bars_audit.error('open_accountNF - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
--  END;

  end open_accountNF;

--

  procedure drop_accountNF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    accmax_  number;
    MFOg_    varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_accountNF - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  delete from TABLEs

    begin
      bc.subst_mfo(MFOg_);
      delete from accounts_update           where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from saldoa                    where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam_int             where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from specparam_update          where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from rko_lst                   where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(7): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_RATN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(20): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_RATN_ARC              where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(21): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(22): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACRA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(23): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from INT_ACCN                  where ACRB       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(24): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from NLK_REF                   where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACC2       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(32): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACCD       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(33): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from RKO_LST                   where ACC1       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(34): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from SALDOA_TURN_QUEUE         where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from SALDOB                    where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTARC                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(43): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTPAY                where ACCA       in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(44): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from TMP_INTPAY                where ACC        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(45): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from accountsw                 where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(56): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from bank_acc                  where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(61): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from bpk_acc                   where acc_pk     in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(65): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from BARSAQ.AQ_SUBSCRIBERS_ACC where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag=''RNKNF'' and substr(value,-6)='''||p_filial||''') and ostc=0 and bc.extract_mfo(branch)='''||MFOg_||''')';
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(66): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      delete from accounts_all              where acc        in (select acc from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(67): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      delete from ree_tmp                   where (nls,kv)   in (select nls,kv from accounts where rnk in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_);
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(68): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

    commit;

    begin
      bc.subst_mfo(MFOg_);
      delete from accounts                  where rnk        in (select rnk from customerw where tag='RNKNF' and substr(value,-6)=p_filial) and ostc=0 and bc.extract_mfo(branch)=MFOg_;
      p_open := p_open+SQL%rowcount;
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_accountNF - err(72): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;

    delete
    from   S6_MIGRNLS
    where  filial=p_filial;

    commit;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='ACCOUNTS')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_accountNF - err(73): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  recreate accounts SEQUENCE

    select nvl(max(acc),0)+1 into accmax_ from accounts;

    execute immediate 'DROP SEQUENCE S_ACCOUNTS';
    execute immediate 'CREATE SEQUENCE S_ACCOUNTS
                       START WITH '||accmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_ACCOUNTS TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_ACCOUNTS

    sys.utl_recomp.recomp_serial('BARS');

    bars_alerter(1);

  end drop_accountNF;

--

  procedure drop_customerNF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    rnkmax_  number;
    MFOg_    varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  disable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_customerNF - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    begin
      execute immediate 'CREATE TABLE S6_TEMP_RNK (rnk NUMBER)';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'DELETE FROM S6_TEMP_RNK';
    exception when OTHERS then
      null;
    end;

    begin
      execute immediate 'INSERT
                         INTO   S6_TEMP_RNK
                         select rnk
                         from   customerw
                         where  rnk not in (select rnk from accounts) and
                                tag=''RNKNF''                         and
                                substr(value,-6)='''||p_filial||'''';
    exception when OTHERS then
      null;
    end;

--  delete from TABLEs

    begin
      bc.subst_mfo(MFOg_);
      execute immediate 'delete from customerw          where rnk in (select rnk from S6_TEMP_RNK)';
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(2): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from customerw_update   where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(40): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from person             where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(3): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from corps_acc          where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(4): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from corps              where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(5): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from customer_address   where rnk in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(6): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTBANK           where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(9): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTCOUNT          where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(10): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUSTOMER_REL       where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(11): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from CUST_NAL           where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(12): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      execute immediate 'delete from KL_CUSTOMER_PARAMS where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(26): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;
    begin
      bc.subst_mfo(MFOg_);
      execute immediate 'delete from RNK_REKV           where RNK in (select rnk from S6_TEMP_RNK)';
      bc.set_context;
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(27): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
      bc.set_context;
    end;
    begin
      execute immediate 'delete from CUSTOMER_UPDATE    where RNK in (select rnk from S6_TEMP_RNK)';
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(35): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    commit;  -- ьюцхЄ яюьюцхЄ

    begin
      execute immediate 'delete from customer           where RNK in (select rnk from S6_TEMP_RNK)';
      p_open := p_open+SQL%rowcount;
    exception when OTHERS then
      bars_audit.error('drop_customerNF - err(36): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
      p_code := p_code+1;
    end;

    begin
      execute immediate 'DROP TABLE S6_TEMP_RNK';
    exception when OTHERS then
      null;
    end;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='CUSTOMER')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_customerNF - err(37): '||sqlerrm||' - '||k.table_name||', '||k.constraint_name);
        p_code := p_code+1;
      end;
    end loop;

    commit;

--  recreate customer SEQUENCE

    select nvl(max(rnk),0)+1 into rnkmax_ from customer;

    execute immediate 'DROP SEQUENCE S_CUSTOMER';
    execute immediate 'CREATE SEQUENCE S_CUSTOMER
                       START WITH '||rnkmax_||'
                       MAXVALUE 999999999999999999999999999
                       MINVALUE 1
                       NOCYCLE
                       NOCACHE
                       NOORDER';
    execute immediate 'GRANT SELECT ON S_CUSTOMER TO ABS_ADMIN';

--  ыхўхэшх "шэтрышфют" шч-чр SEQUENCE S_CUSTOMER

    sys.utl_recomp.recomp_serial('BARS');

    bars_alerter(1);

  end drop_customerNF;

--

  procedure drop_userNF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
--  fi3_   char(3);
    MFOg_  varchar2(12);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    MFOg_ := f_ourmfo_g;

--  execute immediate 'select substr(min(branch),12,3)
--                     from   s6_nf_users'
--                     into   fi3_;

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' DISABLE';
      exception when OTHERS then
        bars_audit.error('drop_userNF - err(0): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    for k in (SELECT s.id
              from   staff$base        s,
                     USERS_SKARB6_BARS u
              where  bc.extract_mfo(s.branch)=MFOg_ and
                     u.filial=p_filial              and
                     u.ubars=s.id)

    loop
      begin
--      bars_audit.info('drop_userNF - info(1): '||k.id);
        delete
        from   USERS_SKARB6_BARS
        where  kf=MFOg_   and
               ubars=k.id and
               filial=p_filial;
        BARS_USERADM.drop_user(k.id);
--      bars_audit.info('drop_userNF - info(2): '||k.id);
        delete
        from   staff$base
        where  id=k.id;
        p_open := p_open+SQL%rowcount;
        commit;
      exception when OTHERS then
        bars_audit.error('drop_userNF - err(1): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

--  enable CONSTRAINTs

    for k in (select distinct
                     u2.table_name,
                     u2.constraint_name
              from   user_constraints u1,
                     user_constraints u2
              where  u2.r_constraint_name=u1.constraint_name and
                     u1.table_name='STAFF$BASE')
    loop
      begin
        execute immediate 'ALTER TABLE '||k.table_name||' MODIFY CONSTRAINT '||k.constraint_name||' ENABLE NOVALIDATE';
      exception when OTHERS then
        bars_audit.error('drop_userNF - err(2): constraint '||k.constraint_name||' '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
        p_code := p_code+1;
      end;
    end loop;

    bars_alerter(1);

  end drop_userNF;

--

  procedure load_nadF_ostc (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type     cur is ref cursor;
    cur_     cur;
    sql_     varchar2(4000);

    tt_      oper.TT%type      := '024';
    sk_      oper.SK%type      ;
    TIP_     accounts.TIP%type ;
    VOB_     oper.vob%type     := 6;
    REF_     oper.REF%type     ;
    DK_      oper.DK%type      ;
    NMST_    oper.NAM_A%type   ;
    NLST_    oper.NLSA%type    ;
    NMSS_    oper.NAM_A%type   ;
    S_       oper.S%type       ;
    SQ_      oper.SQ%type      ;
    NAZN_    oper.NAZN%type    := '╧хЁхтхфхээ  чрыш°ъє ч ';
    Isp_     oper.userid%type  := 20094;

    NLSS_    accounts.nls%type ;
    NLS_OLD_ accounts.nls%type ;
    KV_      accounts.kv%type  ;
    OST_     accounts.ostc%type;
    OSTQ_    accounts.ostq%type;

    c024_    number;
    pos_     accounts.pos%type ;
    accs_    accounts.acc%type ;
    daot_    date;
    f38_     char(1);

  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

    toroot;

    update tts
    set    rang=100
    where  tt=tt_;
    commit;

    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    select count(1)
    into   c024_
    from   oper
    where  tt=tt_        and
           sos=5         and
           vdat=gl.bdate and
           userid=20094  and
           nazn like '╧хЁхтхфхээ  чрыш°ъє ч '||p_filial||'/%';

    if c024_>0 then
      bars_audit.error('load_nadF_ostc - err(0): яютЄюЁэр  чруЁєчър юёЄрЄъют эхтючьюцэр, эхюсїюфшь юЄърЄ ...');
      p_code := p_code+1;
    goto nozagruzka;
    end if;

    sql_:='select m.nls_bars         NLSS   ,
                  o.nls              NLS_OLD,
                  o.kv               KV     ,
                  abs(o.ostc)*100    OST    ,
                  abs(o.ostq)*100    OSTQ   ,
                  (sign(o.ostc)+1)/2 DK
           from   S6_NF_ALCOUT o,
                  S6_MIGRNLS   m
           where  o.nls=m.nls_fil             and
                  o.kv=m.kv                   and
                  m.filial='''||p_filial||''' and
                  o.ostc<>0';

    open cur_ for sql_;

    loop

      fetch cur_ into NLSS_   ,
                      NLS_OLD_,
                      KV_     ,
                      OST_    ,
                      OSTQ_   ,
                      DK_;
      exit when cur_%notfound;

      dbms_application_info.set_client_info('open='||to_char(p_open)||
                                         ', error='||to_char(p_code));

      begin
        execute immediate 'select NLS_TRA
                           from   (select trim(bals)||''%'' LIK,
                                          KV                   ,
                                          to_char(transit)  NLS_TRA
                                   from   S6_NF_TRANSIT
                                   order  by length(trim(bals)) desc,
                                             trim(bals)             ,
                                             nvl(KV,0) desc)
                           where  '''||nls_old_||''' like LIK            and
                                  (nullif(KV,0) is null or '||kv_||'=KV) and
                                  rownum=1'
                           into   NLST_;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_nadF_ostc - err(1): ═х юяшёрэ т TRANSIT.DBF ёў╕Є-ЄЁрэчшЄ фы  '||p_filial||'/'||nls_old_||'('||KV_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
                WHEN OTHERS THEN
        if sqlcode=-904 then
          bars_audit.error('load_nadF_ostc - err(5): ёЄрЁр  ёЄЁєъЄєЁр TRANSIT.DBF '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        end if;
        bars_audit.error('load_nadF_ostc - err(6): '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      begin
        select trim(substr(nms,1,38)),
               daos
        into   NMST_,
               daot_
        from   accounts
        where  kv=KV_    and
               nls=NLST_ and
               dazs is null;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_nadF_ostc - err(2): ═х эрщфхэ шыш чръЁ√Є ёў╕Є-ЄЁрэчшЄ '||nlsT_||'('||KV_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      begin
        select trim(substr(nms,1,38)),
               tip                   ,
               pos                   ,
               acc
        into   NMSS_,
               TIP_ ,
               pos_ ,
               accs_
        from   accounts
        where  kv=KV_    and
               nls=NLSS_ and
               dazs is null;
      EXCEPTION WHEN NO_DATA_FOUND THEN
        bars_audit.error('load_nadF_ostc - err(3): ═х эрщфхэ шыш чръЁ√Є ═╬┬█╔ ёў╕Є '||NLSS_||' фы  '||p_filial||'/'||nls_old_||'('||kv_||') '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
        goto dalee;
      end;

      if TIP_='KAS' then
        sk_ := 37; -- яюёых єЄюўэхэш  ╞шЄюьшЁр
      else
        sk_ := null;
      end if;

      S_  := ost_;
      sq_ := ostq_;

      if daot_>p_datx then
        update accounts
        set    daos=p_datx
        where  kv=KV_ and
               nls=NLST_;
      end if;

      if substr(NLSS_,1,4) in ('2625','2605') then

        toroot;

        select substr(flags,39,1)
        into   f38_
        from   tts
        where  tt=tt_;

        update tts
        set    flags=substr(flags,1,38)||'1'||substr(flags,40)
        where  tt=tt_;

        commit;

        tokf;

        gl.pl_dat(p_datx);
        gl.amfo := f_ourmfo_g;

      end if;

      begin
        GL.REF(REF_);
        GL.IN_DOC2(REF_,  TT_,   VOB_, REF_, SYSDATE, GL.BDATE, DK_, KV_,
                   S_,    KV_,   S_,   sq_,  sk_,     GL.BDATE, GL.BDATE,
                   NMsT_, NLST_, gl.AMFO,
                   NMSS_, NLSS_, gl.AMFO,
                   NAZN_||p_filial||'/'||NLS_OLD_,
                   NULL, null, null, null, null, 1, null, ISP_);
        GL.PAYV(0, REF_, GL.BDATE, TT_, DK_, KV_, NLST_, S_, KV_, NLSS_, S_);
        GL.PAY (2, REF_, GL.BDATE);
        commit;
        p_open := p_open+1;
      EXCEPTION WHEN others THEN
        bars_audit.error('load_nadF_ostc - err(4): ╬°шсър юяырЄ√ '||nlsT_||'('||KV_||') --> '||NLSS_||'('||KV_||') эр ёєььє='||S_||' - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        rollback;
        p_code := p_code+1;
      end;

      if substr(NLSS_,1,4) in ('2625','2605') then

        toroot;

        update tts
        set    flags=substr(flags,1,38)||f38_||substr(flags,40)
        where  tt=tt_;

        commit;

        tokf;

        gl.pl_dat(p_datx);
        gl.amfo := f_ourmfo_g;

      end if;

<<dalee>> null;

    end loop;
    close cur_;

    dbms_application_info.set_client_info('pereocenka');

    migraSK.pereocenka(p_code,'load_nadF_ostc - err',p_datx);

    dbms_application_info.set_client_info(' ');

<<nozagruzka>> null;

    toroot;

    update tts
    set    rang=null
    where  tt=tt_;
    commit;

    bars_alerter(1);

  end load_nadF_ostc;

--

  procedure drop_nadF_ostc (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

--  юЄърЄ фюъєьхэЄют яю ЁрчтюЁюЄє юёЄрЄъют

    toroot;

    update tts
    set    flags=substr(flags,1,38)||'1'||substr(flags,40)
    where  tt='BAK';
    commit;

    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    for k in (
              select ref
              from   oper
              where  tt='024'      and
                     sos=5         and
                     vdat=gl.bdate and
                     userid=20094  and
                     nazn like '╧хЁхтхфхээ  чрыш°ъє ч '||p_filial||'/%')
    loop
      FOR x IN (SELECT a.acc ,
                       o.fdat,
                       o.sq
                FROM   accounts a,
                       opldok   o
                WHERE  o.ref=k.ref AND
                       a.pos=2     AND
                       o.acc=a.acc)
      LOOP
        UPDATE saldob
        SET    dos=dos-x.sq,
               kos=kos-x.sq
        WHERE  acc=x.acc AND
               fdat=x.fdat;
      END LOOP;
      ful_bak(k.ref);
      bars_audit.info('drop_nadF_ostc: ful_bak '||k.ref);
      commit;
      p_open := p_open+1;
    end loop;

    toroot;

    update tts
    set    flags=substr(flags,1,38)||'0'||substr(flags,40)
    where  tt='BAK';
    commit;

    bars_alerter(1);

  end drop_nadF_ostc;

--

  procedure fin_deblockingNF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    l_rnk     number;
    blkk_     number;
    branch2_  varchar2(15);
    Job_      number;
    MFOg_     varchar2(12);
  begin

    bars_alerter(0);

    p_open   := 0;
    p_code   := 0;
    branch2_ := null;

    MFOg_ := f_ourmfo_g;

--  ъюЁЁхъЄшЁютър accounts яю saldoa, saldob (ўхЁхч чрфрэшх)

    BEGIN
      DBMS_JOB.SUBMIT (job       => Job_               ,
                       what      => 'correct_accounts;',
                       next_date => sysdate            ,
                       interval  => null               ,
                       no_parse  => FALSE);
    exception when others then
      bars_audit.error('fin_deblockingNF - err(J): '||sqlerrm||Chr(13)||Chr(10)||replace(dbms_utility.format_error_backtrace,chr(10),chr(13)||chr(10)));
    END;

    tokf;

--  ЁрчсыюъшЁютър ёўхЄют: blkk ш blkd ё 99 эр 0

    for k in (select nls_bars,
                     nls_fil ,
                     kv
              from   S6_MIGRNLS
              where  filial=p_filial)
    loop
--    begin
--      execute immediate 'select isescrow
--                         from   s6_hi_'||p_filial||'_bac
--                         where  code='''||k.nls_fil||''' and
--                                to_number(curr)='||to_char(k.kv)
--                         into   blkk_;
--      exception when others then
      blkk_ := 0;
--      end;
      update accounts
      set    blkk=blkk_*99,
             blkd=0
      where  nls=k.nls_bars and
             kv=k.kv;
      p_open := p_open+1;
      if branch2_ is null then
        begin
          select substr(branch,1,15)
          into   branch2_
          from   accounts
          where  nls=k.nls_bars and
                 kv=k.kv;
        exception when no_data_found then
          null;
        end;
      end if;
    end loop;
    commit;

    toroot;

--  єфрыхэшх ╠╘╬ Їшышрыр шч ЄрсышЎ LKL_RRP ш BANK_ACC

    tokf;
    begin
      delete
      from   lkl_rrp
      where  mfo=p_filial;
      commit;
    exception when OTHERS then
      rollback;
      bars_audit.error('fin_deblockingNF - err(1) for delete from lkl_rrp: '||sqlerrm);
    end;
    begin
      delete
      from   bank_acc
      where  mfo=p_filial;
      commit;
    exception when OTHERS then
      rollback;
      bars_audit.error('fin_deblockingNF - err(2) for delete from bank_acc: '||sqlerrm);
    end;
    toroot;

--  юсэютыхэшх ьрЄхЁшрышчютрээюую яЁхфёЄртыхэш 

    NERUXOMI;

--  фюсртър RNK ш ярЁрьхЄЁр ё RNK фы  сЁрэўхщ

    begin
      for c in (select branch,
                       name
                from   branch
                where  branch like '/'||MFOg_||'/%'
                order  by branch)
      loop
        begin
          bc.subst_branch(c.branch);
          begin
            select rnk
            into   l_rnk
            from   customer
            where  branch=c.branch and
                   notes='BRANCH<->RNK';
          exception when no_data_found then

            execute immediate 'select s_customer.nextval from dual' into l_rnk;

            insert
            into   customer (rnk      ,
                             tgr      ,
                             custtype ,
                             codcagent,
                             okpo     ,
                             country  ,
                             nmk      ,
                             nmkk     ,
                             notes    ,
                             ise      ,
                             fs       ,
                             oe       ,
                             ved      ,
                             sed      ,
                             k050     ,
                             branch)
                     values (l_rnk                    ,
                             1                        ,
                             1                        ,
                             1                        ,
                             f_ourokpo                ,
                             804                      ,
                             trim(substr(c.name,1,70)),
                             trim(substr(c.name,1,38)),
                             'BRANCH<->RNK'           ,
                             '12201'                  ,
                             '31'                     ,
                             '96130'                  ,
                             '65120'                  ,
                             '80  '                   ,
                             '610'                    ,
                             c.branch);
          end;

          begin
            update branch_parameters
            set    val=to_char(l_rnk)
            where  tag='RNK' and
                   branch=c.branch;

            if SQL%ROWCOUNT=0 then
             insert
             into   branch_parameters (branch,
                                       tag   ,
                                       val)
                               values (c.branch,
                                       'RNK'   ,
                                       to_char(l_rnk));
            end if;
          end;
        exception when others then
          bc.set_context;
        end;
        bc.set_context;
      end loop;
    end;

    commit;

--  уЁштэр яю тёхь сЁрэўрь т cur_rates$base

    migraSK.grn11tocurrates;

--  юЄъЁ√Єшх ёўхЄют %% Ёрёїюфют

--  migraSK.open_proc_drm('fin_deblockingNF - ',p_open,p_code,0,branch2_);

    bars_alerter(1);

  end fin_deblockingNF;

--

  procedure open_3800_NF (p_filial in varchar2, p_open out number, p_code out number, p_datx date)
  is
    type      cur is ref cursor;
    cur_      cur;
    sql_      varchar2(4000);
    BRANCH2_  varchar2(15);
  begin

    bars_alerter(0);

    p_open := 0;
    p_code := 0;

/*  ╬ЄъЁ√Є№ эют√х 3800/3801 сЁрэў2, чряюыэ   юфэютЁхьхээю VP_LIST.
    ╧Ёхфырур■ ьрёъє 3800_┴┴┴┴╬╬,  3801_┴┴┴┴╬╬┬┬┬,
    ┴┴┴┴ - ъюф сЁрэўр
    ╬╬   - ъюф ╬┴22
    ┬┬┬  - ъюф тры
*/
    tokf;

    begin
      insert
      into   fdat (fdat)
           values (p_datx);
      commit;
    exception when OTHERS then
      null;
    end;

    gl.pl_dat(p_datx);
    gl.amfo := f_ourmfo_g;

    sql_:='select distinct
                  substr(branch,1,15) BRANCH2
           from   S6_NF_FILIAL';

    open cur_ for sql_;

    loop

      fetch cur_ into BRANCH2_;
      exit when cur_%notfound;

      -- kv (959,961,962) + ╬┴22('09')
      begin
        xM_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_NF - err(1): ╬°шсър xM_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

      -- kv not (959,961,962) + ╬┴22('03','10','16','20')
      begin
        xV_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_NF - err(2): ╬°шсър xV_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

      -- ╧хЁхсЁюёшЄ№ юёЄрЄъш ш чръЁ√Є№ ёЄрЁ х ышЎ.ёўхЄр 3800 ш 3801
      begin
        xZ_3800(gl.amfo, BRANCH2_, p_datx);
        p_open := p_open+1;
      exception when others then
        bars_audit.error('open_3800_NF - err(3): ╬°шсър xZ_3800 - '||sqlerrm||' '||dbms_utility.format_error_backtrace);
        p_code := p_code+1;
      end;

    end loop;

--  toroot;

    bars_alerter(1);

  end open_3800_NF;

--

  function header_version return varchar2
  is
  begin
    return 'Package header migraSK ' || version_header;
  end header_version;

--

  function body_version return varchar2
  is
  begin
    return 'Package body migraSK ' || version_body;
  end body_version;

end migraSK;
/
 show err;
 
PROMPT *** Create  grants  MIGRASK ***
grant EXECUTE                                                                on MIGRASK         to WR_ALL_RIGHTS;

 
 
 PROMPT ===================================================================================== 
 PROMPT *** End *** ========== Scripts /Sql/BARS/package/migrask.sql =========*** End *** ===
 PROMPT ===================================================================================== 
 