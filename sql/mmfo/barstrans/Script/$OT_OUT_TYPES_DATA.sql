MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  1 as ID,
  'NBU_FINPERFORMANCEPR_UO' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  95 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_finperformancepr_uo' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  2 as ID,
  'NBU_CREDIT_TRANCHE' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  95 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_credit_tranche' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  3 as ID,
  'EDECL_REQ_TO_RU' as TYPE_NAME,
  'EDECL_REQ_TO_RU' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  95 as CONT_TYPE,
  1 as IS_PARALLEL,
  'GROUP' as SEND_TYPE,
  'E_DECL_TO_MMFO' as URI_GROUP,
  'api/transp/v1/edecl_req_to_ru' as URI_SUF,
  1 as PRIORITY,
  'begin bars.eds_utl.process_resp(:id); end;' as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  0 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  0 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  95 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  4 as ID,
  'NBU_DOCUMENT_FO' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  93 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_document_fo' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  5 as ID,
  'NBU_ADDRESS_FO' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  93 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_address_fo' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  6 as ID,
  'NBU_PERSON_UO' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  93 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_person_uo' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  7 as ID,
  'NBU_FINPERFORMANCE_UO' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  93 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_finperformance_uo' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  8 as ID,
  'NBU_FINPERFORMANCEGR_UO' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  93 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_finperformancegr_uo' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  9 as ID,
  'NBU_PARTNERS_UO' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  93 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_partners_uo' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  10 as ID,
  'NBU_OWNERPP_UO' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  93 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_ownerpp_uo' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  11 as ID,
  'NBU_OWNERJUR_UO' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  93 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_ownerjur_uo' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  12 as ID,
  'NBU_CREDIT' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  93 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_credit' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  13 as ID,
  'NBU_CREDIT_PLADGE' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  93 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_credit_pladge' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  14 as ID,
  'NBU_PERSON_FO' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  93 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_person_fo' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  15 as ID,
  'BILLS_SERVICE' as TYPE_NAME,
  'General bills communication service' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'SOAP' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  95 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_DKSU_GROUP' as URI_GROUP,
  'webservices/billsTransportService.asmx/BillsService' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  0 as INPUT_DECOMPRESS,
  0 as OUTPUT_COMPRESS,
  0 as INPUT_BASE_64,
  0 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  16 as ID,
  'BILLS_REQUEST' as TYPE_NAME,
  'Request from region to cdb' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  95 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/bills_request' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  0 as INPUT_DECOMPRESS,
  0 as OUTPUT_COMPRESS,
  0 as INPUT_BASE_64,
  0 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  17 as ID,
  'EDECL_GET_PDF_WEB' as TYPE_NAME,
  'EDECL_GET_PDF_WEB' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  95 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'E_DECL_TO_MMFO' as URI_GROUP,
  'api/fastreport/fastreport/getFileInBase64' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  0 as INPUT_DECOMPRESS,
  0 as OUTPUT_COMPRESS,
  0 as INPUT_BASE_64,
  0 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  95 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  18 as ID,
  'NBU_PLEDGE_DEP' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  93 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_pledge_dep' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  19 as ID,
  'NBU_GROUPUR_UO' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  95 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_groupur_uo' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

MERGE INTO BARSTRANS.OUT_TYPES A USING
 (SELECT
  20 as ID,
  'NBU_CREDIT_PLEDGE' as TYPE_NAME,
  'form_601' as TYPE_DESC,
  'SYNCH' as SESS_TYPE,
  'WEBAPI' as WEB_METHOD,
  'POST' as HTTP_METHOD,
  'CLOB' as OUTPUT_DATA_TYPE,
  'CLOB' as INPUT_DATA_TYPE,
  95 as CONT_TYPE,
  0 as IS_PARALLEL,
  'SINGLE' as SEND_TYPE,
  'BILLS_MMFO_GROUP' as URI_GROUP,
  'api/transp/v1/nbu_credit_pledge' as URI_SUF,
  1 as PRIORITY,
  NULL as DONE_ACCTION,
  600 as MAIN_TIMEOUT,
  5 as SEND_TRYS,
  30 as SEND_PAUSE,
  60 as CHK_PAUSE,
  0 as XML2JSON,
  0 as JSON2XML,
  'GZIP' as COMPRESS_TYPE,
  1 as INPUT_DECOMPRESS,
  1 as OUTPUT_COMPRESS,
  1 as INPUT_BASE_64,
  1 as OUTPUT_BASE_64,
  'MD5' as CHECK_SUM,
  0 as STORE_HEAD,
  93 as ACC_CONT_TYPE,
  0 as LOGING
  FROM DUAL) B
ON (A.TYPE_NAME = B.TYPE_NAME)
WHEN NOT MATCHED THEN 
INSERT (
  ID, TYPE_NAME, TYPE_DESC, SESS_TYPE, WEB_METHOD, 
  HTTP_METHOD, OUTPUT_DATA_TYPE, INPUT_DATA_TYPE, CONT_TYPE, IS_PARALLEL, 
  SEND_TYPE, URI_GROUP, URI_SUF, PRIORITY, DONE_ACCTION, 
  MAIN_TIMEOUT, SEND_TRYS, SEND_PAUSE, CHK_PAUSE, XML2JSON, 
  JSON2XML, COMPRESS_TYPE, INPUT_DECOMPRESS, OUTPUT_COMPRESS, INPUT_BASE_64, 
  OUTPUT_BASE_64, CHECK_SUM, STORE_HEAD, ACC_CONT_TYPE, LOGING)
VALUES (
  B.ID, B.TYPE_NAME, B.TYPE_DESC, B.SESS_TYPE, B.WEB_METHOD, 
  B.HTTP_METHOD, B.OUTPUT_DATA_TYPE, B.INPUT_DATA_TYPE, B.CONT_TYPE, B.IS_PARALLEL, 
  B.SEND_TYPE, B.URI_GROUP, B.URI_SUF, B.PRIORITY, B.DONE_ACCTION, 
  B.MAIN_TIMEOUT, B.SEND_TRYS, B.SEND_PAUSE, B.CHK_PAUSE, B.XML2JSON, 
  B.JSON2XML, B.COMPRESS_TYPE, B.INPUT_DECOMPRESS, B.OUTPUT_COMPRESS, B.INPUT_BASE_64, 
  B.OUTPUT_BASE_64, B.CHECK_SUM, B.STORE_HEAD, B.ACC_CONT_TYPE, B.LOGING)
WHEN MATCHED THEN
UPDATE SET 
  A.ID = B.ID,
  A.TYPE_DESC = B.TYPE_DESC,
  A.SESS_TYPE = B.SESS_TYPE,
  A.WEB_METHOD = B.WEB_METHOD,
  A.HTTP_METHOD = B.HTTP_METHOD,
  A.OUTPUT_DATA_TYPE = B.OUTPUT_DATA_TYPE,
  A.INPUT_DATA_TYPE = B.INPUT_DATA_TYPE,
  A.CONT_TYPE = B.CONT_TYPE,
  A.IS_PARALLEL = B.IS_PARALLEL,
  A.SEND_TYPE = B.SEND_TYPE,
  A.URI_GROUP = B.URI_GROUP,
  A.URI_SUF = B.URI_SUF,
  A.PRIORITY = B.PRIORITY,
  A.DONE_ACCTION = B.DONE_ACCTION,
  A.MAIN_TIMEOUT = B.MAIN_TIMEOUT,
  A.SEND_TRYS = B.SEND_TRYS,
  A.SEND_PAUSE = B.SEND_PAUSE,
  A.CHK_PAUSE = B.CHK_PAUSE,
  A.XML2JSON = B.XML2JSON,
  A.JSON2XML = B.JSON2XML,
  A.COMPRESS_TYPE = B.COMPRESS_TYPE,
  A.INPUT_DECOMPRESS = B.INPUT_DECOMPRESS,
  A.OUTPUT_COMPRESS = B.OUTPUT_COMPRESS,
  A.INPUT_BASE_64 = B.INPUT_BASE_64,
  A.OUTPUT_BASE_64 = B.OUTPUT_BASE_64,
  A.CHECK_SUM = B.CHECK_SUM,
  A.STORE_HEAD = B.STORE_HEAD,
  A.ACC_CONT_TYPE = B.ACC_CONT_TYPE,
  A.LOGING = B.LOGING;

COMMIT;
