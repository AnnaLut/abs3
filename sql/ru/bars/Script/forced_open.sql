MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'CR9' as TIP,
  '1' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'CR9' as TIP,
  '1' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'SD ' as TIP,
  '1' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SD ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SD ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'SDI' as TIP,
  '1' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SDI' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SDI' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'SG ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SG ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SG ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'SK0' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SK0' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SK0' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SK9' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SK9' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SL ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SL ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SLN' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SLN' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'SN ' as TIP,
  '1' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SN ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SN ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SN8' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SN8' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SP ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SP ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SPI' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SPI' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SPN' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SPN' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'SS ' as TIP,
  '1' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SS ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SS ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'ISG' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'ISG' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'SNO' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'SNO' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'SNO' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'S36' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'S36' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'SP ' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'SPN' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'ISG' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'CR9' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'SN8' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  1 as VIDD,
  'SK9' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  2 as VIDD,
  'ODB' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

MERGE INTO BARS.VIDD_TIP A USING
 (SELECT
  3 as VIDD,
  'ODB' as TIP,
  '0' as FORCE_OPEN
  FROM DUAL) B
ON (A.TIP = B.TIP and A.VIDD = B.VIDD)
WHEN NOT MATCHED THEN 
INSERT (
  VIDD, TIP, FORCE_OPEN)
VALUES (
  B.VIDD, B.TIP, B.FORCE_OPEN)
WHEN MATCHED THEN
UPDATE SET 
  A.FORCE_OPEN = B.FORCE_OPEN;

COMMIT;
