

PROMPT ===================================================================================== 
PROMPT *** Run *** ========== Scripts /Sql/BARS/Procedure/GRANT_FUNC_PRIVS.sql =========*** 
PROMPT ===================================================================================== 


PROMPT *** Create  procedure GRANT_FUNC_PRIVS ***

  CREATE OR REPLACE PROCEDURE BARS.GRANT_FUNC_PRIVS (CODEAPP_ CHAR DEFAULT NULL) IS
  --Процедура добавляют недостающие привилегии на функции
  CURSOR FUNC_ROLES_ALL IS
  SELECT DISTINCT
    STAFF.LOGNAME USERNAME,OPERLIST.ROLENAME ROLE_NAME
  FROM STAFF,APPLIST_STAFF,OPERAPP,OPERLIST, DBA_ROLES
  WHERE
    STAFF.ID=APPLIST_STAFF.ID AND
	APPLIST_STAFF.CODEAPP=OPERAPP.CODEAPP AND
	OPERAPP.CODEOPER=OPERLIST.CODEOPER AND
	OPERLIST.ROLENAME IS NOT NULL AND
	UPPER(OPERLIST.ROLENAME) = DBA_ROLES.ROLE AND
	UPPER(OPERLIST.ROLENAME) NOT IN (
	SELECT GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE=STAFF.LOGNAME)
  ORDER BY
    STAFF.LOGNAME, OPERLIST.ROLENAME;
  CURSOR FUNC_ROLES_APP IS
  SELECT DISTINCT
    STAFF.LOGNAME USERNAME,OPERLIST.ROLENAME ROLE_NAME
  FROM STAFF,APPLIST_STAFF,OPERAPP,OPERLIST, DBA_ROLES
  WHERE
    STAFF.ID=APPLIST_STAFF.ID AND
	APPLIST_STAFF.CODEAPP=OPERAPP.CODEAPP AND
	APPLIST_STAFF.CODEAPP=CODEAPP_ AND
	OPERAPP.CODEOPER=OPERLIST.CODEOPER AND
	OPERLIST.ROLENAME IS NOT NULL AND
	UPPER(OPERLIST.ROLENAME) = DBA_ROLES.ROLE AND
	UPPER(OPERLIST.ROLENAME) NOT IN (
	SELECT GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE=STAFF.LOGNAME)
  ORDER BY
    STAFF.LOGNAME, OPERLIST.ROLENAME;
  CID			   INTEGER;
  GRANTS_STR	   VARCHAR2(300);
  HIT_COUNT		   INTEGER;
BEGIN
  CID := DBMS_SQL.OPEN_CURSOR;
  HIT_COUNT := 0;
  IF CODEAPP_ IS NULL THEN
    FOR C1 IN FUNC_ROLES_ALL LOOP
      IF LENGTH(C1.ROLE_NAME)>0 AND LENGTH(C1.USERNAME)>0 THEN
        GRANTS_STR := 'GRANT ' || C1.ROLE_NAME || ' TO ' || C1.USERNAME;
	    BEGIN
          DBMS_SQL.PARSE( CID, GRANTS_STR, DBMS_SQL.V7 );
	    EXCEPTION
	      WHEN OTHERS THEN NULL;
	    END;
	    HIT_COUNT := HIT_COUNT + 1;
	  END IF;
    END LOOP;
  ELSE
    FOR C1 IN FUNC_ROLES_APP LOOP
      IF LENGTH(C1.ROLE_NAME)>0 AND LENGTH(C1.USERNAME)>0 THEN
        GRANTS_STR := 'GRANT ' || C1.ROLE_NAME || ' TO ' || C1.USERNAME;
	    BEGIN
          DBMS_SQL.PARSE( CID, GRANTS_STR, DBMS_SQL.V7 );
	    EXCEPTION
	      WHEN OTHERS THEN NULL;
	    END;
	    HIT_COUNT := HIT_COUNT + 1;
	  END IF;
    END LOOP;
  END IF;
  DBMS_SQL.CLOSE_CURSOR( CID );
  DBMS_OUTPUT.PUT_LINE( HIT_COUNT || ' ролей дано на функции.' );
END;
/
show err;

PROMPT *** Create  grants  GRANT_FUNC_PRIVS ***
grant EXECUTE                                                                on GRANT_FUNC_PRIVS to ABS_ADMIN;
grant EXECUTE                                                                on GRANT_FUNC_PRIVS to BARS_ACCESS_DEFROLE;
grant EXECUTE                                                                on GRANT_FUNC_PRIVS to WR_ALL_RIGHTS;



PROMPT ===================================================================================== 
PROMPT *** End *** ========== Scripts /Sql/BARS/Procedure/GRANT_FUNC_PRIVS.sql =========*** 
PROMPT ===================================================================================== 
