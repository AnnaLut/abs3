SET SERVEROUTPUT ON 
SET DEFINE OFF 
PROMPT ===================================================================================== 
PROMPT *** Run *** ========== Scripts /Sql/Bars/Data/codeapp_PRVN.sql =========*** Run *** =
PROMPT ===================================================================================== 


PROMPT *** Create/replace  ARM  PRVN ***
  declare
    l_application_code varchar2(10 char) := 'PRVN';
    l_application_name varchar2(300 char) := 'АРМ-PRVN';
    l_application_type_id integer := user_menu_utl.APPLICATION_TYPE_CENTURA;
    l_function_ids number_list := number_list();
    l_function_codeoper     OPERLIST.CODEOPER%type;
    l_function_deps         OPERLIST.CODEOPER%type;
    l_application_id integer;
    l_role_resource_type_id integer := resource_utl.get_resource_type_id(user_role_utl.RESOURCE_TYPE_ROLE);
    l_arm_resource_type_id  integer := resource_utl.get_resource_type_id(user_menu_utl.get_arm_resource_type_code(l_application_type_id));
    l_func_resource_type_id integer := resource_utl.get_resource_type_id(user_menu_utl.get_func_resource_type_code(l_application_type_id));
    l integer := 0;
	d integer := 0;
begin
     DBMS_OUTPUT.PUT_LINE(' PRVN створюємо (або оновлюємо) АРМ АРМ-PRVN ');
     user_menu_utl.cor_arm(  P_ARM_CODE              => l_application_code,
                             P_ARM_NAME              => l_application_name,
                             P_APPLICATION_TYPE_ID   => l_application_type_id);

        -- отримуємо ідентифікатор створеного АРМу
     l_application_id := user_menu_utl.get_arm_id(l_application_code); 
    DBMS_OUTPUT.PUT_LINE( chr(13)||chr(10)||' ********** Створюємо функцію 2) Модулі в АБС, що пов`язані з Фін.Деб. ********** ');
          --  Створюємо функцію 2) Модулі в АБС, що пов`язані з Фін.Деб.
      l := l +1;
      l_function_ids.extend(l);
      l_function_ids(l)   :=   abs_utils.add_func(
                                                  p_name     => '2) Модулі в АБС, що пов`язані з Фін.Деб.',
                                                  p_funcname => 'FunNSIEditF("FIN_DEBM",0)',
                                                  p_rolename => 'START1' ,
                                                  p_frontend => l_application_type_id
                                                  );


    DBMS_OUTPUT.PUT_LINE( chr(13)||chr(10)||' ********** Створюємо функцію 3) Продукт: "ФІНАНСОВА ДЕБІТОРКА" в ОБ ********** ');
          --  Створюємо функцію 3) Продукт: "ФІНАНСОВА ДЕБІТОРКА" в ОБ
      l := l +1;
      l_function_ids.extend(l);
      l_function_ids(l)   :=   abs_utils.add_func(
                                                  p_name     => '3) Продукт: "ФІНАНСОВА ДЕБІТОРКА" в ОБ',
                                                  p_funcname => 'FunNSIEditF("FIN_DEBT[NSIFUNCTION]",0)',
                                                  p_rolename => 'START1' ,
                                                  p_frontend => l_application_type_id
                                                  );


    DBMS_OUTPUT.PUT_LINE( chr(13)||chr(10)||' ********** Створюємо функцію Портфель : "ФІНАНСОВА ДЕБІТОРКА" ********** ');
          --  Створюємо функцію Портфель : "ФІНАНСОВА ДЕБІТОРКА"
      l := l +1;
      l_function_ids.extend(l);
      l_function_ids(l)   :=   abs_utils.add_func(
                                                  p_name     => 'Портфель : "ФІНАНСОВА ДЕБІТОРКА"',
                                                  p_funcname => 'FunNSIEditF("FIN_DEBVA[NSIFUNCTION]",2)',
                                                  p_rolename => 'START1' ,
                                                  p_frontend => l_application_type_id
                                                  );


    DBMS_OUTPUT.PUT_LINE( chr(13)||chr(10)||' ********** Створюємо функцію 1) Визначення "Фін/Деб" по НБУ ********** ');
          --  Створюємо функцію 1) Визначення "Фін/Деб" по НБУ
      l := l +1;
      l_function_ids.extend(l);
      l_function_ids(l)   :=   abs_utils.add_func(
                                                  p_name     => '1) Визначення "Фін/Деб" по НБУ',
                                                  p_funcname => 'FunNSIEditF("FIN_DEB_NBU",0)',
                                                  p_rolename => 'START1' ,
                                                  p_frontend => l_application_type_id
                                                  );


    DBMS_OUTPUT.PUT_LINE( chr(13)||chr(10)||' ********** Створюємо функцію ABS=>ХД1: Таблиця КД та їх потоків ********** ');
          --  Створюємо функцію ABS=>ХД1: Таблиця КД та їх потоків
      l := l +1;
      l_function_ids.extend(l);
      l_function_ids(l)   :=   abs_utils.add_func(
                                                  p_name     => 'ABS=>ХД1: Таблиця КД та їх потоків',
                                                  p_funcname => 'FunNSIEditF("PRVN_FLOW_DEALS[NSIFUNCTION][PROC=>PUL_DAT(:A,STRING_Null)][PAR=>:A(SEM=Звiт-дата 01/ММ/РРРР)][EXEC=>BEFORE]",2)',
                                                  p_rolename => 'START1' ,
                                                  p_frontend => l_application_type_id
                                                  );


    DBMS_OUTPUT.PUT_LINE( chr(13)||chr(10)||' ********** Створюємо функцію FV=>АБС: Обробка Екв-Вітрини "Резерв-МСФЗ" ********** ');
          --  Створюємо функцію FV=>АБС: Обробка Екв-Вітрини "Резерв-МСФЗ"
      l := l +1;
      l_function_ids.extend(l);
      l_function_ids(l)   :=   abs_utils.add_func(
                                                  p_name     => 'FV=>АБС: Обробка Екв-Вітрини "Резерв-МСФЗ"',
                                                  p_funcname => 'FunNSIEditF("PRVN_OSAQ[NSIFUNCTION][PROC=>PUL_DAT(:A,'''')][PAR=>:A(SEM=Зв_дата 01/ММ/РРРР)][EXEC=>BEFORE]",2)',
                                                  p_rolename => 'START1' ,
                                                  p_frontend => l_application_type_id
                                                  );


    DBMS_OUTPUT.PUT_LINE( chr(13)||chr(10)||' ********** Створюємо функцію Трансформаційні проводки по МФСЗ за 2014 + 2015.1 роки ********** ');
          --  Створюємо функцію Трансформаційні проводки по МФСЗ за 2014 + 2015.1 роки
      l := l +1;
      l_function_ids.extend(l);
      l_function_ids(l)   :=   abs_utils.add_func(
                                                  p_name     => 'Трансформаційні проводки по МФСЗ за 2014 + 2015.1 роки',
                                                  p_funcname => 'FunNSIEditF("VREZ14[NSIFUNCTION]",0)',
                                                  p_rolename => 'START1' ,
                                                  p_frontend => l_application_type_id
                                                  );


    DBMS_OUTPUT.PUT_LINE( chr(13)||chr(10)||' ********** Створюємо функцію Формування/Перегляд подій дефолту ********** ');
          --  Створюємо функцію Формування/Перегляд подій дефолту
      l := l +1;
      l_function_ids.extend(l);
      l_function_ids(l)   :=   abs_utils.add_func(
                                                  p_name     => 'Формування/Перегляд подій дефолту',
                                                  p_funcname => 'FunNSIEditF("V_PRVN_AUTOMATIC_EVENT[PROC=>bars_loss_events.loss_events(:D,:Z)][PAR=>:D(SEM=Зв_дата,TYPE=D),:Z(SEM=Включ.корр: 0=Ні / 1=ТАК,TYPE=N)][EXEC=>BEFORE]",2 )',
                                                  p_rolename => 'START1' ,
                                                  p_frontend => l_application_type_id
                                                  );


   DBMS_OUTPUT.PUT_LINE(chr(13)||chr(10)||'  Прикріпляємо ресурси функцій до даного АРМу (PRVN) - АРМ-PRVN  ');
    l := l_function_ids.first;
    while (l is not null and l_function_ids(l)  is not null) loop
        resource_utl.set_resource_access_mode(l_arm_resource_type_id, l_application_id, l_func_resource_type_id, l_function_ids(l), 1);
        l := l_function_ids.next(l);
    end loop;


    DBMS_OUTPUT.PUT_LINE(' Bидані функції можливо потребують підтвердження - автоматично підтверджуємо їх ');
    for i in (select a.id
              from   adm_resource_activity a
              where  a.grantee_type_id = l_arm_resource_type_id and
                     a.resource_type_id = l_func_resource_type_id and
                     a.grantee_id = l_application_id and
                     a.resource_id in (select column_value from table(l_function_ids))  and
                     a.access_mode_id = 1 and
                     a.resolution_time is null) loop
        resource_utl.approve_resource_access(i.id, 'Автоматичне підтвердження прав на функції для АРМу');
    end loop;
     DBMS_OUTPUT.PUT_LINE(' Commit;  ');
   commit;
end;
/


PROMPT ===================================================================================== 
PROMPT *** End *** ========== Scripts /Sql/Bars/Data/Applist/codeappPRVN.sql =========*** En
PROMPT ===================================================================================== 
