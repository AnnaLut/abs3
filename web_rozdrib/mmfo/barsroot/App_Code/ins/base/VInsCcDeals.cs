/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace Bars.Ins
{
    public sealed class VInsCcDealsRecord : BbRecord
    {
        public VInsCcDealsRecord(): base()
        {
            fillFields();
        }
        public VInsCcDealsRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VInsCcDealsRecord(BbDataSource Parent, OracleDecimal RowScn, Decimal? ND, String NUM, DateTime? SDATE, Decimal? DEAL_RNK, Decimal? CTYPE, String FIO, String INN, String DOC_SER, String DOC_NUM, String DOC_ISSUER, DateTime? DOC_DATE)
            : this(Parent)
        {
            this.ND = ND;
            this.NUM = NUM;
            this.SDATE = SDATE;
            this.DEAL_RNK = DEAL_RNK;
            this.CTYPE = CTYPE;
            this.FIO = FIO;
            this.INN = INN;
            this.DOC_SER = DOC_SER;
            this.DOC_NUM = DOC_NUM;
            this.DOC_ISSUER = DOC_ISSUER;
            this.DOC_DATE = DOC_DATE;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("ND", OracleDbType.Decimal, false, false, false, false, false, "V_INS_CC_DEALS", ObjectTypes.View, "Данні КП для страховок (Представлення)", "Ідентифікатор"));
            Fields.Add( new BbField("NUM", OracleDbType.Varchar2, true, false, false, false, false, "V_INS_CC_DEALS", ObjectTypes.View, "Данні КП для страховок (Представлення)", "Номер"));
            Fields.Add( new BbField("SDATE", OracleDbType.Date, true, false, false, false, false, "V_INS_CC_DEALS", ObjectTypes.View, "Данні КП для страховок (Представлення)", "Дата початку дії"));
            Fields.Add( new BbField("DEAL_RNK", OracleDbType.Decimal, false, false, false, false, false, "V_INS_CC_DEALS", ObjectTypes.View, "Данні КП для страховок (Представлення)", "Код клієнта (RNK)"));
            Fields.Add( new BbField("CTYPE", OracleDbType.Decimal, true, false, false, false, false, "V_INS_CC_DEALS", ObjectTypes.View, "Данні КП для страховок (Представлення)", "Тип клієнта (2-юр.особа/3-фіз.особа)"));
            Fields.Add( new BbField("FIO", OracleDbType.Varchar2, true, false, false, false, false, "V_INS_CC_DEALS", ObjectTypes.View, "Данні КП для страховок (Представлення)", "ПІБ клієнта"));
            Fields.Add( new BbField("INN", OracleDbType.Varchar2, true, false, false, false, false, "V_INS_CC_DEALS", ObjectTypes.View, "Данні КП для страховок (Представлення)", "Ідентифікаційний номер"));
            Fields.Add( new BbField("DOC_SER", OracleDbType.Varchar2, true, false, false, false, false, "V_INS_CC_DEALS", ObjectTypes.View, "Данні КП для страховок (Представлення)", "Документ - серія"));
            Fields.Add( new BbField("DOC_NUM", OracleDbType.Varchar2, true, false, false, false, false, "V_INS_CC_DEALS", ObjectTypes.View, "Данні КП для страховок (Представлення)", "Документ - номер"));
            Fields.Add( new BbField("DOC_ISSUER", OracleDbType.Varchar2, true, false, false, false, false, "V_INS_CC_DEALS", ObjectTypes.View, "Данні КП для страховок (Представлення)", "Документ - місце видачі"));
            Fields.Add( new BbField("DOC_DATE", OracleDbType.Date, true, false, false, false, false, "V_INS_CC_DEALS", ObjectTypes.View, "Данні КП для страховок (Представлення)", "Документ - дата видачі"));        
        }
        public Decimal? ND { get { return (Decimal?)FindField("ND").Value; } set {SetField("ND", value);} }
        public String NUM { get { return (String)FindField("NUM").Value; } set {SetField("NUM", value);} }
        public DateTime? SDATE { get { return (DateTime?)FindField("SDATE").Value; } set {SetField("SDATE", value);} }
        public Decimal? DEAL_RNK { get { return (Decimal?)FindField("DEAL_RNK").Value; } set {SetField("DEAL_RNK", value);} }
        public Decimal? CTYPE { get { return (Decimal?)FindField("CTYPE").Value; } set {SetField("CTYPE", value);} }
        public String FIO { get { return (String)FindField("FIO").Value; } set {SetField("FIO", value);} }
        public String INN { get { return (String)FindField("INN").Value; } set {SetField("INN", value);} }
        public String DOC_SER { get { return (String)FindField("DOC_SER").Value; } set {SetField("DOC_SER", value);} }
        public String DOC_NUM { get { return (String)FindField("DOC_NUM").Value; } set {SetField("DOC_NUM", value);} }
        public String DOC_ISSUER { get { return (String)FindField("DOC_ISSUER").Value; } set {SetField("DOC_ISSUER", value);} }
        public DateTime? DOC_DATE { get { return (DateTime?)FindField("DOC_DATE").Value; } set {SetField("DOC_DATE", value);} }
    }

    public sealed class VInsCcDealsFilters : BbFilters
    {
        public VInsCcDealsFilters(BbDataSource Parent) : base (Parent)
        {
            ND = new BBDecimalFilter(this, "ND");
            NUM = new BBVarchar2Filter(this, "NUM");
            SDATE = new BBDateFilter(this, "SDATE");
            DEAL_RNK = new BBDecimalFilter(this, "DEAL_RNK");
            CTYPE = new BBDecimalFilter(this, "CTYPE");
            FIO = new BBVarchar2Filter(this, "FIO");
            INN = new BBVarchar2Filter(this, "INN");
            DOC_SER = new BBVarchar2Filter(this, "DOC_SER");
            DOC_NUM = new BBVarchar2Filter(this, "DOC_NUM");
            DOC_ISSUER = new BBVarchar2Filter(this, "DOC_ISSUER");
            DOC_DATE = new BBDateFilter(this, "DOC_DATE");
        }
        public BBDecimalFilter ND;
        public BBVarchar2Filter NUM;
        public BBDateFilter SDATE;
        public BBDecimalFilter DEAL_RNK;
        public BBDecimalFilter CTYPE;
        public BBVarchar2Filter FIO;
        public BBVarchar2Filter INN;
        public BBVarchar2Filter DOC_SER;
        public BBVarchar2Filter DOC_NUM;
        public BBVarchar2Filter DOC_ISSUER;
        public BBDateFilter DOC_DATE;
    }

    public partial class VInsCcDeals : BbTable<VInsCcDealsRecord, VInsCcDealsFilters>
    {
        public VInsCcDeals() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VInsCcDeals(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VInsCcDealsRecord> Select(VInsCcDealsRecord Item)
        {
            List<VInsCcDealsRecord> res = new List<VInsCcDealsRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VInsCcDealsRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (Decimal?)null : Convert.ToDecimal(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (DateTime?)null : Convert.ToDateTime(rdr[3]), 
                        rdr.IsDBNull(4) ?  (Decimal?)null : Convert.ToDecimal(rdr[4]), 
                        rdr.IsDBNull(5) ?  (Decimal?)null : Convert.ToDecimal(rdr[5]), 
                        rdr.IsDBNull(6) ?  (String)null : Convert.ToString(rdr[6]), 
                        rdr.IsDBNull(7) ?  (String)null : Convert.ToString(rdr[7]), 
                        rdr.IsDBNull(8) ?  (String)null : Convert.ToString(rdr[8]), 
                        rdr.IsDBNull(9) ?  (String)null : Convert.ToString(rdr[9]), 
                        rdr.IsDBNull(10) ?  (String)null : Convert.ToString(rdr[10]), 
                        rdr.IsDBNull(11) ?  (DateTime?)null : Convert.ToDateTime(rdr[11]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}