/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace cim
{
    public sealed class VCimUnboundInPaymentsRecord : BbRecord
    {
        public VCimUnboundInPaymentsRecord(): base()
        {
            fillFields();
        }
        public VCimUnboundInPaymentsRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VCimUnboundInPaymentsRecord(BbDataSource Parent, OracleDecimal RowScn, Decimal? REF, Decimal? RNK, String OKPO, String NMK, String ND, String NAM_N, String NLS, DateTime? VDAT, Decimal? KV, Decimal? S, Decimal? SN, String NAZN, String TOP, Decimal? TYPE, Decimal? VISA)
            : this(Parent)
        {
            this.REF = REF;
            this.RNK = RNK;
            this.OKPO = OKPO;
            this.NMK = NMK;
            this.ND = ND;
            this.NAM_N = NAM_N;
            this.NLS = NLS;
            this.VDAT = VDAT;
            this.KV = KV;
            this.S = S;
            this.SN = SN;
            this.NAZN = NAZN;
            this.TOP = TOP;
            this.TYPE = TYPE;
            this.VISA = VISA;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("REF", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("RNK", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("OKPO", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("NMK", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("ND", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("NAM_N", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("NLS", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("VDAT", OracleDbType.Date, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("KV", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("S", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("SN", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("NAZN", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("TOP", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("TYPE", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("VISA", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_UNBOUND_IN_PAYMENTS", ObjectTypes.View, "", ""));        
        }
        public Decimal? REF { get { return (Decimal?)FindField("REF").Value; } set {SetField("REF", value);} }
        public Decimal? RNK { get { return (Decimal?)FindField("RNK").Value; } set {SetField("RNK", value);} }
        public String OKPO { get { return (String)FindField("OKPO").Value; } set {SetField("OKPO", value);} }
        public String NMK { get { return (String)FindField("NMK").Value; } set {SetField("NMK", value);} }
        public String ND { get { return (String)FindField("ND").Value; } set {SetField("ND", value);} }
        public String NAM_N { get { return (String)FindField("NAM_N").Value; } set {SetField("NAM_N", value);} }
        public String NLS { get { return (String)FindField("NLS").Value; } set {SetField("NLS", value);} }
        public DateTime? VDAT { get { return (DateTime?)FindField("VDAT").Value; } set {SetField("VDAT", value);} }
        public Decimal? KV { get { return (Decimal?)FindField("KV").Value; } set {SetField("KV", value);} }
        public Decimal? S { get { return (Decimal?)FindField("S").Value; } set {SetField("S", value);} }
        public Decimal? SN { get { return (Decimal?)FindField("SN").Value; } set {SetField("SN", value);} }
        public String NAZN { get { return (String)FindField("NAZN").Value; } set {SetField("NAZN", value);} }
        public String TOP { get { return (String)FindField("TOP").Value; } set {SetField("TOP", value);} }
        public Decimal? TYPE { get { return (Decimal?)FindField("TYPE").Value; } set {SetField("TYPE", value);} }
        public Decimal? VISA { get { return (Decimal?)FindField("VISA").Value; } set {SetField("VISA", value);} }
    }

    public sealed class VCimUnboundInPaymentsFilters : BbFilters
    {
        public VCimUnboundInPaymentsFilters(BbDataSource Parent) : base (Parent)
        {
            REF = new BBDecimalFilter(this, "REF");
            RNK = new BBDecimalFilter(this, "RNK");
            OKPO = new BBVarchar2Filter(this, "OKPO");
            NMK = new BBVarchar2Filter(this, "NMK");
            ND = new BBVarchar2Filter(this, "ND");
            NAM_N = new BBVarchar2Filter(this, "NAM_N");
            NLS = new BBVarchar2Filter(this, "NLS");
            VDAT = new BBDateFilter(this, "VDAT");
            KV = new BBDecimalFilter(this, "KV");
            S = new BBDecimalFilter(this, "S");
            SN = new BBDecimalFilter(this, "SN");
            NAZN = new BBVarchar2Filter(this, "NAZN");
            TOP = new BBVarchar2Filter(this, "TOP");
            TYPE = new BBDecimalFilter(this, "TYPE");
            VISA = new BBDecimalFilter(this, "VISA");
        }
        public BBDecimalFilter REF;
        public BBDecimalFilter RNK;
        public BBVarchar2Filter OKPO;
        public BBVarchar2Filter NMK;
        public BBVarchar2Filter ND;
        public BBVarchar2Filter NAM_N;
        public BBVarchar2Filter NLS;
        public BBDateFilter VDAT;
        public BBDecimalFilter KV;
        public BBDecimalFilter S;
        public BBDecimalFilter SN;
        public BBVarchar2Filter NAZN;
        public BBVarchar2Filter TOP;
        public BBDecimalFilter TYPE;
        public BBDecimalFilter VISA;
    }

    public partial class VCimUnboundInPayments : BbTable<VCimUnboundInPaymentsRecord, VCimUnboundInPaymentsFilters>
    {
        public VCimUnboundInPayments() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VCimUnboundInPayments(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VCimUnboundInPaymentsRecord> Select(VCimUnboundInPaymentsRecord Item)
        {
            List<VCimUnboundInPaymentsRecord> res = new List<VCimUnboundInPaymentsRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VCimUnboundInPaymentsRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (Decimal?)null : Convert.ToDecimal(rdr[1]), 
                        rdr.IsDBNull(2) ?  (Decimal?)null : Convert.ToDecimal(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (String)null : Convert.ToString(rdr[4]), 
                        rdr.IsDBNull(5) ?  (String)null : Convert.ToString(rdr[5]), 
                        rdr.IsDBNull(6) ?  (String)null : Convert.ToString(rdr[6]), 
                        rdr.IsDBNull(7) ?  (String)null : Convert.ToString(rdr[7]), 
                        rdr.IsDBNull(8) ?  (DateTime?)null : Convert.ToDateTime(rdr[8]), 
                        rdr.IsDBNull(9) ?  (Decimal?)null : Convert.ToDecimal(rdr[9]), 
                        rdr.IsDBNull(10) ?  (Decimal?)null : Convert.ToDecimal(rdr[10]), 
                        rdr.IsDBNull(11) ?  (Decimal?)null : Convert.ToDecimal(rdr[11]), 
                        rdr.IsDBNull(12) ?  (String)null : Convert.ToString(rdr[12]), 
                        rdr.IsDBNull(13) ?  (String)null : Convert.ToString(rdr[13]), 
                        rdr.IsDBNull(14) ?  (Decimal?)null : Convert.ToDecimal(rdr[14]), 
                        rdr.IsDBNull(15) ?  (Decimal?)null : Convert.ToDecimal(rdr[15]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}