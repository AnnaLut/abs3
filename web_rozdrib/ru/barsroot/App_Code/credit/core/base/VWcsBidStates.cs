/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace credit
{
    public sealed class VWcsBidStatesRecord : BbRecord
    {
        public VWcsBidStatesRecord(): base()
        {
            fillFields();
        }
        public VWcsBidStatesRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VWcsBidStatesRecord(BbDataSource Parent, OracleDecimal RowScn, Decimal? BID_ID, String STATE_ID, String STATE_NAME, Decimal? IS_DISP, Decimal? CHECKOUTED, DateTime? CHECKOUT_DAT, Decimal? CHECKOUT_USER_ID, String CHECKOUT_USER_F, String USER_COMMENT)
            : this(Parent)
        {
            this.BID_ID = BID_ID;
            this.STATE_ID = STATE_ID;
            this.STATE_NAME = STATE_NAME;
            this.IS_DISP = IS_DISP;
            this.CHECKOUTED = CHECKOUTED;
            this.CHECKOUT_DAT = CHECKOUT_DAT;
            this.CHECKOUT_USER_ID = CHECKOUT_USER_ID;
            this.CHECKOUT_USER_F = CHECKOUT_USER_F;
            this.USER_COMMENT = USER_COMMENT;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("BID_ID", OracleDbType.Decimal, false, false, false, false, false, "V_WCS_BID_STATES", ObjectTypes.View, "Текущие состояния заявки (представление)", "Идентификатор заявки"));
            Fields.Add( new BbField("STATE_ID", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_BID_STATES", ObjectTypes.View, "Текущие состояния заявки (представление)", "Идентификатор состояния"));
            Fields.Add( new BbField("STATE_NAME", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_BID_STATES", ObjectTypes.View, "Текущие состояния заявки (представление)", "Наименование состояния"));
            Fields.Add( new BbField("IS_DISP", OracleDbType.Decimal, true, false, false, false, false, "V_WCS_BID_STATES", ObjectTypes.View, "Текущие состояния заявки (представление)", "Отображаемое ли состояние"));
            Fields.Add( new BbField("CHECKOUTED", OracleDbType.Decimal, true, false, false, false, false, "V_WCS_BID_STATES", ObjectTypes.View, "Текущие состояния заявки (представление)", "Блокирована ли заявка (0/1)"));
            Fields.Add( new BbField("CHECKOUT_DAT", OracleDbType.Date, true, false, false, false, false, "V_WCS_BID_STATES", ObjectTypes.View, "Текущие состояния заявки (представление)", "Дата блокировки заявки"));
            Fields.Add( new BbField("CHECKOUT_USER_ID", OracleDbType.Decimal, true, false, false, false, false, "V_WCS_BID_STATES", ObjectTypes.View, "Текущие состояния заявки (представление)", "Пользователь заблокировавший заявку"));
            Fields.Add( new BbField("CHECKOUT_USER_F", OracleDbType.Varchar2, true, false, false, false, false, "V_WCS_BID_STATES", ObjectTypes.View, "Текущие состояния заявки (представление)", "Пользователь заблокировавший заявку (Фамилия)"));
            Fields.Add( new BbField("USER_COMMENT", OracleDbType.Varchar2, true, false, false, false, false, "V_WCS_BID_STATES", ObjectTypes.View, "Текущие состояния заявки (представление)", "Комментарий пользователя"));        
        }
        public Decimal? BID_ID { get { return (Decimal?)FindField("BID_ID").Value; } set {SetField("BID_ID", value);} }
        public String STATE_ID { get { return (String)FindField("STATE_ID").Value; } set {SetField("STATE_ID", value);} }
        public String STATE_NAME { get { return (String)FindField("STATE_NAME").Value; } set {SetField("STATE_NAME", value);} }
        public Decimal? IS_DISP { get { return (Decimal?)FindField("IS_DISP").Value; } set {SetField("IS_DISP", value);} }
        public Decimal? CHECKOUTED { get { return (Decimal?)FindField("CHECKOUTED").Value; } set {SetField("CHECKOUTED", value);} }
        public DateTime? CHECKOUT_DAT { get { return (DateTime?)FindField("CHECKOUT_DAT").Value; } set {SetField("CHECKOUT_DAT", value);} }
        public Decimal? CHECKOUT_USER_ID { get { return (Decimal?)FindField("CHECKOUT_USER_ID").Value; } set {SetField("CHECKOUT_USER_ID", value);} }
        public String CHECKOUT_USER_F { get { return (String)FindField("CHECKOUT_USER_F").Value; } set {SetField("CHECKOUT_USER_F", value);} }
        public String USER_COMMENT { get { return (String)FindField("USER_COMMENT").Value; } set {SetField("USER_COMMENT", value);} }
    }

    public sealed class VWcsBidStatesFilters : BbFilters
    {
        public VWcsBidStatesFilters(BbDataSource Parent) : base (Parent)
        {
            BID_ID = new BBDecimalFilter(this, "BID_ID");
            STATE_ID = new BBVarchar2Filter(this, "STATE_ID");
            STATE_NAME = new BBVarchar2Filter(this, "STATE_NAME");
            IS_DISP = new BBDecimalFilter(this, "IS_DISP");
            CHECKOUTED = new BBDecimalFilter(this, "CHECKOUTED");
            CHECKOUT_DAT = new BBDateFilter(this, "CHECKOUT_DAT");
            CHECKOUT_USER_ID = new BBDecimalFilter(this, "CHECKOUT_USER_ID");
            CHECKOUT_USER_F = new BBVarchar2Filter(this, "CHECKOUT_USER_F");
            USER_COMMENT = new BBVarchar2Filter(this, "USER_COMMENT");
        }
        public BBDecimalFilter BID_ID;
        public BBVarchar2Filter STATE_ID;
        public BBVarchar2Filter STATE_NAME;
        public BBDecimalFilter IS_DISP;
        public BBDecimalFilter CHECKOUTED;
        public BBDateFilter CHECKOUT_DAT;
        public BBDecimalFilter CHECKOUT_USER_ID;
        public BBVarchar2Filter CHECKOUT_USER_F;
        public BBVarchar2Filter USER_COMMENT;
    }

    public partial class VWcsBidStates : BbTable<VWcsBidStatesRecord, VWcsBidStatesFilters>
    {
        public VWcsBidStates() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VWcsBidStates(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VWcsBidStatesRecord> Select(VWcsBidStatesRecord Item)
        {
            List<VWcsBidStatesRecord> res = new List<VWcsBidStatesRecord>();
                        OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VWcsBidStatesRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (Decimal?)null : Convert.ToDecimal(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (Decimal?)null : Convert.ToDecimal(rdr[4]), 
                        rdr.IsDBNull(5) ?  (Decimal?)null : Convert.ToDecimal(rdr[5]), 
                        rdr.IsDBNull(6) ?  (DateTime?)null : Convert.ToDateTime(rdr[6]), 
                        rdr.IsDBNull(7) ?  (Decimal?)null : Convert.ToDecimal(rdr[7]), 
                        rdr.IsDBNull(8) ?  (String)null : Convert.ToString(rdr[8]), 
                        rdr.IsDBNull(9) ?  (String)null : Convert.ToString(rdr[9]))
                    );
                }
            }
                        finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}