<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bars.API.Core</name>
    </assembly>
    <members>
        <member name="T:Bars.API.Core.Attributes.CacheAttribute">
            <summary>
                Attribute for cache data from API (client and server side)
                ClientTimeSpan - client cache in seconds
                ServerTimeSpan - server cache in seconds
                AnonymousOnly - cache only anonymous requests
                Usage :  [Cache(ClientTimeSpan = 10, ServerTimeSpan = 10)]
            </summary>
        </member>
        <member name="P:Bars.API.Core.Attributes.CacheAttribute.ServerTimeSpan">
            <summary>
            Server time spam
            </summary>
        </member>
        <member name="P:Bars.API.Core.Attributes.CacheAttribute.ClientTimeSpan">
            <summary>
            Client time spam
            </summary>
        </member>
        <member name="P:Bars.API.Core.Attributes.CacheAttribute.AnonymousOnly">
            <summary>
            Anonimus only flag
            </summary>
        </member>
        <member name="F:Bars.API.Core.Constants.AppName">
            <summary>
            Назва додатку
            </summary>
        </member>
        <member name="F:Bars.API.Core.Constants.TokenLifeTime">
            <summary>
            Default application token life time value for case if db-parameter is absent
            </summary>
        </member>
        <member name="F:Bars.API.Core.Constants.DefaultServerApiVersion">
            <summary>
            Поточна версія API для серверної частини
            </summary>
        </member>
        <member name="F:Bars.API.Core.Constants.DefaultClientApiVersion">
            <summary>
            Поточна версія API для клієнтської частини
            </summary>
        </member>
        <member name="F:Bars.API.Core.Constants.MaxPageSize">
            <summary>
            Максимальна к-сть елементів для вичитки з репозиторіїв типу GetAll
            </summary>
        </member>
        <member name="F:Bars.API.Core.Constants.DefaultApiPort">
            <summary>
            Номер порта по завовчуванню для 
            </summary>
        </member>
        <member name="F:Bars.API.Core.Constants.DbSchemaServer">
            <summary>
            Імя схеми бази данних серверного API
            </summary>
        </member>
        <member name="F:Bars.API.Core.Constants.DbSchemaClient">
            <summary>
            Імя схеми бази данних клієнського API
            </summary>
        </member>
        <member name="F:Bars.API.Core.Constants.TokenEndpointPath">
            <summary>
            Url для отрмання авторизаційної куки
            </summary>
        </member>
        <member name="F:Bars.API.Core.Constants.MessageWithCode">
            <summary>
            Шаблон тексту для відправки SMS повідомлення
            </summary>
        </member>
        <member name="T:Bars.API.Core.Controllers.RootController">
            <summary>
            Root application controller
            </summary>
        </member>
        <member name="M:Bars.API.Core.Controllers.RootController.MakeResponseError(System.Int32,System.String)">
            <summary>
            Make error response
            </summary>
            <param name="statusCode">http code</param>
            <param name="message">description</param>
            <returns></returns>
        </member>
        <member name="M:Bars.API.Core.Controllers.RootController.MakeCustomResponse(System.Int32,System.Object)">
            <summary>
            Make error response
            </summary>
            <param name="statusCode">http code</param>
            <param name="message">description</param>
            <returns></returns>
        </member>
        <member name="M:Bars.API.Core.Controllers.RootController.GetVersion">
            <summary>
            Версія основної бібліотеки API
            </summary>
            <returns>строка вигляду {0} v{1}, build-{2}</returns>
        </member>
        <member name="M:Bars.API.Core.Controllers.RootController.GetCurrentUserId">
            <summary>
            Get the current user Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bars.API.Core.Controllers.RootController.IsRequestFromApp(System.String)">
            <summary>
            Check if this request from some kind of app
            </summary>
            <param name="type">AUTH_APPLICATIONS.name</param>
            <returns></returns>
        </member>
        <member name="M:Bars.API.Core.Controllers.RootController.UserIsAdmin">
            <summary>
            Has user Admin role ?
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bars.API.Core.CoreAMProfile">
            <summary>
            Auto mapoper profile
            </summary>
            <remarks>
            Contains definition for Mappings. See https://github.com/AutoMapper/AutoMapper/wiki/Getting-started for more details
            </remarks>
        </member>
        <member name="T:Bars.API.Core.Exceptions.HttpErrors.ApiException">
            <summary>
                Base API exception class
            </summary>
        </member>
        <member name="T:Bars.API.Core.Exceptions.HttpErrors.BadRequestException">
            <summary>
                Exception thrown when the request is malformed (400)
            </summary>
        </member>
        <member name="M:Bars.API.Core.Exceptions.HttpErrors.BadRequestException.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Bars.API.Core.Exceptions.HttpErrors.BadRequestException.#ctor(System.String)">
            <summary>
                Constructor with error message
            </summary>
            <param name="reason"></param>
        </member>
        <member name="T:Bars.API.Core.Exceptions.HttpErrors.ForbiddenException">
            <summary>
                An exception to throw to get a 403
            </summary>
        </member>
        <member name="M:Bars.API.Core.Exceptions.HttpErrors.ForbiddenException.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Bars.API.Core.Exceptions.HttpErrors.ForbiddenException.#ctor(System.String)">
            <summary>
                Constructor with error message
            </summary>
            <param name="reason"></param>
        </member>
        <member name="T:Bars.API.Core.Exceptions.HttpErrors.NotFoundException">
            <summary>
                Exception thrown when the resource was not found (404)
            </summary>
        </member>
        <member name="M:Bars.API.Core.Exceptions.HttpErrors.NotFoundException.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Bars.API.Core.Exceptions.HttpErrors.NotFoundException.#ctor(System.String)">
            <summary>
                Constructor with error message
            </summary>
            <param name="reason"></param>
        </member>
        <member name="T:Bars.API.Core.Exceptions.HttpErrors.ServerErrorException">
            <summary>
                Exception thrown in case of internal error
            </summary>
        </member>
        <member name="M:Bars.API.Core.Exceptions.HttpErrors.ServerErrorException.#ctor">
            <summary>
                Default constructor
            </summary>
        </member>
        <member name="M:Bars.API.Core.Exceptions.HttpErrors.ServerErrorException.#ctor(System.String)">
            <summary>
                Constructor with error message
            </summary>
            <param name="reason"></param>
        </member>
        <member name="T:Bars.API.Core.Extensions.BarsDirectRouteProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:Bars.API.Core.Extensions.BarsLog">
            <summary>
            Extends NLoger
            </summary>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.#ctor(System.String)">
            <summary>
            Sets module name. 
            Usualy can be reached by ModuleConstants.ModuleName
            </summary>
            <param name="moduleName"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.Error(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.Error(System.String,System.Exception)">
            <summary>
            In-code errors with exceptions
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.ErrorWithCustInfo(System.String,System.String,System.String,System.Exception)">
            <summary>
            In-code errors With exceptions
            </summary>
            <param name="message"></param>
            <param name="custId"></param>
            <param name="bankId"></param>
            <param name="e"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.Info(System.String)">
            <summary>
            Method overloading for logging services working 
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.Info(System.String,System.String,System.String)">
            <summary>
            Successfull events logging
            </summary>
            <param name="message"></param>
            <param name="userName"></param>
            <param name="phoneNumber"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.Info(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Successfull events logging
            </summary>
            <param name="message"></param>
            <param name="userName"></param>
            <param name="phoneNumber"></param>
            <param name="customerId"></param>
            <param name="bankCode"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.Finance(System.String,System.String)">
            <summary>
            Financial operation with documents 
            
            </summary>
            <param name="message"></param>
            <param name="details"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.Finance(System.String,System.String,System.String)">
            <summary>
            Represents events related to money transfer
            </summary>
            <param name="message"></param>
            <param name="customerId"></param>
            <param name="bankCode"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.Finance(System.String,System.String,System.String,System.String)">
            <summary>
            Represents events related to money transfer
            </summary>
            <param name="message"></param>
            <param name="customerId"></param>
            <param name="bankCode"></param>
            <param name="details"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.Security(System.String,System.String,System.String)">
            <summary>
            Represents events related to user's actions like failed logging attempts  
            </summary>
            <param name="message"></param>
            <param name="userName"></param>
            <param name="userPhone"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.Security(System.String,System.String,System.String,System.String)">
            <summary>
            Represents events related to user's actions like failed logging attempts  
            </summary>
            <param name="message"></param>
            <param name="userName"></param>
            <param name="userPhone"></param>
            <param name="detailsInfo"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.RequestInfo(System.Int64,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="elapsedMilliseconds"></param>
            <param name="responseStatusCode"></param>
            <param name="responseStatusDesc"></param>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsLog.ApiCall(System.String,System.String,System.String,System.Int64,System.Net.HttpStatusCode,System.String)">
            <summary>
            Логирование запросов к Api МФО
            </summary>
            <param name="bankCode">Код МФО</param>
            <param name="url">Полный путь запроса</param>
            <param name="routeTemplate">Шаблон пути запроса</param>
            <param name="recTime">Время запроса в миллисекундах</param>
            <param name="statusCode">Код ответа</param>
            <param name="exceptionMessage">Текст сообщения об ошибке</param>
        </member>
        <member name="T:Bars.API.Core.Extensions.BarsOwinMiddleware">
            <summary>
            Base class for OwinMiddleware
            </summary>
        </member>
        <member name="M:Bars.API.Core.Extensions.BarsOwinMiddleware.GetValueFromEnvironment(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Get value from OWIN enviroment by key
            </summary>
            <param name="environment">OWIN enviroment</param>
            <param name="key">key name</param>
            <returns></returns>
        </member>
        <member name="T:Bars.API.Core.Extensions.OwinFirewall">
            <summary>
            Simple Firewall 
            </summary>
        </member>
        <member name="T:Bars.API.Core.Handlers.MethodOverrideHandler">
            <summary>
                Delegating Handler to parse the PUT, HEAD and DELETE request from JS ajax requests
                It is designed for clients that cannot send certain HTTP request types, such as PUT or DELETE. Instead, the client
                sends a POST request and sets the X-HTTP-Method-Override header to the desired method.
            </summary>
        </member>
        <member name="M:Bars.API.Core.Handlers.MethodOverrideHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
                Overriding the send async method
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Bars.API.Core.Filters.ODataQueryableAttribute">
            <summary>
            Odata custom filter atribute
            </summary>
        </member>
        <member name="M:Bars.API.Core.Infrastructure.DI.NinjectWebCommon.Start">
            <summary>
                Starts the application
            </summary>
        </member>
        <member name="M:Bars.API.Core.Infrastructure.DI.NinjectWebCommon.Stop">
            <summary>
                Stops the application.
            </summary>
        </member>
        <member name="M:Bars.API.Core.Infrastructure.DI.NinjectWebCommon.CreateKernel">
            <summary>
                Creates the kernel that will manage your application.
            </summary>
            <returns>The created kernel.</returns>
        </member>
        <member name="M:Bars.API.Core.Infrastructure.DI.NinjectWebCommon.RegisterServices(Ninject.IKernel)">
            <summary>
                Load your modules or register your services here!
            </summary>
            <param name="kernel">The kernel.</param>
        </member>
        <member name="M:Bars.API.Core.Infrastructure.PagingExtensions.GetPage``1(System.Linq.IQueryable{``0},Bars.API.Core.Infrastructure.Page)">
            <summary>
                Extend IQueryable to simplify access to skip and take methods
            </summary>
            <typeparam name="T"></typeparam>
            <param name="queryable"></param>
            <param name="page"></param>
            <returns>IQueryable with Skip and Take having been performed</returns>
        </member>
        <member name="M:Bars.API.Core.Interfaces.ICorpTokenHandler.DecodeTicket(System.String)">
            <summary>
            Returns user name and session id to get token from db
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Bars.API.Core.Models.Binders.API.ArrayModelBinder">
            <summary>
            Model binder for array in url
            </summary>
        </member>
        <member name="T:Bars.API.Core.Models.Binders.API.DateModelBinder">
            <summary>
            dateStart Model binder
            convertable DateStart parameter in format yyyy-MM-dd to date
            </summary>
        </member>
        <member name="T:Bars.API.Core.Models.Metadata`1">
            <summary>
            Response owerwrite object
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Bars.API.Core.Models.PaymentAccount.BankCode">
            <summary>
            Код банку
            </summary>
        </member>
        <member name="P:Bars.API.Core.Models.PaymentAccount.TaxCode">
            <summary>
            Код ЄДРПО
            </summary>
        </member>
        <member name="P:Bars.API.Core.Models.PaymentAccount.Name">
            <summary>
            Найменування кореспондента
            </summary>
        </member>
        <member name="P:Bars.API.Core.Models.PaymentAccount.AccNumber">
            <summary>
            Номер рахунку 
            </summary>
        </member>
        <member name="T:Bars.API.Core.Models.ResponseMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:Bars.API.Core.Modules.CustomServerHeaderModule">
            <summary>
            Rewrite Server header in all responses
            </summary>
        </member>
        <member name="M:Bars.API.Core.Modules.CustomServerHeaderModule.Init(System.Web.HttpApplication)">
            <summary>
            Init method
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Bars.API.Core.Modules.CustomServerHeaderModule.Dispose">
            <summary>
            Dispose method
            </summary>
        </member>
        <member name="T:Bars.API.Core.Providers.BarsApiContentTypeProvider">
            <summary>
            Mapping for resolved files in static folder
            </summary>
        </member>
        <member name="T:Bars.API.Core.Providers.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Bars.API.Core.Providers.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bars.API.Core.Providers.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:Bars.API.Core.Resources.Providers.Repository.RepositoryBase`2.GetPage``1(Bars.API.Core.Infrastructure.Page,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Return a paged list of entities
            </summary>
            <typeparam name="TOrder"></typeparam>
            <param name="page">Which page to retrieve</param>
            <param name="where">Where clause to apply</param>
            <param name="order">Order by to apply</param>
            <returns></returns>
        </member>
        <member name="T:Bars.API.Core.BarsWebApiConfig">
            <summary>
                Configuration WebAPI for all *.Server libraries
            </summary>
        </member>
        <member name="M:Bars.API.Core.BarsWebApiConfig.Register(System.Web.Http.HttpConfiguration,Bars.API.Core.ApiInstanceType)">
            <summary>
            Register WebApi for Server side API
            </summary>
            <param name="config"></param>
            <param name="instanceType"></param>
        </member>
        <member name="M:Bars.API.Core.BarsWebApiConfig.GetWebConfiguration(System.String)">
            <summary>
            Fet parameter from web configuretion
            </summary>
            <param name="parameterName">parametr name</param>
            <returns></returns>
        </member>
        <member name="P:Bars.API.Core.Settings.CoreSettings.Logger">
            <summary>
                Настройки протоколирования
            </summary>
        </member>
        <member name="T:Bars.API.Core.Startup.StartupSwagger">
            <summary>
                Configuration with swagger api-documentation
            </summary>
        </member>
        <member name="M:Bars.API.Core.Startup.StartupSwagger.Configuration(Owin.IAppBuilder)">
            <summary>
            
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:Bars.API.Core.Startup.AddAuthorizationResponseMessages">
            <summary>
                @TODO
            </summary>
        </member>
        <member name="M:Bars.API.Core.Startup.AddAuthorizationResponseMessages.Apply(Swashbuckle.Swagger.Operation,Swashbuckle.Swagger.SchemaRegistry,System.Web.Http.Description.ApiDescription)">
            <summary>
                @TODO
            </summary>
            <summary>
                Filter and add Security JWT definition to all accion with has "AuthorizaAttribute"
            </summary>
            <param name="operation">Operation</param>
            <param name="schemaRegistry">Schema</param>
            <param name="apiDescription">Description for the api</param>
        </member>
        <member name="T:Bars.API.Core.Startup.StartupBase">
            <summary>
                Base OWIN configuration
            </summary>
        </member>
        <member name="T:Bars.API.Core.Startup.StartupCore">
            <summary>
            Core startup configuration
            </summary>
        </member>
        <member name="M:Bars.API.Core.Startup.StartupCore.Init(Owin.IAppBuilder,System.Web.Http.HttpConfiguration)">
            <summary>
            Core startup config
            </summary>
            <param name="appBuilder"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:Bars.API.Core.Utils.Watcher">
            <summary>
            Відправка критичних повідомлень на сторонній сервіс
            </summary>
        </member>
        <member name="M:Bars.API.Core.Utils.Watcher.SendError(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Bars.API.Core.Utils.Watcher.SendInfo(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
    </members>
</doc>
