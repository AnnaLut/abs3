.head 0 +  Application Description: Функциональные классы для работы с
платежными документами
.head 1 -  Outline Version - 4.0.26
.head 1 +  Design-time Settings
.data VIEWINFO
0000: 6F00000001000000 FFFF01000D004347 5458566965775374 6174650400010000
0020: 0000000000B40000 002C000000020000 0003000000000000 0043020000FCFFFF
0040: FFE9FFFFFFFFFFFF FF000000007C0200 004D010000010000 0000000000010000
0060: 000F4170706C6963 6174696F6E497465 6D00000000
.enddata
.data DT_MAKERUNDLG
0000: 000000000020713A 5C6261727339385C 64656275675C6D69 6B5C746573745F64
0020: 656C2E6578651E71 3A5C626172733938 5C64656275675C6D 696B5C6E65776170
0040: 702E646C6C1E713A 5C6261727339385C 64656275675C6D69 6B5C6E6577617070
0060: 2E61706300000101 0115433A5C43454E 545552415C6E6577 6170702E72756E15
0080: 433A5C43454E5455 52415C6E65776170 702E646C6C15433A 5C43454E54555241
00A0: 5C6E65776170702E 6170630000010101 15433A5C43454E54 5552415C6E657761
00C0: 70702E6170641543 3A5C43454E545552 415C6E6577617070 2E646C6C15433A5C
00E0: 43454E545552415C 6E65776170702E61 7063000001010115 433A5C43454E5455
0100: 52415C6E65776170 702E61706C15433A 5C43454E54555241 5C6E65776170702E
0120: 646C6C15433A5C43 454E545552415C6E 65776170702E6170 630000010101
.enddata
.head 2 -  Outline Window State: Normal
.head 2 +  Outline Window Location and Size
.data VIEWINFO
0000: 6600040003002D00 0000000000000000 0000B71E5D0E0500 1D00FFFF4D61696E
0020: 0000000000000000 0000000000000000 0000003B00010000 00000000000000E9
0040: 1E800A00008600FF FF496E7465726E61 6C2046756E637469 6F6E730000000000
0060: 0000000000000000 0000000000003200 0100000000000000 0000E91E800A0000
0080: DF00FFFF56617269 61626C6573000000 0000000000000000 0000000000000000
00A0: 3000010000000000 00000000F51E100D 0000F400FFFF436C 6173736573000000
00C0: 0000000000000000 0000000000000000
.enddata
.data VIEWSIZE
0000: D000
.enddata
.head 3 -  Left:   -0.013"
.head 3 -  Top:    0.0"
.head 3 -  Width:  8.013"
.head 3 -  Height: 4.969"
.head 2 +  Options Box Location
.data VIEWINFO
0000: 0118B80BB80B2500
.enddata
.data VIEWSIZE
0000: 0800
.enddata
.head 3 -  Visible? Yes
.head 3 -  Left:   4.15"
.head 3 -  Top:    1.885"
.head 3 -  Width:  3.8"
.head 3 -  Height: 2.073"
.head 2 +  Class Editor Location
.head 3 -  Visible? No
.head 3 -  Left:   0.575"
.head 3 -  Top:    0.094"
.head 3 -  Width:  5.063"
.head 3 -  Height: 2.719"
.head 2 +  Tool Palette Location
.head 3 -  Visible? No
.head 3 -  Left:   6.388"
.head 3 -  Top:    0.729"
.head 2 -  Fully Qualified External References? Yes
.head 2 -  Reject Multiple Window Instances? Yes
.head 2 -  Enable Runtime Checks Of External References? Yes
.head 2 -  Use Release 4.0 Scope Rules? No
.head 1 +  Libraries
.head 2 -  ! File Include: qcktabs.apl
.head 2 -  ! File Include: Docfunc.apl
.head 2 -  ! File Include: Genbutn.apl
.head 2 -  Dynalib: Absapi.apd
.head 2 -  Dynalib: Global.apd
.head 2 -  File Include: Winbars2.apl
.head 2 -  File Include: Constant.apl
.head 1 +  Global Declarations
.head 2 +  Window Defaults
.head 3 +  Tool Bar
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Form Window
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Dialog Box
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Top Level Table Window
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Data Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Multiline Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Spin Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Background Text
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Pushbutton
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Radio Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Check Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Option Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Group Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Child Table Window
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  List Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Combo Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Line
.head 4 -  Line Color: Use Parent
.head 3 +  Frame
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: 3D Face Color
.head 3 +  Picture
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 2 +  Formats
.head 3 -  Number: 0'%'
.head 3 -  Number: #0
.head 3 -  Number: ###000
.head 3 -  Number: ###000;'($'###000')'
.head 3 -  Date/Time: hh:mm:ss AMPM
.head 3 -  Date/Time: M/d/yy
.head 3 -  Date/Time: MM-dd-yy
.head 3 -  Date/Time: dd-MMM-yyyy
.head 3 -  Date/Time: MMM d, yyyy
.head 3 -  Date/Time: MMM d, yyyy hh:mm AMPM
.head 3 -  Date/Time: MMMM d, yyyy hh:mm AMPM
.head 3 -  Date/Time: dd-MM-yyyy
.head 3 -  Number: #00000
.head 2 +  External Functions
.head 3 -  ! Signature library
.head 3 +  Library name: DSGBVC4.DLL
.head 4 -  ! DSGBVC4.DLL - экспортируемые функции
.head 4 +  Function: nsignInitGBSign
.head 5 -  Description: int GLOBAL nsignInitGBSign(char *dbDir,
           char *secKeyDisk, char *pin,
           char *mfo, int mode)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  Number: INT
.head 4 +  Function: nsignExitGBSign
.head 5 -  Description: int GLOBAL nsignExitGBSign(void)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 -  !
.head 4 +  Function: nsignInitOPSign
.head 5 -  Description: int GLOBAL nsignInitOPSign(char *dbDir,
           char *secKeyDisk, char *pin,
           char *mfo)
int DSGBEXT nsignInitOPSign(char* dbDir,
            char* secKeyDisk, char* pin,
            char* mfo, const char* cszUID)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 4 +  ! Function: nsignInitOPSign
.head 5 -  Description: int GLOBAL nsignInitOPSign(char *dbDir,
                 char *secKeyDisk, char *pin, char *mfo)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 4 +  Function: nsignExitOPSign
.head 5 -  Description: int GLOBAL nsignExitOPSign(void)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: nsignMapError2Text
.head 5 -  Description: void GLOBAL nsignMapError2Text(
            char *buffer, int errorCode)
.head 5 -  Export Ordinal: 0
.head 5 -  Returns
.head 5 +  Parameters
.head 6 -  Receive String: LPSTR
.head 6 -  Number: INT
.head 4 -  !
.head 4 +  Function: nsignPutOPSignOnMemory
.head 5 -  Description: int GLOBAL nsignPutOPSignOnMemory(
           void* data, unsigned short size,
           void* signPtr)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPVOID
.head 6 -  Number: SHORT
.head 6 -  Receive String: LPVOID
.head 3 +  ! Library name: DSGBVC4.DLL
.head 4 -  ! DSGBVC4.DLL - экспортируемые функции
.head 4 +  Function: nsignInitGBSign
.head 5 -  Description: int GLOBAL nsignInitGBSign(char *dbDir,
                        char *secKeyDisk, char *pin,
                        char *mfo, int mode)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  Number: INT
.head 4 +  Function: nsignExitGBSign
.head 5 -  Description: int GLOBAL nsignExitGBSign(void)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: nsignInitOPSign
.head 5 -  Description: int GLOBAL nsignInitOPSign(char *dbDir,
                        char *secKeyDisk, char *pin,
                        char *mfo)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 4 +  Function: nsignExitOPSign
.head 5 -  Description: int GLOBAL nsignExitOPSign(void)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: nsignMapError2Text
.head 5 -  Description: void GLOBAL nsignMapError2Text(
                         char *buffer, int errorCode)
.head 5 -  Export Ordinal: 0
.head 5 -  Returns
.head 5 +  Parameters
.head 6 -  Receive String: LPSTR
.head 6 -  Number: INT
.head 4 +  Function: nsignPutOPSignOnMemory
.head 5 -  Description: int GLOBAL nsignPutOPSignOnMemory(
                        void* data, unsigned short size,
                        void* signPtr)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPVOID
.head 6 -  Number: SHORT
.head 6 -  Receive String: LPVOID
.head 3 +  Library name: RSAC.DLL
.head 4 -  ! RSAC.DLL - экспортируемые функции
.head 4 +  Function: INIT_ZAH
.head 5 -  Description: int InitSign(char *szPathOpenKey,
             char *szPathSecKey,
             char *szIdOper,
             char *szUxDateTme,
             char *szPasword)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 4 +  Function: CLOSE_ZAH
.head 5 -  Description: int CloseRsa(void)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: RSA_ZAH
.head 5 -  Description: int RSA_ZAH(char cMode, int iHandler,
            dword dwCountPart,
            dword dwOffset, dword dwLength,
            dword dwOffsetSecond,
            char *szSign, char *szIdOpen)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: CHAR
.head 6 -  Number: INT
.head 6 -  Number: DWORD
.head 6 -  String: LPCSTR
.head 6 -  Number: DWORD
.head 6 -  Number: DWORD
.head 6 -  String: LPSTR
.head 6 -  String: LPCSTR
.head 4 +  Function: RSA_ZAH0
.head 5 -  Description: int RSA_ZAH(char cMode, int iHandler,
            dword dwCountPart,
            dword dwOffset, dword dwLength,
            dword dwOffsetSecond,
            char *szSign, char *szIdOpen)
.head 5 -  Export Ordinal: 3
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: CHAR
.head 6 -  Number: INT
.head 6 -  Number: DWORD
.head 6 -  Number: DWORD
.head 6 -  ! String: LPCSTR
.head 6 -  Number: DWORD
.head 6 -  Number: DWORD
.head 6 -  String: LPSTR
.head 6 -  String: LPCSTR
.head 4 +  Function: RENEW_ZAH
.head 5 -  Description: int RENEW_ZAH(char, char*, char*, long)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: CHAR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 4 -  !
.head 2 +  Constants
.data CCDATA
0000: 3000000000000000 0000000000000000 00000000
.enddata
.data CCSIZE
0000: 1400
.enddata
.head 3 +  System
.head 3 +  User
.head 2 -  Resources
.head 2 -  Variables
.head 2 +  Internal Functions
.head 2 -  Named Menus
.head 2 +  Class Definitions
.data RESOURCE 0 0 1 787600708
0000: 6700000046000000 0000000000000000 0200000100FFFF01 00160000436C6173
0020: 73566172004F7574 6C696E6552006567 496E666F1A003C00 00046300446F6338
0040: 0000000278000000 01F00D000000FF9F 0D00DC000100FF7F
.enddata
.head 3 +  Functional Class: cDoc
.head 4 -  Description: Содержит атрибуты платежного документа и
функции работы с ними
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Number: m_nRef
.head 5 -  String: m_sTT                ! тип транзакции
.head 5 -  Number: m_nDk                ! признак дебета / кредита
.head 5 -  Boolean: b_WasDkNull ! Признак, что первоначально Д/К
                          не был установлен => надо
                          брать из TTS
.head 5 -  Number: m_nVob               ! вид документа
.head 5 -  String: m_sNd                ! номер документа
.head 5 -  Date/Time: m_dDatD   ! дата на документе
.head 5 -  Date/Time: m_dDatV1  ! дата валютирования документа 1
.head 5 -  Date/Time: m_dDatV2  ! дата валютирования документа 2
.head 5 -  Date/Time: m_dDatP   ! дата ввода документа
.head 5 -  : A          ! сторона А
.head 6 -  Class: cStorona
.head 5 -  : B          ! сторона Б
.head 6 -  Class: cStorona
.head 5 -  String: m_sNazn              ! назначение платежа
.head 5 -  String: m_sDrec              ! дополнительные реквизиты
.head 5 -  Number: m_nSk                ! символ кассплана
.head 5 -  String: m_sNazns     ! способ заполнения "назначения
                          платежа"
.head 5 -  String: m_sNaznk     ! код "назначения платежа"
.head 5 -  Number: m_nBis               ! номер БИС
.head 5 -  String: m_sOperId    ! идентификатор операциониста
.head 5 -  Long String: m_lsSign        ! подпись на документе
.head 5 -  Number: m_nSos
.head 5 -  Number: m_nOtm               ! отметка на документе (в норме
                          0 в процессинге (1,2,3)
.head 5 -  Number: m_nRec               ! номер записи в ARC_RRP
.head 5 -  Number: m_nErr               ! код ошибки при записи в
                          ARC_RRP
.head 5 -  Number: m_nNom               ! сумма номинала ЦБ
.head 5 -  Number: m_nRefH              ! референция parent - документа
.head 5 -  Number: m_nRefL              ! референция child -  документа
.head 5 -  : TT
.head 6 -  Class: cPayTT
.head 5 -  : TTl
.head 6 -  Class: cPayTT
.head 4 +  Functions
.head 5 +  Function: SetDoc
.head 6 -  Description: Устанавливает экземпляр "Документа" из
переменных
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: nRef
.head 7 -  String: sTT
.head 7 -  Number: nDk
.head 7 -  Number: nVob
.head 7 -  String: sNd
.head 7 -  Date/Time: dDoc
.head 7 -  Date/Time: dPos
.head 7 -  Date/Time: dVal1
.head 7 -  Date/Time: dVal2
.head 7 -  String: sNls1
.head 7 -  String: sNam1
.head 7 -  String: sBank1
.head 7 -  String: sNb1
.head 7 -  Number: nKv1
.head 7 -  Number: nS1
.head 7 -  String: sOkpo1
.head 7 -  String: sNls2
.head 7 -  String: sNam2
.head 7 -  String: sBank2
.head 7 -  String: sNb2
.head 7 -  Number: nKv2
.head 7 -  Number: nS2
.head 7 -  String: sOkpo2
.head 7 -  String: sNazn
.head 7 -  String: sDrec
.head 7 -  String: sOperId
.head 7 -  Long String: lsSign
.head 7 -  Number: nSk
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set m_nRef = nRef
.head 7 -  Set m_sTT = sTT
.head 7 -  Set m_nDk = nDk
.head 7 -  Set m_nVob = nVob
.head 7 -  Set m_sNd = sNd
.head 7 -  Set m_dDatD = dDoc
.head 7 -  Set m_dDatV1 = dVal1
.head 7 -  Set m_dDatV2 = dVal2
.head 7 -  Set m_dDatP = dPos
.head 7 -  Call A.SetStorona(sNls1, sNam1, sBank1, sNb1, nKv1,
                  nS1, sOkpo1)
.head 7 -  Call B.SetStorona(sNls2, sNam2, sBank2, sNb2, nKv2,
                  nS2, '')
.head 7 -  Set m_sNazn = sNazn
.head 7 -  Set m_sDrec = sDrec
.head 7 -  Set m_nSk = nSk
.head 7 +  If SalStrTrimX(m_sDrec)
.head 8 -  Set m_sNazns = '11'
.head 7 +  Else
.head 8 -  Set m_sNazns = '10'
.head 7 -  Set m_sNaznk = ''
.head 7 -  Set m_nBis = 0
.head 7 -  Set m_sOperId = sOperId
.head 7 -  Set m_lsSign = lsSign
.head 7 -  Set m_nRec = NUMBER_Null
.head 7 -  Set m_nRefH = NUMBER_Null
.head 7 -  Set m_nRefL = NUMBER_Null
.head 7 -  Set m_nOtm = 0
.head 5 +  Function: SetDocR
.head 6 -  Description: Устанавливает экземпляр "Документа" из
записи в OPER
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: nRef
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: nFetchRes
.head 6 +  Actions
.head 7 +  While TRUE
.head 8 +  If not SqlPrepare(hSql(), T("
   SELECT ref,tt,dk,vob,nd,data,vdat,pdat,nlsa,
          nam_a,mfoa,kv,s,id_a,nlsb,nam_b,mfob,
          kv2,s2,id_b,nazn,d_rec,sk,id_o,sign,sos,
          refl
   INTO :m_nRef,:m_sTT,:m_nDk,:m_nVob,:m_sNd,
        :m_dDatD,:m_dDatV1,:m_dDatP,:A.Nls,:A.Nam,
        :A.Bank,:A.Kv,:A.S,:A.Okpo,:B.Nls,:B.Nam,
        :B.Bank,:B.Kv,:B.S,:B.Okpo,:m_sNazn,
        :m_sDrec,:m_nSk,:m_sOperId,:m_lsSign,
        :m_nSos,:m_nRefL
   FROM oper
   WHERE ref=:nRef"))
.head 9 -  Break
.head 8 +  If not SqlSetLongBindDatatype(25, BLOB_BYTE)
.head 9 -  Break
.head 8 +  If not SqlExecute(hSql())
.head 9 -  Break
.head 8 +  If SqlFetchNext(hSql(), nFetchRes)
.head 9 +  If SalStrTrimX(m_sDrec)
.head 10 -  Set m_sNazns = '11'
.head 9 +  Else
.head 10 -  Set m_sNazns = '10'
.head 9 -  Set m_nBis = 0
.head 9 -  Set B.Okpo = STRING_Null
.head 9 -  Set m_sNaznk = STRING_Null
.head 9 -  Return TRUE
.head 7 -  Return FALSE
.head 5 +  Function: GetDoc
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Receive Number: nRef
.head 7 -  Receive String: sTT
.head 7 -  Receive Number: nDk
.head 7 -  Receive Number: nVob
.head 7 -  Receive String: sNd
.head 7 -  Receive Date/Time: dDoc
.head 7 -  Receive Date/Time: dVal
.head 7 -  Receive String: sNls1
.head 7 -  Receive String: sNam1
.head 7 -  Receive String: sBank1
.head 7 -  Receive String: sNb1
.head 7 -  Receive Number: nKv1
.head 7 -  Receive Number: nS1
.head 7 -  Receive String: sOkpo1
.head 7 -  Receive String: sNls2
.head 7 -  Receive String: sNam2
.head 7 -  Receive String: sBank2
.head 7 -  Receive String: sNb2
.head 7 -  Receive Number: nKv2
.head 7 -  Receive Number: nS2
.head 7 -  Receive String: sOkpo2
.head 7 -  Receive String: sNazn
.head 7 -  Receive Number: nSk
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set nRef = m_nRef
.head 7 -  Set sTT = m_sTT
.head 7 -  Set nDk = m_nDk
.head 7 -  Set nVob = m_nVob
.head 7 -  Set sNd = m_sNd
.head 7 -  Set dDoc = m_dDatD
.head 7 -  Set dVal = m_dDatV1
.head 7 -  Call A.GetStorona(sNls1, sNam1, sBank1, sNb1, nKv1,
                  nS1, sOkpo1)
.head 7 -  Call B.GetStorona(sNls2, sNam2, sBank2, sNb2, nKv2,
                  nS2, sOkpo2)
.head 7 -  Set sNazn = m_sNazn
.head 7 -  Set nSk = m_nSk
.head 5 +  Function: iDoc
.head 6 -  Description: Вставка документа в OPER
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: nFetchRes
.head 7 -  Date/Time: dPdat
.head 7 -  Long String: lsNull
.head 7 -  Date/Time: dDatV
.head 7 -  String: sData
.head 7 -  String: sDatp
.head 7 -  String: sDatv
.head 7 -  Number: nUid
.head 6 +  Actions
.head 7 +  If m_dDatV2 = DATETIME_Null or m_dDatV2 > m_dDatV1
.head 8 -  Set dDatV = m_dDatV1
.head 7 +  Else
.head 8 -  Set dDatV = m_dDatV2
.head 7 +  While TRUE
.head 8 +  If SalStrTrimX(SalStrUpperX(GetDBMS())) = 'ORACLE'
.head 9 -  Set lsNull = ''
.head 9 -  Set nUid = NUMBER_Null
.head 9 -  Set dPdat = SalDateConstruct(
    SalDateYear(m_dDatP), SalDateMonth(m_dDatP),
    SalDateDay(m_dDatP),
    SalDateHour(SalDateCurrent()),
    SalDateMinute(SalDateCurrent()), 0)
.head 9 +  ! debug
.head 10 -  ! Call DebugN(m_nRef)
.head 10 -  ! Call Debug(m_sTT)
.head 10 -  ! Call DebugN(m_nVob)
.head 10 -  ! Call Debug(m_sNd)
.head 10 -  ! Call Debug(SalFmtFormatDateTime(dPdat,
     'dd-MM-yyyy'))
.head 10 -  ! Call Debug(SalFmtFormatDateTime(dDatV,
     'dd-MM-yyyy'))
.head 10 -  ! Call DebugN(m_nDk)
.head 10 -  ! Call DebugN(A.Kv)
.head 10 -  ! Call DebugN(A.S)
.head 10 -  ! Call DebugN(B.Kv)
.head 10 -  ! Call DebugN(B.S)
.head 10 -  ! Call DebugN(m_nSk)
.head 10 -  ! Call Debug(SalFmtFormatDateTime(m_dDatD,
     'dd-MM-yyyy'))
.head 10 -  ! Call Debug(SalFmtFormatDateTime(m_dDatP,
     'dd-MM-yyyy'))
.head 10 -  ! Call Debug(A.Nam)
.head 10 -  ! Call Debug(A.Nls)
.head 10 -  ! Call Debug(A.Bank)
.head 10 -  ! Call Debug(B.Nam)
.head 10 -  ! Call Debug(B.Nls)
.head 10 -  ! Call Debug(B.Bank)
.head 10 -  ! Call Debug(m_sNazn)
.head 10 -  ! Call Debug(m_sDrec)
.head 10 -  ! Call Debug(A.Okpo)
.head 10 -  ! Call Debug(B.Okpo)
.head 10 -  ! Call Debug(m_sOperId)
.head 10 -  ! Call DebugN(m_nSos)
.head 9 +  ! If not SqlPLSQLCommand(hSql(), "
   gl.in_Doc2(m_nRef,m_sTT,m_nVob,m_sNd,dPdat,
              dDatV,m_nDk,A.Kv,A.S,B.Kv,B.S,
              m_nSk,m_dDatD,m_dDatP,A.Nam,A.Nls,
              A.Bank,B.Nam,B.Nls,B.Bank,m_sNazn,
              m_sDrec,A.Okpo,B.Okpo,m_sOperId,
              lsNull,m_nSos,nUid)")
.head 10 -  Break 
.head 9 +  If not SqlPLSQLCommand(hSql(), "
   gl.in_Doc2(m_nRef,m_sTT,m_nVob,m_sNd,dPdat,
              dDatV,m_nDk,A.Kv,A.S,B.Kv,B.S,
              m_nSk,m_dDatD,m_dDatP,A.Nam,A.Nls,
              A.Bank,B.Nam,B.Nls,B.Bank,m_sNazn,
              m_sDrec,A.Okpo,B.Okpo,m_sOperId,
              lsNull,m_nSos)")
.head 10 -  Break
.head 9 +  If m_lsSign != ''
.head 10 +  If not SqlPrepare(hSql(), "
   UPDATE oper
   SET sign=:m_lsSign
   WHERE ref=:m_nRef")
.head 11 -  Break
.head 10 +  If not SqlSetLongBindDatatype(1, BLOB_BYTE)
.head 11 -  Break
.head 10 +  If not SqlExecute(hSql())
.head 11 -  Break
.head 8 +  Else
.head 9 -  Set sData = SalFmtFormatDateTime(m_dDatD,
    'MM-dd-yyyy')
.head 9 -  Set sDatp = SalFmtFormatDateTime(m_dDatP,
    'MM-dd-yyyy')
.head 9 -  Set sDatv = SalFmtFormatDateTime(dDatV,
    'MM-dd-yyyy')
.head 9 +  If not SqlRetrieve(hSql(), "informix.in_doc2",
   ":m_nRef,:m_sTT,:m_nVob,:m_sNd,:sDatp,:sDatv,
    :m_nDk,:A.Kv,:A.S,:B.Kv,:B.S,:m_nSk,:sData,
    :sDatp,:A.Nam,:A.Nls,:A.Bank,:B.Nam,:B.Nls,
    :B.Bank,:m_sNazn,:m_sDrec,:A.Okpo,:B.Okpo,
    :m_sOperId,:m_lsSign,:m_nSos", "")
.head 10 -  Break
.head 9 +  If not SqlSetLongBindDatatype(26, BLOB_BYTE)
.head 10 -  Break
.head 9 +  If not SqlExecute(hSql())
.head 10 -  Break
.head 8 +  If m_nRefH
.head 9 +  If not SqlPrepareAndExecute(hSql(), "
   UPDATE oper
   SET refl=:m_nRef
   WHERE ref=:m_nRefH")
.head 10 -  Break
.head 8 -  Return TRUE
.head 7 -  Call SqlRollbackEx(hSql(),
     'Неуспех при вставке документа в OPER')
.head 7 -  Return FALSE
.head 5 +  Function: iSep
.head 6 -  Description: Вставка документа в ARC_RRP
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! Number: nRet
.head 7 -  ! Number: nRec
.head 7 -  Number: nNull
.head 7 -  String: sNull
.head 7 -  Long String: lsNull
.head 7 -  Number: nFetchRes
.head 7 -  String: sRef
.head 7 -  String: sNd
.head 7 -  String: sNama
.head 7 -  String: sNamb
.head 7 -  String: sNazn
.head 7 -  String: sDatA
.head 7 -  Date/Time: dDatA
.head 7 -  String: sData
.head 7 -  String: sDatp
.head 6 +  Actions
.head 7 -  Set sNd = StrWinToDosX(m_sNd)
.head 7 -  Set sNama = StrWinToDosX(A.Nam)
.head 7 -  Set sNamb = StrWinToDosX(B.Nam)
.head 7 -  Set sNazn = StrWinToDosX(m_sNazn)
.head 7 -  Set dDatA = SalDateConstruct(SalDateYear(m_dDatP),
    SalDateMonth(m_dDatP), SalDateDay(m_dDatP),
    SalDateHour(SalDateCurrent()),
    SalDateMinute(SalDateCurrent()), 0)
.head 7 -  Set nNull = NUMBER_Null
.head 7 -  Set sNull = ''
.head 7 -  Set lsNull = ''
.head 7 +  While TRUE
.head 8 -  Set m_nErr = -1
.head 8 -  Set m_nRec = 0
.head 8 +  If SalStrTrimX(SalStrUpperX(GetDBMS())) = 'ORACLE'
.head 9 -  Set sRef = SalNumberToStrX(m_nRef, 0)
.head 9 +  If not SqlPLSQLCommand(hSql(), "
   sep.in_sep(m_nErr,m_nRec,A.Bank,A.Nls,B.Bank,
              B.Nls,m_nDk,A.S,m_nVob,sNd,A.Kv,
              m_dDatD,m_dDatP,sNama,sNamb,sNazn,
              m_sNaznk,m_sNazns,A.Okpo,B.Okpo,
              m_sOperId,sRef,m_nBis,lsNull,
              sNull,nNull,dDatA,m_sDrec,m_nOtm,
              m_nRef,nNull,sNull)")
.head 10 -  Break
.head 9 +  If m_nRec > 0 and m_lsSign != ''
.head 10 +  If not SqlPrepare(hSql(), "
   UPDATE arc_rrp
   SET sign=:m_lsSign
   WHERE rec=:m_nRec")
.head 11 -  Break
.head 10 +  If not SqlSetLongBindDatatype(1, BLOB_BYTE)
.head 11 -  Break
.head 10 +  If not SqlExecute(hSql())
.head 11 -  Break
.head 8 +  Else
.head 9 -  Set sData = SalFmtFormatDateTime(m_dDatD,
    'MM-dd-yyyy')
.head 9 -  Set sDatp = SalFmtFormatDateTime(m_dDatP,
    'MM-dd-yyyy')
.head 9 -  Set sDatA = SalFmtFormatDateTime(m_dDatP,
    'yyyy-MM-dd ') || NumberToStr(SalDateHour(
    SalDateCurrent())) || ':' || NumberToStr(
    SalDateMinute(SalDateCurrent()))
.head 9 +  If not SqlRetrieve(hSql(), "informix.in_sep",
   ':A.Bank,:A.Nls,:B.Bank,:B.Nls,:m_nDk,:A.S,
    :m_nVob,:sNd,:A.Kv,:sData,:sDatp,:sNama,
    :sNamb,:sNazn,:m_sNaznk,:m_sNazns,:A.Okpo,
    :B.Okpo,:m_sOperId,:m_nRef, :m_nBis,
    :m_lsSign,:nNull,:nNull,:sDatA,:m_sDrec,
    :m_nOtm,:m_nRef,:nNull',':m_nErr,:m_nRec')
.head 10 -  Break
.head 9 +  If not SqlSetLongBindDatatype(22, BLOB_BYTE)
.head 10 -  Break
.head 9 +  If not SqlExecute(hSql())
.head 10 -  Break
.head 9 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 10 -  Break
.head 8 +  If m_nErr
.head 9 -  Break
.head 8 -  Return TRUE
.head 7 -  Call SqlRollbackEx(hSql(), 'Неуспех при IN_SEP ' ||
     SalNumberToStrX(m_nErr, 0))
.head 7 -  Return FALSE
.head 5 +  Function: sIni
.head 6 -  Description: Инициализировать ЭЦП
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 +  Static Variables
.head 7 -  Boolean: bSignInited
.head 7 -  Number: nTim
.head 6 +  Local variables
.head 7 -  ! String: strUxDateTime
.head 7 -  String: strDay
.head 7 -  Number: nDay
.head 7 -  Number: nErrorSign
.head 7 -  String: strErrorSign
.head 7 -  String: strPinCode
.head 7 -  Number: lTim
.head 6 +  Actions
.head 7 -  Set lTim = nTim
.head 7 -  Set nTim = SalDateHour(SalDateCurrent())*60 +
    SalDateMinute(SalDateCurrent())
.head 7 +  If bSignInited and nTim-lTim < 3
.head 8 -  Return TRUE
.head 7 +  If GetSignType() = 'UKR' or GetSignType() = 'NBU'
.head 8 -  Set nErrorSign = NUMBER_Null
.head 8 -  Set strPinCode = ''
.head 8 +  While TRUE
.head 9 +  If SalModalDialog(dlgAskPinCode, hWndForm,
   strPinCode)
.head 10 +  If GetSignType() = 'NBU'
.head 11 +  If bSignInited
.head 12 -  Set nErrorSign = CLOSE_ZAH()
.head 11 -  ! Set strUxDateTime = '1998/01/18 08:08:08'
    !!! ТОЛЬКО ДЛЯ ОТЛАДКИ !!!
.head 11 -  ! Set strUxDateTime = SalFmtFormatDateTime(
    GetBankDate(), 'yyyy/MM/dd') ||
    ' 07:07:07'
.head 11 -  Set nErrorSign = INIT_ZAH(GetOpenKeyDir(),
    GetSecretKeyDrv(), GetIdOper(),
    GetKeyDate(), strPinCode)
.head 11 +  If nErrorSign = -70
.head 12 -  Call MessageErrorEx('>> RSA. Последний ' ||
     'день действия секретного ключа')
.head 11 +  Else If nErrorSign > -77 And nErrorSign < -70
.head 12 -  Set nDay = - nErrorSign - 70
.head 12 +  If nDay = 1
.head 13 -  Set strDay = 'день'
.head 12 +  Else If nDay = 2 Or nDay = 3 Or nDay = 4
.head 13 -  Set strDay = 'дня'
.head 12 +  Else If nDay = 5 Or nDay = 6
.head 13 -  Set strDay = 'дней'
.head 12 -  Call MessageErrorEx('>> RSA. Срок действия'
     || 'секретного ключа прекращается ' ||
     'через ' || NumberToStr(nDay) || ' '
     || strDay)
.head 11 +  Else If nErrorSign != 0
.head 12 -  Break
.head 10 +  Else
.head 11 +  If bSignInited
.head 12 -  Set nErrorSign = nsignExitOPSign()
.head 11 -  ! Cipher 98
.head 11 -  ! Set nErrorSign = nsignInitOPSign(
    GetOpenKeyDir(), GetSecretKeyDrv(),
    strPinCode, GetBankMfo())
.head 11 -  ! Cipher 99 с ОперИдом
.head 11 -  Set nErrorSign = nsignInitOPSign(
    GetOpenKeyDir(), GetSecretKeyDrv(),
    strPinCode, GetBankMfo(),GetIdOper())
.head 11 -  ! Отладка
.head 11 -  ! Set nErrorSign = nsignInitOPSign(
    GetOpenKeyDir(), GetSecretKeyDrv(),
    strPinCode, '351447', GetIdOper())
.head 11 +  If nErrorSign != 0
.head 12 -  Break
.head 10 -  Call SaveInfoToLog(
     '>> RSA - инициализация - OK')
.head 10 -  Set bSignInited = TRUE
.head 10 -  Return TRUE
.head 9 +  Else
.head 10 -  Break
.head 8 +  If nErrorSign != NUMBER_Null ! обработка ошибок ЭЦП
.head 9 +  If GetSignType() = 'NBU'
.head 10 -  Set strErrorSign =
    '>> RSA. Ошибка инициализации ЭЦП: ' ||
    NumberToStr(nErrorSign)
.head 10 -  ! Call CLOSE_ZAH()
.head 10 -  Call MessageErrorEx(strErrorSign)
.head 9 +  Else
.head 10 -  Set strErrorSign = SalStrRepeatX(' ', 129)
.head 10 -  Call nsignMapError2Text(strErrorSign,
     nErrorSign)
.head 10 -  Call MessageErrorEx('>> CIP. ' ||
     StrDosToWinX(strErrorSign))
.head 10 -  Call nsignExitOPSign()
.head 8 -  Return FALSE
.head 7 +  Else
.head 8 -  Return MessageErrorEx('Неизвестная система ЭЦП: '
       || GetSignType())
.head 7 +  ! Комментарий
.head 8 -  ! 'NBU' -- используется ЭЦП НБУ
.head 8 -  ! 'UKR' -- используется ЭЦП Банка 'Украина'
.head 5 +  Function: sDoc ! Подписать документ
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: sSignData
.head 7 -  Number: nErrorSign
.head 7 -  String: strErrorSign
.head 7 -  String: sNd
.head 7 -  String: sNama
.head 7 -  String: sNamb
.head 7 -  String: sNazn
.head 7 -  String: sDrec
.head 7 -  String: sDat1
.head 7 -  String: sDat2
.head 6 +  Actions
.head 7 +  If GetSignOn() = 0 ! ЭЦП отключена - вернуть Пусто
.head 8 -  Set m_lsSign = ''
.head 8 -  Return TRUE
.head 7 +  If sIni()
.head 8 -  Set sNd = StrWinToDosX(m_sNd)
.head 8 -  Set sNama = StrWinToDosX(A.Nam)
.head 8 -  Set sNamb = StrWinToDosX(B.Nam)
.head 8 -  Set sNazn = StrWinToDosX(m_sNazn)
.head 8 -  Set sDat1 = SalFmtFormatDateTime(m_dDatD,
    'yyMMdd')
.head 8 -  Set sDat2 = SalFmtFormatDateTime(m_dDatP,
    'yyMMdd')
.head 8 -  ! Set sDrec = StrWinToDosX(m_sDrec)
.head 8 -  Set sSignData = PadL(A.Bank, 9) || PadL(A.Nls, 14)
    || PadL(B.Bank, 9) || PadL(B.Nls, 14) || PadL(
    SalNumberToStrX(m_nDk, 0), 1) || PadL(
    SalNumberToStrX(A.S, 0), 16) || PadL(
    SalNumberToStrX(m_nVob, 0), 2) ||
    PadR(sNd, 10) || PadL(
    SalNumberToStrX(A.Kv, 0), 3) || sDat1 || sDat2
    || PadR(sNama, 38) || PadR(sNamb, 38) ||
    PadR(sNazn, 160) || PadR(sDrec, 60) ||
    PadR(m_sNaznk, 3) || PadR(m_sNazns, 2) ||
    PadL(A.Okpo, 14) || PadL(B.Okpo, 14) || PadL(
    SalNumberToStrX(m_nRef, 0), 9) ||
    PadR(m_sOperId, 6) || PadL(
    SalNumberToStrX(m_nBis, 0), 2) || PadL(' ', 8)
.head 8 +  If GetSignType() = 'NBU'
.head 9 -  Set m_lsSign = SalStrRepeatX(' ', 64)
.head 9 -  Set nErrorSign = RSA_ZAH(87, -1, 1, sSignData,
    444, 0, m_lsSign, m_sOperId)
.head 8 +  Else
.head 9 -  Set m_lsSign = SalStrRepeatX(' ', 128)
.head 9 -  Set nErrorSign =
    nsignPutOPSignOnMemory(sSignData, 444,
    m_lsSign)
.head 8 +  If nErrorSign = 0
.head 9 -  Call sTrace(sSignData, m_lsSign)
.head 9 -  Return TRUE
.head 8 +  Else
.head 9 +  If GetSignType() = 'NBU'
.head 10 -  Set strErrorSign =
    '>> RSA. NBU - Ошибка наложения ЭЦП: ' ||
    NumberToStr(nErrorSign)
.head 10 -  Call MessageAttention(strErrorSign)
.head 9 +  Else ! обработка ошибок ЭЦП
.head 10 -  Call nsignMapError2Text(strErrorSign,
     nErrorSign)
.head 10 -  Call nsignExitOPSign()
.head 10 -  Call MessageAttention('>> RSA. ' ||
     StrDosToWinX(strErrorSign))
.head 7 -  Return FALSE
.head 5 +  Function: sTrace ! Трассировка подписей в файл
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: sString
.head 7 -  Long String: lsSign
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Date/Time: dDatTmp
.head 7 -  File Handle: hFile
.head 7 -  String: sFn
.head 7 -  String: sTmp
.head 7 -  Number: nChar
.head 7 -  Number: nN1
.head 7 -  Number: nN2
.head 6 +  Actions
.head 7 -  Set sFn = GetPrnDir() || '\\' || 'SIGNTRAC.TXT'
.head 7 +  If SalFileGetDateTime(sFn, dDatTmp)
.head 8 -  Call SalFileOpen(hFile, sFn,
     OF_Append | OF_Binary)
.head 7 +  Else
.head 8 -  Call SalFileOpen(hFile, sFn,
     OF_Create | OF_Write | OF_Binary)
.head 7 -  Call SalFileWrite(hFile, sString, 444)
.head 7 -  Set sTmp = '-'
.head 7 +  While SalStrFirstC(lsSign, nChar)
.head 8 -  Set nN1 = (nChar - SalNumberMod(nChar, 16)) / 16
.head 8 +  If nN1 > 9
.head 9 -  Set nN1 = nN1 + 55
.head 8 +  Else
.head 9 -  Set nN1 = nN1 + 48
.head 8 -  Set nN2 = SalNumberMod(nChar, 16)
.head 8 +  If nN2 > 9
.head 9 -  Set nN2 = nN2 + 55
.head 8 +  Else
.head 9 -  Set nN2 = nN2 + 48
.head 8 -  Set sTmp = sTmp || SalNumberToChar(nN1) ||
    SalNumberToChar(nN2)
.head 7 -  Call SalFilePutStr(hFile, sTmp)
.head 7 -  Call SalFileClose(hFile)
.head 5 +  Function: pLnk
.head 6 -  Description: Оплата связанных транзакций
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: nFlg ! Флаг оплаты  план/факт
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: sTT
.head 7 -  Number: nNlsm
.head 7 -  Number: nNlsk
.head 7 -  Number: nFli
.head 7 -  ! Number: nFlg
.head 7 -  String: sS
.head 7 -  Number: nSA
.head 7 -  Number: nSB
.head 7 -  String: S    !
.head 7 -  String: S2   ! для
.head 7 -  String: N    ! подстановки
.head 7 -  String: KvA  ! при вычислении суммы операции
.head 7 -  String: KvB  !
.head 7 -  String: sL
.head 7 -  String: sR
.head 7 -  Number: i
.head 7 -  Number: j
.head 7 -  Number: nKv
.head 7 -  Number: nDk
.head 7 -  Number: n_ttDk       ! Для Д/К связанной транзакции
.head 7 -  Number: nDkAp
.head 7 -  String: sNam
.head 7 -  String: sErrTxt
.head 7 -  Number: nFetchRes
.head 7 -  Date/Time: dDatV
.head 6 +  Actions
.head 7 +  While TRUE
.head 8 -  ! Читать описание транзакции
.head 8 +  If not SqlPrepareAndExecute(hSqlAux(), T("
   SELECT t.tt,t.dk,a.dk,t.s
   INTO :sTT,:n_ttDk,:nDk,:sS
   FROM tts t, ttsap a
   WHERE a.ttap=t.tt and a.tt=:m_sTT"))
.head 9 -  Set sErrTxt = 'Ош в описании связанной к '|| sTT
    ||' операции'
.head 9 -  Break
.head 8 +  Loop
.head 9 +  If not SqlFetchNext(hSqlAux(), nFetchRes)
.head 10 -  Return TRUE
.head 9 +  If nDk = 1 ! Надо инвертировать Дебет/Кредит
.head 10 +  If b_WasDkNull
.head 11 -  Set nDk = SalNumberAbs(n_ttDk-1) ! Берем Д/К
                                   из TTS
                                   дочерней
                                   транзак-
                                   ции
.head 10 +  Else
.head 11 -  Set nDk = SalNumberAbs(m_nDk-1)
.head 9 +  Else
.head 10 +  If b_WasDkNull
.head 11 -  Set nDk = n_ttDk ! Берем Д/К из TTS дочерней
                   транзакции
.head 10 +  Else
.head 11 -  Set nDk = m_nDk
.head 9 -  ! Подстановка суммы
.head 9 -  Set nSA = A.S
.head 9 +  If A.Kv = B.Kv
.head 10 -  Set nSB = NUMBER_Null
.head 9 +  Else
.head 10 -  Set nSB = B.S
.head 9 +  If sS
.head 10 -  Set S = SalNumberToStrX(A.S, 0)    ! Сумма
                                     платежа
.head 10 -  Set S2 = SalNumberToStrX(B.S, 0)   ! Сумма
                                     платежа
.head 10 -  Set N = SalNumberToStrX(m_nNom, 0) ! Номинал
                                     ЦБ
.head 10 -  Set KvA = SalNumberToStrX(A.Kv, 0) ! Код
                                     валюты А
.head 10 -  Set KvB = SalNumberToStrX(B.Kv, 0) ! Код
                                     валюты B
.head 10 -  Set sS = SalStrUpperX(' ' || sS)
.head 10 +  While SalStrScan(sS, '#(S)') > 0
.head 11 -  Set sS = SalStrReplaceX(sS,
    SalStrScan(sS, '#(S)'), 4, S)
.head 10 +  While SalStrScan(sS, '#(S2)') > 0
.head 11 -  Set sS = SalStrReplaceX(sS,
    SalStrScan(sS, '#(S2)'), 5, S2)
.head 10 +  While SalStrScan(sS,'#(NOM)') > 0
.head 11 -  Set sS = SalStrReplaceX(sS,
    SalStrScan(sS, '#(NOM)'), 6, N)
.head 10 +  While SalStrScan(sS,'#(NLSA)') > 0
.head 11 -  Set sS = SalStrReplaceX(sS,
    SalStrScan(sS, '#(NLSA)'), 7, A.Nls)
.head 10 +  While SalStrScan(sS, '#(NLSB)') > 0
.head 11 -  Set sS = SalStrReplaceX(sS,
    SalStrScan(sS, '#(NLSB)'), 7, B.Nls)
.head 10 +  While SalStrScan(sS,'#(KVA)') > 0
.head 11 -  Set sS = SalStrReplaceX(sS,
    SalStrScan(sS, '#(KVA)'), 6, KvA)
.head 10 +  While SalStrScan(sS,'#(KVB)') > 0
.head 11 -  Set sS = SalStrReplaceX(sS,
    SalStrScan(sS, '#(KVB)'), 6, KvB)
.head 10 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT " || sS || "
     INTO :nSA
     FROM dual")
.head 10 -  Call SqlFetchNext(hSql(),nFetchRes)
.head 9 -  ! Вставить в OPLDOK
.head 9 +  ! If nSS <= 0 or nDk < 0 or nDk > 1
.head 10 -  Return TRUE
.head 9 +  If m_dDatV2
.head 10 -  Set dDatV = m_dDatV2
.head 9 +  Else
.head 10 -  Set dDatV = m_dDatV1
.head 9 +  If not TTl.SetTT(m_nRef,sTT,dDatV,nDk,A.Nls,
   A.Kv,nSA,B.Nls,B.Kv,nSB)
.head 10 -  Set sErrTxt = 'Неуспешная оплата транзакции '
    || sTT
.head 10 -  Break
.head 9 +  If not TTl.PayTT(nFlg)
.head 10 -  Set sErrTxt =
    'Неуспешная оплата связанной транзакции '
    || sTT
.head 10 -  Break
.head 8 -  Break
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Return MessageErrorEx('Ошибка : ' || sErrTxt || '.')
.head 5 +  Function: oDoc
.head 6 -  Description: Вставить и оплатить документ
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: sNlsm                ! основной счет
.head 7 -  String: sNlsk                ! контра счет
.head 7 -  Number: nFli         ! флаг "межбанк"
.head 7 -  Number: nFlg         ! флаг "оплатить
.head 7 -  !
.head 7 -  Number: nDk          ! признак д/к
.head 7 -  String: sNam         ! наименование транзакции
.head 7 -  String: sNazns               ! способ заполнения
                          "назначения платежа"
.head 7 -  String: sNaznk               ! код "назначения платежа"
.head 7 -  Number: nBis         ! номер БИС
.head 7 -  Number: nRet
.head 7 -  Number: nRec
.head 7 -  Number: nFetchRes
.head 7 -  String: sErrTxt
.head 7 -  Boolean: bNewDoc     ! флаг "вновь вставляемый
                          документ"
.head 6 +  Actions
.head 7 -  Set bNewDoc = FALSE
.head 7 -  Set nRet = 0
.head 7 +  While TRUE
.head 8 -  ! Читать описание транзакции
.head 8 +  If not SqlPrepareAndExecute(hSql(), T("
   SELECT dk,nlsm,nlsk,fli,flags[38,38],name
   FROM tts
   WHERE tt=:m_sTT
   INTO :nDk,:sNlsm,:sNlsk,:nFli,:nFlg,:sNam"))
.head 9 -  Break
.head 8 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 9 -  Set sErrTxt = 'Не описана транзакция ' || m_sTT
.head 9 -  Break
.head 8 +  If m_nDk = NUMBER_Null ! Если д/к не задали -
                         берем из TTS
.head 9 -  Set m_nDk = nDk
.head 9 -  Set b_WasDkNull = TRUE
.head 8 +  Else
.head 9 -  Set b_WasDkNull = FALSE
.head 8 -  ! Получить референцию для документа
.head 8 +  If not m_nRef
.head 9 +  If not Ref(m_nRef)
.head 10 -  Set sErrTxt =
    'Невозможно получить референцию для ДОК'
.head 10 -  Break
.head 9 -  Set bNewDoc = TRUE
.head 8 +  If not SalStrTrimX(m_sNd)
.head 9 -  Set m_sNd = SalNumberToStrX(m_nRef, 0)
.head 8 +  If not SalStrTrimX(m_sNazn)
.head 9 -  Set m_sNazn = SalStrTrimX(sNam)
.head 8 +  If SalStrLength(A.Nam) > 38
.head 9 -  Set A.Nam = SalStrLeftX(A.Nam,38)
.head 8 +  If SalStrLength(B.Nam) > 38
.head 9 -  Set B.Nam = SalStrLeftX(B.Nam,38)
.head 8 -  ! Подписать документ (если межбанк)
.head 8 +  If nFli = 1
.head 9 +  If not m_lsSign ! SalStrLeftX(m_lsSign,64) !=
                  SalStrRepeatX(' ',64)
.head 10 +  If not sDoc()
.head 11 -  Set sErrTxt =
    'Не удалось подписать документ.'
.head 11 -  Break
.head 8 -  ! Вставить в OPER
.head 8 +  If bNewDoc and not iDoc()
.head 9 -  Set sErrTxt = 'Неуспех при вставке документа '
    || m_sNd
.head 9 -  Break
.head 8 -  ! Вставить в OPLDOK
.head 8 +  If not sNlsm
.head 9 -  Set sNlsm = A.Nls
.head 8 +  If not sNlsk
.head 9 -  Set sNlsk = B.Nls
.head 8 +  If (nFlg = 0 or nFlg = 1) and (m_nDk = 0 or
   m_nDk = 1)
.head 9 +  If not TT.SetTT(m_nRef,m_sTT,m_dDatV1,m_nDk,
   A.Nls,A.Kv,A.S,B.Nls,B.Kv,B.S)
.head 10 -  Set sErrTxt = 'Неуспешная оплата транзакции '
   || m_sTT
.head 10 -  Break
.head 9 +  If not TT.PayTT(nFlg)
.head 10 -  Set sErrTxt = 'Неуспешная оплата транзакции '
    || m_sTT
.head 10 -  Break
.head 8 -  ! Вставить в ARC_RRP
.head 8 +  If nFli = 1 and nFlg = 1
.head 9 +  If not iSep()
.head 10 -  Set sErrTxt = SalNumberToStrX(m_nErr, 0) ||
    '. Не удалось передать документ для ' ||
    'отправки в СЭП.'
.head 10 -  Break
.head 8 +  If not pLnk(nFlg)
.head 9 -  Set sErrTxt =
    'Невозможно выполнить связанную операцию.'
.head 9 -  Break
.head 8 -  Return TRUE
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Return MessageErrorEx('Ошибка : ' || sErrTxt || '.')
.head 5 +  Function: pDoc
.head 6 -  Description: Печать бланка документа
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call DocsPrint( m_nRef, 'OPER', 0)
.head 5 +  Function: NlsSub ! Подстановка номера исполнителя в шаблон номера счета
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: nN
.head 7 -  String: sIII
.head 7 -  Receive String: sNls
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 7 -  String: sI
.head 6 +  Actions
.head 7 -  Set sI = SalStrUpperX(sI)
.head 7 -  Set sNls = SalStrTrimX(SalStrUpperX(sNls))
.head 7 -  Set i = SalStrScan(sNls, sIII)
.head 7 +  If i > 0
.head 8 -  Set sNls = SalStrLeftX(sNls, i) ||
    SalFmtFormatNumber(nN,
    SalStrRightX('00000000', SalStrLength(sIII)))
    || SalStrRightX(sNls,
    SalStrLength(sNls)-i-SalStrLength(sIII))
.head 5 +  Function: P_Fac ! Оплатить по факт остатку в контролере (Старая версия Compatible)
.head 6 -  Description: Оплата документа по факт остатку
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: nRef
.head 7 -  String: sVdat
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: nFli
.head 7 -  Number: nFetchRes
.head 7 -  String: sErrTxt
.head 7 -  Number: nRefL
.head 6 +  Actions
.head 7 +  While TRUE
.head 8 -  ! Читать описание транзакции
.head 8 +  If not SqlPrepareAndExecute(hSql(), "
   SELECT t.fli,o.refl
   INTO :nFli,:nRefL
   FROM tts t, oper o
   WHERE t.tt=o.tt and o.ref=:nRef")
.head 9 -  Set sErrTxt = 'Ошибка компиляции SQL выражения!'
.head 9 -  Break
.head 8 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 9 -  Set sErrTxt = 'Нет документа Ref:' ||
    SalNumberToStrX(nRef, 0)
.head 9 -  Break
.head 8 +  If not In_Pay(2,nRef,sVdat,'',NUMBER_Null,
   NUMBER_Null,NUMBER_Null,NUMBER_Null,
   NUMBER_Null,'')
.head 9 -  Break
.head 8 +  If nFli = 1
.head 9 +  If not SetDocR(nRef)
.head 10 -  Set sErrTxt = 'Нет документа Ref: ' ||
    SalNumberToStrX(nRef, 0)
.head 10 -  Break
.head 9 +  If m_nSos != 5 ! Не наступила дата валютирования
.head 10 -  Set sErrTxt =
    'Не наступила дата валютирования.'
.head 10 -  Break
.head 9 +  If not iSep()
.head 10 -  Set sErrTxt = SalNumberToStrX(m_nErr, 0) ||
    '. Не удалось передать документ для ' ||
    'отправки в СЭП.'
.head 10 -  Break
.head 8 +  If nRefL
.head 9 -  Set nRef = nRefL
.head 8 +  Else
.head 9 -  Return TRUE
.head 7 -  Call SqlRollbackEx(hSql(),
     'Неуспех при факт оплате')
.head 7 -  Return MessageErrorEx(sErrTxt)
.head 5 +  Function: P_Doc      ! Вставить и оплатить документ (Старая версия Compatible)
.head 6 -  Description: Оплатить документ (Для совместимости со
старой версией)
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Receive Number: nRef
.head 7 -  String: sTT
.head 7 -  Number: nVob
.head 7 -  String: sNd
.head 7 -  String: sPdat
.head 7 -  String: sVdat
.head 7 -  Number: nKv
.head 7 -  Number: nDk
.head 7 -  Number: nS
.head 7 -  Number: nSq
.head 7 -  Number: nSk
.head 7 -  String: sDdat
.head 7 -  String: sDatP
.head 7 -  String: sNama
.head 7 -  String: sNlsa
.head 7 -  String: sMfoa
.head 7 -  String: sNamb
.head 7 -  String: sNlsb
.head 7 -  String: sMfob
.head 7 -  String: sNazn
.head 7 -  String: sD_rec
.head 7 -  String: sOkpoA
.head 7 -  String: sOkpoB
.head 7 -  String: sOperID
.head 7 -  Long String: lsSign
.head 7 -  Number: nSos
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Date/Time: dDatD
.head 7 -  Date/Time: dDatP
.head 7 -  Date/Time: dDatV
.head 7 -  Number: nFetchRes
.head 7 -  String: sNbA
.head 7 -  String: sNbB
.head 6 +  Actions
.head 7 -  Set dDatD = MMddyyyyToDate(sDdat)
.head 7 -  Set dDatP = MMddyyyyToDate(sPdat)
.head 7 -  Set dDatV = MMddyyyyToDate(sVdat)
.head 7 -  Call SqlPrepareAndExecute(hSql(), '
     SELECT nb
     INTO :sNbA
     FROM banks
     WHERE mfo=:sMfoa')
.head 7 -  Call SqlFetchNext(hSql(), nFetchRes)
.head 7 -  Call SqlPrepareAndExecute(hSql(), '
     SELECT nb
     INTO :sNbB
     FROM banks
     WHERE mfo=:sMfob')
.head 7 -  Call SqlFetchNext(hSql(), nFetchRes)
.head 7 -  Call SetDoc(nRef, sTT, nDk, nVob, sNd, dDatD, dDatP,
     dDatV, dDatV, sNlsa, sNama, sMfoa, sNbA, nKv,
     nS, sOkpoA, sNlsb, sNamb, sMfob, sNbB, nKv, nS,
     sOkpoB, sNazn,sD_rec, sOperID, lsSign, nSk)
.head 7 +  If oDoc()
.head 8 -  Set nRef = m_nRef
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Return FALSE
.head 3 +  Functional Class: cStorona
.head 4 -  Description: Сторона платежного документа
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  String: Nls  ! номер счета
.head 5 -  String: Nam  ! намиенвание счета
.head 5 -  String: Bank ! код банка
.head 5 -  String: Nb   ! наименование банка
.head 5 -  Number: Kv   ! код валюты
.head 5 -  Number: S    ! сумма
.head 5 -  String: Okpo ! код клиента
.head 4 +  Functions
.head 5 +  Function: SetStorona
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: sNls ! номер счета
.head 7 -  String: sNam ! намиенвание счета
.head 7 -  String: sBank        ! код банка
.head 7 -  String: sNb  ! наименование банка
.head 7 -  Number: nKv  ! код валюты
.head 7 -  Number: nS   ! сумма
.head 7 -  String: sOkpo        ! код клиента
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set Nls = sNls
.head 7 -  Set Nam = sNam
.head 7 -  Set Bank = sBank
.head 7 -  Set Nb = sNb
.head 7 -  Set Kv = nKv
.head 7 -  Set S = nS
.head 7 -  Set Okpo = sOkpo
.head 5 +  Function: GetStorona
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Receive String: sNls ! номер счета
.head 7 -  Receive String: sNam ! намиенвание счета
.head 7 -  Receive String: sBank        ! код банка
.head 7 -  Receive String: sNb  ! наименование банка
.head 7 -  Receive Number: nKv  ! код валюты
.head 7 -  Receive Number: nS   ! сумма
.head 7 -  Receive String: sOkpo        ! код клиента
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set sNls = Nls
.head 7 -  Set sNam = Nam
.head 7 -  Set sBank = Bank
.head 7 -  Set sNb = Nb
.head 7 -  Set nKv = Kv
.head 7 -  Set nS = S
.head 7 -  Set sOkpo = Okpo
.head 3 +  Functional Class: cPayTT
.head 4 -  Description: Платежная транзакция
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Number: Ref
.head 5 -  String: TT
.head 5 -  Date/Time: DatV
.head 5 -  Number: Dk
.head 5 -  String: NlsA
.head 5 -  Number: KvA
.head 5 -  Number: SA
.head 5 -  String: NlsB
.head 5 -  Number: KvB
.head 5 -  Number: SB
.head 4 +  Functions
.head 5 +  Function: PayTT
.head 6 -  Description: Вставка мультивалютных проводок в OPLDOK
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: Pay  ! Флаг оплаты план/факт
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: sDatV
.head 6 +  Actions
.head 7 -  Call SalWaitCursor(TRUE)
.head 7 +  While TRUE
.head 8 +  If SalStrTrimX(SalStrUpperX(GetDBMS())) = 'ORACLE'
.head 9 +  If not SqlPLSQLCommand(hSql(),
   "gl.payv(Pay,Ref,DatV,TT,Dk,KvA,NlsA,SA,KvB,
            NlsB,SB)")
.head 10 -  Break
.head 8 +  Else
.head 9 -  Set sDatV = SalFmtFormatDateTime(DatV,
    'MM-dd-yyyy')
.head 9 +  If not SqlRetrieve(hSql(), "informix.payv",
   ":Pay,:Ref,:sDatV,:TT,:Dk,:KvA,:NlsA,:SA,
    :KvB,:NlsB,:SB", "")
.head 10 -  Break
.head 9 +  If not SqlExecute(hSql())
.head 10 -  Break
.head 8 -  Call SalWaitCursor(FALSE)
.head 8 -  Return TRUE
.head 7 -  Call SalWaitCursor(FALSE)
.head 7 -  Call SqlRollbackEx(hSql(),
     'Неуспех при записи проводок в OPLDOK')
.head 7 -  Return FALSE
.head 5 +  Function: NlsSub2
.head 6 -  Description: Подстановка в шаблон номера счета
.head 6 +  Returns
.head 7 -  String:
.head 6 +  Parameters
.head 7 -  String: sTmp
.head 7 -  String: sNls
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 7 -  Number: k
.head 7 -  String: sN
.head 7 -  String: sS
.head 6 +  Actions
.head 7 -  Set sN = SalStrLeftX(SalStrUpperX(SalStrTrimX(sNls)) ||
         SalStrRepeatX(' ', 14), 14)
.head 7 -  Set sS = SalStrLeftX(SalStrUpperX(SalStrTrimX(sTmp)) ||
         SalStrRepeatX(' ', 14), 14)
.head 7 -  Set i = 0
.head 7 -  Set k = 0
.head 7 +  While i <= 14
.head 8 +  If SalStrMidX(sS,i,1)='?'
.head 9 -  Set sS = SalStrReplaceX (sS, i, 1, SalStrMidX(sN,i,1))
.head 8 +  If SalStrMidX(sS,i,1)='I'
.head 9 -  Set k=k+1
.head 8 -  Set i=i+1
.head 7 +  If k > 0
.head 8 -  Set i = SalStrScan(sS, 'I')
.head 8 +  If i > 0
.head 9 -  Set sS = SalStrLeftX(sS, i) || SalFmtFormatNumber(
         GetUserId(), SalStrRightX(
         SalStrRepeatX('0', 14), k)) ||
         SalStrRightX(sS, 14-i-k)
.head 7 -  Return SalStrTrimX(sS)
.head 5 +  Function: F_Sta
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 +  Parameters
.head 7 -  String: sTmp
.head 7 -  String: sNls
.head 7 -  Number: nKv
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: sN
.head 7 -  Number: nRnk
.head 7 -  Number: nIsp
.head 7 -  String: sNMS
.head 7 -  Number: nTmp
.head 7 -  Number: nAcc
.head 6 +  Actions
.head 7 -  Set sN = KeyAccount(GetBankMfo(),
    NlsSub2(sTmp, sNls)) ! выполнить подстановку
.head 7 +  If SalStrScan(sTmp, '?') > 0 ! есть знак '?'
.head 8 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT u.rnk,a.isp,a.nms
     INTO :nRnk,:nIsp,:sNMS
     FROM accounts a, cust_acc u
     WHERE a.nls=:sNls and a.kv=:nKv and
           a.acc=u.acc")
.head 8 +  If SqlFetchNext(hSql(), nTmp)
.head 9 -  Call Op_Reg(99, 0, 0, 0, nTmp, nRnk, sN, nKv,
     'K-2:' || sNMS, 'ODB', nIsp, nAcc)
.head 7 -  Return sN
.head 5 +  Function: SetTT ! Установить транзакцию
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: nRef
.head 7 -  String: sTT
.head 7 -  Date/Time: dDatV
.head 7 -  Number: nDk
.head 7 -  String: sNlsA
.head 7 -  Number: nKvA
.head 7 -  Number: nSA
.head 7 -  String: sNlsB
.head 7 -  Number: nKvB
.head 7 -  Number: nSB
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: nFetchRes
.head 7 -  String: sErrTxt
.head 7 -  Number: nFlv
.head 6 +  Actions
.head 7 +  If not SqlPrepareAndExecute(hSql(), T("
   SELECT flv,kv,nlsm,kvk,nlsk
   FROM tts
   WHERE tt=:sTT
   INTO :nFlv,:KvA,:NlsA,:KvB,:NlsB"))
.head 8 -  Return FALSE
.head 7 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 8 -  Set sErrTxt = 'Не описана транзакция' || sTT
.head 8 -  Return FALSE
.head 7 -  ! Call Debug("SetTT: " || sTT || ", " ||
     SalNumberToStrX(nKvA, 0) || ", " ||
     SalNumberToStrX(nKvB, 0))
.head 7 -  Set Ref = nRef
.head 7 -  Set TT = sTT
.head 7 -  Set DatV = dDatV
.head 7 -  Set Dk = nDk
.head 7 +  If not KvA
.head 8 -  Set KvA = nKvA
.head 8 +  ! If Dk = 0
.head 9 -  Set KvA = nKvB ! Для дебетовых переставляем Код
                 Валюты -- APON
.head 8 +  ! Else
.head 9 -  Set KvA = nKvA
.head 7 +  If not KvB
.head 8 -  Set KvB = nKvB
.head 8 +  ! If Dk = 0
.head 9 -  Set KvB = nKvA ! Для дебетовых переставляем Код
                 Валюты -- APON
.head 8 +  ! Else
.head 9 -  Set KvB = nKvB
.head 7 +  If not NlsA
.head 8 -  Set NlsA = sNlsA
.head 7 +  Else
.head 8 -  Set NlsA = F_Sta(NlsA, sNlsA, KvA)
.head 7 +  If not NlsB
.head 8 -  Set NlsB = sNlsB
.head 7 +  Else
.head 8 -  Set NlsB = F_Sta(NlsB, sNlsB, KvB)
.head 7 -  Set SA = nSA
.head 7 +  If nFlv
.head 8 -  Set SB = nSB
.head 7 +  Else
.head 8 -  Set SB = SA
.head 8 -  Set KvB = KvA
.head 7 -  Return TRUE
.head 2 +  Default Classes
.head 3 -  MDI Window: cBaseMDI
.head 3 -  Form Window:
.head 3 -  Dialog Box:
.head 3 -  Table Window:
.head 3 -  Quest Window:
.head 3 -  Data Field:
.head 3 -  Spin Field:
.head 3 -  Multiline Field:
.head 3 -  Pushbutton: cpbRelation
.head 3 -  Radio Button:
.head 3 -  Option Button:
.head 3 -  Check Box:
.head 3 -  Child Table:
.head 3 -  Quest Child Window: cQuickDatabase
.head 3 -  List Box:
.head 3 -  Combo Box:
.head 3 -  Picture:
.head 3 -  Vertical Scroll Bar:
.head 3 -  Horizontal Scroll Bar:
.head 3 -  Column:
.head 3 -  Background Text:
.head 3 -  Group Box:
.head 3 -  Line:
.head 3 -  Frame:
.head 3 -  Custom Control:
.head 2 -  Application Actions
.head 1 +  Dialog Box: dlgAskPinCode
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Ввод PIN-кода пользователя
.head 2 -  Accesories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Type of Dialog: Modal
.head 3 -  Window Location and Size
.head 4 -  Left:   1.588"
.head 4 -  Top:    1.646"
.head 4 -  Width:  4.467"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.643"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: MS Sans Serif
.head 3 -  Font Size: 8
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description: Ввод PIN-кода пользователя
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? No
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Frame
.head 4 -  Resource Id: 63429
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   0.1"
.head 5 -  Top:    0.06"
.head 5 -  Width:  4.15"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.143"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Corners: Square
.head 4 -  Border Style: Etched
.head 4 -  Border Thickness: 1
.head 4 -  Border Color: 3D Shadow Color
.head 4 -  Background Color: 3D Face Color
.head 3 -  Background Text: PIN-Код:
.head 4 -  Resource Id: 63430
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   0.617"
.head 5 -  Top:    0.524"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Right
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfPinCode
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 16
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   1.867"
.head 6 -  Top:    0.488"
.head 6 -  Width:  1.586"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Invisible
.head 5 -  Country: Default
.head 5 -  Font Name: Arial
.head 5 -  Font Size: 12
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Set strPinCode = dfPinCode
.head 3 +  Data Field: dfFiller
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   1.867"
.head 6 -  Top:    0.488"
.head 6 -  Width:  1.583"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_SetFocus
.head 6 -  Call SalEndDialog(hWndForm, TRUE)
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  Receive String: strPinCode
.head 2 -  Window Variables
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow(hWndForm)
.head 4 -  Set strPinCode = ''
.head 4 -  Call SalSetFocus(dfPinCode)
.head 4 -  Call SalMapEnterToTab(TRUE)
.head 3 +  On SAM_Destroy
.head 4 -  Call SalMapEnterToTab(FALSE)
