.head 0 +  Application Description: технологические операции по обработке файлов системы КЛИЕНТ-БАНК (Cipher)
.head 1 -  Outline Version - 4.0.26
.head 1 +  Design-time Settings
.data VIEWINFO
0000: 6F00000001000000 FFFF01000D004347 5458566965775374 6174650400010000
0020: 0000000000B30000 002C000000020000 0003000000FFFFFF FFFFFFFFFFFCFFFF
0040: FFE9FFFFFF000000 0000000000DE0100 0041010000010000 0001000000010000
0060: 000F4170706C6963 6174696F6E497465 6D00000000
.enddata
.data DT_MAKERUNDLG
0000: 000000001E5C4241 525339385C524553 4F555243455C4943 4F5C4D6F6E65792E
0020: 69636F185C424152 5339385C42494E5C 6B6C6F705F636970 2E657865165C4241
0040: 525339385C42494E 5C6E65776170702E 646C6C165C424152 5339385C42494E5C
0060: 6E65776170702E61 7063000001010115 513A5C43454E5455 52415C6E65776170
0080: 702E72756E15513A 5C43454E54555241 5C6E65776170702E 646C6C15513A5C43
00A0: 454E545552415C6E 65776170702E6170 6300000101011A51 3A5C424152533938
00C0: 5C42494E5C6B6C6F 705F656C6C2E6578 6518513A5C424152 5339385C42494E5C
00E0: 6E65776170702E64 6C6C18513A5C4241 525339385C42494E 5C6E65776170702E
0100: 6170630000010101 15513A5C43454E54 5552415C6E657761 70702E61706C1551
0120: 3A5C43454E545552 415C6E6577617070 2E646C6C15513A5C 43454E545552415C
0140: 6E65776170702E61 70630000010101
.enddata
.head 2 -  Outline Window State: Normal
.head 2 +  Outline Window Location and Size
.data VIEWINFO
0000: 6600040003002D00 0000000000000000 0000B71E5D0E0500 1D00FFFF4D61696E
0020: 0000000000000000 0000000000000000 0000003B00010000 00000000000000E9
0040: 1E800A00008600FF FF496E7465726E61 6C2046756E637469 6F6E730000000000
0060: 0000000000000000 0000000000003200 0100000000000000 0000E91E800A0000
0080: DF00FFFF56617269 61626C6573000000 0000000000000000 0000000000000000
00A0: 3000010000000000 00000000F51E100D 0000F400FFFF436C 6173736573000000
00C0: 0000000000000000 0000000000000000
.enddata
.data VIEWSIZE
0000: D000
.enddata
.head 3 -  Left:   -0.013"
.head 3 -  Top:    0.0"
.head 3 -  Width:  8.013"
.head 3 -  Height: 4.969"
.head 2 +  Options Box Location
.data VIEWINFO
0000: 1018B80BB80B2500
.enddata
.data VIEWSIZE
0000: 0800
.enddata
.head 3 -  Visible? Yes
.head 3 -  Left:   4.15"
.head 3 -  Top:    1.885"
.head 3 -  Width:  3.8"
.head 3 -  Height: 2.073"
.head 2 +  Class Editor Location
.head 3 -  Visible? No
.head 3 -  Left:   0.575"
.head 3 -  Top:    0.094"
.head 3 -  Width:  5.063"
.head 3 -  Height: 2.719"
.head 2 +  Tool Palette Location
.head 3 -  Visible? No
.head 3 -  Left:   6.388"
.head 3 -  Top:    0.729"
.head 2 -  Fully Qualified External References? Yes
.head 2 -  Reject Multiple Window Instances? No
.head 2 -  Enable Runtime Checks Of External References? Yes
.head 2 -  Use Release 4.0 Scope Rules? No
.head 1 +  Libraries
.head 2 -  Dynalib: Absapi.apd
.head 2 -  Dynalib: Global.apd
.head 2 -  Dynalib: Service.apd
.head 2 -  Dynalib: Message.apd
.head 2 -  Dynalib: Ssplashm.apd
.head 2 -  Dynalib: Dblogin1.apd
.head 2 -  Dynalib: License.apd
.head 2 -  !
.head 2 -  File Include: Vtdos.apl
.head 2 -  File Include: Vtfile.apl
.head 2 -  File Include: Vtstr.apl
.head 2 -  File Include: Vtcal.apl
.head 2 -  File Include: Vtarray.apl
.head 2 -  File Include: Vttblwin.apl
.head 2 -  File Include: Vtmsgbox.apl
.head 2 -  File Include: Winbars2.apl
.head 2 -  File Include: Constant.apl
.head 2 -  File Include: Watchdog.apc
.head 2 -  ! File Include: Xsalcpt.apl
.head 1 +  Global Declarations
.head 2 +  Window Defaults
.head 3 +  Tool Bar
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Form Window
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Dialog Box
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Top Level Table Window
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Data Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Multiline Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Spin Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Background Text
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Pushbutton
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Radio Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Check Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Option Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Group Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Child Table Window
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  List Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Combo Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Line
.head 4 -  Line Color: Use Parent
.head 3 +  Frame
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: 3D Face Color
.head 3 +  Picture
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 2 +  Formats
.head 3 -  Number: 0'%'
.head 3 -  Number: #0
.head 3 -  Number: ###000
.head 3 -  Number: ###000;'($'###000')'
.head 3 -  Date/Time: hh:mm:ss AMPM
.head 3 -  Date/Time: M/d/yy
.head 3 -  Date/Time: MM-dd-yy
.head 3 -  Date/Time: dd-MMM-yyyy
.head 3 -  Date/Time: MMM d, yyyy
.head 3 -  Date/Time: MMM d, yyyy hh:mm AMPM
.head 3 -  Date/Time: MMMM d, yyyy hh:mm AMPM
.head 2 +  External Functions
.head 3 +  ! Library name: Lcb_W32b.Dll
.head 4 +      Function: _INITKSGN
.head 5 -      Description: инициализация средств ЭЦП
.head 5 -      Export Ordinal: 0
.head 5 +      Returns 
.head 6 -      Number: INT
.head 5 +      Parameters 
.head 6 -      String: LPSTR
.head 6 -      String: LPSTR
.head 6 -      String: LPSTR
.head 6 -      String: LPSTR
.head 4 +      Function: _EXITKSGN
.head 5 -      Description: деинициализация средств ЭЦП
.head 5 -      Export Ordinal: 0
.head 5 +      Returns 
.head 6 -      Number: INT
.head 5 -      Parameters 
.head 4 +      Function: _PUTFSGNB
.head 5 -      Description: выработка ЭЦП операционста
.head 5 -      Export Ordinal: 0
.head 5 +      Returns 
.head 6 -      Number: INT
.head 5 +      Parameters 
.head 6 -      Number: HANDLE
.head 4 +      Function: _CHKSIGNB
.head 5 -      Description: проверка подписи должностных лиц клиента на информационной строке
.head 5 -      Export Ordinal: 0
.head 5 +      Returns 
.head 6 -      Number: INT
.head 5 +      Parameters 
.head 6 -      String: LPSTR
.head 6 -      Number: WORD
.head 6 -      String: LPSTR
.head 6 -      String: LPCSTR
.head 4 +      Function: _ENCRYPTB
.head 5 -      Description: шифрование с архивированием файла для клиента
.head 5 -      Export Ordinal: 0
.head 5 +      Returns 
.head 6 -      Number: INT
.head 5 +      Parameters 
.head 6 -      Number: WORD
.head 6 -      Number: WORD
.head 6 -      Number: DWORD
.head 4 +      Function: _DECRYPTB
.head 5 -      Description: дешифрование с разархивированием и проверкой подписи файла от клиента
.head 5 -      Export Ordinal: 0
.head 5 +      Returns 
.head 6 -      Number: INT
.head 5 +      Parameters 
.head 6 -      Number: WORD
.head 6 -      Number: WORD
.head 6 -      Number: DWORD
.head 3 +  Library name: IctBob.Dll
.head 4 +  Function: llopen
.head 5 -  Description: открытие файла (C++)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: HANDLE
.head 5 +  Parameters
.head 6 -  ! первый параметр: имя файла,
  второй: тип открытия
.head 6 -  String: LPCSTR
.head 6 -  Number: INT
.head 4 +  Function: llcreat
.head 5 -  Description: создание файла (C++)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: HANDLE
.head 5 +  Parameters
.head 6 -  ! первый параметр: имя файла,
  второй: тип открытия
.head 6 -  String: LPCSTR
.head 6 -  Number: INT
.head 4 +  Function: llclose
.head 5 -  Description: закрытие файла (C++)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: HANDLE
.head 5 +  Parameters
.head 6 -  Number: HANDLE
.head 4 +  Function: llread
.head 5 -  Description: чтение файла (C++)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: UINT
.head 5 +  Parameters
.head 6 -  Number: HANDLE
.head 6 -  String: LPVOID
.head 6 -  Number: UINT
.head 4 +  Function: llwrite
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: UINT
.head 5 +  Parameters
.head 6 -  Number: HANDLE
.head 6 -  String: LPCSTR
.head 6 -  Number: UINT
.head 4 +  Function: lllseek
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LONG
.head 5 +  Parameters
.head 6 -  Number: HANDLE
.head 6 -  Number: LONG
.head 6 -  Number: INT
.head 4 +  Function: llstr2str
.head 5 -  Description: преобразование строки HEXtoBIN
.head 5 -  Export Ordinal: 0
.head 5 -  Returns
.head 5 +  Parameters
.head 6 -  String: LPSTR
.head 6 -  Receive String: LPVOID
.head 6 -  Number: ULONG
.head 3 +  ! Library name: DSGBVC4.DLL
.head 4 -  ! DSGBVC4.DLL - экспортируемые функции
.head 4 +      Function: nsignInitGBSign
.head 5 -      Description: int GLOBAL nsignInitGBSign(char *dbDir, char *secKeyDisk, char *pin,
                           char *mfo, int mode)
.head 5 -      Export Ordinal: 0
.head 5 +      Returns 
.head 6 -      Number: INT
.head 5 +      Parameters 
.head 6 -      String: LPCSTR
.head 6 -      String: LPCSTR
.head 6 -      String: LPCSTR
.head 6 -      String: LPCSTR
.head 6 -      Number: INT
.head 4 +      Function: nsignExitGBSign
.head 5 -      Description: int GLOBAL nsignExitGBSign(void)
.head 5 -      Export Ordinal: 0
.head 5 +      Returns 
.head 6 -      Number: INT
.head 5 -      Parameters 
.head 4 +      Function: nsignInitOPSign
.head 5 -      Description: int GLOBAL nsignInitOPSign(char *dbDir, char *secKeyDisk, char *pin,
                           char *mfo)
.head 5 -      Export Ordinal: 0
.head 5 +      Returns 
.head 6 -      Number: INT
.head 5 +      Parameters 
.head 6 -      String: LPCSTR
.head 6 -      String: LPCSTR
.head 6 -      String: LPCSTR
.head 6 -      String: LPCSTR
.head 4 +      Function: nsignExitOPSign
.head 5 -      Description: int GLOBAL nsignExitOPSign(void)
.head 5 -      Export Ordinal: 0
.head 5 +      Returns 
.head 6 -      Number: INT
.head 5 -      Parameters 
.head 4 +      Function: nsignMapError2Text
.head 5 -      Description: void GLOBAL nsignMapError2Text(char *buffer, int errorCode)
.head 5 -      Export Ordinal: 0
.head 5 -      Returns 
.head 5 +      Parameters 
.head 6 -      Receive String: LPSTR
.head 6 -      Number: INT
.head 4 +      Function: nsignPutOPSignOnMemory
.head 5 -      Description: int GLOBAL nsignPutOPSignOnMemory(void* data, unsigned short size,
                                  void* signPtr)
.head 5 -      Export Ordinal: 0
.head 5 +      Returns 
.head 6 -      Number: INT
.head 5 +      Parameters 
.head 6 -      String: LPVOID
.head 6 -      Number: SHORT
.head 6 -      Receive String: LPVOID
.head 3 +  Library name: RSAC.DLL
.head 4 -  ! RSAC.DLL - экспортируемые функции
.head 4 +  Function: INIT_ZAH
.head 5 -  Description: int InitSign(char *szPathOpenKey, char *szPathSecKey, char *szIdOper,
             char *szUxDateTme, char *szPasword)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 4 +  Function: CLOSE_ZAH
.head 5 -  Description: int CloseRsa(void)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: RSA_ZAH
.head 5 -  Description: int RSA_ZAH(char cMode, int iHandler, dword dwCountPart, dword dwOffset,
            dword dwLength, dword dwOffsetSecond, char *szSign,
            char *szIdOpen)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: CHAR
.head 6 -  Number: INT
.head 6 -  Number: DWORD
.head 6 -  String: LPCSTR
.head 6 -  Number: DWORD
.head 6 -  Number: DWORD
.head 6 -  String: LPSTR
.head 6 -  String: LPCSTR
.head 3 -  Library name: c32csp.dll
.head 3 +  Library name: spvcsc.dll
.head 4 +  Function: spInitialize
.head 5 -  Description: int spInitialize(int nMode, int nSecKeyMedia, const char* pszConfigDir)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 6 -  String: LPCSTR
.head 4 +  Function: spClose
.head 5 -  Description: int spClose()
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: spPutBankSignOnMemory
.head 5 -  Description: int spPutBankSignOnMemory(void* pData, unsigned nSize, void* pSignPtr)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPCSTR
.head 6 -  Number: UINT
.head 6 -  String: LPCSTR
.head 4 +  Function: spCheckSignOnMemory
.head 5 -  Description: int spCheckSignOnMemory(void* pData, unsigned nSize, void* pSignPtr)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPCSTR
.head 6 -  Number: UINT
.head 6 -  String: LPCSTR
.head 4 +  Function: spCheckBankSignOnFile
.head 5 -  Description: int spCheckBankSignOnFile(int hFile, const char* pszFilePath,
                          unsigned nFlags)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  String: LPCSTR
.head 6 -  Number: UINT
.head 4 +  Function: spCheckClientSignOnFile
.head 5 -  Description: int spCheckClientSignOnFile(int hFile, const char* pszFilePath,
                            char* pszSignInfo)

.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 4 +  Function: spPutBankSignOnFile
.head 5 -  Description: int spPutBankSignOnFile(int hFile, const char* pszFilePath,
                        unsigned nFlags)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  String: LPCSTR
.head 6 -  Number: UINT
.head 4 +  Function: spGetErrorMessage
.head 5 -  Description: void spGetErrorMessage(int nErrorCode, char* pszErrorBuf)
.head 5 -  Export Ordinal: 0
.head 5 -  Returns
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  String: LPCSTR
.head 4 +  Function: speInitialize
.head 5 -  Description: int speInitialize(int nMode, int nKeyMedia, const char* pszConfigDir)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 6 -  String: LPCSTR
.head 4 +  Function: speClose
.head 5 -  Description: int speClose(void)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: speProcessFile
.head 5 -  Description: int speProcessFile(unsigned nMode, int hFileIn, int hFileOut,
                   const char* pszFilePath)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: UINT
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 6 -  String: LPCSTR
.head 4 +  Function: spCheckClientSignOnMemory
.head 5 -  Description: int spCheckClientSignOnMemory(int nSigNum, const void* pData,
                              unsigned nDataSize, const void* pSign,
                              const char* pszAccount)

.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  String: LPCSTR
.head 6 -  Number: UINT
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 4 +  Function: spGetClientMemorySignInfo
.head 5 -  Description: int spGetClientMemorySignInfo(int nSigNum, const void* pSign,
                              char* pszInfoBuffer)

.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 4 +  Function: spGetDocPostInfo
.head 5 -  Description: int spGetDocPostInfo(const char* cszDocPostID, char* szBuffer,
                     unsigned* pnBufferSize)
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPCSTR
.head 6 -  String: LPCSTR
.head 6 -  Number: UINT
.head 2 +  Constants
.data CCDATA
0000: 3000000000000000 0000000000000000 00000000
.enddata
.data CCSIZE
0000: 1400
.enddata
.head 3 +  System
.head 3 +  User
.head 2 -  Resources
.head 2 +  Variables
.head 3 -  Number: nCount0 ! счетчик к-ва документов в файле А
.head 3 -  Number: nCount1 ! счетчик сумм по дебету  в файле А
.head 3 -  Number: nCount2 ! счетчик сумм по кредиту в файле А
.head 3 -  ! String: strPinCodeICT
.head 3 -  ! только для отладки
.head 3 -  File Handle: h1
.head 3 -  ! все необходимые для ВСЕХ окон переменные
.head 3 -  String: sDiskKata
.head 3 -  String: sArchPath
.head 3 -  String: sTempPath
.head 3 -  Number: nKLI
.head 3 -  String: sSAB
.head 3 -  String: smSAB[*]
.head 3 -  Number: nRNK
.head 3 -  Number: nmRNK[*]
.head 3 -  String: sNMK
.head 3 -  String: smNMK[*]
.head 3 -  String: sOKPO
.head 3 -  String: smOKPO[*]
.head 3 -  String: sTIMES
.head 3 -  String: smTIMES[*]
.head 3 -  Number: nFetchRes
.head 3 -  ! String: sX
.head 3 -  ! String: sY
.head 3 -  ! Number: nX
.head 3 -  ! Number: nY
.head 3 -  Number: nKw
.head 3 -  !
.head 3 -  String: sMass[*]
.head 3 -  Number: nCount
.head 3 -  Number: nHo
.head 3 -  Number: nHc
.head 3 -  String: sFileTmp
.head 3 -  Number: nSendId
.head 3 -  Boolean: bIni
.head 3 -  String: sPinKod
.head 3 -  Number: nNf
.head 3 -  !
.head 3 -  ! Number: nI
.head 3 -  Number: nII
.head 3 -  Number: nLenArr
.head 3 -  String: sUserid
.head 3 -  ! переменные для файла лицензии
.head 3 -  String: smlKOD[*]
.head 3 -  String: smlSAB[*]
.head 3 -  Number: nmlNOMER[*]
.head 3 -  Date/Time: dmlDALI[*]
.head 3 -  ! переменные для выбора LISTBOX и Calendar
.head 3 -  Number: nArray[*]
.head 3 -  String: sSelectNAIM[*]
.head 3 -  String: sSelectSAB[*]
.head 3 -  Date/Time: dSelect
.head 3 -  String: smWeek[7]
.head 3 -  String: smMonth[12]
.head 3 -  Date/Time: dDada
.head 3 -  String: sDat
.head 3 -  String: sSqlSAB
.head 3 -  Number: nIndex
.head 3 -  !
.head 3 -  String: sMFOA
.head 3 -  String: smMFOA[*]
.head 3 -  String: sNLSA
.head 3 -  String: smNLSA[*]
.head 3 -  String: sNAMA
.head 3 -  String: smNAMA[*]
.head 3 -  String: sMFOB
.head 3 -  String: smMFOB[*]
.head 3 -  String: sNLSB
.head 3 -  String: smNLSB[*]
.head 3 -  String: sNAMB
.head 3 -  String: smNAMB[*]
.head 3 -  String: sOKPOB
.head 3 -  String: smOKPOB[*]
.head 3 -  Number: nDK
.head 3 -  Number: nmDK[*]
.head 3 -  Number: nS
.head 3 -  Number: nmS[*]
.head 3 -  Number: nVOB
.head 3 -  Number: nmVOB[*]
.head 3 -  String: sND
.head 3 -  String: smND[*]
.head 3 -  Number: nISP
.head 3 -  Number: nmISP[*]
.head 3 -  Number: nKV
.head 3 -  Number: nmKV[*]
.head 3 -  Date/Time: dDAOP
.head 3 -  Date/Time: dmDAOP[*]
.head 3 -  Number: nIOST
.head 3 -  Number: nmIOST[*]
.head 3 -  Date/Time: dDAPP
.head 3 -  Date/Time: dmDAPP[*]
.head 3 -  String: sNAZN
.head 3 -  String: smNAZN[*]
.head 3 -  String: sPOND
.head 3 -  String: smPOND[*]
.head 3 -  Number: nSK
.head 3 -  Number: nmSK[*]
.head 3 -  String: sNameFileA
.head 3 -  String: smNameFileA[*]
.head 3 -  Number: nREF
.head 3 -  Number: nmREF[*]
.head 3 -  !
.head 3 -  Boolean: bU
.head 3 -  Number: nIU
.head 3 -  Number: nIL
.head 3 -  Number: nIQ
.head 3 -  Number: nIN
.head 3 -  Number: nIV
.head 3 -  Number: nIO
.head 3 -  Number: nIW
.head 3 -  !
.head 3 -  Number: nKodirowka
.head 3 -  !
.head 3 -  String: sFrag
.head 3 -  Number: nIl1
.head 3 -  ! ! ! ! ! ! !
.head 3 -  Number: nUsers
.head 3 -  Date/Time: dtExpDate
.head 3 -  Date/Time: dBankDate
.head 2 +  Internal Functions
.head 3 -  ! все функции доступны здесь всем окнам
.head 3 +  Function: LenArray
.head 4 -  Description: возвращает длину одномерного массива строк
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  String: smArr[*]
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nBound
.head 4 +  Actions
.head 5 -  Call SalArrayGetUpperBound(smArr, 1, nBound)
.head 5 -  Return nBound
.head 3 +  Function: DaySymbol
.head 4 -  Description: преобразовывает день в символ
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Date/Time: dDa
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nDa
.head 5 -  String: sDay
.head 4 +  Actions
.head 5 -  Set nDa = SalDateDay(dDa)
.head 5 +  If nDa < 10
.head 6 -  Set sDay = Str(nDa)
.head 5 +  Else
.head 6 -  Set sDay = SalNumberToChar(nDa+55)
.head 5 -  Return sDay
.head 3 +  Function: MonthSymbol
.head 4 -  Description: преобразовывает месяц в символ
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Date/Time: dDa
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nMo
.head 5 -  String: sMonth
.head 4 +  Actions
.head 5 -  Set nMo = SalDateMonth(dDa)
.head 5 +  If nMo<10
.head 6 -  Set sMonth = Str(nMo)
.head 5 +  Else
.head 6 -  Set sMonth = SalNumberToChar(nMo+55)
.head 5 -  Return sMonth
.head 3 +  Function: YearSymbol
.head 4 -  Description: преобразовывает год в символ
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Date/Time: dDa
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nY
.head 5 -  ! String: sYear
.head 4 +  Actions
.head 5 -  Set nY = SalNumberMax(SalDateYear(dDa) - 1998, 0)
.head 5 +  ! If nY < 10
.head 6 -      Set sYear = Str(nY)
.head 5 +  ! Else
.head 6 -      Set sYear = SalNumberToChar(nY+55)
.head 5 -  ! Set sYear = IifS(nY<10, Str(nY), SalNumberToChar(nY+55))
.head 5 -  ! Return sYear
.head 5 -  Return IifS(nY<10, Str(nY), SalNumberToChar(nY+55))
.head 3 +  Function: GetBankDateMom
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Date/Time:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sBDate
.head 4 +  Actions
.head 5 -  Set sBDate = GetValueStr("
    SELECT val
    FROM params
    WHERE par='BANKDATE'")
.head 5 -  Return SalDateConstruct(Val(Subs(sBDate, 7, 4)), Val(Left(sBDate, 2)), Val(
       Subs(sBDate, 4, 2)), 0, 0, 0)
.head 3 +  Function: MomFileCopy
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sSourcePath
.head 5 -  String: sDestPath
.head 5 -  Boolean: bOverWrite
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If SalFileCopy(sSourcePath, sDestPath, bOverWrite) != FILE_CopyOK
.head 6 -  Call MessageNoWait('Ошибка при копировании:' || PutCrLf() || '   ' || sSourcePath ||
     PutCrLf() || '   -->' || PutCrLf() || '   ' || sDestPath,
     'Аварийное сообщение !!!', 7, 1)
.head 6 -  Return FALSE
.head 5 +  Else
.head 6 -  Return TRUE
.head 2 -  Named Menus
.head 2 +  Class Definitions
.head 2 +  Default Classes
.head 3 -  MDI Window: cBaseMDI
.head 3 -  Form Window:
.head 3 -  Dialog Box:
.head 3 -  Table Window:
.head 3 -  Quest Window:
.head 3 -  Data Field:
.head 3 -  Spin Field:
.head 3 -  Multiline Field:
.head 3 -  Pushbutton:
.head 3 -  Radio Button:
.head 3 -  Option Button:
.head 3 -  Check Box:
.head 3 -  Child Table:
.head 3 -  Quest Child Window: cQuickDatabase
.head 3 -  List Box:
.head 3 -  Combo Box:
.head 3 -  Picture:
.head 3 -  Vertical Scroll Bar:
.head 3 -  Horizontal Scroll Bar:
.head 3 -  Column:
.head 3 -  Background Text:
.head 3 -  Group Box:
.head 3 -  Line:
.head 3 -  Frame:
.head 3 -  Custom Control:
.head 2 +  Application Actions
.head 3 +  On SAM_AppStartup
.head 4 -  Call SplashOpenWindow()
.head 4 -  ! Инициализация начальных  параметров
.head 4 -  ! Call SplashSetStatusText("Инициализация параметров...")
.head 4 -  Call GetConfigSettings()
.head 4 -  !
.head 4 -  ! Call SplashSetStatusText("Инициализация аудита...")
.head 4 -  Call DBSpy_Init(GetDbs())
.head 4 -  !
.head 4 -  ! Call SplashSetStatusText("Инициализация интерфейса...")
.head 4 -  Call SplashCloseWindow()
.head 4 +  If DatabaseLogin()
.head 5 -  Set nUsers = GetGlobalOptionEx('USRLIMIT')
.head 5 -  Set dtExpDate = SalFmtFormatStrDateTime(GetGlobalOption('EXPDATE'), 'dd/MM/yyyy')
.head 5 +  If dtExpDate < SalDateCurrent()
.head 6 -  Call SalMessageBeep(MB_IconStop)
.head 6 -  Call SalMessageBox('Истек срок действия лицензии!', 'Bars: Лицензирование!', MB_Ok)
.head 6 -  Call SalQuit()
.head 5 +  Else
.head 6 +  If IsLicenseValid(GetBankMfo(), GetBankName(), nUsers, dtExpDate)
.head 7 +  If dtExpDate - SalDateCurrent() < 31
.head 8 -  Call SalMessageBeep(MB_IconStop)
.head 8 -  Call SalMessageBox('Срок действия лицензии истекает через ' ||
     Str(dtExpDate-SalDateCurrent()) || ' дней!', 'Bars: Лицензирование!', MB_Ok)
.head 7 -  Call SalCreateWindow(menu12, hWndNULL)
.head 7 -  ! Call SalModalDialog(menu11, hWndForm)
.head 6 +  Else
.head 7 -  Call SalMessageBeep(MB_IconStop)
.head 7 -  Call SalMessageBox('Лицензия неверна или истек срок ее действия!',
     'Bars: Лицензирование!', MB_Ok)
.head 7 -  Call SalQuit()
.head 4 +  Else
.head 5 -  Call SalQuit()
.head 3 +  On SAM_SqlError
.head 4 -  Call ShowSqlError(wParam, lParam)
.head 4 -  Return FALSE
.head 3 +  On SAM_AppExit
.head 4 -  Call SaveInfoToLog(MSG_DisconnectDbs() || GetDbs())
.head 4 +  If hSqlAux3()
.head 5 -  Call SqlDisconnect(hSqlAux3())
.head 4 +  If hSqlAux2()
.head 5 -  Call SqlDisconnect(hSqlAux2())
.head 4 +  If hSqlAux()
.head 5 -  Call SqlDisconnect(hSqlAux())
.head 4 +  If hSql()
.head 5 -  Call SqlDisconnect(hSql())
.head 4 -  Call DBSpy_Disconnect()
.head 4 -  Call SalQuit()
.head 1 +  ! Dialog Box: dlg_InputPinCodeCipher
.winattr
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Ввод PIN-кода (Cipher)
.head 2 -  Accesories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Type of Dialog: Modal
.head 3 -  Window Location and Size
.head 4 -  Left:   1.588"
.head 4 -  Top:    1.646"
.head 4 -  Width:  4.357"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.792"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: MS Sans Serif
.head 3 -  Font Size: 8
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Blue
.head 3 -  Background Color: Default
.end
.head 2 -     Description: Ввод PIN-кода пользователя
.head 2 +     Tool Bar 
.head 3 -     Contents 
.head 2 +     Contents 
.head 3 -     Background Text: PIN-Код:
.head 3 +     Data Field: dfPinCode
.head 4 +     Message Actions 
.head 5 +     On SAM_AnyEdit
.head 6 -     Call SalEnableWindow(pbOk)
.head 3 +     Pushbutton: pbOk
.head 4 +     Message Actions 
.head 5 +     On SAM_Click
.head 6 -     Set strPinCodeICT = dfPinCode
.head 6 -     Call SalEndDialog(hWndForm, TRUE)
.head 3 +     Pushbutton: pbExit
.head 4 +     Message Actions 
.head 5 +     On SAM_Click
.head 6 -     Set strPinCodeICT = ''
.head 6 -     Call SalEndDialog(hWndForm, FALSE)
.head 3 -     Frame 
.head 3 -     Frame 
.head 2 -     Functions 
.head 2 -     Window Parameters 
.head 2 -     Window Variables 
.head 2 +     Message Actions 
.head 3 +     On SAM_Create
.head 4 -     Call PrepareWindow(hWndForm)
.head 4 -     Call SalDisableWindow(pbOk)
.head 4 -     Call SalSetFocus(dfPinCode)
.head 3 +     On SAM_CreateComplete
.head 4 -     Call WaitCursorOff()
.head 3 +     On SAM_Destroy
.head 4 -     Call WaitCursorOff()
.head 1 +  Form Window: frm_BOR
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Выписки по лицевым счетам
.head 2 -  Icon File:
.head 2 -  Accesories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Automatically Created at Runtime? No
.head 3 -  Initial State: Normal
.head 3 -  Maximizable? Yes
.head 3 -  Minimizable? Yes
.head 3 -  System Menu? Yes
.head 3 -  Resizable? Yes
.head 3 -  Window Location and Size
.head 4 -  Left:   0.838"
.head 4 -  Top:    0.688"
.head 4 -  Width:  7.125"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 3.563"
.head 4 -  Height Editable? Yes
.head 3 -  Form Size
.head 4 -  Width:  Default
.head 4 -  Height: Default
.head 4 -  Number of Pages: Dynamic
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description:
.head 2 -  Named Menus
.head 2 -  Menu
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Contents
.head 2 -  Contents
.head 2 +  Functions
.head 3 +  Function: DK
.head 4 -  Description: Вернуть ДЕБЕТ КРЕДИТ
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Number: S
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return IifS(S<0, ' ДЕБЕТ:', 'КРЕДИТ:')
.head 2 +  Window Parameters
.head 3 -  String: FA
.head 3 -  String: FAO
.head 3 -  String: sDeviceDef_
.head 3 -  String: sDriverDef_
.head 3 -  String: sPortDef_
.head 2 +  Window Variables
.head 3 -  Number: nInd
.head 3 -  Number: NPP
.head 3 -  File Handle: hFile
.head 3 -  String: rab ! рабочая
.head 3 -  String: strDir ! для имени шаблона
.head 3 -  String: strFileName ! для имени выходного файла
.head 3 -  String: AQH ! наш банк
.head 3 -  Number: kol ! общ количество строк
.head 3 -  Number: kol1 ! счетчик цикла по количеству строк
.head 3 -  Number: PZ ! признак закл выписки ???
.head 3 -  Number: S ! сумма документа со знаком для накопления
          ! DOS, KOS, S2
.head 3 -  Number: DOS
.head 3 -  Number: KOS
.head 3 -  Number: S2 ! исходящее сальдо
.head 3 -  String: FIO ! исполнитель
.head 3 -  ! Входяшие в отчет
.head 3 -  String: KV
.head 3 -  String: NLS
.head 3 -  String: NAM
.head 3 -  String: MFO
.head 3 -  String: NLSK
.head 3 -  String: NAMK
.head 3 -  String: OKPOK
.head 3 -  String: SK
.head 3 -  String: ND
.head 3 -  String: MFOK
.head 3 -  String: FDAT
.head 3 -  String: PDAT
.head 3 -  String: NAZN
.head 3 -  String: ISP
.head 3 -  String: VOB
.head 3 -  Number: S1 ! вход сальдо
.head 3 -  String: SD ! выравненная сумма док для передачи в отчет
.head 3 -  String: BPEM
.head 3 -  Number: nRet
.head 3 -  !
.head 3 -  String: sTempMFO
.head 3 -  String: sTempNLS
.head 3 -  String: sTempNAM
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Set strDir = GetTemplateDir() || "\\BOR.QRP"
.head 4 -  Set strFileName = '_' || Right(FA, 11)
.head 4 -  ! Set AQH = StrWinToDosX(GetBankName())
.head 4 -  Set AQH = GetBankName()
.head 4 -  Set rab = 'KV,NLS,NAM,MFO,NLSK,NAMK,OKPOK,SK,ND,MFOK,FDAT,PDAT,NAZN,VOB,S1,SD'
.head 4 -  Set nInd = RPT_NoToolbar
.head 4 -  Call SalReportPrintToFile(hWndForm, strDir, GetPrnDir() || '\\' || strFileName, rab, rab,
     1, RPT_PrintAll, 1, 1, FALSE, nInd)
.head 4 -  Call zarez12(GetPrnDir() || '\\' || strFileName, 0, '')
.head 4 -  ! Call SalLoadAppAndWait('Looka.Bat ' || GetPrnDir() || '\\' || strFileName,
     Window_Maximized, nRet)
.head 4 -  Call SalLoadAppAndWait('Dview.Exe ' || GetPrnDir() || '\\' || strFileName,
     Window_Maximized, nRet)
.head 4 -  Call SalDestroyWindow(hWndForm)
.head 3 +  On SAM_ReportStart
.head 4 -  Return TRUE
.head 3 +  On SAM_ReportFetchInit
.head 4 +  If not SalFileOpen(hFile, FA, 0)
.head 5 -  Return FALSE
.head 4 -  Call SalFileRead(hFile, rab, 65)
.head 4 -  Set BPEM = SalStrMidX(rab, 20, 2) || ':' || SalStrMidX(rab, 22, 2) || ':' ||
    SalStrMidX(rab, 24, 2)
.head 4 -  Set kol = Val(SalStrMidX(rab, 26, 4))
.head 4 -  Set PZ = Val(SalStrMidX(rab, 62, 1))
.head 4 -  Set NPP = 0
.head 4 +  If kol > 0
.head 5 -  Set kol1 = 0
.head 5 -  Return TRUE
.head 4 +  Else
.head 5 -  Return FALSE
.head 3 +  On SAM_ReportFetchNext
.head 4 +  If kol1 = kol
.head 5 -  Return FALSE
.head 4 -  Call SalFileRead(hFile, rab, 404)
.head 4 -  Set kol1 = kol1 + 1
.head 4 -  Set MFO = SalStrTrimX(SalStrMidX(rab, 0, 9))
.head 4 -  Set NLS = SalStrTrimX(SalStrMidX(rab, 9, 14))
.head 4 -  Set NAM = StrDosToWinX(SalStrMidX(rab, 23, 38))
.head 4 -  Set MFOK = SalStrTrimX(SalStrMidX(rab, 61, 9))
.head 4 -  Set NLSK = SalStrTrimX(SalStrMidX(rab, 70, 14))
.head 4 -  Set NAMK = StrDosToWinX(SalStrMidX(rab, 84, 38))
.head 4 -  Set OKPOK = SalStrMidX(rab, 122, 14)
.head 4 -  Set OKPOK = IifS(Val(OKPOK)=0, '', OKPOK)
.head 4 -  Set SD = IifS(Val(SalStrMidX(rab, 137, 14))=0, Spac(13) || '0', SalStrMidX(rab, 137, 14))
    || "," || Right('00' || SalStrTrimX(SalStrMidX(rab, 151, 2)), 2)
.head 4 -  Set S = Val(SalStrMidX(rab, 137, 16)) / 100
.head 4 +  If SalStrMidX(rab, 136, 1) = '0'
.head 5 -  Set S = - S
.head 5 -  Set SD = SD || Spac(6)
.head 4 +  Else
.head 5 -  Set sTempNAM = NAM
.head 5 -  Set NAM = NAMK
.head 5 -  Set NAMK = sTempNAM
.head 4 -  Set VOB = SalStrMidX(rab, 153, 2)
.head 4 -  Set ND = StrDosToWinX(SalStrMidX(rab, 155, 10))
.head 4 -  Set ISP = SalStrTrimX(SalStrMidX(rab, 165, 8))
.head 4 -  Set KV = SalStrMidX(rab, 173, 3)
.head 4 -  Set FDAT = SalStrMidX(rab, 182, 2) || '/' || SalStrMidX(rab, 180, 2) || '/' ||
    SalStrMidX(rab, 176, 4)
.head 4 -  Set S1 = Val(SalStrMidX(rab, 184, 24)) / 100
.head 4 -  Set PDAT = SalStrMidX(rab, 214, 2) || '/' || SalStrMidX(rab, 212, 2) || '/' ||
    SalStrMidX(rab, 208, 4)
.head 4 -  Set NAZN = StrDosToWinX(SalStrMidX(rab, 216, 160))
.head 4 -  Set SK = SalStrMidX(rab, 384, 2)
.head 4 -  Set SK = IifS(SK=' 0', '', SK)
.head 4 -  Return TRUE
.head 3 +  On SAM_ReportNotify
.head 4 +  If lParam = RPT_BeforeBreakHeader2
.head 5 -  Call SalReportSetStringVar(SalNumberToWindowHandle(wParam), 'DT_PRINT', 'Надруковано: '
     || SalFmtFormatDateTime(SalDateCurrent(), "dd/MM/yyyy hhh:mm:ss"))
.head 5 -  Call SalReportSetStringVar(SalNumberToWindowHandle(wParam), 'PAX', "Рахунок")
.head 5 -  Call SalReportSetStringVar(SalNumberToWindowHandle(wParam), 'ZAKL',
     IifS(PZ=1, 'Поточна', 'Заключна'))
.head 5 -  Call SalReportSetStringVar(SalNumberToWindowHandle(wParam), 'SHAP',
     "Nпп Документ   ВО    МФО    Кореспондент   СКП         Сума: ДЕБ КРЕД")
.head 5 -  Call SalReportSetStringVar(SalNumberToWindowHandle(wParam), 'BPEM', BPEM)
.head 5 -  Call SalReportSetStringVar(SalNumberToWindowHandle(wParam), 'AQH', AQH)
.head 5 -  Set DOS = 0
.head 5 -  Set NPP = 0
.head 5 -  Set KOS = 0
.head 5 -  Set S2 = S1
.head 5 -  Set FIO = 'Вик.' || ISP
.head 5 -  Call SalReportSetStringVar(SalNumberToWindowHandle(wParam), 'VSA', ' Вхідне сальдо ' ||
     DK(S1))
.head 4 +  If lParam = RPT_BeforeDetail
.head 5 +  If S < 0
.head 6 -  Set DOS = DOS - S
.head 5 +  Else
.head 6 -  Set KOS = KOS + S
.head 5 -  Set NPP = NPP + 1
.head 5 -  Set S2 = S2 + S
.head 5 -  Call SalReportSetNumberVar(SalNumberToWindowHandle(wParam), 'NPP', NPP)
.head 4 +  If lParam = RPT_BeforeBreakFooter2
.head 5 -  Call SalReportSetStringVar(SalNumberToWindowHandle(wParam), 'ISA', 'Вихідне сальдо ' ||
     DK(S2))
.head 5 -  Call SalReportSetStringVar(SalNumberToWindowHandle(wParam), 'OBO', 'Всього оборотів ')
.head 5 -  Call SalReportSetStringVar(SalNumberToWindowHandle(wParam), 'FIO', FIO)
.head 5 -  Call SalReportSetNumberVar(SalNumberToWindowHandle(wParam), 'S2', S2)
.head 5 -  Call SalReportSetNumberVar(SalNumberToWindowHandle(wParam), 'DOS', DOS)
.head 5 -  Call SalReportSetNumberVar(SalNumberToWindowHandle(wParam), 'KOS', KOS)
.head 3 +  On SAM_Destroy
.head 4 -  Call SalFileClose(hFile)
.head 4 +  If FAO != FA
.head 5 -  Call VisFileDelete(FA)
.head 4 -  Call SalPrtSetDefault(sDeviceDef_, sDriverDef_, sPortDef_)
.head 1 +  Dialog Box: Find
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Введите фрагмент наименования клиента
.head 2 -  Accesories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Window Location and Size
.head 4 -  Left:   5.4"
.head 4 -  Top:    4.229"
.head 4 -  Width:  4.243"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 0.667"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Arial Cyr
.head 3 -  Font Size: 10
.head 3 -  Font Enhancement: Bold-Italic
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description: ввод фрагмента наименования клиента
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: 0.262"
.head 4 -  Size Editable? Yes
.head 4 -  Font Name: Arial Cyr
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Data Field: dfFind
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   0.086"
.head 6 -  Top:    0.073"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On WM_Char
.head 6 +  If wParam = 10 or wParam = 13
.head 7 -  ! Set sFrag = dfFind
.head 7 -  ! Call SalEndDialog(Find, 0)
.head 7 -  Call SalSendMsg(pbOk, SAM_Click, 0, 0)
.head 6 +  If wParam = 27
.head 7 -  Call SalEndDialog(Find, 1)
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left:   3.686"
.head 5 -  Top:    0.073"
.head 5 -  Width:  0.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Enter
.head 4 -  Font Name: Default
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Set sFrag = dfFind
.head 6 -  Call SalEndDialog(Find, 0)
.head 2 -  Functions
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  String: sX
.head 3 -  String: sY
.head 3 -  Number: nX
.head 3 -  Number: nY
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Set dfFind = sFrag
.head 4 -  Call SalUseRegistry(TRUE, GetCompanyName())
.head 4 -  Call SalGetProfileString('FindKlient', 'X-CoordinateFind', 'None', sX, 'Bars98')
.head 4 -  Call SalGetProfileString('FindKlient', 'Y-CoordinateFind', 'None', sY, 'Bars98')
.head 4 +  If sX != 'None' and sY != 'None'
.head 5 -  Call SalSetWindowLoc(Find, Val(sX), Val(sY))
.head 4 +  Else
.head 5 -  Call SalCenterWindow(Find)
.head 3 +  On SAM_Destroy
.head 4 -  Call SalGetWindowLoc(Find, nX, nY)
.head 4 -  Call SalUseRegistry(TRUE, GetCompanyName())
.head 4 +  If nX != Val(sX)
.head 5 -  Call SalSetProfileString('FindKlient', 'X-CoordinateFind', SalNumberToStrX(nX, 3),
     'Bars98')
.head 4 +  If nY != Val(sY)
.head 5 -  Call SalSetProfileString('FindKlient', 'Y-CoordinateFind', SalNumberToStrX(nY, 3),
     'Bars98')
.head 1 +  Form Window: F10
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Работа с архивами КЛИЕНТ-БАНК
.head 2 -  Icon File:
.head 2 -  Accesories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Automatically Created at Runtime? No
.head 3 -  Initial State: Normal
.head 3 -  Maximizable? Yes
.head 3 -  Minimizable? Yes
.head 3 -  System Menu? Yes
.head 3 -  Resizable? Yes
.head 3 -  Window Location and Size
.head 4 -  Left:   0.963"
.head 4 -  Top:    0.646"
.head 4 -  Width:  13.367"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 6.893"
.head 4 -  Height Editable? Yes
.head 3 -  Form Size
.head 4 -  Width:  Default
.head 4 -  Height: Default
.head 4 -  Number of Pages: Dynamic
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description: работа с архивом
.head 2 -  Named Menus
.head 2 -  Menu
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Radio Button: rbPD
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Пакеты документов
.head 4 -  Window Location and Size
.head 5 -  Left:   9.783"
.head 5 -  Top:    -0.012"
.head 5 -  Width:  3.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If rbPD
.head 7 -  Call SalTblDestroyColumns(t9)
.head 7 -  Set sPOD = 'ADR'
.head 7 -  Set sPRE = 'A'
.head 7 -  Call SalSendMsg(lbAR, SAM_Click, 0 , 0)
.head 3 +  ! Radio Button: rbRP
.winattr
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Реестры пакетов
.head 4 -  Window Location and Size
.head 5 -  Left:   -0.017"
.head 5 -  Top:    0.238"
.head 5 -  Width:  3.083"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.end
.head 4 +      Message Actions
.head 5 +      On SAM_Click
.head 6 +      If rbRP
.head 7 -      Set sPOD = 'REE'
.head 7 -      Set sPRE = 'R'
.head 7 -      Call SalSendMsg(pbSAB, SAM_Click, 0 , 0)
.head 3 +  Radio Button: rbKW
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Квитанции
.head 4 -  Window Location and Size
.head 5 -  Left:   9.783"
.head 5 -  Top:    0.238"
.head 5 -  Width:  3.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If rbKW
.head 7 -  Call SalTblDestroyColumns(t9)
.head 7 -  Set sPOD = 'KWI'
.head 7 -  Set sPRE = 'T'
.head 7 -  Call SalSendMsg(lbAR, SAM_Click, 0, 0)
.head 3 +  Radio Button: rbZW
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Запросы на выписки
.head 4 -  Window Location and Size
.head 5 -  Left:   9.783"
.head 5 -  Top:    0.488"
.head 5 -  Width:  3.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If rbZW
.head 7 -  Call SalTblDestroyColumns(t9)
.head 7 -  Set sPOD = 'ADR'
.head 7 -  Set sPRE = 'Q'
.head 7 -  Call SalSendMsg(lbAR, SAM_Click, 0, 0)
.head 3 +  Radio Button: rbLS
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Выписки
.head 4 -  Window Location and Size
.head 5 -  Left:   9.783"
.head 5 -  Top:    0.738"
.head 5 -  Width:  3.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If rbLS
.head 7 -  Call SalTblDestroyColumns(t9)
.head 7 -  Set sPOD = 'ARH'
.head 7 -  Set sPRE = 'V'
.head 7 -  Call SalSendMsg(lbAR, SAM_Click, 0, 0)
.head 3 +  Radio Button: rbDW
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Возвращенные документы
.head 4 -  Window Location and Size
.head 5 -  Left:   9.783"
.head 5 -  Top:    0.988"
.head 5 -  Width:  3.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If rbDW
.head 7 -  Call SalTblDestroyColumns(t9)
.head 7 -  Set sPOD = 'ARH'
.head 7 -  Set sPRE = 'W'
.head 7 -  Call SalSendMsg(lbAR, SAM_Click, 0, 0)
.head 3 +  Radio Button: rbDO
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Документы, принятые к оплате
.head 4 -  Window Location and Size
.head 5 -  Left:   9.783"
.head 5 -  Top:    1.238"
.head 5 -  Width:  3.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If rbDO
.head 7 -  Call SalTblDestroyColumns(t9)
.head 7 -  Set sPOD = 'ARH'
.head 7 -  Set sPRE = 'O'
.head 7 -  Call SalSendMsg(lbAR, SAM_Click, 0, 0)
.head 3 +  Radio Button: rbKV
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Курсы валют
.head 4 -  Window Location and Size
.head 5 -  Left:   9.783"
.head 5 -  Top:    1.488"
.head 5 -  Width:  3.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If rbKV
.head 7 -  Call SalTblDestroyColumns(t9)
.head 7 -  Set sPOD = 'ARH'
.head 7 -  Set sPRE = '$'
.head 7 -  Call SalSendMsg(lbAR, SAM_Click, 0, 0)
.head 3 +  Radio Button: rbIU
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Изменения участников СЭП
.head 4 -  Window Location and Size
.head 5 -  Left:   9.783"
.head 5 -  Top:    1.738"
.head 5 -  Width:  3.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If rbIU
.head 7 -  Call SalTblDestroyColumns(t9)
.head 7 -  Set sPOD = 'ARH'
.head 7 -  Set sPRE = 'U'
.head 7 -  Call SalSendMsg(lbAR, SAM_Click, 0, 0)
.head 3 +  Radio Button: rbZE
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:   9.783"
.head 5 -  Top:    1.738"
.head 5 -  Width:  3.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If rbIU
.head 7 -  Call SalTblDestroyColumns(t9)
.head 7 -  Set sPOD = 'ARH'
.head 7 -  Set sPRE = 'U'
.head 7 -  Call SalSendMsg(lbAR, SAM_Click, 0, 0)
.head 3 +  Pushbutton: pbExit
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Выход
.head 4 -  Window Location and Size
.head 5 -  Left:   11.983"
.head 5 -  Top:    1.988"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.5"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Esc
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name: \Bars98\RESOURCE\BMP\Stop2.bmp
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  ! Call SalEndDialog(F10, 0)
.head 6 -  Call SalDestroyWindow(F10)
.head 3 +  List Box: lbAR
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    -0.012"
.head 5 -  Width:  7.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 2.393"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Multiple selection? No
.head 4 -  Sorted? Yes
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Horizontal Scroll? No
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  ! Call SalSendMsg(pbSAB, SAM_Click, 0, 0)
.head 6 -  Set nIndex = SalListQuerySelection(lbAR)
.head 6 -  Call SalListClear(lbDAT)
.head 6 +  If SalListQueryCount(lbAR) > 0 and nIndex >= 0
.head 7 -  Set sSAB = Left(SalListQueryTextX(lbAR, nIndex), 4)
.head 7 -  Set nNumFiles = Max(VisDosEnumFiles(sArchPath || sPOD || '\\%' || sPRE || sSAB ||
    '??.???', FA_Standard, smFiles), 0)
.head 7 +  If cb2
.head 8 -  Call SqlPrepareAndExecute(hSql(), T("
     SELECT count(*)
     INTO :nNumFilesArch
     FROM klp_files f, klp_arch a
     WHERE a.tip=:sPOD and a.fn=f.fn and substr(f.fn,2,1)=:sPRE and
           substr(f.fn,3,4)=:sSAB"))
.head 8 -  Call SqlFetchNext(hSql(), nFetchRes)
.head 8 -  Set nIa = nNumFiles
.head 8 -  Set nNumFiles = nNumFiles + nNumFilesArch
.head 8 -  Call SqlPrepareAndExecute(hSql(), T("
     SELECT f.fn
     INTO :sFileArch
     FROM klp_files f, klp_arch a
     WHERE a.tip=:sPOD and a.fn=f.fn and substr(f.fn,2,1)=:sPRE and
           substr(f.fn,3,4)=:sSAB"))
.head 8 +  While SqlFetchNext(hSql(), nFetchRes)
.head 9 -  Set smFiles[nIa] = sFileArch
.head 9 -  Set nIa = nIa + 1
.head 7 +  If nNumFiles > 0
.head 8 -  Set nI = 0
.head 8 +  While nI < nNumFiles
.head 9 -  Set sYear = SalStrMidX(smFiles[nI], 9, 1)
.head 9 -  Set sYear = Str(SalStrLop(sYear) + IifN(SalStrLop(sYear)>57, 1943, 1950))
.head 9 -  Set sDay = SalStrMidX(smFiles[nI], 6, 1)
.head 9 -  Set sDayL = sDay
.head 9 -  Set sDay = Right(Str(SalStrLop(sDayL) + IifN(SalStrLop(sDay)>57, 45, 52)), 2)
.head 9 -  Set sMonth = SalStrMidX(smFiles[nI], 7, 1)
.head 9 -  Set sMonthL = sMonth
.head 9 -  Set sMonth = Right(Str(SalStrLop(sMonthL) + IifN(
    SalStrLop(sMonth)>57, 45, 52)), 2)
.head 9 -  Set smFiles[nI] = sYear || sMonth || sDay || Right(smFiles[nI], 2)
.head 9 -  Set nI = nI + 1
.head 8 -  Call VisArraySort(smFiles, SORT_Descending, DT_String)
.head 8 -  Set nI = 0
.head 8 +  While nI < nNumFiles
.head 9 -  Call SalListAdd(lbDAT, ' ' || SalStrMidX(smFiles[nI], 6, 2) || '/' ||
     SalStrMidX(smFiles[nI], 4, 2) || '/' || Left(smFiles[nI], 4) || ' (' ||
     Right(smFiles[nI] , 2) || ') ')
.head 9 -  Set nI = nI + 1
.head 8 -  Call SalListSetSelect(lbDAT, 0)
.head 6 +  If rbIU or rbLS
.head 7 -  Call SalTblDestroyColumns(t9)
.head 6 +  Else
.head 7 -  Call SalSendMsg(lbDAT, SAM_Click, 0, 0)
.head 5 +  On SAM_Create
.head 6 -  Call SalListSetSelect(lbAR, 0)
.head 6 -  Call SalSendMsg(lbAR, SAM_Click, 0, 0)
.head 3 +  Pushbutton: pbFind10
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Поиск
.head 4 -  Window Location and Size
.head 5 -  Left:   1.183"
.head 5 -  Top:    2.321"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalModalDialog(Find, hWndForm) = 0
.head 7 -  Set nI10 = 0
.head 7 +  While nI10 < SalListQueryCount(lbAR)
.head 8 +  If SalStrScan(SalStrUpperX(SalListQueryTextX(lbAR, nI10)),
   SalStrUpperX(sFrag)) > 0
.head 9 -  Call SalListSetSelect(lbAR, nI10)
.head 9 -  Call SalSetFocus(lbAR)
.head 9 -  Call SalSendMsg(lbAR, SAM_Click, 0, 0)
.head 9 -  Break
.head 8 -  Set nI10 = nI10 + 1
.head 3 +  ! Pushbutton: pbSAB
.winattr
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Выбрать
.head 4 -  Window Location and Size
.head 5 -  Left:   6.683"
.head 5 -  Top:    2.321"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.end
.head 4 +      Message Actions
.head 5 -      On SAM_Click
.head 3 +  List Box: lbDAT
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left:   7.583"
.head 5 -  Top:    -0.012"
.head 5 -  Width:  2.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 2.393"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Multiple selection? No
.head 4 -  Sorted? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Horizontal Scroll? No
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalTblDestroyColumns(t9)
.head 6 -  Set nIndex = SalListQuerySelection(lbDAT)
.head 6 +  If SalListQueryCount(lbDAT) > 0 and nIndex >= 0
.head 7 -  Set sDMY = SalListQueryTextX(lbDAT, nIndex)
.head 7 -  Set dDMY = SalDateConstruct(Val(SalStrMidX(sDMY, 7, 4)),
    Val(SalStrMidX(sDMY, 4, 2)), Val(SalStrMidX(sDMY, 1, 2)), 0, 0, 0)
.head 7 -  Set sNamFil = sArchPath || sPOD || '\\%' || sPRE || sSAB || DaySymbol(dDMY) ||
    MonthSymbol(dDMY) || '.' || YearSymbol(dDMY) || SalStrMidX(sDMY, 13, 2)
.head 7 +  If rbPD
.head 8 -  Call SalTblCreateColumn(t9, 1, .7, 9, 'МФО-А')
.head 8 -  Call SalTblCreateColumn(t9, 2, 1.5, 14, 'Счет-А')
.head 8 -  Call SalTblCreateColumn(t9, 3, 1.1, 14, 'ОКПО-А')
.head 8 -  Call SalTblCreateColumn(t9, 4, .7, 9, 'МФО-Б')
.head 8 -  Call SalTblCreateColumn(t9, 5, 1.5, 14, 'Счет-Б')
.head 8 -  Call SalTblCreateColumn(t9, 6, 1.1, 14, 'ОКПО-Б')
.head 8 -  Call SalTblCreateColumn(t9, 7, 1.8, 16, 'Сумма')
.head 8 -  Call SalTblCreateColumn(t9, 8, 1.1, 10, 'Ном.док.')
.head 8 -  Call SalTblCreateColumn(t9, 9, .8, 3, 'Код вал.')
.head 8 -  Call SalTblCreateColumn(t9, 10, 1.1, 8, 'Дата')
.head 8 -  Call SalTblCreateColumn(t9, 11, 3.914, 38, 'Плательщик')
.head 8 -  Call SalTblCreateColumn(t9, 12, 3.914, 38, 'Получатель')
.head 8 -  Call SalTblCreateColumn(t9, 13, 10.6, 160, 'Назначение платежа')
.head 8 -  Call SalTblCreateColumn(t9, 14, 2, 19, 'Дата, время приема пакета')
.head 8 -  ! чтение файла
.head 8 -  Set sOldNamFil = sNamFil
.head 8 -  Set sNamFil = ArchName(sNamFil, sPOD, Right(sNamFil, 12))
.head 8 -  Call SalFileGetDateTime(sNamFil, dtDateTimeNNN)
.head 8 -  Call SalFileOpen(hFile, sNamFil, OF_Read)
.head 8 -  ! Call SalFileRead(hFile, sBuffer, 64)
.head 8 -  Call SalFileGetStr(hFile, sBuffer, 100)
.head 8 -  Set sVerLook = Right(sBuffer, Len(sBuffer)-62)
.head 8 -  Call SalFileSeek(hFile, Len(sBuffer)+2, FILE_SeekBegin)
.head 8 +  While SalFileRead(hFile, sBuffer, 901) = 901
.head 9 -  Set nNewRow = SalTblInsertRow(t9, TBL_MaxRow)
.head 9 -  Call SalTblSetFocusRow(t9, nNewRow)
.head 9 -  Call SalTblSetColumnText(t9, 1, SalStrTrimX(Left(sBuffer, 9)))
.head 9 -  Call SalTblSetColumnText(t9, 2, SalStrTrimX(SalStrMidX(sBuffer, 9, 14)))
.head 9 -  Call SalTblSetColumnText(t9, 3, SalStrTrimX(SalStrMidX(sBuffer, 23, 14)))
.head 9 -  Call SalTblSetColumnText(t9, 4, SalStrTrimX(SalStrMidX(sBuffer, 37, 9)))
.head 9 -  Call SalTblSetColumnText(t9, 5, SalStrTrimX(SalStrMidX(sBuffer, 46, 14)))
.head 9 -  Call SalTblSetColumnText(t9, 6, SalStrTrimX(SalStrMidX(sBuffer, 60, 14)))
.head 9 -  Call SalTblSetColumnText(t9, 7, PadL(SalStrTrimX(SalNumberToStrX(Val(
     SalStrTrimX(SalStrMidX(sBuffer, 75, 16)))/100, 2)), 17))
.head 9 -  Call SalTblSetColumnText(t9, 8, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 93, 10))))
.head 9 -  Call SalTblSetColumnText(t9, 9, PadL(Right(Str(Val(SalStrTrimX(
     SalStrMidX(sBuffer, 103, 3)))+1000), 3), 5))
.head 9 -  Call SalTblSetColumnText(t9, 10, SalStrMidX(sBuffer, 112, 2) || '/' ||
     SalStrMidX(sBuffer, 110, 2) || '/' || SalStrMidX(sBuffer, 106, 4))
.head 9 -  Call SalTblSetColumnText(t9, 11, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 114, 38))))
.head 9 -  Call SalTblSetColumnText(t9, 12, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 152, 38))))
.head 9 -  Call SalTblSetColumnText(t9, 13, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 190, 160))))
.head 9 -  Call SalTblSetColumnText(t9, 14,
     SalFmtFormatDateTime(dtDateTimeNNN, 'dd-MM-yyyy hhhh:mm:ss'))
.head 9 -  Set nDDR = Val(SalStrTrimX(SalStrMidX(sBuffer, 358, 5)))
.head 9 +  If nDDR > 0
.head 10 -  Call SalFileRead(hFile, sBuffer, nDDR+2)
.head 8 -  Call SalFileClose(hFile)
.head 8 +  If sOldNamFil != sNamFil
.head 9 -  Call VisFileDelete(sNamFil)
.head 7 +  ! If rbRP
.head 8 -      Call SalTblCreateColumn((9, 1, 1, 9, 'МФО-А')
.head 8 -      Call SalTblCreateColumn((9, 2, 2, 14, 'Счет-А')
.head 8 -      Call SalTblCreateColumn((9, 3, 2, 14, 'ОКПО-А')
.head 8 -      Call SalTblCreateColumn((9, 4, 1, 9, 'МФО-Б')
.head 8 -      Call SalTblCreateColumn((9, 5, 2, 14, 'Счет-Б')
.head 8 -      Call SalTblCreateColumn((9, 6, 2, 14, 'ОКПО-Б')
.head 8 -      Call SalTblCreateColumn((9, 7, 2, 16, 'Сумма')
.head 8 -      Call SalTblCreateColumn((9, 8, 1, 10, 'Номер док.')
.head 8 -      Call SalTblCreateColumn((9, 9, 1, 3, 'Код валюты')
.head 8 -      Call SalTblCreateColumn((9, 10, 1, 8, 'Дата')
.head 8 -      Call SalTblCreateColumn((9, 11, 4, 38, 'Плательщик')
.head 8 -      Call SalTblCreateColumn((9, 12, 4, 38, 'Получатель')
.head 8 -      Call SalTblCreateColumn((9, 13, 4, 38, 'Назначение платежа')
.head 7 +  If rbKW
.head 8 -  Call SalTblCreateColumn(t9, 1, 1.314, 12, 'Имя файла A')
.head 8 -  Call SalTblCreateColumn(t9, 2, 1.357, 2, 'Код возврата')
.head 8 -  Call SalTblCreateColumn(t9, 3, .957, 4, 'К-во док.')
.head 8 -  Call SalTblCreateColumn(t9, 4, 1.829, 24, 'Сумма документов')
.head 8 -  Call SalTblCreateColumn(t9, 5, 2, 19, 'Дата, время квитанции')
.head 8 -  ! чтение файла
.head 8 -  Set sOldNamFil = sNamFil
.head 8 -  Set sNamFil = ArchName(sNamFil, sPOD, Right(sNamFil, 12))
.head 8 -  Call SalFileGetDateTime(sNamFil, dtDateTimeNNN)
.head 8 -  Call SalFileOpen(hFile, sNamFil, OF_Read)
.head 8 -  Call SalFileRead(hFile, sBuffer, 56)
.head 8 -  Set nNewRow = SalTblInsertRow(t9, TBL_MaxRow)
.head 8 -  Call SalTblSetFocusRow(t9, nNewRow)
.head 8 -  Call SalTblSetColumnText(t9, 1, Left(sBuffer, 12))
.head 8 -  Call SalTblSetColumnText(t9, 2, PadL(SalStrTrimX(Str(Val(SalStrTrimX(
     SalStrMidX(sBuffer, 26, 2))))), 5))
.head 8 -  Call SalTblSetColumnText(t9, 3, PadL(SalStrTrimX(Str(Val(SalStrTrimX(
     SalStrMidX(sBuffer, 28, 4))))), 6))
.head 8 -  Call SalTblSetColumnText(t9, 4, PadL(SalStrTrimX(SalNumberToStrX(Val(SalStrTrimX(
     SalStrMidX(sBuffer, 32, 24)))/100, 2)), 17))
.head 8 -  Call SalTblSetColumnText(t9, 5,
     SalFmtFormatDateTime(dtDateTimeNNN, 'dd-MM-yyyy hhhh:mm:ss'))
.head 8 +  If Val(SalStrMidX(sBuffer, 26, 2)) > 0
.head 9 -  Call VisTblSetRowColor(t9, nNewRow, COLOR_Red)
.head 8 -  Call SalFileClose(hFile)
.head 8 +  If sOldNamFil != sNamFil
.head 9 -  Call VisFileDelete(sNamFil)
.head 7 +  If rbZW
.head 8 -  Call SalTblCreateColumn(t9, 1, 1.5, 14, 'Счет клиента')
.head 8 -  Call SalTblCreateColumn(t9, 2, .857, 3, 'Код вал.')
.head 8 -  Call SalTblCreateColumn(t9, 3, 2.687, 3, 'Дата запрашиваемой выписки')
.head 8 -  ! чтение файла
.head 8 -  Set sOldNamFil = sNamFil
.head 8 -  Set sNamFil = ArchName(sNamFil, sPOD, Right(sNamFil, 12))
.head 8 -  Call SalFileOpen(hFile, sNamFil, OF_Read)
.head 8 -  Call SalFileRead(hFile, sBuffer, 32)
.head 8 +  While SalFileRead(hFile, sBuffer, 31) = 31
.head 9 -  Set nNewRow = SalTblInsertRow(t9, TBL_MaxRow)
.head 9 -  Call SalTblSetFocusRow(t9, nNewRow)
.head 9 -  Call SalTblSetColumnText(t9, 1, SalStrTrimX(Left(sBuffer, 14)))
.head 9 -  Call SalTblSetColumnText(t9, 2, PadL(Right(Str(Val(SalStrTrimX(
     SalStrMidX(sBuffer, 14, 3)))+1000), 3), 5))
.head 9 -  Call SalTblSetColumnText(t9, 3, PadL(SalStrMidX(sBuffer, 23 ,2) || '-' ||
     SalStrMidX(sBuffer, 21, 2) || '-' || SalStrMidX(sBuffer, 17, 4), 18))
.head 8 -  Call SalFileClose(hFile)
.head 8 +  If sOldNamFil != sNamFil
.head 9 -  Call VisFileDelete(sNamFil)
.head 7 +  If rbLS
.head 8 -  ! Call SalTblCreateColumn(t9, 1, 1, 9, 'МФО-А')
.head 8 -  ! Call SalTblCreateColumn(t9, 2, 2, 14, 'Счет-А')
.head 8 -  ! Call SalTblCreateColumn(t9, 3, 3, 38, 'Плательщик')
.head 8 -  ! Call SalTblCreateColumn(t9, 4, 1, 9, 'МФО-Б')
.head 8 -  ! Call SalTblCreateColumn(t9, 5, 2, 14, 'Счет-Б')
.head 8 -  ! Call SalTblCreateColumn(t9, 6, 3, 38, 'Получатель')
.head 8 -  ! Call SalTblCreateColumn(t9, 7, 2, 14, 'ОКПО -Б')
.head 8 -  ! Call SalTblCreateColumn(t9, 8, 2, 16, 'Сумма')
.head 8 -  ! Call SalTblCreateColumn(t9, 9, 1, 10, 'Номер док.')
.head 8 -  ! Call SalTblCreateColumn(t9, 10, 1, 3, 'Код валюты')
.head 8 -  ! Call SalTblCreateColumn(t9, 11, 1, 8, 'Дата оплаты')
.head 8 -  ! Call SalTblCreateColumn(t9, 12, 1, 8, 'Дата предыдущего движения')
.head 8 -  ! Call SalTblCreateColumn(t9, 13, 4, 160, 'Назначение платежа')
.head 8 -  ! Call SalTblCreateColumn(t9, 14, 1, 2, 'Символ кассплана')
.head 8 -  ! Call SalTblCreateColumn(t9, 15, 2, 12, 'Имя файла A')
.head 8 -  Call SalPrtGetDefault(sDeviceDef, sDriverDef, sPortDef)
.head 8 -  Call SalPrtSetDefault('Generic / Text Only', 'WINSPOOL', 'FILE:')
.head 8 -  Set sOldNamFil = sNamFil
.head 8 -  Set sNamFil = ArchName(sNamFil, sPOD, Right(sNamFil, 12))
.head 8 -  Call SalCreateWindow(frm_BOR, hWndForm, sNamFil, sOldNamFil, sDeviceDef,
     sDriverDef, sPortDef)
.head 7 +  If rbDW
.head 8 -  Call SalTblCreateColumn(t9, 1, .717, 9, 'МФО-А')
.head 8 -  Call SalTblCreateColumn(t9, 2, 1.517, 14, 'Счет-А')
.head 8 -  Call SalTblCreateColumn(t9, 3, .717, 9, 'МФО-Б')
.head 8 -  Call SalTblCreateColumn(t9, 4, 1.517, 14, 'Счет-Б')
.head 8 -  Call SalTblCreateColumn(t9, 5, 3.914, 14, 'Наименование клиента Б')
.head 8 -  Call SalTblCreateColumn(t9, 6, 1.814, 16, 'Сумма')
.head 8 -  Call SalTblCreateColumn(t9, 7, 1.129, 10, 'Номер док.')
.head 8 -  Call SalTblCreateColumn(t9, 8, 4.114, 40, 'Причина возврата')
.head 8 -  Call SalTblCreateColumn(t9, 9, 1.314, 12, 'Имя файла A')
.head 8 -  Call SalTblCreateColumn(t9, 10, 10.6, 160, 'Назначение платежа')
.head 8 -  ! чтение файла
.head 8 -  Set sOldNamFil = sNamFil
.head 8 -  Set sNamFil = ArchName(sNamFil, sPOD, Right(sNamFil, 12))
.head 8 -  Call SalFileOpen(hFile, sNamFil, OF_Read)
.head 8 -  Call SalFileRead(hFile, sBuffer, 32)
.head 8 +  While SalFileRead(hFile, sBuffer, 336) = 336
.head 9 -  Set nNewRow = SalTblInsertRow(t9, TBL_MaxRow)
.head 9 -  Call SalTblSetFocusRow(t9, nNewRow)
.head 9 -  Call SalTblSetColumnText(t9, 1, SalStrTrimX(Left(sBuffer, 9)))
.head 9 -  Call SalTblSetColumnText(t9, 2, SalStrTrimX(SalStrMidX(sBuffer, 9, 14)))
.head 9 -  Call SalTblSetColumnText(t9, 3, SalStrTrimX(SalStrMidX(sBuffer, 23, 9)))
.head 9 -  Call SalTblSetColumnText(t9, 4, SalStrTrimX(SalStrMidX(sBuffer, 32, 14)))
.head 9 -  Call SalTblSetColumnText(t9, 5, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 46, 38))))
.head 9 -  Call SalTblSetColumnText(t9, 6, PadL(SalStrTrimX(SalNumberToStrX(Val(
     SalStrTrimX(SalStrMidX(sBuffer, 84, 16)))/100, 2)), 17))
.head 9 -  Call SalTblSetColumnText(t9, 7, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 100, 10))))
.head 9 -  Call SalTblSetColumnText(t9, 8, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 278, 40))))
.head 9 -  Call SalTblSetColumnText(t9, 9, SalStrMidX(sBuffer, 318, 12))
.head 9 -  Call SalTblSetColumnText(t9, 10, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 110, 160))))
.head 8 -  Call SalFileClose(hFile)
.head 8 +  If sOldNamFil != sNamFil
.head 9 -  Call VisFileDelete(sNamFil)
.head 7 +  If rbDO
.head 8 -  Call SalTblCreateColumn(t9, 1, .717, 9, 'МФО-А')
.head 8 -  Call SalTblCreateColumn(t9, 2, 1.517, 14, 'Счет-А')
.head 8 -  Call SalTblCreateColumn(t9, 3, .717, 9, 'МФО-Б')
.head 8 -  Call SalTblCreateColumn(t9, 4, 1.517, 14, 'Счет-Б')
.head 8 -  Call SalTblCreateColumn(t9, 5, 3.914, 14, 'Наименование клиента Б')
.head 8 -  Call SalTblCreateColumn(t9, 6, 1.814, 16, 'Сумма')
.head 8 -  Call SalTblCreateColumn(t9, 7, 1.129, 10, 'Номер док.')
.head 8 -  Call SalTblCreateColumn(t9, 8, 1.314, 12, 'Имя файла A')
.head 8 -  Call SalTblCreateColumn(t9, 9, 10.6, 160, 'Назначение платежа')
.head 8 -  ! чтение файла
.head 8 -  Set sOldNamFil = sNamFil
.head 8 -  Set sNamFil = ArchName(sNamFil, sPOD, Right(sNamFil, 12))
.head 8 -  Call SalFileOpen(hFile, sNamFil, OF_Read)
.head 8 -  Call SalFileRead(hFile, sBuffer, 32)
.head 8 +  While SalFileRead(hFile, sBuffer, 296) = 296
.head 9 -  Set nNewRow = SalTblInsertRow(t9, TBL_MaxRow)
.head 9 -  Call SalTblSetFocusRow(t9, nNewRow)
.head 9 -  Call SalTblSetColumnText(t9, 1, SalStrTrimX(Left(sBuffer, 9)))
.head 9 -  Call SalTblSetColumnText(t9, 2, SalStrTrimX(SalStrMidX(sBuffer, 9, 14)))
.head 9 -  Call SalTblSetColumnText(t9, 3, SalStrTrimX(SalStrMidX(sBuffer, 23, 9)))
.head 9 -  Call SalTblSetColumnText(t9, 4, SalStrTrimX(SalStrMidX(sBuffer, 32, 14)))
.head 9 -  Call SalTblSetColumnText(t9, 5, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 46, 38))))
.head 9 -  Call SalTblSetColumnText(t9, 6, PadL(SalStrTrimX(SalNumberToStrX(Val(
     SalStrTrimX(SalStrMidX(sBuffer, 84, 16)))/100, 2)), 17))
.head 9 -  Call SalTblSetColumnText(t9, 7, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 100, 10))))
.head 9 -  Call SalTblSetColumnText(t9, 8, SalStrMidX(sBuffer, 278, 12))
.head 9 -  Call SalTblSetColumnText(t9, 9, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 110, 160))))
.head 8 -  Call SalFileClose(hFile)
.head 8 +  If sOldNamFil != sNamFil
.head 9 -  Call VisFileDelete(sNamFil)
.head 7 +  If rbKV
.head 8 -  Call SalTblCreateColumn(t9, 1, .9, 3, 'Код вал')
.head 8 -  Call SalTblCreateColumn(t9, 2, .429, 3, 'Сим')
.head 8 -  Call SalTblCreateColumn(t9, 3, 1.614, 15, 'Наименование')
.head 8 -  Call SalTblCreateColumn(t9, 4, 1.1, 6, 'Этал.сумма')
.head 8 -  Call SalTblCreateColumn(t9, 5, 1.114, 8, 'Дата курса')
.head 8 -  Call SalTblCreateColumn(t9, 6, .929, 12, 'Офф.курс')
.head 8 -  Call SalTblCreateColumn(t9, 7, 1.271, 12, 'Курс покупки')
.head 8 -  Call SalTblCreateColumn(t9, 8, 1.271, 12, 'Курс продажи')
.head 8 -  Call SalTblCreateColumn(t9, 9, 1.586, 8, 'Дата пред.курса')
.head 8 -  Call SalTblCreateColumn(t9, 10, 1.4, 12, 'Пред.офф.курс')
.head 8 -  Call SalTblCreateColumn(t9, 11, 1.386, 12, 'Пред.курс пок')
.head 8 -  Call SalTblCreateColumn(t9, 12, 1.486, 12, 'Пред.курс прод')
.head 8 -  ! чтение файла
.head 8 -  Set sOldNamFil = sNamFil
.head 8 -  Set sNamFil = ArchName(sNamFil, sPOD, Right(sNamFil, 12))
.head 8 -  Call SalFileOpen(hFile, sNamFil, OF_Read)
.head 8 -  Call SalFileRead(hFile, sBuffer, 32)
.head 8 +  While SalFileRead(hFile, sBuffer, 117) = 117
.head 9 -  Set nNewRow = SalTblInsertRow(t9, TBL_MaxRow)
.head 9 -  Call SalTblSetFocusRow(t9, nNewRow)
.head 9 -  Call SalTblSetColumnText(t9, 1, PadL(Right(Str(Val(SalStrTrimX(
     Left(sBuffer, 3)))+1000), 3), 5))
.head 9 -  Call SalTblSetColumnText(t9, 2, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 3, 3))))
.head 9 -  Call SalTblSetColumnText(t9, 3, StrDosToWinX(SalStrTrimX(
     SalStrMidX(sBuffer, 6, 15))))
.head 9 -  Call SalTblSetColumnText(t9, 4, PadL(SalStrTrimX(Str(Val(SalStrTrimX(
     SalStrMidX(sBuffer, 21, 6))))), 7))
.head 9 -  Call SalTblSetColumnText(t9, 5, SalStrMidX(sBuffer, 33, 2) || '/' ||
     SalStrMidX(sBuffer, 31, 2) || '/' || SalStrMidX(sBuffer, 27, 4))
.head 9 -  Call SalTblSetColumnText(t9, 6, PadL(SalStrTrimX(SalNumberToStrX(Val(
     SalStrTrimX(SalStrMidX(sBuffer, 43, 12))), 4)), 8))
.head 9 -  Call SalTblSetColumnText(t9, 7, PadL(SalStrTrimX(SalNumberToStrX(Val(
     SalStrTrimX(SalStrMidX(sBuffer, 67, 12))), 4)), 10))
.head 9 -  Call SalTblSetColumnText(t9, 8, PadL(SalStrTrimX(SalNumberToStrX(Val(
     SalStrTrimX(SalStrMidX(sBuffer, 79, 12))), 4)), 10))
.head 9 -  Call SalTblSetColumnText(t9, 9, PadL(SalStrMidX(sBuffer, 41, 2) || '/' ||
     SalStrMidX(sBuffer, 39, 2) || '/' || SalStrMidX(sBuffer, 35, 4), 12))
.head 9 -  Call SalTblSetColumnText(t9, 10, PadL(SalStrTrimX(SalNumberToStrX(Val(
     SalStrTrimX(SalStrMidX(sBuffer, 55, 12))), 4)), 10))
.head 9 -  Call SalTblSetColumnText(t9, 11, PadL(SalStrTrimX(SalNumberToStrX(Val(
     SalStrTrimX(SalStrMidX(sBuffer, 91, 12))), 4)), 10))
.head 9 -  Call SalTblSetColumnText(t9, 12, PadL(SalStrTrimX(SalNumberToStrX(Val(
     SalStrTrimX(SalStrMidX(sBuffer, 103, 12))), 4)), 11))
.head 8 -  Call SalFileClose(hFile)
.head 8 +  If sOldNamFil != sNamFil
.head 9 -  Call VisFileDelete(sNamFil)
.head 7 +  If rbIU
.head 8 -  Call SalTblCreateColumn(t9, 1, 3.914, 38, "Наименование банка")
.head 8 -  Call SalTblCreateColumn(t9, 2, .729, 9, "МФО")
.head 8 -  Call SalTblCreateColumn(t9, 3, .514, 4, "Код")
.head 8 -  Call SalTblCreateColumn(t9, 4, 4.371, 1,
     "Операция(D,I,U-удаление,вставка,обновление)")
.head 8 -  ! чтение файла
.head 8 -  Set sOldNamFil = sNamFil
.head 8 -  Set sNamFil = ArchName(sNamFil, sPOD, Right(sNamFil, 12))
.head 8 -  Call SalFileOpen(hFile, sNamFil, OF_Read)
.head 8 -  Call SalFileRead(hFile, sBuffer, 32)
.head 8 -  Set n1 = Val(SalStrMidX(sBuffer, 26, 4))
.head 8 -  Set n11 = 0
.head 8 +  While SalFileRead(hFile, sBuffer, 54) = 54 and  n11 < n1
.head 9 -  Set nNewRow = SalTblInsertRow(t9, TBL_MaxRow)
.head 9 -  Set n11 = n11 + 1
.head 9 -  Call SalTblSetFocusRow(t9, nNewRow)
.head 9 -  Call SalTblSetColumnText(t9, 1, StrDosToWinX(SalStrTrimX(Left(sBuffer, 38))))
.head 9 -  Call SalTblSetColumnText(t9, 2, SalStrTrimX(SalStrMidX(sBuffer, 38, 9)))
.head 9 -  Call SalTblSetColumnText(t9, 3, SalStrMidX(sBuffer, 47, 4))
.head 9 -  Set sTemp = SalStrMidX(sBuffer, 51, 1)
.head 9 -  Call SalTblSetColumnText(t9, 4, PadL(sTemp, IifN(sTemp='U', 14,
     IifN(sTemp='I', 12, 10))))
.head 8 -  Call SalFileClose(hFile)
.head 8 +  If sOldNamFil != sNamFil
.head 9 -  Call VisFileDelete(sNamFil)
.head 7 -  Call SalTblSetFocusRow(t9, 0)
.head 7 -  Call VisTblAutoSizeColumn(t9, hWndNULL)
.head 7 -  Call SalTblKillFocus(t9)
.head 7 -  Call SalSetFocus(lbDAT)
.head 5 +  On SAM_Create
.head 6 -  Call SalListSetSelect(lbDAT, 0)
.head 6 -  Call SalSendMsg(lbDAT, SAM_Click, 0, 0)
.head 3 +  ! Pushbutton: pbDAT
.winattr
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Выбрать
.head 4 -  Window Location and Size
.head 5 -  Left:   8.783"
.head 5 -  Top:    2.321"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.end
.head 4 -      Message Actions
.head 3 +  Child Table: t9
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   0.083"
.head 6 -  Top:    2.571"
.head 6 -  Width:  12.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 3.75"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Courier
.head 5 -  Font Size: 9
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Default
.head 5 -  Discardable? No
.head 4 -  Contents
.head 4 -  Functions
.head 4 -  Window Variables
.head 4 -  Message Actions
.head 3 -  Background Text: клиенты
.head 4 -  Resource Id: 52813
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   0.183"
.head 5 -  Top:    2.345"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Underline
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Background Text: даты
.head 4 -  Resource Id: 52814
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   7.683"
.head 5 -  Top:    2.345"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Underline
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Check Box: cb2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Включать АРХИВЫ
.head 4 -  Window Location and Size
.head 5 -  Left:   9.783"
.head 5 -  Top:    2.071"
.head 5 -  Width:  2.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Chartreuse
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If rbPD
.head 7 -  Call SalSendMsg(rbZE, SAM_Click, 0, 0)
.head 7 -  Call SalSendMsg(rbPD, SAM_Click, 0, 0)
.head 6 +  Else If rbKW
.head 7 -  Call SalSendMsg(rbZE, SAM_Click, 0, 0)
.head 7 -  Call SalSendMsg(rbKW, SAM_Click, 0, 0)
.head 6 +  Else If rbZW
.head 7 -  Call SalSendMsg(rbZE, SAM_Click, 0, 0)
.head 7 -  Call SalSendMsg(rbZW, SAM_Click, 0, 0)
.head 6 +  Else If rbLS
.head 7 -  Call SalSendMsg(rbZE, SAM_Click, 0, 0)
.head 7 -  Call SalSendMsg(rbLS, SAM_Click, 0, 0)
.head 6 +  Else If rbDW
.head 7 -  Call SalSendMsg(rbZE, SAM_Click, 0, 0)
.head 7 -  Call SalSendMsg(rbDW, SAM_Click, 0, 0)
.head 6 +  Else If rbDO
.head 7 -  Call SalSendMsg(rbZE, SAM_Click, 0, 0)
.head 7 -  Call SalSendMsg(rbDO, SAM_Click, 0, 0)
.head 6 +  Else If rbKV
.head 7 -  Call SalSendMsg(rbZE, SAM_Click, 0, 0)
.head 7 -  Call SalSendMsg(rbKV, SAM_Click, 0, 0)
.head 6 +  Else If rbIU
.head 7 -  Call SalSendMsg(rbZE, SAM_Click, 0, 0)
.head 7 -  Call SalSendMsg(rbIU, SAM_Click, 0, 0)
.head 3 -  Background Text: по датам
.head 4 -  Resource Id: 52815
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   10.083"
.head 5 -  Top:    2.262"
.head 5 -  Width:  0.833"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Chartreuse
.head 4 -  Background Color: Default
.head 2 +  Functions
.head 3 +  Function: ArchName
.head 4 -  Description: получить полное имя временного файла с путем, если информация находится в
АРХИВЕ БД
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: sFiNa
.head 5 -  String: sPPP
.head 5 -  String: sShort
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Long String: sLong
.head 5 -  Long String: s65534
.head 5 -  Boolean: bFL
.head 5 -  File Handle: fH
.head 5 -  Date/Time: dFileDate
.head 4 +  Actions
.head 5 +  If File(sFiNa)
.head 6 -  Return sFiNa
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute(hSql(), T("
     SELECT f.body,a.filedate
     INTO :sLong,:dFileDate
     FROM klp_files f, klp_arch a
     WHERE f.fn=a.fn and f.fn=:sShort and a.tip=:sPPP"))
.head 6 -  Call SqlFetchNext(hSql(), nFetchRes)
.head 6 -  ! Call SalStrUncompress(sLong) ! не работает, как надо
.head 6 -  Call VisFileOpen(fH, sTempPath || sShort, OF_Create)
.head 6 -  Set bFL = TRUE
.head 6 +  While bFL
.head 7 +  If Len(sLong) > 65534
.head 8 -  Set s65534 = Left(sLong, 65534)
.head 8 -  Set sLong = Subs(sLong, 65535, Len(sLong)-65534)
.head 8 -  Call VisFileWrite(fH, s65534, SalStrLength(s65534))
.head 7 +  Else
.head 8 +  If Len(sLong) = 0
.head 9 -  Break
.head 8 +  Else
.head 9 -  Set s65534 = sLong
.head 9 -  Set bFL = FALSE
.head 8 -  Call VisFileWrite(fH, s65534, SalStrLength(s65534))
.head 6 -  Call VisFileClose(fH)
.head 6 -  Call SalFileSetDateTime(sTempPath || sShort, dFileDate)
.head 6 -  Return sTempPath || sShort
.head 2 +  Window Parameters
.head 3 -  Window Handle: hPb
.head 2 +  Window Variables
.head 3 -  Number: nNumFiles
.head 3 -  Number: nNumFilesArch
.head 3 -  String: smFiles[*]
.head 3 -  String: sDay
.head 3 -  String: sDayL
.head 3 -  String: sMonth
.head 3 -  String: sMonthL
.head 3 -  String: sYear
.head 3 -  String: sPOD
.head 3 -  String: sPRE
.head 3 -  String: sDMY
.head 3 -  Date/Time: dDMY
.head 3 -  String: sNamFil
.head 3 -  String: sOldNamFil
.head 3 -  String: sBuffer
.head 3 -  Number: nDDR
.head 3 -  File Handle: hFile
.head 3 -  Number: nNewRow
.head 3 -  String: sTemp
.head 3 -  Number: n1
.head 3 -  Number: n11
.head 3 -  String: sDeviceDef
.head 3 -  String: sDriverDef
.head 3 -  String: sPortDef
.head 3 -  Number: nI10
.head 3 -  Number: nIa
.head 3 -  Number: nI
.head 3 -  String: sFileArch
.head 3 -  Date/Time: dtDateTimeNNN
.head 3 -  !
.head 3 -  String: sVerLook
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow(hWndForm)
.head 4 -  ! Call SetWindowFullSize(hWndForm)
.head 4 -  Set sPOD = 'ADR'
.head 4 -  Set sPRE = 'A'
.head 4 -  Set nI = 0
.head 4 -  Set nLenArr = LenArray(smSAB)
.head 4 -  Call SalListClear(lbAR)
.head 4 +  While nI <= nLenArr
.head 5 -  Call SalListAdd(lbAR, smSAB[nI] || ' ' || smNMK[nI])
.head 5 -  Set nI = nI + 1
.head 3 +  On SAM_Destroy
.head 4 -  Call SalEnableWindow(hPb)
.head 4 -  Call menu12.Message(TRUE, 'Выход из работы с архивом.', FALSE, 0)
.head 1 +  Form Window: F8
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Просмотр почтовых ящмков клиентов
.head 2 -  Icon File:
.head 2 -  Accesories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Automatically Created at Runtime? No
.head 3 -  Initial State: Normal
.head 3 -  Maximizable? Yes
.head 3 -  Minimizable? Yes
.head 3 -  System Menu? Yes
.head 3 -  Resizable? Yes
.head 3 -  Window Location and Size
.head 4 -  Left:   -1.138"
.head 4 -  Top:    0.177"
.head 4 -  Width:  13.283"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 6.714"
.head 4 -  Height Editable? Yes
.head 3 -  Form Size
.head 4 -  Width:  Default
.head 4 -  Height: Default
.head 4 -  Number of Pages: Dynamic
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description: просмотр почтовых ящиков клиентов
.head 2 -  Named Menus
.head 2 -  Menu
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  List Box: lbSABj
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left:   -0.017"
.head 5 -  Top:    0.155"
.head 5 -  Width:  5.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 5.786"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Multiple selection? No
.head 4 -  Sorted? Yes
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Courier
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Horizontal Scroll? No
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalListSetSelect(lbSABj, 0)
.head 6 -  Call SalSendMsg(lbSABj, SAM_Click, 0, 0)
.head 5 +  On SAM_Click
.head 6 -  Set nIndex = SalListQuerySelection(lbSABj)
.head 6 +  If SalListQueryCount(lbSABj) > 0 and nIndex >= 0
.head 7 -  Set sSAB = Left(SalListQueryTextX(lbSABj, nIndex), 4)
.head 7 -  Set nIN = VisDosEnumFileInfo(sDiskKata || sSAB || '\\IN\\*.*', FA_Standard, sFilesI,
    nSizesI, dtDateTimesI, nAttributesI)
.head 7 -  Call SalListClear(lbIN)
.head 7 -  Set nOUT = VisDosEnumFileInfo(sDiskKata || sSAB || '\\OUT\\*.*', FA_Standard,
    sFilesO, nSizesO, dtDateTimesO, nAttributesO)
.head 7 -  Call SalListClear(lbOUT)
.head 7 +  If nIN > 0
.head 8 -  Set nI = 0
.head 8 +  While nI < nIN
.head 9 -  Call SalListAdd(lbIN, '    ' || PadR(sFilesI[nI], 12) || PadL(
     Str(nSizesI[nI]), 8) || '    ' || SalFmtFormatDateTime(dtDateTimesI[nI],
     'dd/MM/yyyy    hhhh:mm:ss'))
.head 9 -  Set nI = nI + 1
.head 7 +  If nOUT > 0
.head 8 -  Set nI = 0
.head 8 +  While nI < nOUT
.head 9 -  Call SalListAdd(lbOUT, '    ' || PadR(sFilesO[nI], 12) || PadL(
     Str(nSizesO[nI]), 8) || '    ' || SalFmtFormatDateTime(dtDateTimesO[nI],
     'dd/MM/yyyy    hhhh:mm:ss'))
.head 9 -  Set nI = nI + 1
.head 6 +  Else
.head 7 -  ! Call SalEndDialog(F8, 1)
.head 7 -  Call SalDestroyWindow(F8)
.head 3 +  Pushbutton: pbFind2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Поиск
.head 4 -  Window Location and Size
.head 5 -  Left:   0.183"
.head 5 -  Top:    5.988"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F7
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalModalDialog(Find, hWndForm) = 0
.head 7 -  Set nISABj = 0
.head 7 +  While nISABj < SalListQueryCount(lbSABj)
.head 8 +  If SalStrScan(SalStrUpperX(SalListQueryTextX(lbSABj, nISABj)),
   SalStrUpperX(sFrag)) > 0
.head 9 -  Call SalListSetSelect(lbSABj, nISABj)
.head 9 -  ! Call SalListSetMultiSelect(lbSABj, nISABj, TRUE)
.head 9 -  Call SalSetFocus(lbSABj)
.head 9 -  Call SalSendMsg(lbSABj, SAM_Click, 0, 0)
.head 9 -  Break
.head 8 -  Set nISABj = nISABj + 1
.head 3 -  Background Text: Клиенты
.head 4 -  Resource Id: 52816
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    0.012"
.head 5 -  Width:  5.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: None
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Pushbutton: pbKon
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Выход
.head 4 -  Window Location and Size
.head 5 -  Left:   3.783"
.head 5 -  Top:    5.988"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Esc
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  ! Call SalEndDialog(F8, 0)
.head 6 -  Call SalDestroyWindow(F8)
.head 3 +  List Box: lbIN
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left:   5.083"
.head 5 -  Top:    0.155"
.head 5 -  Width:  7.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 2.738"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Multiple selection? No
.head 4 -  Sorted? Yes
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Courier
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Green
.head 4 -  Horizontal Scroll? No
.head 4 -  List Initialization
.head 4 -  Message Actions
.head 3 +  List Box: lbOUT
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left:   5.083"
.head 5 -  Top:    3.155"
.head 5 -  Width:  7.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 2.738"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Multiple selection? No
.head 4 -  Sorted? Yes
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Courier
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Maize
.head 4 -  Horizontal Scroll? No
.head 4 -  List Initialization
.head 4 -  Message Actions
.head 3 -  Background Text: IN (от клиента)
.head 4 -  Resource Id: 52817
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   5.183"
.head 5 -  Top:    0.012"
.head 5 -  Width:  7.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Background Text: OUT (клиенту)
.head 4 -  Resource Id: 52818
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   5.183"
.head 5 -  Top:    3.012"
.head 5 -  Width:  7.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  Window Handle: hPb
.head 2 +  Window Variables
.head 3 -  String: sFilesI[*]
.head 3 -  Number: nSizesI[*]
.head 3 -  Date/Time: dtDateTimesI[*]
.head 3 -  Number: nAttributesI[*]
.head 3 -  String: sFilesO[*]
.head 3 -  Number: nSizesO[*]
.head 3 -  Date/Time: dtDateTimesO[*]
.head 3 -  Number: nAttributesO[*]
.head 3 -  Number: nIN
.head 3 -  Number: nOUT
.head 3 -  String: sSAB
.head 3 -  Number: nI
.head 3 -  Number: nISABj
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow(hWndForm)
.head 4 -  ! Call SetWindowFullSize(hWndForm)
.head 4 -  Set nI = 0
.head 4 -  Set nLenArr = LenArray(smSAB)
.head 4 +  While nI <= nLenArr
.head 5 +  If VisDosEnumFiles(sDiskKata || smSAB[nI] || '\\IN\\*.*', FA_Standard, sFilesI) +
   VisDosEnumFiles(sDiskKata || smSAB[nI] || '\\OUT\\*.*', FA_Standard, sFilesI)
.head 6 -  Call SalListAdd(lbSABj, smSAB[nI] || ' ' || smNMK[nI])
.head 5 -  Set nI = nI + 1
.head 3 +  On SAM_Destroy
.head 4 -  Call SalEnableWindow(hPb)
.head 4 -  Call menu12.Message(TRUE, 'Выход из просмотра п/я клиентов.', FALSE, 0)
.head 1 +  Dialog Box: DuplicateFileName
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Файл поступил повторно
.head 2 -  Accesories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Window Location and Size
.head 4 -  Left:   1.85"
.head 4 -  Top:    1.031"
.head 4 -  Width:  4.967"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 2.536"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Multiline Field: ml1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? No
.head 5 -  Window Location and Size
.head 6 -  Left:   0.183"
.head 6 -  Top:    0.071"
.head 6 -  Width:  4.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.833"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: 12
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Yellow
.head 5 -  Background Color: Red
.head 4 +  Message Actions
.head 5 +  On SAM_SetFocus
.head 6 -  Call SalSetFocus(pb1)
.head 3 +  Pushbutton: pb0
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Принять файл в обработку
.head 4 -  Window Location and Size
.head 5 -  Left:   0.183"
.head 5 -  Top:    0.988"
.head 5 -  Width:  4.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Enter
.head 4 -  Font Name: Default
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalEndDialog(hWndForm, 0)
.head 3 +  Pushbutton: pb1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Отложить обработку файла
.head 4 -  Window Location and Size
.head 5 -  Left:   0.183"
.head 5 -  Top:    1.405"
.head 5 -  Width:  4.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Esc
.head 4 -  Font Name: Default
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalEndDialog(hWndForm, 1)
.head 3 +  Pushbutton: pb2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Переместить файл в NOT
.head 4 -  Window Location and Size
.head 5 -  Left:   0.183"
.head 5 -  Top:    1.821"
.head 5 -  Width:  4.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalEndDialog(hWndForm, 2)
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  String: sFile
.head 2 +  Window Variables
.head 3 -  String: sTimeWaitDupl
.head 3 -  Number: nTimeMiliseconds
.head 3 -  Number: n1
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow(hWndForm)
.head 4 -  Call SalWaitCursor(FALSE)
.head 4 -  Call SalUseRegistry(FALSE, '')
.head 4 -  Call SalGetProfileString("ElektroKlients", "WaitDuplicate", '7', sTimeWaitDupl,
     GetIniFileName())
.head 4 -  Set nTimeMiliseconds = Min(Max(1, Val(sTimeWaitDupl)), 65)*1000
.head 4 -  Call SalTimerSet(hWndForm, 1, nTimeMiliseconds)
.head 4 +  While n1 <= nTimeMiliseconds/100
.head 5 -  Call SalMessageBeep(-1)
.head 5 -  Set n1 = n1 + 1
.head 4 -  Set ml1 = 'ВНИМАНИЕ ! Файл ' || sFile || ' поступил повторно. Что делать ?'
.head 3 +  On SAM_Timer
.head 4 -  Call SalEndDialog(hWndForm, 1)
.head 3 +  On SAM_Destroy
.head 4 -  Call SalTimerKill(hWndForm, 1)
.head 4 -  Call SalWaitCursor(FALSE)
.head 1 +  Form Window: menu12
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Работа с "электронными" клиентами (технолог)
.head 2 -  Icon File:
.head 2 -  Accesories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Automatically Created at Runtime? No
.head 3 -  Initial State: Normal
.head 3 -  Maximizable? Yes
.head 3 -  Minimizable? Yes
.head 3 -  System Menu? Yes
.head 3 -  Resizable? Yes
.head 3 -  Window Location and Size
.head 4 -  Left:   0.375"
.head 4 -  Top:    0.083"
.head 4 -  Width:  16.217"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 6.69"
.head 4 -  Height Editable? Yes
.head 3 -  Form Size
.head 4 -  Width:  Default
.head 4 -  Height: Default
.head 4 -  Number of Pages: Dynamic
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description:
.head 2 -  Named Menus
.head 2 -  Menu
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Pushbutton: pb1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: F1. АВТОМАТ-"вертушка" (F3+F4)
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    -0.012"
.head 5 -  Width:  3.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.239"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F1
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalDisableWindow(pb1)
.head 6 -  Call CopyArch()
.head 6 +  While TRUE
.head 7 -  Call SetBankDate()
.head 7 -  Call ObrInfoA()
.head 7 -  Call ObrInfoQ()
.head 7 -  Call OtborU()
.head 7 -  Call OtborKV()
.head 7 -  Call OtborOO()
.head 7 -  Call OtborWW()
.head 7 -  Call OtborWWt()
.head 7 -  Call OtborLS()
.head 7 -  ! Call OtborND()
.head 7 -  Call Message(TRUE, 'Ожидание обработки файлов КЛИЕНТ-БАНК', FALSE, 0)
.head 7 +  If MessageNoWait('Ожидание обработки файлов КЛИЕНТ-БАНК. Выход - ESC',
   'ВЕРТУШКА КЛИЕНТ-БАНК', GetWaitPeriod(), 0)
.head 8 -  Break
.head 6 -  Call SalEnableWindow(pb1)
.head 6 -  Call SalSetFocus(pb1)
.head 3 +  Pushbutton: pb2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: F2.  Весь цикл один раз   (F3+F4)
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    0.238"
.head 5 -  Width:  3.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.238"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F2
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SetBankDate()
.head 6 -  Call SalDisableWindow(pb2)
.head 6 -  Call ObrInfoA()
.head 6 -  Call ObrInfoQ()
.head 6 -  Call OtborU()
.head 6 -  Call OtborKV()
.head 6 -  Call OtborOO()
.head 6 -  Call OtborWW()
.head 6 -  Call OtborWWt()
.head 6 -  Call OtborLS()
.head 6 -  ! Call OtborND()
.head 6 -  Call Message(FALSE, '', FALSE, 0)
.head 6 -  Call SalEnableWindow(pb2)
.head 6 -  Call SalSetFocus(pb2)
.head 3 +  Pushbutton: pb3
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: F3. Обработка информации
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    0.488"
.head 5 -  Width:  3.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.238"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F3
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Blue
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SetBankDate()
.head 6 -  Call SalDisableWindow(pb3)
.head 6 -  Call ObrInfoA()
.head 6 -  Call ObrInfoQ()
.head 6 -  Call OtborU()
.head 6 -  Call OtborKV()
.head 6 -  Call OtborOO()
.head 6 -  Call OtborWW()
.head 6 -  Call OtborWWt()
.head 6 -  Call SalEnableWindow(pb3)
.head 6 -  Call SalSetFocus(pb3)
.head 3 +  Pushbutton: pb4
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: F4. Отбор выписок
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    0.738"
.head 5 -  Width:  3.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.238"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F4
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Blue
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SetBankDate()
.head 6 -  Call SalDisableWindow(pb4)
.head 6 -  Call OtborLS()
.head 6 -  ! Call OtborKV()
.head 6 -  Call Message(FALSE, '', FALSE, 0)
.head 6 -  Call SalEnableWindow(pb4)
.head 6 -  Call SalSetFocus(pb4)
.head 3 +  Pushbutton: pb6
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: F6. Отбор выписок по выбору
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    0.988"
.head 5 -  Width:  3.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.238"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F6
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Dark Green
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SetBankDate()
.head 6 -  Call SalDisableWindow(pb6)
.head 6 -  Set nI = 0
.head 6 -  Set nLenArr = LenArray(smSAB)
.head 6 -  Call SalShowWindow(l1)
.head 6 -  Call SalShowWindow(pbLB)
.head 6 -  Call SalShowWindow(pbAll)
.head 6 -  Call SalShowWindow(pbFind)
.head 6 -  Call SalShowWindow(pbOtkaz)
.head 6 -  Call SalListClear(l1)
.head 6 +  While nI <= nLenArr
.head 7 -  Call SalListAdd(l1, smSAB[nI] || ' ' || smNMK[nI])
.head 7 -  Set nI = nI + 1
.head 6 -  Call SalSetFocus(l1)
.head 6 -  Call SalEnableWindow(pb6)
.head 3 +  Pushbutton: pb8
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: F8. Просмотр п/я клиентов
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    1.238"
.head 5 -  Width:  3.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.238"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F8
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Burgundy
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SetBankDate()
.head 6 -  Call SalDisableWindow(pb8)
.head 6 -  Call SalCreateWindow(F8, hWndForm, pb8)
.head 3 +  Pushbutton: pb9
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: F9. Удаление инф. из АРХ. таблиц
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    1.488"
.head 5 -  Width:  3.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.238"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F9
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Magenta
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalUseRegistry(FALSE, '')
.head 6 -  Call SalGetProfileString('ElektroKlients', 'DelArchiv', '61', sDelArchiv,
     GetIniFileName())
.head 6 -  Call SetBankDate()
.head 6 -  Call SalDisableWindow(pb9)
.head 6 -  Call VisMessageSetBkgdColor(COLOR_Salmon)
.head 6 -  Set hBtns[0] = hBtnYes | MBF_DefButton
.head 6 -  Set hBtns[1] = hBtnNo
.head 6 -  ! Set dDateDel = GetBankDateMom() - 61
.head 6 -  Set dDateDel = GetBankDateMom() - Val(sDelArchiv)
.head 6 +  If VisMessageBox('Удалить информацию из АРХИВНЫХ таблиц, имеющую дату меньше ' ||
   SalFmtFormatDateTime(dDateDel, 'dd-MM-yyyy') || ' ?', 'ЗАПРОС', MBF_IconQuestion,
   hBtns, 2) = 1 ! ID_Yes
.head 7 -  Call SalWaitCursor(TRUE)
.head 7 +  If SqlPrepareAndExecute(hSql(), T("
   DELETE
   FROM klp_files
   WHERE fn IN (SELECT fn
                FROM klp_arch
                WHERE filedate<:dDateDel)"))   
.head 8 -  Call SqlCommit(hSql())
.head 8 -  Call SalWaitCursor(FALSE)
.head 8 -  Call MessageNoWait('Удалена информация из АРХИВНЫХ таблиц, имеющая дату меньше '
     || SalFmtFormatDateTime(dDateDel, 'dd-MM-yyyy') || '.', 'СООБЩЕНИЕ', 17, 0)
.head 7 +  Else
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Call SalWaitCursor(FALSE)
.head 8 -  Call MessageNoWait('Ошибка при удалении информации.', 'ВНИМАНИЕ', 17, 1)
.head 6 -  Call SalEnableWindow(pb9)
.head 6 -  Call SalSetFocus(pb9)
.head 3 +  Pushbutton: pb10
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: F10. Работа с АРХИВОМ
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    1.738"
.head 5 -  Width:  3.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.238"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F10
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Burgundy
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SetBankDate()
.head 6 -  Call SalDisableWindow(pb10)
.head 6 -  Call SalCreateWindow(F10, hWndForm, pb10)
.head 3 +  Pushbutton: pbEsc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: ESC. ВЫХОД
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    1.988"
.head 5 -  Width:  3.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.238"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Esc
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Yellow
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalMessageBeep(-1)
.head 6 +  If SalMessageBox("Вы намерены выйти из программы ? ", "Внимание !", MB_YesNo) = IDYES
.head 7 -  Call SalQuit()
.head 6 +  Else
.head 7 -  Return FALSE
.head 3 +  Multiline Field: ml1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 258
.head 5 -  String Type: Long String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? No
.head 5 -  Window Location and Size
.head 6 -  Left:   3.783"
.head 6 -  Top:    2.571"
.head 6 -  Width:  2.7"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.917"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Black
.head 5 -  Background Color: Sky
.head 4 +  Message Actions
.head 5 +  On SAM_SetFocus
.head 6 -  Call SalSetFocus(pb1)
.head 3 +  List Box: l1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    2.238"
.head 5 -  Width:  3.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 3.5"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Multiple selection? Yes
.head 4 -  Sorted? Yes
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Horizontal Scroll? No
.head 4 -  List Initialization
.head 4 -  Message Actions
.head 3 +  Pushbutton: pbOtkaz
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Отказ
.head 4 -  Window Location and Size
.head 5 -  Left:   0.067"
.head 5 -  Top:    5.75"
.head 5 -  Width:  0.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalHideWindow(l1)
.head 6 -  Call SalHideWindow(pbLB)
.head 6 -  Call SalHideWindow(pbAll)
.head 6 -  Call SalHideWindow(pbFind)
.head 6 -  Call SalHideWindow(pbOtkaz)
.head 6 -  Call SalHideWindow(cc1)
.head 6 -  Call SalHideWindow(pbNoDate)
.head 6 -  Call SalHideWindow(pbRun)
.head 6 -  Call Message(FALSE, '', FALSE, 0)
.head 6 -  Call SalSetFocus(pb6)
.head 3 +  Pushbutton: pbAll
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Все
.head 4 -  Window Location and Size
.head 5 -  Left:   0.967"
.head 5 -  Top:    5.75"
.head 5 -  Width:  0.617"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SetBankDate()
.head 6 -  Set nI = 0
.head 6 +  While nI <= LenArray(smSAB)
.head 7 -  Call SalListSetMultiSelect(l1, nI, TRUE)
.head 7 -  Set nI = nI +1
.head 6 -  Call SalSetFocus(pbLB)
.head 3 +  Pushbutton: pbFind
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Поиск
.head 4 -  Window Location and Size
.head 5 -  Left:   1.667"
.head 5 -  Top:    5.75"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SetBankDate()
.head 6 +  If SalModalDialog(Find, hWndForm) = 0
.head 7 -  Set nIl1 = 0
.head 7 +  While nIl1 < SalListQueryCount(l1)
.head 8 +  If SalStrScan(SalStrUpperX(SalListQueryTextX(l1, nIl1)), SalStrUpperX(sFrag)) > 0
.head 9 -  ! Call SalListSetSelect(l1, nIl1)
.head 9 -  Call SalListSetMultiSelect(l1, nIl1, TRUE)
.head 9 -  Call SalSetFocus(l1)
.head 9 -  Break
.head 8 -  Set nIl1 = nIl1 + 1
.head 3 +  Pushbutton: pbLB
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Выбор
.head 4 -  Window Location and Size
.head 5 -  Left:   2.667"
.head 5 -  Top:    5.75"
.head 5 -  Width:  1.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SetBankDate()
.head 6 +  If SalListQueryMultiCount(l1) > 0
.head 7 -  Call SalWaitCursor(TRUE)
.head 7 -  Call Message(FALSE, 'Определение дат возможного выбора информации ...', FALSE, 0)
.head 7 -  Call cc1.ClearSpecials()
.head 7 -  Call SalListGetMultiSelect(l1, nArray)
.head 7 -  Set nI = 0
.head 7 -  Set nII = 0
.head 7 -  Call SalArraySetUpperBound(sSelectSAB, 1, -1)
.head 7 -  Call SalArraySetUpperBound(sSelectNAIM, 1, -1)
.head 7 +  While nI <= LenArrayN(nArray)
.head 8 -  Set sSelectSAB[nII] = SalStrUpperX(Left(SalListQueryTextX(l1, nArray[nI]), 4))
.head 8 -  Set sSelectNAIM[nII] = SalStrMidX(SalListQueryTextX(l1, nArray[nI]), 5, 38)
.head 8 -  Set nI = nI + 1
.head 8 -  Set nII = nII + 1
.head 7 -  Set sSqlSAB = '('
.head 7 -  Set nI = 0
.head 7 +  While nI <= LenArray(sSelectSAB)
.head 8 -  Set sSqlSAB = sSqlSAB || "c.sab='" || sSelectSAB[nI] ||
    IifS(nI=LenArray(sSelectSAB), "')", "' or ")
.head 8 -  Set nI = nI + 1
.head 7 -  Call SalShowWindow(pbNoDate)
.head 7 -  Call SalShowWindow(pbRun)
.head 7 -  Call SalShowWindow(cc1)
.head 7 -  Call SalSetFocus(cc1)
.head 7 -  Call GetMonthArray(smMonth)
.head 7 -  Call GetWeekDayArray(smWeek)
.head 7 -  Call cc1.SetMonthText(smMonth)
.head 7 -  Call cc1.SetWeekDayText(smWeek)
.head 7 +  If SqlPrepareAndExecute(hSql(), T("
   SELECT DISTINCT o.fdat
   INTO :dSelect
   FROM opldok O, accounts A, customer C, cust_acc B
   WHERE o.acc=a.acc and a.acc=b.acc and b.rnk=c.rnk and " || sSqlSAB || " and
         c.stmt=5 and o.sos=5"))
.head 8 -  Set nI = 0
.head 8 -  Call cc1.SpecialDate(SPECIAL_Weekly, DATETIME_Null, DAY_Sunday, SEQ_Unset,
     COLOR_Black, COLOR_Gray, TRUE)
.head 8 -  Call cc1.SpecialDate(SPECIAL_Weekly, DATETIME_Null, DAY_Monday, SEQ_Unset,
     COLOR_Black, COLOR_Gray, TRUE)
.head 8 -  Call cc1.SpecialDate(SPECIAL_Weekly, DATETIME_Null, DAY_Tuesday, SEQ_Unset,
     COLOR_Black, COLOR_Gray, TRUE)
.head 8 -  Call cc1.SpecialDate(SPECIAL_Weekly, DATETIME_Null, DAY_Wednesday, SEQ_Unset,
     COLOR_Black, COLOR_Gray, TRUE)
.head 8 -  Call cc1.SpecialDate(SPECIAL_Weekly, DATETIME_Null, DAY_Thursday, SEQ_Unset,
     COLOR_Black, COLOR_Gray, TRUE)
.head 8 -  Call cc1.SpecialDate(SPECIAL_Weekly, DATETIME_Null, DAY_Friday, SEQ_Unset,
     COLOR_Black, COLOR_Gray, TRUE)
.head 8 -  Call cc1.SpecialDate(SPECIAL_Weekly, DATETIME_Null, DAY_Saturday, SEQ_Unset,
     COLOR_Black, COLOR_Gray, TRUE)
.head 8 +  While SqlFetchNext(hSql(), nFetchRes)
.head 9 -  Call cc1.SpecialDate(SPECIAL_OneTime, dSelect, DAY_Unset, SEQ_Unset, COLOR_Blue,
     COLOR_Cyan, TRUE)
.head 9 -  Set nI = nI + 1
.head 8 +  If nI = 0
.head 9 -  Call Message(TRUE, 'Нет информации по выбранным клиентам для отбора выписок.',
     TRUE, COLOR_Magenta)
.head 9 -  Call SalHideWindow(cc1)
.head 9 -  Call SalHideWindow(pbNoDate)
.head 9 -  Call SalHideWindow(pbRun)
.head 9 -  Call SalSetFocus(l1)
.head 8 +  Else
.head 9 -  Call Message(FALSE, 'Для отбора выписок по выбранной дате (на ЖЕЛТОМ фоне) ' ||
     'нажмите кнопку ОТБОР.', FALSE, 0)
.head 9 -  Call cc1.SetFocusDate(dBankDate)
.head 7 +  Else
.head 8 -  Call Message(TRUE, 'Нет информации по выбранным клиентам для отбора выписок.',
     TRUE, COLOR_Magenta)
.head 8 -  Call SalHideWindow(cc1)
.head 8 -  Call SalHideWindow(pbNoDate)
.head 8 -  Call SalHideWindow(pbRun)
.head 8 -  Call SalSetFocus(l1)
.head 7 -  Call SalWaitCursor(FALSE)
.head 3 +  Custom Control: cc1
.data CLASSPROPSSIZE
0000: 2C00
.enddata
.data CLASSPROPS
0000: 56543A43616C656E 646172001B000100 0000000100010000 0200000001000000
0020: 0101000000000000 00000000
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cCalendar
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left:   3.783"
.head 6 -  Top:    3.655"
.head 6 -  Width:  2.7"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 2.0"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Etched Border? No
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: 8
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Black
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call cc1.WeekStartSet(2)
.head 5 +  On SAM_CustControlCmd
.head 6 -  Call cc1.GetFocusDate(dDada)
.head 6 +  If cc1.IsSpecialDate(SPECIAL_OneTime, dDada, DAY_Unset, SEQ_Unset)
.head 7 -  Call cc1.SpecialDate(SPECIAL_OneTime, dYes, DAY_Unset, SEQ_Unset, COLOR_Blue,
     COLOR_Cyan, TRUE)
.head 7 -  Set dYes = dDada
.head 7 -  Call cc1.SpecialDate(SPECIAL_OneTime, dYes, DAY_Unset, SEQ_Unset, COLOR_Blue,
     COLOR_Yellow, TRUE)
.head 3 +  Pushbutton: pbRun
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: ОТБОР
.head 4 -  Window Location and Size
.head 5 -  Left:   3.8"
.head 5 -  Top:    5.75"
.head 5 -  Width:  1.183"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F5
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Black
.head 4 -  Background Color: Maize
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SetBankDate()
.head 6 -  ! выполнить обработку для выбранной (ЖЕЛТОЙ) даты по всем
! клиентам (ЦИКЛ)
.head 6 -  Set sOpenDay = GetGlobalOption(CFG_BANKDAY())
.head 6 -  Set nI = 0
.head 6 +  While nI <= LenArray(sSelectSAB)
.head 7 -  Set sSAB = sSelectSAB[nI]
.head 7 -  Set nUid = GetUserId()
.head 7 -  ! Set nVal = GetBaseVal()
.head 7 -  Set nVal = NUMBER_Null
.head 7 +  If bKORP
.head 8 +  If SqlPrepareAndExecute(hSqlAux3(), T("
   SELECT count(*)
   INTO :nDiti
   FROM customer
   WHERE sab=:sSAB and stmt=5"))
.head 9 +  If not SqlFetchNext(hSqlAux3(), nFetchRes)
.head 10 -  Set nDiti = 0
.head 8 +  Else
.head 9 -  Set nDiti = 0
.head 8 -  Set bKORP1 = nDiti>0
.head 7 +  Else
.head 8 -  Set bKORP1 = FALSE
.head 7 +  If SqlPLSQLCommand(hSql(), "p_lici" || IifS(bKORP1, "u" ,"") ||
   "(nUid,dDada,sSAB,nVal,'%')")
.head 8 -  Call SqlCommit(hSql())
.head 8 -  Call SqlPrepareAndExecute(hSql(), T("
     SELECT count(*)
     FROM tmp_lici
     INTO :nKwo
     WHERE id=:nUid"))
.head 8 -  Call SqlFetchNext(hSql(), nFetchRes)
.head 8 -  Set bOk = nKwo>0
.head 7 +  Else
.head 8 -  Set bOk = FALSE
.head 7 +  If bOk and SqlPrepareAndExecute(hSql(), T("
   SELECT nlsa,nama,mfob,nlsb,namb,okpob,dk,s,vob,nd,isp,kv,daopl,iost,dapp,nazn,
          pond,sk,namefilea,Kodirowka,nazns,bis,naznk,d_rec,fn_a,ref
   INTO :sNLSA,:sNAMA,:sMFOB,:sNLSB,:sNAMB,:sOKPOB,:nDK,:nS,:nVOB,:sND,:nISP,:nKV,
        :dDAOP,:nIOST,:dDAPP,:sNAZN,:sPOND,:nSK,:sNameFileA,:nKodirowka,:sNazns,
        :nBis,:sNaznk,:sD_rec,:sFn_a,:nREF
   FROM tmp_lici
   WHERE id=:nUid
   ORDER BY nlsa,dk,s"))
.head 8 -  Set sMFOA = GetBankMfo()
.head 8 -  Set nIndex = 0
.head 8 -  Call SalArraySetUpperBound(smMFOA, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNLSA, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNAMA, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smMFOB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNLSB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNAMB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smOKPOB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmDK, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmS, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmVOB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smND, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmISP, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmKV, 1, -1)
.head 8 -  Call SalArraySetUpperBound(dmDAOP, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmIOST, 1, -1)
.head 8 -  Call SalArraySetUpperBound(dmDAPP, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNAZN, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smPOND, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmSK, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNameFileA, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmREF, 1, -1)
.head 8 +  While SqlFetchNext(hSql(), nFetchRes)
.head 9 -  Set smMFOA[nIndex] = sMFOA
.head 9 -  Set smNLSA[nIndex] = sNLSA
.head 9 -  Set smNAMA[nIndex] = IifS(nKodirowka=0, sNAMA, StrDosToWinX(sNAMA))
.head 9 -  Set smMFOB[nIndex] = sMFOB
.head 9 -  Set smNLSB[nIndex] = sNLSB
.head 9 -  Set smNAMB[nIndex] = IifS(nKodirowka=0, sNAMB, StrDosToWinX(sNAMB))
.head 9 -  Set smOKPOB[nIndex] = sOKPOB
.head 9 -  Set nmDK[nIndex] = nDK
.head 9 -  Set nmS[nIndex] = nS
.head 9 -  Set nmVOB[nIndex] = nVOB
.head 9 -  Set smND[nIndex] = IifS(nKodirowka=0, sND, StrDosToWinX(sND))
.head 9 -  Set nmISP[nIndex] = nISP
.head 9 -  Set nmKV[nIndex] = nKV
.head 9 -  Set dmDAOP[nIndex] = dDAOP
.head 9 -  Set nmIOST[nIndex] = nIOST
.head 9 -  Set dmDAPP[nIndex] = dDAPP
.head 9 -  Set smNAZN[nIndex] = IifS(nKodirowka=0, sNAZN, StrDosToWinX(sNAZN))
.head 9 +  If sNazns = '00'
.head 10 -  Set smNAZN[nIndex] = SalStrTrimX(GetValueStr("
    SELECT n_np
    FROM s_np
    WHERE k_np='" || sNaznk || "'"))
.head 9 +  Else If sNazns = '01' or sNazns = '11' or sNazns = '41'
.head 10 -  Set smNAZN[nIndex] = IifS(sNazns='01', SalStrTrimX(GetValueStr("
    SELECT n_np
    FROM s_np
    WHERE k_np='" || sNaznk || "'")), smNAZN[nIndex])
.head 10 +  If SalStrScan(sD_rec, '#B') >= 0 !! есть БИСы
.head 11 -  Call SqlPrepareAndExecute(hSqlAux3(), "
     SELECT nazn,d_rec
     INTO :sNaznBis,:sD_recBis
     FROM arc_rrp
     WHERE fn_a=:sFn_a and nd=:sND and ref is null and bis>1 and s=0 and
           dk=3 and nazns=33
     ORDER BY bis")
.head 11 +  While SqlFetchNext(hSqlAux3(), nFetchRes)
.head 12 -  Set smNAZN[nIndex] = SalStrTrimX(smNAZN[nIndex] || ' ' || StrDosToWinX(
    Left(Right(sNaznBis, Len(sNaznBis)-2), Len(Right(sNaznBis,
    Len(sNaznBis)-2))-1)) || ' ' || StrDosToWinX(Left(Right(sD_recBis,
    Len(sD_recBis)-2), Len(Right(sD_recBis, Len(sD_recBis)-2))-1)))
.head 9 +  Else If sNazns = '21' or sNazns = '20'
.head 10 -  Set smNAZN[nIndex] = SalStrTrimX(GetValueStr("
    SELECT n_np
    FROM s_np
    WHERE k_np='" || sNaznk || "'") || ' ' || smNAZN[nIndex])
.head 10 +  If sNazns = '21' and SalStrScan(sD_rec, '#B') >= 0 ! есть БИСы
.head 11 -  Call SqlPrepareAndExecute(hSqlAux3(), "
     SELECT nazn,d_rec
     INTO :sNaznBis,:sD_recBis
     FROM arc_rrp
     WHERE fn_a=:sFn_a and nd=:sND and ref is null and bis>1 and s=0 and
           dk=3 and nazns=33
     ORDER BY bis")
.head 11 +  While SqlFetchNext(hSqlAux3(), nFetchRes)
.head 12 -  Set smNAZN[nIndex] = SalStrTrimX(smNAZN[nIndex] || ' ' || StrDosToWinX(
    Left(Right(sNaznBis, Len(sNaznBis)-2), Len(Right(sNaznBis,
    Len(sNaznBis)-2))-1)) || ' ' || StrDosToWinX(Left(Right(sD_recBis,
    Len(sD_recBis)-2), Len(Right(sD_recBis, Len(sD_recBis)-2))-1)))
.head 9 -  Set smPOND[nIndex] = sPOND
.head 9 -  Set nmSK[nIndex] = nSK
.head 9 -  Set smNameFileA[nIndex] = sNameFileA
.head 9 -  Set nmREF[nIndex] = nREF
.head 9 -  Set nIndex = nIndex + 1
.head 8 +  If nIndex > 0
.head 9 -  Call Message(TRUE, 'Отбор выписки за ' || Str(SalDateDay(dDada)) || ' ' ||
     GetMonthName(SalDateMonth(dDada), TRUE) || ' ' || Str(SalDateYear(dDada))
     || ' г. для ' || sSAB || ' ' || sSelectNAIM[nI], TRUE, COLOR_Black)
.head 9 -  Call FormFileV(IifS(SalFmtFormatDateTime(dDada, 'yyyyMMdd') =
     SalFmtFormatDateTime(dBankDate, 'yyyyMMdd'), sOpenDay, '0'), sSAB, smMFOA,
     smNLSA, smNAMA, smMFOB, smNLSB, smNAMB, smOKPOB, nmDK, nmS, nmVOB, smND,
     nmISP, nmKV, dmDAOP, nmIOST, dmDAPP, smNAZN, smPOND, nmSK, smNameFileA,
     nmREF, '')
.head 7 -  Set nI = nI + 1
.head 6 -  Call Message(FALSE,
     'Для отбора выписок по выбранной дате (на ЖЕЛТОМ фоне) нажмите кнопку ОТБОР.',
     FALSE, 0)
.head 3 +  Pushbutton: pbNoDate
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Отказ
.head 4 -  Window Location and Size
.head 5 -  Left:   5.233"
.head 5 -  Top:    5.75"
.head 5 -  Width:  1.25"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalHideWindow(pbNoDate)
.head 6 -  Call SalHideWindow(pbRun)
.head 6 -  Call SalHideWindow(cc1)
.head 6 -  Call SalSetFocus(l1)
.head 6 -  Call Message(FALSE, '', FALSE, 0)
.head 3 -  Background Text: ТЕКУЩЕЕ СООБЩЕНИЕ
.head 4 -  Resource Id: 36610
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   3.783"
.head 5 -  Top:    2.345"
.head 5 -  Width:  2.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Right
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Dark Gray
.head 4 -  Background Color: Default
.head 3 +  Check Box: cbIN
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Обр. входящей инф.
.head 4 -  Window Location and Size
.head 5 -  Left:   3.783"
.head 5 -  Top:    0.071"
.head 5 -  Width:  2.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Check Box: cbKV
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Курсы валют
.head 4 -  Window Location and Size
.head 5 -  Left:   3.783"
.head 5 -  Top:    0.821"
.head 5 -  Width:  2.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Check Box: cbKvAll
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:   6.083"
.head 5 -  Top:    0.821"
.head 5 -  Width:  0.35"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Check Box: cbLS
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Выписки
.head 4 -  Window Location and Size
.head 5 -  Left:   3.783"
.head 5 -  Top:    0.321"
.head 5 -  Width:  2.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Check Box: cbU
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Участники СЭП
.head 4 -  Window Location and Size
.head 5 -  Left:   3.783"
.head 5 -  Top:    0.571"
.head 5 -  Width:  2.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Check Box: cbOO
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: док-ты к ОПЛАТЕ
.head 4 -  Window Location and Size
.head 5 -  Left:   3.783"
.head 5 -  Top:    1.071"
.head 5 -  Width:  2.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Check Box: cbWO
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: возвращ.(О) док-ты
.head 4 -  Window Location and Size
.head 5 -  Left:   3.783"
.head 5 -  Top:    1.321"
.head 5 -  Width:  2.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Check Box: cbWT
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: возвращ.(Т) док-ты
.head 4 -  Window Location and Size
.head 5 -  Left:   3.783"
.head 5 -  Top:    1.571"
.head 5 -  Width:  2.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Data Field: df1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   6.383"
.head 6 -  Top:    0.845"
.head 6 -  Width:  0.1"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: 3D Face Color
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 +  Child Table: tblMessage
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   6.583"
.head 6 -  Top:    0.071"
.head 6 -  Width:  9.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 6.0"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Arial Cyr
.head 5 -  Font Size: 8
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Charcoal
.head 5 -  Background Color: Light Gray
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 99999
.head 5 -  Discardable? No
.head 4 +  Contents
.head 5 +  Column: colTime
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Время
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Right
.head 6 -  Width:  0.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colText
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Текст сообщения
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: 512
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  7.567"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 4 -  Functions
.head 4 +  Window Variables
.head 5 -  Number: nRow
.head 4 +  Message Actions
.head 5 +  On SAM_DoubleClick
.head 6 -  Set nRow = SalTblQueryContext(tblMessage)
.head 6 -  Call SalModalDialog(dlg_mess, hWndForm, nRow)
.head 3 +  Data Field: dfKorp
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   3.783"
.head 6 -  Top:    1.988"
.head 6 -  Width:  2.7"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: None
.head 5 -  Text Color: Jade
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 2 +  Functions
.head 3 +  Function: CopyArch
.head 4 -  Description: копирование файлов в архив KLP_ARCH
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sThree[*]
.head 5 -  Number: nT
.head 5 -  Boolean: bFlajok
.head 4 +  Actions
.head 5 -  Set bFlajok = SalFmtFormatDateTime(dBankDate, 'dd/MM/yyyy') !=
    GetGlobalOption('KARCDATE')
.head 5 +  If GetArch_DAYS() < 99999 and bFlajok
.head 6 -  Set sThree[0] = 'ADR'
.head 6 -  Set sThree[1] = 'ARH'
.head 6 -  Set sThree[2] = 'KWI'
.head 6 -  Set sThree[3] = 'NOT'
.head 6 -  Set sThree[4] = 'INA'
.head 6 -  Set sThree[5] = 'INQ'
.head 6 -  Call Message(TRUE, 'Копирование файлов КЛИЕНТ-БАНК в архив ...', TRUE, COLOR_Black)
.head 6 -  Call SalWaitCursor(TRUE)
.head 6 -  Call SalArraySetUpperBound(sMass, 1, -1)
.head 6 -  Set nCount = VisDosEnumFiles(sArchPath || '*.*', FA_Standard, sMass)
.head 6 +  If nCount > 0 ! удаление файлов Cipher (барахло)
.head 7 -  Set nI = 0
.head 7 +  While nI < nCount
.head 8 -  Call Message(TRUE, 'Удаление файла ' || sMass[nI] || ' ...', TRUE, COLOR_Black)
.head 8 -  Call VisFileDelete(sArchPath || sMass[nI])
.head 8 -  Set nI = nI + 1
.head 6 -  Set nT = 0
.head 6 +  While nT < 6
.head 7 -  Set nI = 0
.head 7 +  While nI <= nKLI
.head 8 -  Set sSAB = smSAB[nI]
.head 8 -  Call SalArraySetUpperBound(sMass, 1, -1)
.head 8 -  Set nCount = VisDosEnumFiles(sArchPath || sThree[nT] || '\\??' || sSAB || '*.*',
    FA_Standard, sMass)
.head 8 +  If nCount > 0 ! обработка файлов
.head 9 -  Set nNf = 0
.head 9 +  While nNf < nCount
.head 10 +  If GetFileDate(sMass[nNf]) + GetArch_DAYS() <= dBankDate
.head 11 -  ! скопировать в архив и удалить из каталога
.head 11 +  If sThree[nT] = 'INA' or sThree[nT] = 'INQ'
.head 12 -  Call Message(TRUE, 'Удаление файла ' || sMass[nNf] || ' ...', TRUE,
     COLOR_Black)
.head 11 +  Else
.head 12 -  Call Message(TRUE, 'Копирование файла ' || sMass[nNf] || ' в архив ...',
     TRUE, COLOR_Black)
.head 11 -  Call File2Arch(sThree[nT], sMass[nNf])
.head 10 -  Set nNf = nNf + 1
.head 9 -  Call SalSetWindowText(ml1, '')
.head 8 -  Set nI = nI + 1
.head 7 -  Set nT = nT + 1
.head 6 -  Call SalWaitCursor(FALSE)
.head 5 -  Return TRUE
.head 3 +  Function: ObrInfoA
.head 4 -  Description: обработка входной информации КЛИЕНТ-БАНК
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  ! Number: nI
.head 4 +  Actions
.head 5 +  If cbIN
.head 6 -  Call SalWaitCursor(TRUE)
.head 6 -  Set nI = 0
.head 6 +  While nI <= nKLI
.head 7 -  Set sSAB = smSAB[nI]
.head 7 -  Set nRNK = nmRNK[nI]
.head 7 -  Set sNMK = smNMK[nI]
.head 7 -  Set sOKPO = smOKPO[nI]
.head 7 -  Set sTIMES = smTIMES[nI]
.head 7 -  Call SalArraySetUpperBound(sMass, 1, -1)
.head 7 -  Set nCount = VisDosEnumFiles(sDiskKata || sSAB || '\\IN\\%A' || sSAB || '*.*',
    FA_Standard, sMass)
.head 7 +  If nCount>0 ! Обработка входных файлов
.head 8 -  Call Message(TRUE, 'Обработка входных файлов %A', TRUE, COLOR_Black)
.head 8 -  Set nNf = 0
.head 8 +  While nNf < nCount
.head 9 +  If VisDosExist(sDiskKata || sSAB || '\\IN\\' || sMass[nNf])
.head 10 +  If not bIni ! Надо инициализировать ЭЦП Cipher
.head 11 -  Call Message(TRUE, 'Инициализация ЭЦП Cipher', TRUE, COLOR_Black)
.head 11 -  Set nKw = InitCipher()
.head 11 +  If nKw != 0
.head 12 -  Call MessageNoWait(ErrMsgCipher(nKw,
     'Ошибка при инициализации ЭЦП Cipher'), 'Аварийная ситуация', 3, 1)
.head 12 -  Break
.head 11 +  Else
.head 12 -  Set bIni = TRUE
.head 10 -  Set nDubl = DuplicateFile(sMass[nNf])
.head 10 +  If nDubl = 0 ! нет или принять
.head 11 -  Call fLnFilesA(sDiskKata || sSAB || '\\IN\\' || sMass[nNf])
.head 10 +  Else If nDubl = 2 ! переместить в NOT
.head 11 -  Call Message(TRUE, 'Копирование файла ' || sMass[nNf] || ' в NOT', TRUE,
     COLOR_Black)
.head 11 -  Call MomFileCopy(sDiskKata || sSAB || '\\IN\\' || sMass[nNf], sArchPath ||
    'NOT\\' || sMass[nNf], TRUE)
.head 11 -  Call VisFileDelete(sDiskKata || sSAB || '\\IN\\' || sMass[nNf])
.head 9 -  Set nNf = nNf + 1
.head 8 -  Call SalSetWindowText(ml1, '')
.head 7 -  Set nI = nI + 1
.head 6 -  Call SalWaitCursor(FALSE)
.head 5 -  Return TRUE
.head 3 +  Function: ObrInfoQ
.head 4 -  Description: обработка входной информации КЛИЕНТ-БАНК
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If cbIN
.head 6 -  Set nI = 0
.head 6 +  While nI <= nKLI
.head 7 -  Set sSAB = smSAB[nI]
.head 7 -  Set nRNK = nmRNK[nI]
.head 7 -  Set sNMK = smNMK[nI]
.head 7 -  Set sOKPO = smOKPO[nI]
.head 7 -  Set sTIMES = smTIMES[nI]
.head 7 -  Call SalArraySetUpperBound(sMass, 1, -1)
.head 7 -  Set nCount = VisDosEnumFiles(sDiskKata || sSAB || '\\IN\\%Q' || sSAB || '*.*',
    FA_Standard, sMass)
.head 7 +  If nCount > 0 ! Обработка входных файлов %Q
.head 8 -  Call Message(TRUE, 'Обработка входных файлов %Q', TRUE, COLOR_Black)
.head 8 -  Set nNf = 0
.head 8 +  While nNf < nCount
.head 9 +  If VisDosExist(sDiskKata || sSAB || '\\IN\\' || sMass[nNf])
.head 10 +  If not bIni ! Надо инициализировать ЭЦП Cipher
.head 11 -  Call Message(TRUE, 'Инициализация ЭЦП Cipher', TRUE, COLOR_Black)
.head 11 -  Set nKw = InitCipher()
.head 11 +  If nKw ! = 0
.head 12 -  Call MessageNoWait(ErrMsgCipher(nKw,
     'Ошибка при инициализации ЭЦП Cipher'), 'Аварийная ситуация', 3, 1)
.head 12 -  Break
.head 11 +  Else
.head 12 -  Set bIni = TRUE
.head 10 -  Set nDubl = DuplicateFile(sMass[nNf])
.head 10 +  If nDubl = 0 ! нет или принять
.head 11 -  Call fLnFilesQ(sDiskKata || sSAB || '\\IN\\' || sMass[nNf])
.head 10 +  Else If nDubl = 2 ! переместить в NOT
.head 11 -  Call Message(TRUE, 'Копирование файла ' || sMass[nNf] || ' в NOT', TRUE,
     COLOR_Black)
.head 11 -  Call MomFileCopy(sDiskKata || sSAB || '\\IN\\' || sMass[nNf], sArchPath ||
     'NOT\\' || sMass[nNf], TRUE)
.head 11 -  Call VisFileDelete(sDiskKata || sSAB || '\\IN\\' || sMass[nNf])
.head 9 -  Set nNf = nNf + 1
.head 8 -  Call SalSetWindowText(ml1,'')
.head 7 -  Set nI = nI + 1
.head 5 -  Return TRUE
.head 3 +  Function: DuplicateFile
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  String: sFile
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRet
.head 4 +  Actions
.head 5 +  If not File(sArchPath || 'ADR\\' || sFile)
.head 6 -  Call SqlPrepareAndExecute(hSql(), T("
     SELECT fn
     FROM klp_arch
     WHERE fn=:sFile and tip='ADR'"))
.head 6 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 7 -  Return 0
.head 5 -  Return SalModalDialog(DuplicateFileName, hWndForm, sFile)
.head 3 +  Function: fLnFilesA
.head 4 -  Description: Обработка входных файлов %A КЛИЕНТ-БАНК
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sFilNam
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nI
.head 5 -  Number: nLenArr
.head 5 -  String: sSignInfo
.head 4 +  Actions
.head 5 -  Call MomFileCopy(sFilNam, sArchPath || 'INA\\' || Right(sFilNam, 12), TRUE)
.head 5 -  Call MomFileCopy(sFilNam, sDeCryptPath || Right(sFilNam, 12), TRUE)
.head 5 -  Set nHo = llopen(sDeCryptPath || Right(sFilNam, 12), OF_Read)
.head 5 +  If nHo > 0
.head 6 -  Set sFileTmp = VisFileCreateTemp('FiA')
.head 6 -  Set nHc = llopen(sFileTmp, OF_ReadWrite)
.head 6 +  If nHc > 0
.head 7 -  ! Set nSendId = 9999 ! Поменять потом на необходимое (ниже уже поменяно)
.head 7 -  Call Message(TRUE, 'Проверка лицензионных прав клиента ' || sSAB, TRUE, COLOR_Black)
.head 7 -  Set nI = 0
.head 7 -  Set nSendId = 0
.head 7 -  Set nLenArr = LenArray(smlSAB)
.head 7 +  While nI <= nLenArr
.head 8 +  If SalStrUpperX(sSAB) = smlSAB[nI]
.head 9 -  Set nSendId = nmlNOMER[nI]
.head 9 -  Set sDOCPOST = Right('0000' || Str(nmlNOMER[nI]), 4)
.head 9 -  Break
.head 8 -  Set nI = nI + 1
.head 7 +  If nSendId = 0 ! не нашло (дать квитанцию о нарушении лицензии)
.head 8 -  Call Wozwrat(7, sFilNam, 0, 0)
.head 8 -  Call llclose(nHc)
.head 8 -  Call llclose(nHo)
.head 8 -  Call VisFileDelete(sFileTmp)
.head 8 -  Call Message(TRUE, 'Копирование файла ' || Right(sFilNam, 12) || ' в NOT', TRUE,
     COLOR_Black)
.head 8 -  Call MomFileCopy(sFilNam, sArchPath || 'NOT\\' || Right(sFilNam, 12), TRUE)
.head 8 -  Call VisFileDelete(sFilNam)
.head 8 -  Call VisFileDelete(sDeCryptPath || Right(sFilNam, 12))
.head 8 -  Call MessageNoWait(ErrMsgCipher(nKw,
     'Нарушение лицензионных прав при обработке файла ' || sFilNam),
     'Аварийная ситуация', 3, 1)
.head 8 -  Return FALSE
.head 7 -  Set nKw = speProcessFile(2, nHo, nHc, sDeCryptPath || Right(sFilNam, 12)) ! Расш.
.head 7 -  ! Set nKw = 0 ! для отладки (верх расскомментировать)
.head 7 +  If nKw = 0 ! Нормальный ход
.head 8 -  Call llclose(nHc)
.head 8 -  Call llclose(nHo)
.head 8 -  Call MomFileCopy(sFileTmp, sTempPath || Right(sFilNam, 12), TRUE)
.head 8 -  Set nHo = llopen(sTempPath || Right(sFilNam, 12), OF_Read)
.head 8 -  ! проверить подпись на файле
.head 8 -  Set sSignInfo = Spac(64)
.head 8 -  Set nKw = spCheckClientSignOnFile(nHo, sTempPath || Right(sFilNam, 12), sSignInfo)
.head 8 +  If nKw != 0
.head 9 -  ! Call Debug('Код возврата = ' || Str(nKw))
.head 9 -  Call Wozwrat(8, sFilNam, 0, 0)
.head 9 -  Call llclose(nHo)
.head 9 -  Call MomFileCopy(sFilNam, sArchPath || 'NOT\\' || Right(sFilNam, 12), TRUE)
.head 9 -  Call VisFileDelete(sFileTmp)
.head 9 -  Call VisFileDelete(sFilNam)
.head 9 -  Call VisFileDelete(sTempPath || Right(sFilNam, 12))
.head 9 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при проверке подписи файла ' ||
     sFilNam), 'Аварийная ситуация', 3, 1)
.head 9 -  Return FALSE
.head 8 +  Else
.head 9 -  Call llclose(nHo)
.head 8 -  Call Message(TRUE, 'Обработка файла ' || Right(sFilNam, 12), TRUE, COLOR_Black)
.head 8 -  ! Call MomFileCopy(sFileTmp, sTempPath || Right(sFilNam, 12), TRUE)
.head 8 -  Set nKw = ObrFileA(sFilNam, sTempPath || Right(sFilNam, 12)) ! парам. - имя файла
.head 8 +  If nKw = 0
.head 9 -  Call Message(TRUE, 'Формирование квитанции на файл ' || Right(sFilNam, 12) ||
     '. Код возврата = 0', TRUE, COLOR_Black)
.head 9 -  Call Wozwrat(0, sFilNam, nCount0, nCount1+nCount2)
.head 9 -  Call MomFileCopy(sTempPath || Right(sFilNam, 12), sArchPath || 'ADR\\' ||
     Right(sFilNam, 12), TRUE)
.head 9 -  Call VisFileDelete(sFilNam)
.head 9 -  Call VisFileDelete(sFileTmp)
.head 9 -  Call VisFileDelete(sTempPath || Right(sFilNam, 12))
.head 9 -  Call VisFileDelete(sDeCryptPath || Right(sFilNam, 12))
.head 9 -  Return TRUE
.head 8 +  Else If nKw = -1
.head 9 -  Call VisFileDelete(sFileTmp)
.head 9 -  Return FALSE
.head 8 +  Else
.head 9 -  Call Message(TRUE, 'Формирование квитанции на файл ' || Right(sFilNam, 12) ||
     '. Код возврата = ' || Str(nKw), TRUE, COLOR_Black)
.head 9 -  Call Wozwrat(nKw, sFilNam, nCount0, nCount1+nCount2)
.head 9 -  Call MomFileCopy(sTempPath || Right(sFilNam, 12), sArchPath || 'NOT\\' ||
     Right(sFilNam, 12), TRUE)
.head 9 -  Call VisFileDelete(sFilNam)
.head 9 -  Call VisFileDelete(sFileTmp)
.head 9 -  Call VisFileDelete(sTempPath || Right(sFilNam, 12))
.head 9 -  Call VisFileDelete(sDeCryptPath || Right(sFilNam, 12))
.head 9 -  Return FALSE
.head 7 +  Else ! дать квитанцию о плохой подписи файла
.head 8 -  Call Wozwrat(8, sFilNam, 0, 0)
.head 8 -  Call llclose(nHc)
.head 8 -  Call llclose(nHo)
.head 8 -  Call MomFileCopy(sFilNam, sArchPath || 'NOT\\' || Right(sFilNam, 12), TRUE)
.head 8 -  Call VisFileDelete(sFileTmp)
.head 8 -  Call VisFileDelete(sFilNam)
.head 8 -  Call VisFileDelete(sDeCryptPath || Right(sFilNam, 12))
.head 8 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при расшифровании файла ' ||
     sFilNam), 'Аварийная ситуация', 3, 1)
.head 8 -  Return FALSE
.head 5 +  Else ! дать квитанцию с кодом 9
.head 6 -  Call Wozwrat(9, sFilNam, 0, 0)
.head 6 -  Call llclose(nHc)
.head 6 -  Call llclose(nHo)
.head 6 -  Call MomFileCopy(sFilNam, sArchPath || 'NOT\\' || Right(sFilNam, 12), TRUE)
.head 6 -  Call VisFileDelete(sFileTmp)
.head 6 -  Call VisFileDelete(sFilNam)
.head 6 -  Call VisFileDelete(sDeCryptPath || Right(sFilNam, 12))
.head 6 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка открытия при обработке файла ' ||
     sFilNam), 'Аварийная ситуация', 3, 1)
.head 6 -  Return FALSE
.head 3 +  Function: fLnFilesQ
.head 4 -  Description: Обработка входных файлов %Q КЛИЕНТ-БАНК
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sFilNam
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nI
.head 5 -  Number: nLenArr
.head 4 +  Actions
.head 5 -  Call MomFileCopy(sFilNam, sArchPath || 'INQ\\' || Right(sFilNam, 12), TRUE)
.head 5 -  Call MomFileCopy(sFilNam, sDeCryptPath || Right(sFilNam, 12), TRUE)
.head 5 -  Set nHo = llopen(sDeCryptPath || Right(sFilNam, 12), OF_Read)
.head 5 +  If nHo > 0
.head 6 -  Set sFileTmp = VisFileCreateTemp('FiQ')
.head 6 -  Set nHc = llopen(sFileTmp, OF_ReadWrite)
.head 6 +  If nHc>0
.head 7 -  ! Set nSendId = 9999 ! Поменять потом на необходимое (ниже уже поменяно)
.head 7 -  Set nI = 0
.head 7 -  Set nSendId = 0
.head 7 -  Set nLenArr = LenArray(smlSAB)
.head 7 +  While nI <= nLenArr
.head 8 +  If SalStrUpperX(sSAB) = smlSAB[nI]
.head 9 -  Set nSendId = nmlNOMER[nI]
.head 9 -  Break
.head 8 -  Set nI = nI + 1
.head 7 -  Call Message(TRUE, 'Проверка лицензионных прав клиента ' || sSAB, TRUE, COLOR_Black)
.head 7 -  ! Call DebugN(nSendId)
.head 7 +  If nSendId = 0 ! не нашло (дать квитанцию о нарушении лицензии)
.head 8 -  Call llclose(nHc)
.head 8 -  Call llclose(nHo)
.head 8 -  Call VisFileDelete(sFileTmp)
.head 8 -  Call Message(TRUE, 'Копирование файла ' || Right(sFilNam, 12) || ' в NOT', TRUE,
     COLOR_Black)
.head 8 -  Call MomFileCopy(sFilNam, sArchPath || 'NOT\\' || Right(sFilNam, 12), TRUE)
.head 8 -  Call VisFileDelete(sFilNam)
.head 8 -  Call VisFileDelete(sDeCryptPath || Right(sFilNam, 12))
.head 8 -  Call MessageNoWait(ErrMsgCipher(nKw,
     'Нарушение лицензионных прав при обработке файла ' || sFilNam),
     'Аварийная ситуация', 3, 1)
.head 8 -  Return FALSE
.head 7 -  Set nKw = speProcessFile(2, nHo, nHc, sDeCryptPath || Right(sFilNam, 12)) ! Расш.
.head 7 -  ! Set nKw = 0 ! для отладки (верх расскомментировать)
.head 7 +  If nKw = 0 ! Нормальный ход
.head 8 -  Call llclose(nHc)
.head 8 -  Call llclose(nHo)
.head 8 -  Call Message(TRUE, 'Обработка файла ' || Right(sFilNam, 12), TRUE, COLOR_Black)
.head 8 -  Set nKw = ObrFileQ(sFilNam, sFileTmp) ! параметр - имя файла
.head 8 +  If nKw = 0
.head 9 -  Call MomFileCopy(sFileTmp, sArchPath || 'ADR\\' || Right(sFilNam, 12), TRUE)
.head 9 -  Call VisFileDelete(sFilNam)
.head 9 -  Call VisFileDelete(sFileTmp)
.head 9 -  Call VisFileDelete(sDeCryptPath || Right(sFilNam, 12))
.head 9 -  Return TRUE
.head 8 +  Else
.head 9 -  Call MomFileCopy(sFileTmp, sArchPath || 'NOT\\' || Right(sFilNam, 12), TRUE)
.head 9 -  Call VisFileDelete(sFileTmp)
.head 9 -  Call VisFileDelete(sDeCryptPath || Right(sFilNam, 12))
.head 9 -  Return FALSE
.head 7 +  Else
.head 8 -  Call llclose(nHc)
.head 8 -  Call llclose(nHo)
.head 8 -  Call VisFileDelete(sFileTmp)
.head 8 -  Call MomFileCopy(sFilNam, sArchPath || 'NOT\\' || Right(sFilNam, 12), TRUE)
.head 8 -  Call VisFileDelete(sFilNam)
.head 8 -  Call VisFileDelete(sDeCryptPath || Right(sFilNam, 12))
.head 8 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при расшифровании файла ' ||
     sFilNam), 'Аварийная ситуация', 3, 1)
.head 8 -  Return FALSE
.head 5 +  Else
.head 6 -  Call llclose(nHc)
.head 6 -  Call llclose(nHo)
.head 6 -  Call VisFileDelete(sFileTmp)
.head 6 -  Call MomFileCopy(sFilNam, sArchPath || 'NOT\\' || Right(sFilNam, 12), TRUE)
.head 6 -  Call VisFileDelete(sFilNam)
.head 6 -  Call VisFileDelete(sDeCryptPath || Right(sFilNam, 12))
.head 6 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка открытия при обработке файла ' ||
     sFilNam), 'Аварийная ситуация', 3, 1)
.head 6 -  Return FALSE
.head 3 +  Function: Wozwrat
.head 4 -  Description: формирование квитанций на %A
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: nKodo
.head 5 -  String: sFN
.head 5 -  Number: nKilk
.head 5 -  Number: nSum
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sTmp
.head 5 -  String: sTmp2
.head 5 -  String: sFileTmp2
.head 5 -  Number: nHc2
.head 5 -  Number: nHc
.head 5 -  File Handle: hT
.head 5 -  File Handle: hHc
.head 5 -  Number: nTT
.head 5 -  String: sKdSd
.head 4 +  Actions
.head 5 -  ! Дать квитанция с кодом nKodo на файл sFN
.head 5 -  Set sTmp = Right(sFN, 12)
.head 5 -  Set sTmp2 = sEnCryptPath || '%T' || SalStrMidX(sTmp, 2, 10)
.head 5 -  ! Set nHc = llcreat(sTmp2 , OF_ReadWrite)
.head 5 +  If SalFileOpen(hHc, sTmp2, OF_Create | OF_ReadWrite)
!  nHc > 0
.head 6 +  If SalFileWrite(hHc, sTmp || SalFmtFormatDateTime(SalDateCurrent(), 'yyyyMMdd') ||
   Right('0' || SalFmtFormatDateTime(SalDateCurrent(), 'hhhhmmss'), 6) || PadL(
   Str(nKodo), 2) || PadL(Str(nKilk), 4) || PadL(Str(nSum), 24) || PutCrLf(), 58) = 58
.head 7 -  Call SalFileClose(hHc)
.head 7 -  Set nHc = llopen(sTmp2, OF_ReadWrite)
.head 7 -  Set nTT = spPutBankSignOnFile(nHc, sTmp2, 2)
.head 7 +  If nTT = 0
.head 8 -  Call SaveInfoToLog('Подпись ' || Right(sTmp2, 12) || ' Ok')
.head 8 -  Set sFileTmp2 = VisFileCreateTemp('~kl')
.head 8 -  Set nHc2 = llopen(sFileTmp2, OF_ReadWrite)
.head 8 +  If nHc2 > 0
.head 9 -  ! Set nSendId = 1 ! потом убрать
.head 9 -  Set nTT = speProcessFile(1, nHc, nHc2, sTmp2)
.head 9 +  If nTT = 0
.head 10 -  Call SaveInfoToLog('Шифрование ' || Right(sTmp2, 12) || ' Ok')
.head 10 -  Call llclose(nHc)
.head 10 -  Call llclose(nHc2)
.head 10 -  Call MomFileCopy(sFileTmp2,  sDiskKata || sSAB || '\\OUT\\' ||
     Right(sTmp2, 12), TRUE)
.head 10 -  Call MomFileCopy(sTmp2, sArchPath || 'KWI\\' || Right(sTmp2, 12), TRUE)
.head 10 -  Call VisFileDelete(sTmp2)
.head 10 -  ! Call VisFileDelete(sFN)
.head 10 -  Call VisFileDelete(sFileTmp2)
.head 9 +  Else
.head 10 -  Call MessageNoWait(ErrMsgCipher(nTT, 'Ошибка при шифровании файла ' ||
     Right(sTmp2, 12)), 'ОШИБКА', 3, 1)
.head 10 -  Call llclose(nHc)
.head 10 -  Call llclose(nHc2)
.head 8 +  Else
.head 9 -  Call MessageNoWait('Невозможно создать временный файл для формирования ' ||
     'квитанции на поступивший файл ' || sTmp, 'ОШИБКА', 3, 1)
.head 9 -  Call llclose(nHc)
.head 7 +  Else
.head 8 -  Call MessageNoWait(ErrMsgCipher(nTT, 'Ошибка при подписывании файла ' ||
     Right(sTmp2, 12)), 'ОШИБКА', 3, 1)
.head 8 -  Call llclose(nHc)
.head 6 +  Else
.head 7 -  Call MessageNoWait('Невозможно создать временный файл для формирования квитанции' ||
     ' на поступивший файл ' || sTmp, 'ОШИБКА', 3, 1)
.head 7 -  Call llclose(nHc)
.head 5 +  Else
.head 6 -  Call MessageNoWait('Невозможно создать временный файл для формирования квитанции на '
     || 'поступивший файл ' || sTmp, 'ОШИБКА', 3, 1)
.head 6 -  Call llclose(nHc)
.head 5 -  Set sKdSd = 'Сформирована квитанция ' || Right(sTmp2, 12) || ' на пакет ' ||
    Right(sFN, 12) || '. Код возврата ' || Str(nKodo)
.head 5 +  If nKodo = 0
.head 6 -  Set sKdSd = sKdSd || ', количество документов ' || Str(nKilk) || ', на сумму ' ||
    SalNumberToStrX(nSum/100, 2)
.head 5 -  Call Message(TRUE, sKdSd, TRUE, COLOR_Black)
.head 5 -  Return TRUE
.head 3 +  Function: FormFileW
.head 4 -  Description: формирование файла %W технологической машиной (sos) и от операционистов тоже
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sSab
.head 5 -  String: smMFOA[*]
.head 5 -  String: smNLSA[*]
.head 5 -  String: smMFOB[*]
.head 5 -  String: smNLSB[*]
.head 5 -  String: smNAMB[*]
.head 5 -  Number: nmS[*]
.head 5 -  String: smND[*]
.head 5 -  String: smNAZN[*]
.head 5 -  String: smPOND[*]
.head 5 -  String: smPRWO[*]
.head 5 -  String: smNameFileA[*]
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nKd
.head 5 -  Number: nLA
.head 5 -  Boolean: bZag
.head 5 -  String: sW
.head 5 -  File Handle: hW
.head 5 -  String: sDaTi
.head 5 -  Number: nSdeb
.head 5 -  Number: nSkre
.head 5 -  Number: nKw
.head 5 -  Number: nhW
.head 5 -  Number: nhWc
.head 5 -  String: sWc
.head 5 -  Long String: s336
.head 5 -  Number: nLenArr
.head 4 +  Actions
.head 5 -  Call SalArrayDimCount(smMFOA, nKd)
.head 5 -  Call SalArrayGetUpperBound(smMFOA, nKd, nLA)
.head 5 -  Set nKd = 0
.head 5 -  Set bZag = TRUE
.head 5 +  While nKd <= nLA
.head 6 +  If bZag ! Сформировать часть заголовка файла W
.head 7 -  Set sW = sEnCryptPath || '%W' || sSab || DaySymbol(SalDateCurrent()) ||
    MonthSymbol(SalDateCurrent()) || '.' || YearSymbol(SalDateCurrent()) ||
    Suffix(sSab, 'W')
.head 7 +  If not SalFileOpen(hW, sW, OF_Create | OF_ReadWrite)
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Return FALSE
.head 7 -  Set sDaTi = SalFmtFormatDateTime(SalDateCurrent(), 'yyyyMMdd') || Right('0' ||
    SalFmtFormatDateTime(SalDateCurrent(), 'hhhhmmss'), 6)
.head 7 +  If SalFileWrite(hW, Right(sW, 12) || sDaTi || PadL(Str(nLA+1), 4) || PutCrLf(), 32)
   != 32
.head 8 -  Call SalFileClose(hW)
.head 8 -  Call VisFileDelete(sW)
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Return FALSE
.head 7 -  Set bZag = FALSE
.head 6 -  Set s336 = PadL(VisStrLeftTrim(smMFOA[nKd]), 9) || PadL(
    VisStrLeftTrim(smNLSA[nKd]), 14) || PadL(VisStrLeftTrim(smMFOB[nKd]), 9) || PadL(
    VisStrLeftTrim(smNLSB[nKd]), 14) || PadR(StrWinToDosX(
    VisStrLeftTrim(smNAMB[nKd])), 38) || PadL(Str(nmS[nKd]), 16) || PadR(StrWinToDosX(
    VisStrLeftTrim(smND[nKd])), 10)
.head 6 -  Set s336 = s336 || PadR(StrWinToDosX(VisStrLeftTrim(smNAZN[nKd])), 160) || PadR(
    VisStrLeftTrim(smPOND[nKd]), 8) || PadR(StrWinToDosX(
    VisStrLeftTrim(smPRWO[nKd])), 40) || PadR(VisStrLeftTrim(smNameFileA[nKd]), 12) ||
    PadL(Str(nKd+1), 4) || PutCrLf()
.head 6 +  If SalFileWrite(hW, s336, 336) != 336
.head 7 -  Call SalFileClose(hW)
.head 7 -  Call VisFileDelete(sW)
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Return FALSE
.head 6 -  Set nKd = nKd + 1
.head 5 -  Call SalFileClose(hW)
.head 5 -  ! Подписать файл и поместить в нужный ящик
.head 5 +  If not bIni ! Надо инициализировать ЭЦП Cipher
.head 6 -  Call Message(TRUE, 'Инициализация ЭЦП Cipher', TRUE, COLOR_Black)
.head 6 -  Set nKw = InitCipher()
.head 6 +  If nKw != 0
.head 7 -  Call VisFileDelete(sW)
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при инициализации ЭЦП Cipher'),
     'Аварийная ситуация', 3, 1)
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 -  Set bIni = TRUE
.head 5 -  Set nhW = llopen(sW, OF_ReadWrite)
.head 5 +  If nhW > 0
.head 6 -  Set nKw = spPutBankSignOnFile(nhW, sW, 2)
.head 6 +  If nKw < 0
.head 7 -  Call llclose(nhW)
.head 7 -  Call VisFileDelete(sW)
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при подписи файла ' || sW),
     'Аварийная ситуация', 3, 1)
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 -  Set sWc = VisFileCreateTemp('~W~')
.head 7 -  Call VisFileDelete(sWc)
.head 7 -  Set nhWc = llcreat(sWc, OF_ReadWrite)
.head 7 +  If nhWc > 0
.head 8 -  ! зашифровать
.head 8 -  ! Set nSendId = 1 ! пока
! (надо получить из KlpLcw по sSab)
.head 8 -  Set nI = 0
.head 8 -  Set nSendId = 0
.head 8 -  Set nLenArr = LenArray(smlSAB)
.head 8 +  While nI <= nLenArr
.head 9 +  If SalStrUpperX(sSab) = smlSAB[nI]
.head 10 -  Set nSendId = nmlNOMER[nI]
.head 10 -  Break
.head 9 -  Set nI = nI + 1
.head 8 -  Set nKw = speProcessFile(1, nhW, nhWc, sW)
.head 8 -  Call llclose(nhW)
.head 8 -  Call llclose(nhWc)
.head 8 +  If nKw != 0
.head 9 -  Call VisFileDelete(sW)
.head 9 -  Call VisFileDelete(sWc)
.head 9 -  Call SqlRollback(hSql())
.head 9 -  Call SqlRollback(hSqlAux2())
.head 9 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при шифровании файла ' || sW),
     'Аварийная ситуация', 3, 1)
.head 9 -  Return FALSE
.head 8 +  Else
.head 9 -  Call MomFileCopy(sW, sArchPath || 'ARH\\' || Right(sW, 12), TRUE)
.head 9 -  Call MomFileCopy(sWc, sDiskKata || sSab || '\\OUT\\' || Right(sW, 12), TRUE)
.head 9 -  Call VisFileDelete(sWc)
.head 9 -  Call VisFileDelete(sW)
.head 9 -  Call SqlCommit(hSql())
.head 9 -  Call SqlRollback(hSqlAux2())
.head 9 -  Return TRUE
.head 7 +  Else
.head 8 -  Call llclose(nhW)
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Call VisFileDelete(sW)
.head 8 -  Call MessageNoWait('Ошибка при создании временного файла ' || sWc,
     'Аварийная ситуация', 3, 1)
.head 8 -  Return FALSE
.head 5 +  Else
.head 6 -  Call SqlRollback(hSql())
.head 6 -  Call SqlRollback(hSqlAux2())
.head 6 -  Call VisFileDelete(sW)
.head 6 -  Call MessageNoWait('Ошибка при открытии файла ' || sW, 'Аварийная ситуация', 3, 1)
.head 6 -  Return FALSE
.head 3 +  Function: FormFileU
.head 4 -  Description: формирование файла %U
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sSab
.head 5 -  String: smNBW[*]
.head 5 -  String: smMFO[*]
.head 5 -  String: smSEP[*]
.head 5 -  String: smOP[*]
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nKd
.head 5 -  Number: nLA
.head 5 -  Boolean: bZag
.head 5 -  String: sU
.head 5 -  File Handle: hU
.head 5 -  String: sDaTi
.head 5 -  Number: nKw
.head 5 -  Number: nhU
.head 5 -  Number: nhUc
.head 5 -  String: sUc
.head 5 -  Long String: s54
.head 5 -  Number: nLenArr
.head 4 +  Actions
.head 5 -  Call SalArrayDimCount(smMFO, nKd)
.head 5 -  Call SalArrayGetUpperBound(smMFO, nKd, nLA)
.head 5 -  Set nKd = 0
.head 5 -  Set bZag = TRUE
.head 5 +  While nKd <= nLA
.head 6 +  If bZag ! Сформировать часть заголовка файла U
.head 7 -  Set sU = sEnCryptPath || '%U' || sSab || DaySymbol(SalDateCurrent()) ||
    MonthSymbol(SalDateCurrent()) || '.' || YearSymbol(SalDateCurrent()) ||
    Suffix(sSab, 'U')
.head 7 +  If not SalFileOpen(hU, sU, OF_Create | OF_ReadWrite)
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Call MessageNoWait('Ошибка при создании файла ' || sU, 'Аварийная ситуация', 3, 1)
.head 8 -  Return FALSE
.head 7 -  Set sDaTi = SalFmtFormatDateTime(SalDateCurrent(), 'yyyyMMdd') || Right('0' ||
    SalFmtFormatDateTime(SalDateCurrent(), 'hhhhmmss'), 6)
.head 7 +  If SalFileWrite(hU, Right(sU, 12) || sDaTi || PadL(Str(nLA+1), 4) || PutCrLf(), 32)
   != 32
.head 8 -  Call SalFileClose(hU)
.head 8 -  Call VisFileDelete(sU)
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Call MessageNoWait('Ошибка при записи в файл ' || sU, 'Аварийная ситуация', 3, 1)
.head 8 -  Return FALSE
.head 7 -  Set bZag = FALSE
.head 6 -  Set s54 = PadR(StrWinToDosX(smNBW[nKd]), 38) || PadL(smMFO[nKd], 9) ||
    PadR(smSEP[nKd], 4) || smOP[nKd] || PutCrLf()
.head 6 +  If SalFileWrite(hU, s54, 54) != 54
.head 7 -  Call SalFileClose(hU)
.head 7 -  Call VisFileDelete(sU)
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Call MessageNoWait('Ошибка при записи в файл ' || sU, 'Аварийная ситуация', 3, 1)
.head 7 -  Return FALSE
.head 6 -  Set nKd = nKd + 1
.head 5 -  Call SalFileClose(hU)
.head 5 -  ! Подписать файл и поместить в нужный ящик
.head 5 +  If not bIni ! Надо инициализировать ЭЦП Cipher
.head 6 -  Call Message(TRUE, 'Инициализация ЭЦП Cipher', TRUE, COLOR_Black)
.head 6 -  Set nKw = InitCipher()
.head 6 +  If nKw != 0
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Call VisFileDelete(sU)
.head 7 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при инициализации ЭЦП Cipher'),
     'Аварийная ситуация', 3, 1)
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 -  Set bIni = TRUE
.head 5 -  Set nhU = llopen(sU, OF_ReadWrite)
.head 5 +  If nhU > 0
.head 6 -  Set nKw = spPutBankSignOnFile(nhU, sU, 2)
.head 6 +  If nKw < 0
.head 7 -  Call llclose(nhU)
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Call VisFileDelete(sU)
.head 7 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при подписи файла ' || sU),
     'Аварийная ситуация', 3, 1)
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 -  Set sUc = VisFileCreateTemp('~U~')
.head 7 -  Call VisFileDelete(sUc)
.head 7 -  Set nhUc = llcreat(sUc, OF_ReadWrite)
.head 7 +  If nhUc > 0
.head 8 -  ! зашифровать
.head 8 -  ! Set nSendId = 1 ! пока
! (надо получить из KlpLcw по sSab)
.head 8 -  Set nI = 0
.head 8 -  Set nSendId = 0
.head 8 -  Set nLenArr = LenArray(smlSAB)
.head 8 +  While nI <= nLenArr
.head 9 +  If SalStrUpperX(sSab) = smlSAB[nI]
.head 10 -  Set nSendId = nmlNOMER[nI]
.head 10 -  Break
.head 9 -  Set nI = nI + 1
.head 8 -  Set nKw = speProcessFile(1, nhU, nhUc, sU)
.head 8 -  Call llclose(nhU)
.head 8 -  Call llclose(nhUc)
.head 8 +  If nKw != 0
.head 9 -  Call SqlRollback(hSqlAux2())
.head 9 -  Call VisFileDelete(sU)
.head 9 -  Call VisFileDelete(sUc)
.head 9 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при шифровании файла ' || sU),
     'Аварийная ситуация', 3, 1)
.head 9 -  Return FALSE
.head 8 +  Else
.head 9 -  Call MomFileCopy(sU, sArchPath || 'ARH\\' || Right(sU, 12), TRUE)
.head 9 -  Call MomFileCopy(sUc, sDiskKata || sSab || '\\OUT\\' || Right(sU, 12), TRUE)
.head 9 -  Call VisFileDelete(sUc)
.head 9 -  Call VisFileDelete(sU)
.head 9 -  Return TRUE
.head 7 +  Else
.head 8 -  Call llclose(nhU)
.head 8 -  Call VisFileDelete(sU)
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Call MessageNoWait('Ошибка при создании временного файла ' || sUc,
     'Аварийная ситуация', 3, 1)
.head 8 -  Return FALSE
.head 5 +  Else
.head 6 -  Call VisFileDelete(sU)
.head 6 -  Call SqlRollback(hSqlAux2())
.head 6 -  Call MessageNoWait('Ошибка при открытии файла ' || sU, 'Аварийная ситуация', 3, 1)
.head 6 -  Return FALSE
.head 3 +  Function: FormFileD
.head 4 -  Description: формирование файла %$
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sSab
.head 5 -  Number: nmKV[*]
.head 5 -  String: smSKV[*]
.head 5 -  String: smNAME[*]
.head 5 -  Number: nmBSUM[*]
.head 5 -  Date/Time: dmVDATE[*]
.head 5 -  Date/Time: dmVDATEP[*]
.head 5 -  Number: nmRATE_O[*]
.head 5 -  Number: nmRATE_OP[*]
.head 5 -  Number: nmRATE_B[*]
.head 5 -  Number: nmRATE_S[*]
.head 5 -  Number: nmRATE_BP[*]
.head 5 -  Number: nmRATE_SP[*]
.head 5 -  Boolean: bBezUsl
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nKd
.head 5 -  Number: nLA
.head 5 -  Boolean: bZag
.head 5 -  String: sD
.head 5 -  File Handle: hD
.head 5 -  String: sDaTi
.head 5 -  String: sDaTiP
.head 5 -  Number: nKw
.head 5 -  Number: nhD
.head 5 -  Number: nhDc
.head 5 -  String: sDc
.head 5 -  Long String: s117
.head 5 -  !
.head 5 -  Number: nDcrc
.head 5 -  Number: nFetchRes
.head 5 -  Date/Time: dDFI
.head 5 -  Number: nCRC
.head 5 -  !
.head 5 -  Number: nI
.head 5 -  Number: nLenArr
.head 4 +  Actions
.head 5 -  Call SalArrayDimCount(nmKV, nKd)
.head 5 -  Call SalArrayGetUpperBound(nmKV, nKd, nLA)
.head 5 -  Set nKd = 0
.head 5 -  Set nDcrc = 0
.head 5 -  Set bZag = TRUE
.head 5 +  While nKd <= nLA
.head 6 +  If bZag ! Сформировать часть заголовка файла $
.head 7 -  Set sD = sEnCryptPath || '%$' || sSab || DaySymbol(SalDateCurrent()) ||
    MonthSymbol(SalDateCurrent()) || '.' || YearSymbol(SalDateCurrent()) ||
    Suffix(sSab, '$')
.head 7 +  If not SalFileOpen(hD, sD, OF_Create | OF_ReadWrite)
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Return FALSE
.head 7 -  Set sDaTi = SalFmtFormatDateTime(SalDateCurrent(), 'yyyyMMdd') || Right('0' ||
    SalFmtFormatDateTime(SalDateCurrent(), 'hhhhmmss'), 6)
.head 7 +  If SalFileWrite(hD, Right(sD, 12) || sDaTi || PadL(Str(nLA+1), 4) || PutCrLf(), 32)
   != 32
.head 8 -  Call SalFileClose(hD)
.head 8 -  Call VisFileDelete(sD)
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Return FALSE
.head 7 -  Set bZag = FALSE
.head 6 -  Set sDaTi = SalFmtFormatDateTime(dmVDATE[nKd], 'yyyyMMdd')
.head 6 -  Set sDaTiP = SalFmtFormatDateTime(dmVDATEP[nKd], 'yyyyMMdd')
.head 6 -  Set s117 = PadL(Str(nmKV[nKd]), 3) || PadR(VisStrLeftTrim(smSKV[nKd]), 3) || PadR(
    VisStrLeftTrim(StrWinToDosX(smNAME[nKd])), 15) || PadL(Str(nmBSUM[nKd]), 6) ||
    sDaTi || sDaTiP || PadL(SalNumberToStrX(nmRATE_O[nKd], 4), 12) || PadL(
    SalNumberToStrX(nmRATE_OP[nKd], 4), 12) || PadL(
    SalNumberToStrX(nmRATE_B[nKd], 4), 12) || PadL(
    SalNumberToStrX(nmRATE_S[nKd], 4), 12) || PadL(
    SalNumberToStrX(nmRATE_BP[nKd], 4), 12) || PadL(
    SalNumberToStrX(nmRATE_SP[nKd], 4), 12) || PutCrLf()
.head 6 -  Set nDcrc = nDcrc + CRCstring(s117)
.head 6 +  If SalFileWrite(hD, s117, 117) != 117
.head 7 -  Call SalFileClose(hD)
.head 7 -  Call VisFileDelete(sD)
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Return FALSE
.head 6 -  Set nKd = nKd + 1
.head 5 -  Call SalFileClose(hD)
.head 5 +  If SqlPrepareAndExecute(hSqlAux2(), T("
   SELECT dfi,crc
   FROM klpcrc
   INTO :dDFI,:nCRC
   WHERE sab=:sSab and tip='$'"))
.head 6 +  If SqlFetchNext(hSqlAux2(),nFetchRes)
.head 7 +  If SalFmtFormatDateTime(dDFI, 'yyyyMMdd') = SalFmtFormatDateTime(
   SalDateCurrent(), 'yyyyMMdd') and nCRC = nDcrc and not bBezUsl
.head 8 -  Call VisFileDelete(sD)
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Return FALSE
.head 7 +  Else
.head 8 -  Call SqlPrepareAndExecute(hSqlAux2(), T("
     UPDATE klpcrc
     SET dfi= TODAY ,crc=:nDcrc
     WHERE sab=:sSab and tip='$'"))
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute(hSqlAux2(), T("
     INSERT
     INTO klpcrc (sab,tip,dfi,crc)
     VALUES (:sSab,'$', TODAY ,:nDcrc)"))
.head 5 -  ! Подписать файл и поместить в нужный ящик
.head 5 +  If not bIni ! Надо инициализировать ЭЦП Cipher
.head 6 -  Call Message(TRUE, 'Инициализация ЭЦП Cipher', TRUE, COLOR_Black)
.head 6 -  Set nKw = InitCipher()
.head 6 +  If nKw != 0
.head 7 -  Call VisFileDelete(sD)
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при инициализации ЭЦП Cipher'),
     'Аварийная ситуация', 3, 1)
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 -  Set bIni = TRUE
.head 5 -  Set nhD = llopen(sD, OF_ReadWrite)
.head 5 +  If nhD > 0
.head 6 -  Set nKw = spPutBankSignOnFile(nhD, sD, 2)
.head 6 +  If nKw < 0
.head 7 -  Call llclose(nhD)
.head 7 -  Call VisFileDelete(sD)
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при подписи файла ' || sD),
     'Аварийная ситуация', 3, 1)
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 -  Set sDc = VisFileCreateTemp('~$~')
.head 7 -  Call VisFileDelete(sDc)
.head 7 -  Set nhDc = llcreat(sDc, OF_ReadWrite)
.head 7 +  If nhDc > 0
.head 8 -  ! зашифровать
.head 8 -  ! Set nSendId = 1 ! пока
! (надо получить из KlpLcw по sSab)
.head 8 -  Set nI = 0
.head 8 -  Set nSendId = 0
.head 8 -  Set nLenArr = LenArray(smlSAB)
.head 8 +  While nI <= nLenArr
.head 9 +  If SalStrUpperX(sSab) = smlSAB[nI]
.head 10 -  Set nSendId = nmlNOMER[nI]
.head 10 -  Break
.head 9 -  Set nI = nI + 1
.head 8 -  Set nKw = speProcessFile(1, nhD, nhDc, sD)
.head 8 -  Call llclose(nhD)
.head 8 -  Call llclose(nhDc)
.head 8 +  If nKw != 0
.head 9 -  Call VisFileDelete(sD)
.head 9 -  Call VisFileDelete(sDc)
.head 9 -  Call SqlRollback(hSqlAux2())
.head 9 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при шифровании файла ' || sD),
     'Аварийная ситуация', 3, 1)
.head 9 -  Return FALSE
.head 8 +  Else
.head 9 -  Call MomFileCopy(sD, sArchPath || 'ARH\\' || Right(sD, 12), TRUE)
.head 9 -  Call MomFileCopy(sDc, sDiskKata || sSab || '\\OUT\\' || Right(sD, 12), TRUE)
.head 9 -  Call VisFileDelete(sDc)
.head 9 -  Call VisFileDelete(sD)
.head 9 -  Call SqlCommit(hSqlAux2())
.head 9 -  Return TRUE
.head 7 +  Else
.head 8 -  Call llclose(nhD)
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Call VisFileDelete(sD)
.head 8 -  Call MessageNoWait('Ошибка при создании временного файла ' || sDc,
     'Аварийная ситуация', 3, 1)
.head 8 -  Return FALSE
.head 5 +  Else
.head 6 -  Call SqlRollback(hSqlAux2())
.head 6 -  Call VisFileDelete(sD)
.head 6 -  Call MessageNoWait('Ошибка при открытии файла ' || sD, 'Аварийная ситуация', 3, 1)
.head 6 -  Return FALSE
.head 3 +  Function: FormFileO
.head 4 -  Description: формирование файла %O
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sSab
.head 5 -  String: smMFOA[*]
.head 5 -  String: smNLSA[*]
.head 5 -  String: smMFOB[*]
.head 5 -  String: smNLSB[*]
.head 5 -  String: smNAMB[*]
.head 5 -  Number: nmS[*]
.head 5 -  String: smND[*]
.head 5 -  String: smNAZN[*]
.head 5 -  String: smPOND[*]
.head 5 -  String: smNameFileA[*]
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nKd
.head 5 -  Number: nLA
.head 5 -  Boolean: bZag
.head 5 -  String: sO
.head 5 -  File Handle: hO
.head 5 -  String: sDaTi
.head 5 -  Number: nSdeb
.head 5 -  Number: nSkre
.head 5 -  Number: nKw
.head 5 -  Number: nhO
.head 5 -  Number: nhOc
.head 5 -  String: sOc
.head 5 -  Long String: s296
.head 5 -  Number: nLenArr
.head 4 +  Actions
.head 5 -  Call SalArrayDimCount(smMFOA, nKd)
.head 5 -  Call SalArrayGetUpperBound(smMFOA, nKd, nLA)
.head 5 -  Set nKd = 0
.head 5 -  Set bZag = TRUE
.head 5 +  While nKd <= nLA
.head 6 +  If bZag ! Сформировать часть заголовка файла O
.head 7 -  Set sO = sEnCryptPath || '%O' || sSab || DaySymbol(SalDateCurrent()) ||
    MonthSymbol(SalDateCurrent()) || '.' || YearSymbol(SalDateCurrent()) ||
    Suffix(sSab, 'O')
.head 7 +  If not SalFileOpen(hO, sO, OF_Create | OF_ReadWrite)
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Return FALSE
.head 7 -  Set sDaTi = SalFmtFormatDateTime(SalDateCurrent(), 'yyyyMMdd') || Right('0' ||
    SalFmtFormatDateTime(SalDateCurrent(), 'hhhhmmss'), 6)
.head 7 +  If SalFileWrite(hO, Right(sO, 12) || sDaTi || PadL(Str(nLA+1), 4) || PutCrLf(), 32)
   != 32
.head 8 -  Call SalFileClose(hO)
.head 8 -  Call VisFileDelete(sO)
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Return FALSE
.head 7 -  Set bZag = FALSE
.head 6 -  Set s296 = PadL(VisStrLeftTrim(smMFOA[nKd]), 9) || PadL(
    VisStrLeftTrim(smNLSA[nKd]), 14) || PadL(VisStrLeftTrim(smMFOB[nKd]), 9) || PadL(
    VisStrLeftTrim(smNLSB[nKd]), 14) || PadR(StrWinToDosX(
    VisStrLeftTrim(smNAMB[nKd])), 38) || PadL(Str(nmS[nKd]), 16) || PadR(StrWinToDosX(
    VisStrLeftTrim(smND[nKd])), 10) || PadR(StrWinToDosX(
    VisStrLeftTrim(smNAZN[nKd])), 160) || PadR(VisStrLeftTrim(smPOND[nKd]), 8) ||
    PadR(VisStrLeftTrim(smNameFileA[nKd]), 12) || PadL(Str(nKd+1), 4) || PutCrLf()
.head 6 +  If SalFileWrite(hO, s296, 296) != 296
.head 7 -  Call SalFileClose(hO)
.head 7 -  Call VisFileDelete(sO)
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Return FALSE
.head 6 -  Set nKd = nKd + 1
.head 5 -  Call SalFileClose(hO)
.head 5 -  ! Подписать файл и поместить в нужный ящик
.head 5 +  If not bIni ! Надо инициализировать ЭЦП Cipher
.head 6 -  Call Message(TRUE, 'Инициализация ЭЦП Cipher', TRUE, COLOR_Black)
.head 6 -  Set nKw = InitCipher()
.head 6 +  If nKw != 0
.head 7 -  Call VisFileDelete(sO)
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при инициализации ЭЦП Cipher'),
     'Аварийная ситуация', 3, 1)
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 -  Set bIni = TRUE
.head 5 -  Set nhO = llopen(sO, OF_ReadWrite)
.head 5 +  If nhO > 0
.head 6 -  Set nKw = spPutBankSignOnFile(nhO, sO, 2)
.head 6 +  If nKw < 0
.head 7 -  Call llclose(nhO)
.head 7 -  Call VisFileDelete(sO)
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при подписи файла ' || sO),
     'Аварийная ситуация', 3, 1)
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 -  Set sOc = VisFileCreateTemp('~O~')
.head 7 -  Call VisFileDelete(sOc)
.head 7 -  Set nhOc = llcreat(sOc, OF_ReadWrite)
.head 7 +  If nhOc > 0
.head 8 -  ! зашифровать
.head 8 -  ! Set nSendId = 1 ! пока
! (надо получить из KlpLcw по sSab)
.head 8 -  Set nI = 0
.head 8 -  Set nSendId = 0
.head 8 -  Set nLenArr = LenArray(smlSAB)
.head 8 +  While nI <= nLenArr
.head 9 +  If SalStrUpperX(sSab) = smlSAB[nI]
.head 10 -  Set nSendId = nmlNOMER[nI]
.head 10 -  Break
.head 9 -  Set nI = nI + 1
.head 8 -  Set nKw = speProcessFile(1, nhO, nhOc, sO)
.head 8 -  Call llclose(nhO)
.head 8 -  Call llclose(nhOc)
.head 8 +  If nKw != 0
.head 9 -  Call VisFileDelete(sO)
.head 9 -  Call VisFileDelete(sOc)
.head 9 -  Call SqlRollback(hSqlAux2())
.head 9 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при шифровании файла ' || sO),
     'Аварийная ситуация', 3, 1)
.head 9 -  Return FALSE
.head 8 +  Else
.head 9 -  Call MomFileCopy(sO, sArchPath || 'ARH\\' || Right(sO, 12), TRUE)
.head 9 -  Call MomFileCopy(sOc, sDiskKata || sSab || '\\OUT\\' || Right(sO, 12), TRUE)
.head 9 -  Call VisFileDelete(sOc)
.head 9 -  Call VisFileDelete(sO)
.head 9 -  Call SqlCommit(hSqlAux2())
.head 9 -  Return TRUE
.head 7 +  Else
.head 8 -  Call llclose(nhO)
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Call VisFileDelete(sO)
.head 8 -  Call MessageNoWait('Ошибка при создании временного файла ' || sOc,
     'Аварийная ситуация', 3, 1)
.head 8 -  Return FALSE
.head 5 +  Else
.head 6 -  Call SqlRollback(hSqlAux2())
.head 6 -  Call VisFileDelete(sO)
.head 6 -  Call MessageNoWait('Ошибка при открытии файла ' || sO, 'Аварийная ситуация', 3, 1)
.head 6 -  Return FALSE
.head 3 +  Function: ObrFileA
.head 4 -  Description: обработка файла %A
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  String: sFileOrig
.head 5 -  String: sFileInput
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sNameFile
.head 5 -  Number: nDokCount
.head 5 -  Number: nDebSum
.head 5 -  Number: nKreSum
.head 5 -  !
.head 5 -  String: sMFOA
.head 5 -  String: sNLSA
.head 5 -  String: sOKPOA
.head 5 -  String: sMFOB
.head 5 -  String: sNLSB
.head 5 -  String: sOKPOB
.head 5 -  String: sOKPOO
.head 5 -  Number: nDebKre
.head 5 -  Number: nSumma
.head 5 -  Number: nVOB
.head 5 -  String: sND
.head 5 -  Number: nVAL
.head 5 -  Date/Time: dDATdok
.head 5 -  String: sNAMA
.head 5 -  String: sNAMB
.head 5 -  String: sNAZN
.head 5 -  String: sPOND
.head 5 -  Long String: sPDP1
.head 5 -  Long String: sPDP2
.head 5 -  String: sNameFileA
.head 5 -  Number: nPND
.head 5 -  Number: nLenDopRek
.head 5 -  Long String: sDopRek
.head 5 -  !
.head 5 -  Long String: sBuffer
.head 5 -  Number: nBytes
.head 5 -  String: sData
.head 5 -  String: sData2
.head 5 -  Long String: s1723
.head 5 -  Number: nAcc
.head 5 -  Number: nFetchRes
.head 5 -  String: sKKKK
.head 5 -  Number: nFl
.head 5 -  String: sInfo1
.head 5 -  String: sInfo2
.head 5 -  Number: nMdop
.head 5 -  Long String: sPDPinternal
.head 5 -  String: sKodK
.head 5 -  Date/Time: dDalic
.head 5 -  !
.head 5 -  String: sPrwo
.head 5 -  Number: nIsp
.head 5 -  String: sIsp
.head 5 -  Number: nEOM
.head 5 -  Number: nRazniza
.head 5 -  !
.head 5 -  String: sPARAMETR
.head 5 -  File Handle: hHan
.head 5 -  ! String: sPDP198
.head 5 -  ! String: sPDP298
.head 5 -  String: sPDP2x128
.head 5 -  String: sN
.head 5 -  String: sNs
.head 5 -  Number: nLenArr
.head 5 -  Number: nI
.head 5 -  Date/Time: dDokD
.head 5 -  !
.head 5 -  String: sOKPObars
.head 5 -  !
.head 5 -  String: sVer
.head 5 -  !
.head 5 -  String: sDataValut
.head 5 -  Date/Time: dDATval
.head 4 +  Actions
.head 5 +  If not SalFileOpen(hHan, sFileInput, OF_ReadWrite)
.head 6 -  Return 6
.head 5 -  ! Call SalStrSetBufferLength(sBuffer, 64)
.head 5 +  ! If SalFileRead(hHan, sBuffer, 64) != 64
!! llread(nHan, sBuffer, 64) != 64
.head 6 -      Call SalFileClose(hHan)
.head 6 -      Return 6
.head 5 +  If not SalFileGetStr(hHan, sBuffer, 100)
.head 6 -  Call SalFileClose(hHan)
.head 6 -  Return 6
.head 5 +  If Len(sBuffer) < 62
.head 6 -  Call SalFileClose(hHan)
.head 6 -  Return 6
.head 5 -  Set sVer = Right(sBuffer, Len(sBuffer)-62)
.head 5 -  ! Call Debug('versia=' || sVer || ' val(sver)=' || Str(Val(sVer)))
.head 5 -  Set sNameFile = Left(sBuffer, 12)
.head 5 -  Set nDokCount = Val(SalStrMidX(sBuffer, 26, 4))
.head 5 -  Set nDebSum = Val(SalStrMidX(sBuffer, 30, 16))
.head 5 -  Set nKreSum = Val(SalStrMidX(sBuffer, 46, 16))
.head 5 -  Set sKKKK = SalStrUpperX(SalStrMidX(sBuffer, 2, 4))
.head 5 +  If sNameFile != Right(sFileOrig, 12)
.head 6 -  Call SalFileClose(hHan)
.head 6 -  Return 5
.head 5 -  Set nI = 0
.head 5 -  Set nLenArr = LenArray(smlSAB)
.head 5 -  Set sKodK = ''
.head 5 +  While nI <= nLenArr
.head 6 +  If SalStrUpperX(sKKKK) = smlSAB[nI]
.head 7 -  Set sKodK = smlKOD[nI]
.head 7 -  Set dDalic = dmlDALI[nI]
.head 7 -  Break
.head 6 -  Set nI = nI + 1
.head 5 +  If SalStrLength(sKodK) = 0
.head 6 -  Call MessageNoWait('Нарушены лицензионные права для клиента ' || sKKKK,
     'ВНИМАНИЕ !!!', 3, 1)
.head 5 +  Else
.head 6 +  If dDalic < dBankDate
.head 7 -  Call MessageNoWait('Истек срок действия лицензии для клиента с кодом: ' ||
     VisStrTrim(sKodK) || ' (' || sKKKK || ')', 'ВНИМАНИЕ !!!', 3, 1)
.head 7 -  Return 7
.head 6 +  Else If dDalic - dBankDate < 8
.head 7 -  Set nRazniza = dBankDate - dDalic
.head 7 -  Call MessageNoWait('До окончания срока действия лицензии клиента с кодом: ' ||
     VisStrTrim(sKodK) || ' (' || sKKKK || ') осталось ' || Str(nRazniza) || ' дн.',
     'ВНИМАНИЕ !!!', 3, 1)
.head 5 -  Call SalFileSeek(hHan, Len(sBuffer)+2, FILE_SeekBegin)
.head 5 -  Set nCount0 = 0
.head 5 -  Set nCount1 = 0
.head 5 -  Set nCount2 = 0
.head 5 +  While TRUE
.head 6 -  ! Set nBytes = SalFileRead(hHan, sBuffer, IifN(Val(sVer)<10000, 363, 371))
!!           llread(nHan, sBuffer, IifN(Val(sVer)<10000, 363, 371))
.head 6 -  Set nBytes = SalFileRead(hHan, sBuffer, 371)
!!           llread(nHan, sBuffer, 371)
.head 6 -  ! Call Debug(sBuffer || ' Len(sBuffer)=' || Str(Len(sBuffer)))
.head 6 +  If nBytes != 371 !! IifN(Val(sVer)<10000, 363, 371)
.head 7 -  ! Call DebugN(nBytes)
.head 7 +  If nBytes = 0 or nBytes = 128 !! нормально (т.е. КОНЕЦ обработки)
.head 8 -  ! Проверка трех элементов сумм на достигнутом конце входного файла
.head 8 +  If nCount0 != nDokCount
.head 9 -  Call SqlRollbackEx(hSql(),'Пакет: ' || sNameFile ||
     ' Не совпадает количество документов с указанным в заголовке')
.head 9 -  Call SalFileClose(hHan)
.head 9 -  Return 4
.head 8 +  If nCount1 != nDebSum
.head 9 -  Call SqlRollback(hSql())
.head 9 -  Call SalFileClose(hHan)
.head 9 -  Return 3
.head 8 +  If nCount2 != nKreSum
.head 9 -  Call SqlRollback(hSql())
.head 9 -  Call SalFileClose(hHan)
.head 9 -  Return 2
.head 8 -  Call SqlCommitEx(hSql(), 'Документы из пакета ' || sNameFile || ' приняты (' ||
     Str(nCount0) || ',' || Str(nCount1+nCount2) || ')')
.head 8 -  Call SalFileClose(hHan)
.head 8 -  Return 0
.head 7 +  Else
.head 8 -  ! Call Debug('0 = ' || Str(nBytes))
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Call SalFileClose(hHan)
.head 8 -  Return 6
.head 6 -  ! Call Debug('371 = ' || Str(nBytes))
.head 6 +  If SalFileRead(hHan, sPDP1, 256) != 256
!! llread(nHan, sPDP1, 256) != 256
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call SalFileClose(hHan)
.head 7 -  Return 6
.head 6 +  If SalFileRead(hHan, sPDP2, 256) != 256
!! llread(nHan, sPDP2, 256) != 256
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call SalFileClose(hHan)
.head 7 -  Return 6
.head 6 -  ! Проверки всех реквизитов из sBuffer
.head 6 -  Set sMFOA = SalStrTrimX(Left(sBuffer, 9))
.head 6 -  Set sNLSA = SalStrTrimX(SalStrMidX(sBuffer, 9, 14))
.head 6 -  Set sOKPOA = SalStrTrimX(SalStrMidX(sBuffer, 23, 14))
.head 6 +  If (Len(sOKPOA) < 8 and Len(sOKPOA) > 3) or Len(sOKPOA) < 3
.head 7 -  Set sOKPOA = Right('00000000' || sOKPOA, 8)
.head 6 -  Set sOKPOO = ''
.head 6 -  Set sMFOB = SalStrTrimX(SalStrMidX(sBuffer, 37, 9))
.head 6 -  Set sNLSB = SalStrTrimX(SalStrMidX(sBuffer, 46, 14))
.head 6 -  Set sOKPOB = SalStrTrimX(SalStrMidX(sBuffer, 60, 14))
.head 6 +  If (Len(sOKPOB) < 8 and Len(sOKPOB) > 3) or Len(sOKPOB) < 3
.head 7 -  Set sOKPOB = Right('00000000' || sOKPOB, 8)
.head 6 -  Set nDebKre = Val(SalStrMidX(sBuffer, 74, 1))
.head 6 -  Set nSumma = Val(SalStrMidX(sBuffer, 75, 16))
.head 6 -  Set nVOB = Val(SalStrMidX(sBuffer, 91, 2))
.head 6 -  ! по умолчанию при 0 - 1 (поручение)
.head 6 -  Set nVOB = IifN(nVOB=0, 1, nVOB)
.head 6 -  Set sND = StrDosToWinX(SalStrTrimX(SalStrMidX(sBuffer, 93, 10)))
.head 6 -  Set nVAL = Val(SalStrMidX(sBuffer, 103, 3))
.head 6 +  If nVAL = 0
.head 7 -  Set nVAL = GetBaseVal() ! 980 - базовая валюта
.head 6 -  Set sData = SalStrMidX(sBuffer, 106, 8)
.head 6 -  Set dDATdok = SalDateConstruct(Val(Left(sData, 4)), Val(SalStrMidX(sData, 4, 2)), Val(
    SalStrMidX(sData, 6, 2)), 0, 0, 0)
.head 6 -  Set sNAMA = StrDosToWinX(SalStrTrimX(SalStrMidX(sBuffer, 114, 38)))
.head 6 -  Set sNAMB = StrDosToWinX(SalStrTrimX(SalStrMidX(sBuffer, 152, 38)))
.head 6 -  Set sNAZN = StrDosToWinX(SalStrTrimX(SalStrMidX(sBuffer, 190, 160)))
.head 6 -  Set sPOND = SalStrTrimX(SalStrMidX(sBuffer, 350, 8))
.head 6 -  Set nLenDopRek = Val(SalStrMidX(sBuffer, 358, 5))
.head 6 +  If Val(sVer) >= 10000
.head 7 -  ! новая версия КЛИЕНТСКОЙ части (с датой валютирования)
.head 7 -  Set sDataValut = SalStrMidX(sBuffer, 363, 8)
.head 7 +  If Val(sDataValut) = 0
.head 8 -  Set sDataValut = ''
.head 7 +  Else
.head 8 -  Set dDATval = SalDateConstruct(Val(Left(sDataValut, 4)), Val(
    SalStrMidX(sDataValut, 4, 2)), Val(SalStrMidX(sDataValut, 6, 2)), 0, 0, 0)
.head 8 +  If dDATval = dDATdok
.head 9 -  Set sDataValut = ''
.head 8 +  Else
.head 9 -  Set dDATval = IifD(dDATval<dBankDate, dBankDate, dDATval)
.head 6 +  Else
.head 7 -  Set sDataValut = ''
.head 6 -  Set s1723 = sBuffer
.head 6 +  If sOKPOA != sKodK
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call SalFileClose(hHan)
.head 7 -  Call MessageNoWait('Нарушены лицензионные права для клиента: ' || sNAMA || ' (' ||
     sKKKK || ')', 'ВНИМАНИЕ !!!', 3, 1)
.head 7 -  Return 7
.head 6 +  If SalFileRead(hHan, sBuffer, 16) != 16
!! llread(nHan, sBuffer, 16) != 16
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call SalFileClose(hHan)
.head 7 -  Return 6
.head 6 -  Set sNameFileA = Left(sBuffer, 12)
.head 6 -  Set nPND = Val(SalStrMidX(sBuffer, 12, 4))
.head 6 +  If nLenDopRek > 0
.head 7 +  If SalFileRead(hHan, sDopRek, nLenDopRek) != nLenDopRek
!! llread(nHan, sDopRek, nLenDopRek) != nLenDopRek
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Call SalFileClose(hHan)
.head 8 -  Return 6
.head 6 +  Else
.head 7 -  Set sDopRek = ''
.head 6 -  Set s1723 = s1723 || sDopRek
.head 6 +  If SalFileRead(hHan, sBuffer, 2) != 2
!! llread(nHan, sBuffer, 2) != 2
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call SalFileClose(hHan)
.head 7 -  Return 6
.head 6 -  ! Проверка всех реквизитов документа на допустимость
.head 6 -  Set sPrwo = ''
.head 6 +  If sMFOA != GetBankMfo()
.head 7 -  Set sPrwo = '*Ошибочно МФО банка А'
.head 6 -  ! Проверка на наличие счета в SALDO
.head 6 -  Set nAcc = -1
.head 6 +  If GetDBMS() = 'oracle'
.head 7 -  Call SqlPLSQLCommand(hSql(), "verify_acc(sNLSA, nVAL, nAcc)")
.head 7 +  If nAcc < 0
.head 8 -  Set sPrwo = '*Ошибочeн cчет А'
.head 6 +  Else
.head 7 +  If not SqlRetrieve(hSql(), "informix.verify_acc", "", ":sNLSA, :nVAL, :nAcc")
.head 8 -  Set sPrwo = '*Ошибочeн cчет А'
.head 7 +  If not SqlExecute(hSql())
.head 8 -  Set sPrwo = '*Ошибочeн cчет А'
.head 7 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 8 -  Set sPrwo = '*Ошибочeн cчет А'
.head 7 +  If nAcc < 0
.head 8 -  Set sPrwo = '*Ошибочeн cчет А'
.head 6 -  ! проверка на платеж с "чужого" счета
.head 6 -  Set nFl = 0
.head 6 +  If GetDBMS() = 'oracle'
.head 7 -  Call SqlPLSQLCommand(hSql(), "verify_alien(nAcc, sKKKK, nFl)")
.head 7 +  If nFl = 0
.head 8 -  Set sPrwo = '*Ошибочeн cчет А (чужой)'
.head 6 +  Else
.head 7 +  If not SqlRetrieve(hSql(), "informix.verify_alien", "", ":nAcc, :sKKKK, :nFl")
.head 8 -  Set sPrwo = '*Ошибочeн cчет А (чужой)'
.head 7 +  If not SqlExecute(hSql())
.head 8 -  Set sPrwo = '*Ошибочeн cчет А (чужой)'
.head 7 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 8 -  Set sPrwo = '*Ошибочeн cчет А (чужой)'
.head 7 +  If nFl = 0
.head 8 -  Set sPrwo = '*Ошибочeн cчет А (чужой)'
.head 6 +  If not DopustMfo(sMFOB)
.head 7 -  Set sPrwo = '*Ошибочно МФО банка Б'
.head 6 +  If Vkrz2(sMFOB,sNLSB) != sNLSB
.head 7 -  Set sPrwo = '*Ошибочен счет Б'
.head 6 +  If nSumma = 0 or nSumma >= SalNumberPower(10, 14)
.head 7 -  Set sPrwo = '*Ошибочна сумма документа'
.head 6 +  If SalStrLength(sNAMB) < 3
.head 7 -  Set sPrwo = '*Ошибочно наименование корреспондента'
.head 6 +  If SalStrLength(sNAZN) < 3
.head 7 -  Set sPrwo = '*Ошибочно назначение платежа'
.head 6 +  If sOKPOB != V_Okpo(sOKPOB)
.head 7 -  Set sPrwo = '*Ошибочен код ОКРО Б'
.head 6 -  Set nCount0 = nCount0 + 1
.head 6 +  If nDebKre = 0 ! дебет
.head 7 -  Set nCount1 = nCount1 + nSumma
.head 6 +  Else ! кредит
.head 7 -  Set nCount2 = nCount2 + nSumma
.head 6 +  If nCount0 != nPND
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call SalFileClose(hHan)
.head 7 -  Return 1
.head 6 -  ! Проверить подписи
.head 6 -  ! Set sPDP198 = Spac(98)
.head 6 -  Set sPDP2x128 = Spac(256)
.head 6 -  Call llstr2str(SalStrUpperX(sPDP1 || sPDP2), sPDP2x128, 512)
.head 6 -  ! Set nKw = _CHKSIGNB(s1723, IifN(Val(sVer)<10000, 363, 371)+nLenDopRek, sPDP198,
    sInfo1)
.head 6 -  ! Set nKw = spCheckClientSignOnMemory(1, s1723, IifN(Val(sVer)<10000, 363, 371),
    sPDP2x128, sDOCPOST)
.head 6 -  ! Call Debug(sDOCPOST)
.head 6 -  Set nKw = spCheckClientSignOnMemory(2, s1723, 371, sPDP2x128, sDOCPOST)
.head 6 +  If nKw != 0
.head 7 -  Set sPrwo = '*Ошибка подписи 2д.(' || Str(nKw) || ')'
.head 7 -  Call ErrMsgCipher(nKw, sPrwo)
.head 6 +  Else
.head 7 -  ! Set sPDP298 = Spac(98)
.head 7 -  ! Call llstr2str(SalStrUpperX(sPDP2), sPDP298, 196)
.head 7 -  ! Set nKw = spCheckClientSignOnMemory(2, s1723, IifN(Val(sVer)<10000, 363, 371),
    sPDP2x128, sDOCPOST)
.head 7 -  Set nKw = spCheckClientSignOnMemory(1, s1723, 371, sPDP2x128, sDOCPOST)
.head 7 +  If nKw != 0
.head 8 -  Set sPrwo = '*Ошибка подписи 1р.(' || Str(nKw) || ')'
.head 8 -  Call ErrMsgCipher(nKw, sPrwo)
.head 6 -  ! Подписать основные реквизиты подписью НБУ при включенном флаге подписи (внутренняя
! подпись) НЕ НАДО
.head 6 -  Set sPDPinternal = 'none' !!!
.head 6 -  Call SqlPrepareAndExecute(hSql(), T("
     SELECT MAX(dop)
     INTO :nMdop
     FROM klp_mt"))
.head 6 -  Call SqlFetchNext(hSql(), nFetchRes)
.head 6 +  If nMdop = NUMBER_Null
.head 7 -  Set nMdop = 0
.head 7 -  Call SqlPrepareAndExecute(hSql(), T("
     INSERT
     INTO klp_mt (dop)
     VALUES (0)"))
.head 6 +  If nLenDopRek > 0
.head 7 -  Set nMdop = nMdop + 1
.head 7 -  Call SqlPrepareAndExecute(hSql(), T("
     INSERT
     INTO klp_mt (dop,value)
     VALUES (:nMdop,:sDopRek)"))
.head 6 -  Call SqlPrepareAndExecute(hSql(), T("
     SELECT isp
     INTO :nIsp
     FROM accounts
     WHERE acc=:nAcc"))
.head 6 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 7 -  Call SalUseRegistry(FALSE, '')
.head 7 -  Call SalGetProfileString("ElektroKlients", "OperForAccNotFound", '0', sIsp,
     GetIniFileName())
.head 7 -  Set nIsp = SalNumberMax(1, SalNumberRound(Val(sIsp)))
.head 6 -  Set nEOM = nIsp
.head 6 -  Call SqlPrepareAndExecute(hSql(), T("
     SELECT neom
     INTO :nEOM
     FROM klpacc
     WHERE acc=:nAcc"))
.head 6 +  If SqlFetchNext(hSql(), nFetchRes)
.head 7 +  If nEOM = 0 or nEOM = NUMBER_Null
.head 8 -  Set nEOM = SalNumberMax(nIsp, 1)
.head 6 -  Set nFl = IifN(sPrwo='', 0, 1)
.head 6 -  Call SqlPrepareAndExecute(hSql(), T("
     SELECT datad
     INTO :dDokD
     FROM klp
     WHERE vob=:nVOB and nd=:sND and nls=:sNLSA and mfo=:sMFOB and nlsp=:sNLSB and
           s=:nSumma and text1=:sNAZN and fl<9"))
.head 6 +  If SqlFetchNext(hSql(), nFetchRes) and nFl = 0
.head 7 -  Set nFl = 1
.head 7 -  Set sPrwo = '*Дубль с док. от ' || SalFmtFormatDateTime(dDokD, 'dd-MM-yyyy')
.head 6 +  If Val(sVer) >= 10000 and Val(sDataValut) > 0
.head 7 -  Call SqlPrepare(hSql(), T("
     INSERT
     INTO klp (dop,eom,naex,vob,nd,datad,nls,mfo,naimp,nlsp,s,text1,isp,kokb,koka,
               koko,prwo,pdp1,fl,pond,kv,daval)
     VALUES (:nMdop,:nEOM,:sNameFile,:nVOB,:sND,:dDATdok,:sNLSA,:sMFOB,:sNAMB,
             :sNLSB,:nSumma,:sNAZN,:nIsp,:sOKPOB,:sOKPOA,:sOKPOO,:sPrwo,
             :sPDPinternal,:nFl,:sPOND,:nVAL,:dDATval)"))
.head 6 +  Else
.head 7 -  Call SqlPrepare(hSql(), T("
     INSERT
     INTO klp (dop,eom,naex,vob,nd,datad,nls,mfo,naimp,nlsp,s,text1,isp,kokb,koka,
               koko,prwo,pdp1,fl,pond,kv)
     VALUES (:nMdop,:nEOM,:sNameFile,:nVOB,:sND,:dDATdok,:sNLSA,:sMFOB,:sNAMB,
             :sNLSB,:nSumma,:sNAZN,:nIsp,:sOKPOB,:sOKPOA,:sOKPOO,:sPrwo,
             :sPDPinternal,:nFl,:sPOND,:nVAL)"))
.head 6 -  Call SqlSetLongBindDatatype(18, BLOB_BYTE)
.head 6 -  Call SqlExecute(hSql())
.head 3 +  Function: ObrFileQ
.head 4 -  Description: обработка файла %Q
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  String: sFileOrig
.head 5 -  String: sFileInput
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sMFOA
.head 5 -  String: smMFOA[*]
.head 5 -  String: sNLSA
.head 5 -  String: smNLSA[*]
.head 5 -  String: sNAMA
.head 5 -  String: smNAMA[*]
.head 5 -  String: sMFOB
.head 5 -  String: smMFOB[*]
.head 5 -  String: sNLSB
.head 5 -  String: smNLSB[*]
.head 5 -  String: sNAMB
.head 5 -  String: smNAMB[*]
.head 5 -  String: sOKPOB
.head 5 -  String: smOKPOB[*]
.head 5 -  Number: nDK
.head 5 -  Number: nmDK[*]
.head 5 -  Number: nS
.head 5 -  Number: nmS[*]
.head 5 -  Number: nVOB
.head 5 -  Number: nmVOB[*]
.head 5 -  String: sND
.head 5 -  String: smND[*]
.head 5 -  Number: nISP
.head 5 -  Number: nmISP[*]
.head 5 -  Number: nKV
.head 5 -  Number: nmKV[*]
.head 5 -  Date/Time: dDAOP
.head 5 -  Date/Time: dmDAOP[*]
.head 5 -  Number: nIOST
.head 5 -  Number: nmIOST[*]
.head 5 -  Date/Time: dDAPP
.head 5 -  Date/Time: dmDAPP[*]
.head 5 -  String: sNAZN
.head 5 -  String: smNAZN[*]
.head 5 -  String: sPOND
.head 5 -  String: smPOND[*]
.head 5 -  Number: nSK
.head 5 -  Number: nmSK[*]
.head 5 -  String: sNameFileA
.head 5 -  String: smNameFileA[*]
.head 5 -  Number: nREF
.head 5 -  Number: nmREF[*]
.head 5 -  !
.head 5 -  String: sNameFile
.head 5 -  Long String: sBuffer
.head 5 -  !
.head 5 -  Number: nKVzapros
.head 5 -  String: sSab
.head 5 -  File Handle: hHan
.head 5 -  String: sLSzapros
.head 5 -  Boolean: bZagol
.head 5 -  String: sFileNameV
.head 5 -  Number: nFetchRes
.head 5 -  Date/Time: dBaDa
.head 5 -  String: sDatdBaDa
.head 5 -  Number: nIsq
.head 5 -  !
.head 5 -  String: sOpenDay
.head 4 +  Actions
.head 5 +  If not SalFileOpen(hHan, sFileInput, OF_Read)
.head 6 +  If SalFileCopy(sFileInput, sArchPath || 'NOT\\' || Right(sFileInput, 12), TRUE) =
   FILE_CopyOK
.head 7 -  Call VisFileDelete(sFileInput)
.head 6 -  Return 6
.head 5 +  If SalFileRead(hHan, sBuffer, 32) != 32
!  llread(nHan, sBuffer, 32) != 32
.head 6 -  Call SalFileClose(hHan)
.head 6 +  If SalFileCopy(sFileInput, sArchPath || 'NOT\\' || Right(sFileInput, 12), TRUE) =
   FILE_CopyOK
.head 7 -  Call VisFileDelete(sFileInput)
.head 6 -  Return 6
.head 5 -  Set sNameFile = Left(sBuffer, 12)
.head 5 -  Set sSab = SalStrUpperX(SalStrMidX(sBuffer, 2, 4))
.head 5 -  Set nIsq = Val(SalStrTrimX(SalStrMidX(sBuffer, 26, 4)))
.head 5 +  If sNameFile != Right(sFileOrig, 12)
.head 6 -  Call SalFileClose(hHan)
.head 6 +  If SalFileCopy(sFileInput, sArchPath || 'NOT\\' || Right(sFileInput, 12), TRUE) =
   FILE_CopyOK
.head 7 -  Call VisFileDelete(sFileInput)
.head 6 -  Return 5
.head 5 -  Set nIQ = 0
.head 5 +  While nIQ < nIsq
.head 6 +  If SalFileRead(hHan, sBuffer, 31) != 31
.head 7 -  Call SalFileClose(hHan)
.head 7 +  If SalFileCopy(sFileInput, sArchPath || 'NOT\\' || Right(sFileInput, 12), TRUE) =
   FILE_CopyOK
.head 8 -  Call VisFileDelete(sFileInput)
.head 7 -  Return 5
.head 6 +  If Val(SalStrTrimX(SalStrMidX(sBuffer, 25, 4))) != nIQ+1
.head 7 -  Call SalFileClose(hHan)
.head 7 +  If SalFileCopy(sFileInput, sArchPath || 'NOT\\' || Right(sFileInput, 12), TRUE) =
   FILE_CopyOK
.head 8 -  Call VisFileDelete(sFileInput)
.head 7 -  Return 1
.head 6 -  Set sLSzapros = SalStrTrimX(Left(sBuffer, 14))
.head 6 -  Set nKVzapros = Val(SalStrMidX(sBuffer, 14, 3))
.head 6 -  Set nKVzapros = IifN(nKVzapros=0, GetBaseVal(), nKVzapros)
.head 6 -  Set sDatdBaDa = SalStrMidX(sBuffer, 21, 2) || '-' || SalStrMidX(sBuffer, 23, 2) || '-'
    || SalStrMidX(sBuffer, 17, 4)
.head 6 -  Set dBaDa = SalDateConstruct(Val(SalStrMidX(sBuffer, 17, 4)), Val(
    SalStrMidX(sBuffer, 21, 2)), Val(SalStrMidX(sBuffer, 23, 2)), 0, 0, 0)
.head 6 -  Set sOpenDay = IifS(dBankDate=dBaDa, GetGlobalOption(CFG_BANKDAY()), '0')
.head 6 -  Set nUid = GetUserId()
.head 6 +  If bKORP
.head 7 +  If SqlPrepareAndExecute(hSqlAux3(), T("
   SELECT count(*)
   INTO :nDiti
   FROM customer
   WHERE sab=:sSab and stmt=5"))
.head 8 +  If not SqlFetchNext(hSqlAux3(), nFetchRes)
.head 9 -  Set nDiti = 0
.head 7 +  Else
.head 8 -  Set nDiti = 0
.head 7 -  Set bKORP1 = nDiti>0
.head 6 +  Else
.head 7 -  Set bKORP1 = FALSE
.head 6 +  If SqlPLSQLCommand(hSql(), "p_lici" || IifS(bKORP1, "u", "") ||
   "(nUid,dBaDa,sSab,nKVzapros,sLSzapros)")
.head 7 -  Call SqlCommit(hSql())
.head 7 -  Call SqlPrepareAndExecute(hSql(), T("
     SELECT count(*)
     FROM tmp_lici
     INTO :nKwo
     WHERE id=:nUid"))
.head 7 -  Call SqlFetchNext(hSql(), nFetchRes)
.head 7 -  Set bOk = nKwo>0
.head 6 +  Else
.head 7 -  Set bOk = FALSE
.head 6 +  If bOk and SqlPrepareAndExecute(hSql(), T("
   SELECT nlsa,nama,mfob,nlsb,namb,okpob,dk,s,vob,nd,isp,kv,daopl,iost,dapp,nazn,pond,
          sk,namefilea,Kodirowka,nazns,bis,naznk,d_rec,fn_a,ref
   INTO :sNLSA,:sNAMA,:sMFOB,:sNLSB,:sNAMB,:sOKPOB,:nDK,:nS,:nVOB,:sND,:nISP,:nKV,
        :dDAOP,:nIOST,:dDAPP,:sNAZN,:sPOND,:nSK,:sNameFileA,:nKodirowka,:sNazns,:nBis,
        :sNaznk,:sD_rec,:sFn_a,:nREF
   FROM tmp_lici
   WHERE id=:nUid
   ORDER BY nlsa,dk,s"))
.head 7 -  Set sMFOA = GetBankMfo()
.head 7 -  Set nIndex = 0
.head 7 -  Call SalArraySetUpperBound(smMFOA, 1, -1)
.head 7 -  Call SalArraySetUpperBound(smNLSA, 1, -1)
.head 7 -  Call SalArraySetUpperBound(smNAMA, 1, -1)
.head 7 -  Call SalArraySetUpperBound(smMFOB, 1, -1)
.head 7 -  Call SalArraySetUpperBound(smNLSB, 1, -1)
.head 7 -  Call SalArraySetUpperBound(smNAMB, 1, -1)
.head 7 -  Call SalArraySetUpperBound(smOKPOB, 1, -1)
.head 7 -  Call SalArraySetUpperBound(nmDK, 1, -1)
.head 7 -  Call SalArraySetUpperBound(nmS, 1, -1)
.head 7 -  Call SalArraySetUpperBound(nmVOB, 1, -1)
.head 7 -  Call SalArraySetUpperBound(smND, 1, -1)
.head 7 -  Call SalArraySetUpperBound(nmISP, 1, -1)
.head 7 -  Call SalArraySetUpperBound(nmKV, 1, -1)
.head 7 -  Call SalArraySetUpperBound(dmDAOP, 1, -1)
.head 7 -  Call SalArraySetUpperBound(nmIOST, 1, -1)
.head 7 -  Call SalArraySetUpperBound(dmDAPP, 1, -1)
.head 7 -  Call SalArraySetUpperBound(smNAZN, 1, -1)
.head 7 -  Call SalArraySetUpperBound(smPOND, 1, -1)
.head 7 -  Call SalArraySetUpperBound(nmSK, 1, -1)
.head 7 -  Call SalArraySetUpperBound(smNameFileA, 1, -1)
.head 7 -  Call SalArraySetUpperBound(nmREF, 1, -1)
.head 7 +  While SqlFetchNext(hSql(), nFetchRes)
.head 8 -  Set smMFOA[nIndex] = sMFOA
.head 8 -  Set smNLSA[nIndex] = sNLSA
.head 8 -  Set smNAMA[nIndex] = sNAMA
.head 8 -  Set smMFOB[nIndex] = sMFOB
.head 8 -  Set smNLSB[nIndex] = sNLSB
.head 8 -  Set smNAMB[nIndex] = sNAMB
.head 8 -  Set smOKPOB[nIndex] = sOKPOB
.head 8 -  Set nmDK[nIndex] = nDK
.head 8 -  Set nmS[nIndex] = nS
.head 8 -  Set nmVOB[nIndex] = nVOB
.head 8 -  Set smND[nIndex] = sND
.head 8 -  Set nmISP[nIndex] = nISP
.head 8 -  Set nmKV[nIndex] = nKV
.head 8 -  Set dmDAOP[nIndex] = dDAOP
.head 8 -  Set nmIOST[nIndex] = nIOST
.head 8 -  Set dmDAPP[nIndex] = dDAPP
.head 8 -  Set smNAZN[nIndex] = sNAZN
.head 8 -  Set smPOND[nIndex] = sPOND
.head 8 -  Set nmSK[nIndex] = nSK
.head 8 -  Set smNameFileA[nIndex] = sNameFileA
.head 8 -  Set nmREF[nIndex] = nREF
.head 8 -  Set nIndex = nIndex + 1
.head 7 +  If nIndex = 0
.head 8 -  Call SqlPrepareAndExecute(hSql(), T("
     SELECT p.nam_a,a.isp,s.ostf,s.pdat,s.fdat
     INTO :sNAMA,:nISP,:nIOST,:dDAPP,:dDAOP
     FROM accounts A, customer C, cust_acc B, saldoa S, oper P, opldok O
     WHERE o.ref=p.ref and o.acc=a.acc and a.acc=s.acc and a.acc=b.acc and
           b.rnk=c.rnk and c.sab=:sSab and a.kv=:nKVzapros and
           a.nls=:sLSzapros and DATE(s.fdat)<=:sDatdBaDa
     ORDER BY 5 DESC"))
.head 8 -  Set smMFOA[0] = GetBankMfo()
.head 8 -  Set smNLSA[0] = sLSzapros
.head 8 -  Set smMFOB[0] = ''
.head 8 -  Set smNLSB[0] = ''
.head 8 -  Set smNAMB[0] = ''
.head 8 -  Set smOKPOB[0] = ''
.head 8 -  Set nmDK[0] = 9
.head 8 -  Set nmS[0] = 0
.head 8 -  Set nmVOB[0] = 0
.head 8 -  Set smND[0] = ''
.head 8 -  Set nmKV[0] = nKVzapros
.head 8 -  Set dmDAOP[0] = dBaDa
.head 8 -  Set smNAZN[0] = ''
.head 8 -  Set smPOND[0] = ''
.head 8 -  Set nmSK[0] = 0
.head 8 -  Set smNameFileA[0] = ''
.head 8 +  If SqlFetchNext(hSql(), nFetchRes)
.head 9 -  Set smNAMA[0] = sNAMA
.head 9 -  Set nmISP[0] = nISP
.head 9 -  Set nmIOST[0] = nIOST
.head 9 -  Set dmDAPP[0] = dDAPP
.head 8 +  Else
.head 9 -  Set smNAMA[0] = ''
.head 9 -  Set nmISP[0] = 0
.head 9 -  Set nmIOST[0] = 0
.head 9 -  Set dmDAPP[0] = dBankDate
.head 7 -  Call FormFileV(Str(Val(sOpenDay)+2), sSab, smMFOA, smNLSA, smNAMA, smMFOB, smNLSB,
     smNAMB, smOKPOB, nmDK, nmS, nmVOB, smND, nmISP, nmKV, dmDAOP, nmIOST, dmDAPP,
     smNAZN, smPOND, nmSK, smNameFileA, nmREF, '')
.head 6 -  Set nIQ = nIQ + 1
.head 5 -  Call SalFileClose(hHan)
.head 5 -  Return 0
.head 3 +  Function: OtborU
.head 4 -  Description: отбор информации по изменениям участников СЄП "электронным" клиентам
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sNBW
.head 5 -  String: smNBW[*]
.head 5 -  String: sMFO
.head 5 -  String: smMFO[*]
.head 5 -  String: sSEP
.head 5 -  String: smSEP[*]
.head 5 -  String: sOP
.head 5 -  String: smOP[*]
.head 5 -  String: sRowid
.head 5 -  !
.head 5 -  Number: nIndex
.head 5 -  Number: nFetchRes
.head 4 +  Actions
.head 5 +  If cbU
.head 6 -  Call SalWaitCursor(TRUE)
.head 6 -  Call Message(TRUE, 'Подготовка к формированию изменений списка участников СЭП...',
     TRUE, COLOR_Black)
.head 6 +  If SqlPrepareAndExecute(hSql(), T("
   SELECT nbw,mfo,sab,op,rowid
   INTO :sNBW,:sMFO,:sSEP,:sOP,:sRowid
   FROM klpu"))
.head 7 -  Call SalWaitCursor(FALSE)
.head 7 -  Set nIndex = 0
.head 7 +  While SqlFetchNext(hSql(), nFetchRes)
.head 8 -  Call Message(TRUE, 'Формирование изменений списка участников СЭП (' || Str(nIndex)
     || ')', TRUE, COLOR_Black)
.head 8 -  Set smNBW[nIndex] = SalStrTrimX(sNBW)
.head 8 -  Set smMFO[nIndex] = SalStrTrimX(sMFO)
.head 8 -  Set smSEP[nIndex] = sSEP
.head 8 -  Set smOP[nIndex] = sOP
.head 8 -  Set nIndex = nIndex + 1
.head 8 -  Call SqlPrepareAndExecute(hSqlAux(), T("
     UPDATE klpu
     SET otm='1'
     WHERE rowid=:sRowid"))
.head 7 +  If nIndex > 0
.head 8 -  Set nIU = 0
.head 8 -  Set bU = TRUE
.head 8 +  While nIU <= nKLI
.head 9 -  Set sSAB = smSAB[nIU]
.head 9 -  Set nRNK = nmRNK[nIU]
.head 9 -  Set sNMK = smNMK[nIU]
.head 9 -  Set sOKPO = smOKPO[nIU]
.head 9 -  Set sTIMES = smTIMES[nIU]
.head 9 -  Call Message(TRUE, 'Формирование изменений списка участников СЭП для ' || sSAB,
     TRUE, COLOR_Black)
.head 9 +  If not FormFileU(sSAB, smNBW, smMFO, smSEP, smOP)
.head 10 -  Set bU = FALSE
.head 9 -  Set nIU = nIU + 1
.head 8 +  If bU
.head 9 -  Call SqlCommit(hSql())
.head 9 -  Call SqlPrepareAndExecute(hSqlAux(), T("
     DELETE
     FROM klpu
     WHERE otm='1'"))
.head 9 -  Call SqlCommit(hSqlAux())
.head 8 +  Else
.head 9 -  Call SqlRollback(hSqlAux())
.head 9 -  Call SqlRollback(hSql())
.head 6 -  Call SalWaitCursor(FALSE)
.head 6 -  Call Message(FALSE, '', FALSE, 0)
.head 5 -  Return TRUE
.head 3 +  Function: OtborKV
.head 4 -  Description: отбор курсов валют "электронным" клиентам
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sSab
.head 5 -  !
.head 5 -  Number: nKV
.head 5 -  String: sSKV
.head 5 -  String: sNAME
.head 5 -  Number: nBSUM
.head 5 -  Date/Time: dVDATE
.head 5 -  Date/Time: dVDATEP
.head 5 -  Number: nRATE_O
.head 5 -  Number: nRATE_OP
.head 5 -  Number: nRATE_B
.head 5 -  Number: nRATE_S
.head 5 -  Number: nRATE_BP
.head 5 -  Number: nRATE_SP
.head 5 -  Number: nmKV[*]
.head 5 -  String: smSKV[*]
.head 5 -  String: smNAME[*]
.head 5 -  Number: nmBSUM[*]
.head 5 -  Date/Time: dmVDATE[*]
.head 5 -  Date/Time: dmVDATEP[*]
.head 5 -  Number: nmRATE_O[*]
.head 5 -  Number: nmRATE_OP[*]
.head 5 -  Number: nmRATE_B[*]
.head 5 -  Number: nmRATE_S[*]
.head 5 -  Number: nmRATE_BP[*]
.head 5 -  Number: nmRATE_SP[*]
.head 5 -  !
.head 5 -  Number: nFetchRes
.head 5 -  Number: nBaseVal
.head 5 -  Number: nIndexKV
.head 5 -  Boolean: b1
.head 5 -  !
.head 5 -  Number: nRNKtemp
.head 4 +  Actions
.head 5 +  If cbKV
.head 6 -  Call SalWaitCursor(TRUE)
.head 6 -  Call Message(TRUE, 'Подготовка к отбору курсов валют...', TRUE, COLOR_Black)
.head 6 -  Set nBaseVal = GetBaseVal()
.head 6 +  If SalStrUpperX(SalStrTrimX(GetDBMS())) = "ORACLE"
.head 7 -  Set b1 = SqlPLSQLCommand(hSql(), 'val_ku(dBankDate, nBaseVal)')
.head 6 +  Else
.head 7 -  Call SqlRetrieve(hSql(), "informix.val_ku", ":dBankDate", ":nBaseVal")
.head 7 -  Call SqlExecute(hSql())
.head 7 -  Set b1 = SqlFetchNext(hSql(), nFetchRes)
.head 6 +  If b1 and SqlPrepareAndExecute(hSql(), T("
   SELECT kv,lcv,name,bsum,vdate1,vdate2,rateo1,rateo2,rateb1,rates1,rateb2,rates2
   INTO :nKV,:sSKV,:sNAME,:nBSUM,:dVDATE,:dVDATEP,:nRATE_O,:nRATE_OP,:nRATE_B,
        :nRATE_S,:nRATE_BP,:nRATE_SP
   FROM tmp_valk
   ORDER BY 1"))
.head 7 -  Set nIndexKV = 0
.head 7 +  While SqlFetchNext(hSql(), nFetchRes)
.head 8 +  If nRATE_B = NUMBER_Null
.head 9 -  Set nRATE_B = 0
.head 8 +  If nRATE_BP = NUMBER_Null
.head 9 -  Set nRATE_BP = 0
.head 8 +  If nRATE_S = NUMBER_Null
.head 9 -  Set nRATE_S = 0
.head 8 +  If nRATE_SP = NUMBER_Null
.head 9 -  Set nRATE_SP = 0
.head 8 -  Set nmKV[nIndexKV] = nKV
.head 8 -  Set smSKV[nIndexKV] = sSKV
.head 8 -  Set smNAME[nIndexKV] = sNAME
.head 8 -  Set nmBSUM[nIndexKV] = nBSUM
.head 8 -  Set dmVDATE[nIndexKV] = dVDATE
.head 8 -  Set dmVDATEP[nIndexKV] = dVDATEP
.head 8 -  Set nmRATE_O[nIndexKV] = nRATE_O
.head 8 -  Set nmRATE_OP[nIndexKV] = nRATE_OP
.head 8 -  Set nmRATE_B[nIndexKV] = nRATE_B
.head 8 -  Set nmRATE_S[nIndexKV] = nRATE_S
.head 8 -  Set nmRATE_BP[nIndexKV] = nRATE_BP
.head 8 -  Set nmRATE_SP[nIndexKV] = nRATE_SP
.head 8 -  Set nIndexKV = nIndexKV + 1
.head 7 +  If nIndexKV > 0
.head 8 -  Set nIV = 0
.head 8 +  While nIV <= nKLI
.head 9 -  Set sSAB = smSAB[nIV]
.head 9 -  Set nRNK = nmRNK[nIV]
.head 9 -  Set sNMK = smNMK[nIV]
.head 9 -  Set sOKPO = smOKPO[nIV]
.head 9 -  Set sTIMES = smTIMES[nIV]
.head 9 +  If SqlPrepareAndExecute(hSql(), T("
   SELECT rnk
   INTO :nRNKtemp
   FROM klp_kv
   WHERE rnk=:nRNK"))
.head 10 +  If SqlFetchNext(hSql(), nFetchRes)
.head 11 -  Call Message(TRUE, 'Формирование справочника курсов валют для ' || sSAB,
     TRUE, COLOR_Black)
.head 11 +  If FormFileD(sSAB, nmKV, smSKV, smNAME, nmBSUM, dmVDATE, dmVDATEP, nmRATE_O,
   nmRATE_OP, nmRATE_B, nmRATE_S, nmRATE_BP, nmRATE_SP, cbKvAll)
.head 12 -  Call Message(TRUE, 'Cформирован справочник курсов валют' || ' для ' ||
     sSAB, TRUE, COLOR_DarkGreen)
.head 9 -  Set nIV = nIV + 1
.head 7 -  Call Message(FALSE, '', FALSE, 0)
.head 6 -  Call SalWaitCursor(FALSE)
.head 5 -  Return TRUE
.head 3 +  Function: OtborOO
.head 4 -  Description: отбор документов, принятых к оплате операционистом  "электронным" клиентам
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sSAB
.head 5 -  String: sMFOA
.head 5 -  String: smMFOA[*]
.head 5 -  String: sNLSA
.head 5 -  String: smNLSA[*]
.head 5 -  String: sMFOB
.head 5 -  String: smMFOB[*]
.head 5 -  String: sNLSB
.head 5 -  String: smNLSB[*]
.head 5 -  String: sNAMB
.head 5 -  String: smNAMB[*]
.head 5 -  Number: nS
.head 5 -  Number: nmS[*]
.head 5 -  String: sND
.head 5 -  String: smND[*]
.head 5 -  String: sNAZN
.head 5 -  String: smNAZN[*]
.head 5 -  String: sPOND
.head 5 -  String: smPOND[*]
.head 5 -  String: sNFIA
.head 5 -  String: smNFIA[*]
.head 5 -  String: sRowid
.head 5 -  !
.head 5 -  Number: nIndex
.head 5 -  Number: nFetchRes
.head 4 +  Actions
.head 5 +  If cbOO
.head 6 -  Call SalWaitCursor(TRUE)
.head 6 -  Call Message(TRUE, 'Подготовка к отбору документов, принятых к оплате...', TRUE,
     COLOR_Black)
.head 6 -  Set nIO = 0
.head 6 +  While nIO <= nKLI
.head 7 -  Set sSAB = smSAB[nIO]
.head 7 -  Set nRNK = nmRNK[nIO]
.head 7 -  Set sNMK = smNMK[nIO]
.head 7 -  Set sOKPO = smOKPO[nIO]
.head 7 -  Set sTIMES = smTIMES[nIO]
.head 7 +  If SqlPrepareAndExecute(hSqlAux3(), T("
   SELECT mfoa,nlsa,mfob,nlsb,namb,s,nd,nazn,pond,nfia,rowid
   INTO :sMFOA,:sNLSA,:sMFOB,:sNLSB,:sNAMB,:nS,:sND,:sNAZN,:sPOND,:sNFIA,:sRowid
   FROM klpoow
   WHERE sab=:sSAB and tip='O'"))
.head 8 -  Set nIndex = 0
.head 8 -  Call SalArraySetUpperBound(smMFOA, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNLSA, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smMFOB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNLSB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNAMB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmS, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smND, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNAZN, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smPOND, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNFIA, 1, -1)
.head 8 +  While SqlFetchNext(hSqlAux3(), nFetchRes)
.head 9 -  Set smMFOA[nIndex] = sMFOA
.head 9 -  Set smNLSA[nIndex] = sNLSA
.head 9 -  Set smMFOB[nIndex] = sMFOB
.head 9 -  Set smNLSB[nIndex] = sNLSB
.head 9 -  Set smNAMB[nIndex] = sNAMB
.head 9 -  Set nmS[nIndex] = nS
.head 9 -  Set smND[nIndex] = sND
.head 9 -  Set smNAZN[nIndex] = sNAZN
.head 9 -  Set smPOND[nIndex] = sPOND
.head 9 -  Set smNFIA[nIndex] = sNFIA
.head 9 -  Set nIndex = nIndex + 1
.head 9 -  Call SqlPrepareAndExecute(hSqlAux(), T("
     UPDATE klpoow
     SET otm='1'
     WHERE rowid=:sRowid"))
.head 8 +  If nIndex > 0
.head 9 -  Call Message(TRUE, 'Отбор документов, принятых к оплате операционистом для ' ||
     sSAB || ' (' || Str(nIndex) || ')', TRUE, COLOR_Black)
.head 9 +  If not FormFileO(sSAB, smMFOA, smNLSA, smMFOB, smNLSB, smNAMB, nmS, smND,
   smNAZN, smPOND, smNFIA)
.head 10 -  Call SqlRollback(hSqlAux())
.head 10 -  Call SqlRollback(hSqlAux3())
.head 10 -  Call Message(FALSE, '', FALSE, 0)
.head 10 -  Return FALSE
.head 9 -  Call SqlCommit(hSqlAux3())
.head 9 -  Call SqlPrepareAndExecute(hSqlAux(), T("
     DELETE
     FROM klpoow
     WHERE otm='1' and sab=:sSAB and tip='O'"))
.head 9 -  Call SqlCommit(hSqlAux())
.head 7 -  Set nIO = nIO + 1
.head 6 -  Call Message(FALSE, '', FALSE, 0)
.head 6 -  Call SalWaitCursor(FALSE)
.head 5 -  Return TRUE
.head 3 +  Function: OtborWW
.head 4 -  Description: отбор документов, возвращенных операционистом "электронным" клиентам
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sSAB
.head 5 -  String: sMFOA
.head 5 -  String: smMFOA[*]
.head 5 -  String: sNLSA
.head 5 -  String: smNLSA[*]
.head 5 -  String: sMFOB
.head 5 -  String: smMFOB[*]
.head 5 -  String: sNLSB
.head 5 -  String: smNLSB[*]
.head 5 -  String: sNAMB
.head 5 -  String: smNAMB[*]
.head 5 -  Number: nS
.head 5 -  Number: nmS[*]
.head 5 -  String: sND
.head 5 -  String: smND[*]
.head 5 -  String: sNAZN
.head 5 -  String: smNAZN[*]
.head 5 -  String: sPOND
.head 5 -  String: smPOND[*]
.head 5 -  String: sPRWO
.head 5 -  String: smPRWO[*]
.head 5 -  String: sNFIA
.head 5 -  String: smNFIA[*]
.head 5 -  String: sRowid
.head 5 -  !
.head 5 -  Number: nIndex
.head 5 -  Number: nFetchRes
.head 4 +  Actions
.head 5 +  If cbWO
.head 6 -  Call SalWaitCursor(TRUE)
.head 6 -  Call Message(TRUE, 'Подготовка к отбору возвращенных документов(О)...', TRUE,
     COLOR_Black)
.head 6 -  Set nIW = 0
.head 6 +  While nIW <= nKLI
.head 7 -  Set sSAB = smSAB[nIW]
.head 7 -  Set nRNK = nmRNK[nIW]
.head 7 -  Set sNMK = smNMK[nIW]
.head 7 -  Set sOKPO = smOKPO[nIW]
.head 7 -  Set sTIMES = smTIMES[nIW]
.head 7 +  If SqlPrepareAndExecute(hSqlAux3(), T("
   SELECT mfoa,nlsa,mfob,nlsb,namb,s,nd,nazn,pond,prwo,nfia,rowid
   INTO :sMFOA,:sNLSA,:sMFOB,:sNLSB,:sNAMB,:nS,:sND,:sNAZN,:sPOND,:sPRWO,:sNFIA,
        :sRowid
   FROM klpoow
   WHERE sab=:sSAB and tip='W'"))
.head 8 -  Set nIndex = 0
.head 8 -  Call SalArraySetUpperBound(smMFOA, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNLSA, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smMFOB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNLSB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNAMB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmS, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smND, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNAZN, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smPOND, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smPRWO, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNFIA, 1, -1)
.head 8 +  While SqlFetchNext(hSqlAux3(), nFetchRes)
.head 9 -  Set smMFOA[nIndex] = sMFOA
.head 9 -  Set smNLSA[nIndex] = sNLSA
.head 9 -  Set smMFOB[nIndex] = sMFOB
.head 9 -  Set smNLSB[nIndex] = sNLSB
.head 9 -  Set smNAMB[nIndex] = sNAMB
.head 9 -  Set nmS[nIndex] = nS
.head 9 -  Set smND[nIndex] = sND
.head 9 -  Set smNAZN[nIndex] = sNAZN
.head 9 -  Set smPOND[nIndex] = sPOND
.head 9 -  Set smPRWO[nIndex] = sPRWO
.head 9 -  Set smNFIA[nIndex] = sNFIA
.head 9 -  Set nIndex = nIndex + 1
.head 9 -  Call SqlPrepareAndExecute(hSqlAux(), T("
     UPDATE klpoow
     SET otm='1'
     WHERE rowid=:sRowid"))
.head 8 +  If nIndex > 0
.head 9 -  Call Message(TRUE, 'Отбор документов, возвращенных операционистом для ' || sSAB
     || ' (' || Str(nIndex) || ')', TRUE, COLOR_Black)
.head 9 +  If not FormFileW(sSAB, smMFOA, smNLSA, smMFOB, smNLSB, smNAMB, nmS, smND,
   smNAZN, smPOND, smPRWO, smNFIA)
.head 10 -  Call SqlRollback(hSqlAux())
.head 10 -  Call SqlRollback(hSqlAux3())
.head 10 -  Call Message(FALSE, '', FALSE, 0)
.head 10 -  Call SalWaitCursor(FALSE)
.head 10 -  Return FALSE
.head 9 -  Call SqlCommit(hSqlAux3())
.head 9 -  Call SqlPrepareAndExecute(hSqlAux(), T("
     DELETE
     FROM klpoow
     WHERE otm='1' and sab=:sSAB and tip='W'"))
.head 9 -  Call SqlCommit(hSqlAux())
.head 7 -  Set nIW = nIW + 1
.head 6 -  Call Message(FALSE, '', FALSE, 0)
.head 6 -  Call SalWaitCursor(FALSE)
.head 5 -  Return TRUE
.head 3 +  Function: OtborWWt
.head 4 -  Description: отбор документов, возвращенных ТЕХНОЛОГОМ "электронным" клиентам
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sSAB
.head 5 -  String: sMFOA
.head 5 -  String: smMFOA[*]
.head 5 -  String: sNLSA
.head 5 -  String: smNLSA[*]
.head 5 -  String: sMFOB
.head 5 -  String: smMFOB[*]
.head 5 -  String: sNLSB
.head 5 -  String: smNLSB[*]
.head 5 -  String: sNAMB
.head 5 -  String: smNAMB[*]
.head 5 -  Number: nS
.head 5 -  Number: nmS[*]
.head 5 -  String: sND
.head 5 -  String: smND[*]
.head 5 -  String: sNAZN
.head 5 -  String: smNAZN[*]
.head 5 -  String: sPOND
.head 5 -  String: smPOND[*]
.head 5 -  String: sPRWO
.head 5 -  String: smPRWO[*]
.head 5 -  String: sNFIA
.head 5 -  String: smNFIA[*]
.head 5 -  String: sRowidK
.head 5 -  !
.head 5 -  Number: nIndex
.head 5 -  Number: nFetchRes
.head 5 -  !
.head 5 -  Number: nRefMinus
.head 5 -  Number: nmRefMinus[*]
.head 5 -  Number: nIM
.head 5 -  Number: nLenMinus
.head 4 +  Actions
.head 5 +  If cbWT
.head 6 -  Call SalWaitCursor(TRUE)
.head 6 -  Call Message(TRUE, 'Подготовка к отбору возвращенных документов(Т)...', TRUE,
     COLOR_Black)
.head 6 +  If SqlPrepareAndExecute(hSqlAux3(), T("
   SELECT o.ref,o.mfoa,o.nlsa,o.mfob,o.nlsb,o.nam_b,o.s,o.nd,substr(o.nazn,1,40)
   INTO :nRefMinus,:sMFOA,:sNLSA,:sMFOB,:sNLSB,:sNAMB,:nS,:sND,:sPRWO
   FROM oper o
   WHERE o.vdat=:dBankDate and o.sos=-1 and o.tt='KL2'"))
.head 7 -  Set nIndex = 0
.head 7 -  Call SalArraySetUpperBound(nmRefMinus, 1, -1)
.head 7 +  While SqlFetchNext(hSqlAux3(), nFetchRes)
.head 8 -  Set nmRefMinus[nIndex] = nRefMinus
.head 8 -  Set nIndex = nIndex + 1
.head 7 +  If nIndex > 0
.head 8 -  Set nLenMinus = nIndex - 1
.head 8 -  Set nIM = 0
.head 8 +  While nIM <= nLenMinus
.head 9 -  Set nRefMinus = nmRefMinus[nIM]
.head 9 +  If SqlPrepareAndExecute(hSqlAux3(), T("
   SELECT k.text1,k.pond,k.naex,k.rowid
   INTO :sNAZN,:sPOND,:sNFIA,:sRowidK
   FROM klp k, klpond p
   WHERE p.ref=:nRefMinus and p.pond=k.pond and p.filename=k.naex and k.fl=8"))
.head 10 +  If SqlFetchNext(hSqlAux3(), nFetchRes)
.head 11 -  Call SalArraySetUpperBound(smMFOA, 1, -1)
.head 11 -  Call SalArraySetUpperBound(smNLSA, 1, -1)
.head 11 -  Call SalArraySetUpperBound(smMFOB, 1, -1)
.head 11 -  Call SalArraySetUpperBound(smNLSB, 1, -1)
.head 11 -  Call SalArraySetUpperBound(smNAMB, 1, -1)
.head 11 -  Call SalArraySetUpperBound(nmS, 1, -1)
.head 11 -  Call SalArraySetUpperBound(smND, 1, -1)
.head 11 -  Call SalArraySetUpperBound(smNAZN, 1, -1)
.head 11 -  Call SalArraySetUpperBound(smPOND, 1, -1)
.head 11 -  Call SalArraySetUpperBound(smPRWO, 1, -1)
.head 11 -  Call SalArraySetUpperBound(smNFIA, 1, -1)
.head 11 -  Set smMFOA[0] = sMFOA
.head 11 -  Set smNLSA[0] = sNLSA
.head 11 -  Set smMFOB[0] = sMFOB
.head 11 -  Set smNLSB[0] = sNLSB
.head 11 -  Set smNAMB[0] = sNAMB
.head 11 -  Set nmS[0] = nS
.head 11 -  Set smND[0] = sND
.head 11 -  Set smNAZN[0] = sNAZN
.head 11 -  Set smPOND[0] = sPOND
.head 11 -  Set smPRWO[0] = sPRWO
.head 11 -  Set smNFIA[0] = sNFIA
.head 11 +  If SqlPrepareAndExecute(hSqlAux(), T("
   UPDATE klp
   SET fl=9
   WHERE rowid=:sRowidK"))
.head 12 -  Call Message(TRUE, 'Отбор документов, возвращенных технологом для ' ||
     Subs(sNFIA, 3, 4) || ' (1)', TRUE, COLOR_Black)
.head 12 +  If not FormFileW(Subs(sNFIA, 3, 4), smMFOA, smNLSA, smMFOB, smNLSB,
   smNAMB, nmS, smND, smNAZN, smPOND, smPRWO, smNFIA)
.head 13 -  Call SqlRollback(hSqlAux())
.head 13 -  Call Message(TRUE,
    'Ошибка отбора документов, возвращенных технологом для ' ||
     Subs(sNFIA, 3, 4), TRUE, COLOR_Red)
.head 13 -  Call SalWaitCursor(FALSE)
.head 13 -  Return FALSE
.head 12 +  Else
.head 13 -  Call SqlCommit(hSqlAux())
.head 13 -  Call Message(TRUE, 'Отобраны документы, возвращенные технологом для ' ||
     Subs(sNFIA, 3, 4) || ' (1)', TRUE, COLOR_Black)
.head 11 +  Else
.head 12 -  Call SqlRollback(hSqlAux())
.head 9 -  Set nIM = nIM + 1
.head 7 +  Else
.head 8 -  Call Message(TRUE, 'Возвращенные документы(Т) отсутствуют.', TRUE, COLOR_Blue)
.head 6 -  Call SalWaitCursor(FALSE)
.head 5 -  Return TRUE
.head 3 +  Function: GetFileDate
.head 4 -  Description: получить дату файла по имени
.head 4 +  Returns
.head 5 -  Date/Time:
.head 4 +  Parameters
.head 5 -  String: sFileName
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return SalDateConstruct(Char2Digit(SalStrMidX(sFileName, 9, 1)) + 1998, Char2Digit(
       SalStrMidX(sFileName, 7, 1)), Char2Digit(SalStrMidX(sFileName, 6, 1)), 0, 0, 0)
.head 3 +  Function: Char2Digit
.head 4 -  Description: получить число по символу
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  String: sChar
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nTemp
.head 4 +  Actions
.head 5 -  Set nTemp = SalStrLop(sChar)
.head 5 -  Return nTemp - IifN(nTemp>57, 55, 48)
.head 3 +  Function: File2Arch
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sPrefix
.head 5 -  String: sFileName
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: hF
.head 5 -  Number: nBytes
.head 5 -  Long String: sTabi
.head 5 -  Long String: sTelo
.head 5 -  Date/Time: dDfTf
.head 4 +  Actions
.head 5 -  ! открыть файл (sArchPath || sPrefix || sFileName)
.head 5 -  ! прочитать тело и записать в таблицы Klp_ARCH и Klp_Files
.head 5 -  ! если успешно, удалить файл (sArchPath || sPrefix || sFileName)
.head 5 +  If sPrefix = 'INA' or sPrefix = 'INQ'
.head 6 -  Call VisFileDelete(sArchPath || sPrefix || '\\' || sFileName)
.head 6 -  Return TRUE
.head 5 +  If SalFileOpen(hF, sArchPath || sPrefix || '\\' || sFileName, OF_Read)
.head 6 -  Call SalFileGetDateTime(sArchPath || sPrefix || '\\' || sFileName, dDfTf)
.head 6 -  Set sTabi = ''
.head 6 -  Call SalStrSetBufferLength(sTelo, 65534)
.head 6 +  While TRUE
.head 7 -  Set nBytes = SalFileRead(hF, sTelo, 65534)
.head 7 +  If nBytes > 0
.head 8 -  Set sTabi = sTabi || Left(sTelo, nBytes)
.head 7 +  If nBytes < 65534
.head 8 -  Break
.head 6 -  Call SalFileClose(hF)
.head 6 -  ! Сжимаем строку для экономии места в БД
  (это себя, к сожалению, не оправдало)
.head 6 -  ! Call SalStrCompress(sTabi)
.head 6 +  If Len(GetValueStr("
   SELECT fn
   FROM klp_files
   WHERE fn='" || sFileName || "'")) > 0
.head 7 +  If not SqlPrepareAndExecute(hSql(), T("
   DELETE
   FROM klp_files
   WHERE fn=:sFileName")) or not SqlPrepareAndExecute(
   hSql(), T("
   DELETE
   FROM klp_arch
   WHERE fn=:sFileName"))
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Return FALSE
.head 6 +  If SqlPrepare(hSql(), T("
   INSERT
   INTO klp_files (fn,body)
   VALUES (:sFileName,:sTabi)"))
.head 7 -  Call SqlSetLongBindDatatype(2, BLOB_BYTE)
.head 7 +  If SqlExecute(hSql())
.head 8 +  If SqlPrepareAndExecute(hSql(), T("
   INSERT
   INTO klp_arch (fn,tip,filedate)
   VALUES (:sFileName,:sPrefix,:dDfTf)"))
.head 9 +  If VisFileDelete(sArchPath || sPrefix || '\\' || sFileName) < 0
.head 10 -  Call SqlRollback(hSql())
.head 10 -  Return FALSE
.head 9 -  Call SqlCommit(hSql())
.head 9 -  Return TRUE
.head 8 +  Else
.head 9 -  Call SqlRollback(hSql())
.head 9 -  Return FALSE
.head 7 +  Else
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Return FALSE
.head 6 +  Else
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Return FALSE
.head 5 -  Return FALSE
.head 3 +  Function: Message
.head 4 -  Description: вывод текста в окно и запись в LOG
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Boolean: bTab
.head 5 -  String: sStr
.head 5 -  Boolean: bTL
.head 5 -  Number: nColor
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nNewRow
.head 5 -  String: sTime
.head 4 +  Actions
.head 5 +  If bTL
.head 6 -  Call SaveInfoToLog(sStr)
.head 5 -  Set sTime = SalFmtFormatDateTime(SalDateCurrent(), 'hhhh:mm:ss ')
.head 5 -  Call SalSetWindowText(ml1, IifS(Len(sStr)>0, sTime, '') || sStr)
.head 5 +  If sStr != '' and bTab
.head 6 -  ! вмалевать строку в табличку TblMessage
.head 6 -  Set nNewRow = SalTblInsertRow(tblMessage, TBL_MaxRow)
.head 6 -  Call SalTblSetContext(tblMessage, nNewRow)
.head 6 -  Set tblMessage.colTime = SalStrTrimX(sTime)
.head 6 -  Set tblMessage.colText = sStr
.head 6 -  Call SalTblSetFocusRow(tblMessage, nNewRow)
.head 6 -  ! Call XSalTblSetRowBackColor(tblMessage, nNewRow, nColor)
.head 6 -  Call SetTblRowColor(tblMessage, nColor)
.head 5 -  Call SalUpdateWindow(hWndForm)
.head 3 +  Function: OtborLS
.head 4 -  Description: отбор ЛС "электронным" клиентам
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sSAB
.head 5 -  Number: nRNK
.head 5 -  String: sNMK
.head 5 -  Number: nFetchRes
.head 5 -  Number: nIndex
.head 5 -  Date/Time: dBaDa
.head 5 -  !
.head 5 -  String: sMFOA
.head 5 -  String: smMFOA[*]
.head 5 -  String: sNLSA
.head 5 -  String: smNLSA[*]
.head 5 -  String: sNAMA
.head 5 -  String: smNAMA[*]
.head 5 -  String: sMFOB
.head 5 -  String: smMFOB[*]
.head 5 -  String: sNLSB
.head 5 -  String: smNLSB[*]
.head 5 -  String: sNAMB
.head 5 -  String: smNAMB[*]
.head 5 -  String: sOKPOB
.head 5 -  String: smOKPOB[*]
.head 5 -  Number: nDK
.head 5 -  Number: nmDK[*]
.head 5 -  Number: nS
.head 5 -  Number: nmS[*]
.head 5 -  Number: nVOB
.head 5 -  Number: nmVOB[*]
.head 5 -  String: sND
.head 5 -  String: smND[*]
.head 5 -  Number: nISP
.head 5 -  Number: nmISP[*]
.head 5 -  Number: nKV
.head 5 -  Number: nmKV[*]
.head 5 -  Date/Time: dDAOP
.head 5 -  Date/Time: dmDAOP[*]
.head 5 -  Number: nIOST
.head 5 -  Number: nmIOST[*]
.head 5 -  Date/Time: dDAPP
.head 5 -  Date/Time: dmDAPP[*]
.head 5 -  String: sNAZN
.head 5 -  String: smNAZN[*]
.head 5 -  String: sPOND
.head 5 -  String: smPOND[*]
.head 5 -  Number: nSK
.head 5 -  Number: nmSK[*]
.head 5 -  String: sNameFileA
.head 5 -  String: smNameFileA[*]
.head 5 -  Number: nREF
.head 5 -  Number: nmREF[*]
.head 5 -  !
.head 5 -  String: sOpenDay
.head 5 -  !
.head 5 -  String: sNazns
.head 5 -  Number: nBis
.head 5 -  String: sNaznk
.head 5 -  String: sD_rec
.head 5 -  String: sFn_a
.head 5 -  String: sNaznBis
.head 5 -  String: sD_recBis
.head 5 -  !
.head 5 -  Number: nUid
.head 5 -  Number: nKwo
.head 5 -  Boolean: bOk
.head 5 -  Number: nVal
.head 4 +  Actions
.head 5 +  If cbLS
.head 6 -  Call SalWaitCursor(TRUE)
.head 6 -  Call Message(TRUE, 'Подготовка к отбору выписок...', TRUE, COLOR_Black)
.head 6 -  Set dBaDa = dBankDate
.head 6 -  Set sOpenDay = GetGlobalOption(CFG_BANKDAY())
.head 6 -  Set nIL = 0
.head 6 +  While nIL <= nKLI
.head 7 -  Set sSAB = smSAB[nIL]
.head 7 -  Set nRNK = nmRNK[nIL]
.head 7 -  Set sNMK = smNMK[nIL]
.head 7 -  Set sOKPO = smOKPO[nIL]
.head 7 -  Set sTIMES = smTIMES[nIL]
.head 7 -  Set nUid = GetUserId()
.head 7 -  ! Set nVal = GetBaseVal()
.head 7 -  Set nVal = NUMBER_Null
.head 7 +  If SqlPLSQLCommand(hSql(), "p_lici" || IifS(bmKORP[nIL], "u", "") ||
   "(nUid,dBaDa,sSAB,nVal,'%')")
.head 8 -  Call SqlCommit(hSql())
.head 8 -  Call SqlPrepareAndExecute(hSql(), T("
     SELECT count(*)
     FROM tmp_lici
     INTO :nKwo
     WHERE id=:nUid"))
.head 8 -  Call SqlFetchNext(hSql(), nFetchRes)
.head 8 -  Set bOk = nKwo>0
.head 7 +  Else
.head 8 -  Set bOk = FALSE
.head 7 +  If bOk and SqlPrepareAndExecute(hSql(), T("
   SELECT nlsa,nama,mfob,nlsb,namb,okpob,dk,s,vob,nd,isp,kv,daopl,iost,dapp,nazn,
          pond,sk,namefilea,Kodirowka,nazns,bis,naznk,d_rec,fn_a,ref
   INTO :sNLSA,:sNAMA,:sMFOB,:sNLSB,:sNAMB,:sOKPOB,:nDK,:nS,:nVOB,:sND,:nISP,:nKV,
        :dDAOP,:nIOST,:dDAPP,:sNAZN,:sPOND,:nSK,:sNameFileA,:nKodirowka,:sNazns,
        :nBis,:sNaznk,:sD_rec,:sFn_a,:nREF
   FROM tmp_lici
   WHERE id=:nUid
   ORDER BY nlsa,dk,s"))
.head 8 -  Set sMFOA = GetBankMfo()
.head 8 -  Set nIndex = 0
.head 8 -  Call SalArraySetUpperBound(smMFOA, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNLSA, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNAMA, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smMFOB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNLSB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNAMB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smOKPOB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmDK, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmS, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmVOB, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smND, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmISP, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmKV, 1, -1)
.head 8 -  Call SalArraySetUpperBound(dmDAOP, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmIOST, 1, -1)
.head 8 -  Call SalArraySetUpperBound(dmDAPP, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNAZN, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smPOND, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmSK, 1, -1)
.head 8 -  Call SalArraySetUpperBound(smNameFileA, 1, -1)
.head 8 -  Call SalArraySetUpperBound(nmREF, 1, -1)
.head 8 +  While SqlFetchNext(hSql(), nFetchRes)
.head 9 -  Set smMFOA[nIndex] = sMFOA
.head 9 -  Set smNLSA[nIndex] = sNLSA
.head 9 -  Set smNAMA[nIndex] = IifS(nKodirowka=0, sNAMA, StrDosToWinX(sNAMA))
.head 9 -  Set smMFOB[nIndex] = sMFOB
.head 9 -  Set smNLSB[nIndex] = sNLSB
.head 9 -  Set smNAMB[nIndex] = IifS(nKodirowka=0, sNAMB, StrDosToWinX(sNAMB))
.head 9 -  Set smOKPOB[nIndex] = sOKPOB
.head 9 -  Set nmDK[nIndex] = nDK
.head 9 -  Set nmS[nIndex] = nS
.head 9 -  Set nmVOB[nIndex] = nVOB
.head 9 -  Set smND[nIndex] = IifS(nKodirowka=0, sND, StrDosToWinX(sND))
.head 9 -  Set nmISP[nIndex] = nISP
.head 9 -  Set nmKV[nIndex] = nKV
.head 9 -  Set dmDAOP[nIndex] = dDAOP
.head 9 -  Set nmIOST[nIndex] = nIOST
.head 9 -  Set dmDAPP[nIndex] = dDAPP
.head 9 -  Set smNAZN[nIndex] = IifS(nKodirowka=0, sNAZN, StrDosToWinX(sNAZN))
.head 9 -  Set sD_rec = StrDosToWinX(sD_rec)
.head 9 +  If sNazns = '00'
.head 10 -  Set smNAZN[nIndex] = SalStrTrimX(GetValueStr("
    SELECT n_np
    FROM s_np
    WHERE k_np='" || sNaznk || "'"))
.head 9 +  Else If sNazns = '01' or sNazns = '11' or sNazns = '41'
.head 10 -  Set smNAZN[nIndex] = IifS(sNazns='01', SalStrTrimX(GetValueStr("
    SELECT n_np
    FROM s_np
    WHERE k_np='" || sNaznk || "'")), smNAZN[nIndex])
.head 10 +  If SalStrScan(sD_rec, '#B') >= 0 !! есть БИСы
.head 11 -  Call SqlPrepareAndExecute(hSqlAux3(), "
     SELECT nazn,d_rec
     INTO :sNaznBis,:sD_recBis
     FROM arc_rrp
     WHERE fn_a=:sFn_a and nd=:sND and ref is null and bis>1 and s=0 and
           dk=3 and nazns=33
     ORDER BY bis")
.head 11 +  While SqlFetchNext(hSqlAux3(), nFetchRes)
.head 12 -  Set smNAZN[nIndex] = SalStrTrimX(smNAZN[nIndex] || ' ' || StrDosToWinX(
    Left(Right(sNaznBis, Len(sNaznBis)-2), Len(Right(sNaznBis,
    Len(sNaznBis)-2))-1)) || ' ' || StrDosToWinX(Left(Right(sD_recBis,
    Len(sD_recBis)-2), Len(Right(sD_recBis, Len(sD_recBis)-2))-1)))
.head 9 +  Else If sNazns = '21' or sNazns = '20'
.head 10 -  Set smNAZN[nIndex] = SalStrTrimX(GetValueStr("
    SELECT n_np
    FROM s_np
    WHERE k_np='" || sNaznk || "'") || ' ' || smNAZN[nIndex])
.head 10 +  If sNazns = '21' and SalStrScan(sD_rec, '#B') >= 0
!! есть БИСы
.head 11 -  Call SqlPrepareAndExecute(hSqlAux3(), "
     SELECT nazn,d_rec
     INTO :sNaznBis,:sD_recBis
     FROM arc_rrp
     WHERE fn_a=:sFn_a and nd=:sND and ref is null and bis>1 and s=0 and
           dk=3 and nazns=33
     ORDER BY bis")
.head 11 +  While SqlFetchNext(hSqlAux3(), nFetchRes)
.head 12 -  Set smNAZN[nIndex] = SalStrTrimX(smNAZN[nIndex] || ' ' || StrDosToWinX(
    Left(Right(sNaznBis, Len(sNaznBis)-2), Len(Right(sNaznBis,
    Len(sNaznBis)-2))-1)) || ' ' || StrDosToWinX(Left(Right(sD_recBis,
    Len(sD_recBis)-2), Len(Right(sD_recBis, Len(sD_recBis)-2))-1)))
.head 9 +  ! Else !! If sNazns = '10' or sNazns = '40'
.head 10 -      Set smNAZN[nIndex] = smNAZN[nIndex]
.head 9 -  Set smPOND[nIndex] = sPOND
.head 9 -  Set nmSK[nIndex] = nSK
.head 9 -  Set smNameFileA[nIndex] = sNameFileA
.head 9 -  Set nmREF[nIndex] = nREF
.head 9 -  Set nIndex = nIndex + 1
.head 8 +  If nIndex > 0
.head 9 -  Call Message(TRUE, 'Отбор выписки для клиента ' || sSAB || ' (' || sNMK || ')',
     TRUE, COLOR_Black)
.head 9 -  Call FormFileV(sOpenDay, sSAB, smMFOA, smNLSA, smNAMA, smMFOB, smNLSB, smNAMB,
     smOKPOB, nmDK, nmS, nmVOB, smND, nmISP, nmKV, dmDAOP, nmIOST, dmDAPP,
     smNAZN, smPOND, nmSK, smNameFileA, nmREF, sTIMES)
.head 7 -  Set nIL = nIL + 1
.head 6 -  Call SalWaitCursor(FALSE)
.head 5 -  Return TRUE
.head 3 +  Function: FormFileV
.head 4 -  Description: формирование файла %V
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: s01
.head 5 -  String: sSab
.head 5 -  String: smMFOA[*]
.head 5 -  String: smNLSA[*]
.head 5 -  String: smNAMA[*]
.head 5 -  String: smMFOB[*]
.head 5 -  String: smNLSB[*]
.head 5 -  String: smNAMB[*]
.head 5 -  String: smOKPOB[*]
.head 5 -  Number: nmDK[*]
.head 5 -  Number: nmS[*]
.head 5 -  Number: nmVOB[*]
.head 5 -  String: smND[*]
.head 5 -  Number: nmISP[*]
.head 5 -  Number: nmKV[*]
.head 5 -  Date/Time: dmDAOP[*]
.head 5 -  Number: nmIOST[*]
.head 5 -  Date/Time: dmDAPP[*]
.head 5 -  String: smNAZN[*]
.head 5 -  String: smPOND[*]
.head 5 -  Number: nmSK[*]
.head 5 -  String: smNameFileA[*]
.head 5 -  Number: nmREF[*]
.head 5 -  String: sTITI
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nKd
.head 5 -  Number: nLA
.head 5 -  Boolean: bZag
.head 5 -  String: sV
.head 5 -  File Handle: hV
.head 5 -  String: sDaTi
.head 5 -  Number: nSdeb
.head 5 -  Number: nSkre
.head 5 -  Number: nKw
.head 5 -  Number: nhV
.head 5 -  Number: nhVc
.head 5 -  String: sVc
.head 5 -  Long String: s404
.head 5 -  !
.head 5 -  Number: nVcrc
.head 5 -  Number: nFetchRes
.head 5 -  Date/Time: dDFI
.head 5 -  Number: nCRC
.head 5 -  !
.head 5 -  Number: nLenArr
.head 5 -  Number: nIv
.head 5 -  !
.head 5 -  Number: nInterval
.head 4 +  Actions
.head 5 -  Call SalArrayDimCount(smMFOA, nKd)
.head 5 -  Call SalArrayGetUpperBound(smMFOA, nKd, nLA)
.head 5 -  Set nKd = 0
.head 5 -  Set nVcrc = 0
.head 5 -  Set bZag = TRUE
.head 5 +  While nKd <= nLA
.head 6 +  If bZag ! Сформировать часть заголовка файла V
.head 7 -  ! Set sV = '%V' || sSab || DaySymbol(dmDAOP[0]) || MonthSymbol(dmDAOP[0]) || '.' ||
    YearSymbol(dmDAOP[0]) || Suffix(sSab, 'V')
.head 7 -  Set sV = sEnCryptPath || '%V' || sSab || DaySymbol(dmDAOP[0]) ||
    MonthSymbol(dmDAOP[0]) || '.' || YearSymbol(dmDAOP[0]) || IifS(Mod(
    Val(s01), 2) = 1, '00', 'ZA')
.head 7 +  If not SalFileOpen(hV, sV, OF_Create | OF_ReadWrite)
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Call MessageNoWait('Ошибка при создании файла ' || sV, 'Аварийная ситуация', 3, 1)
.head 8 -  Return FALSE
.head 7 -  Set sDaTi = SalFmtFormatDateTime(dmDAOP[0], 'yyyyMMdd') || IifS(
    Right(sV, 2)='ZA', '235959', Right('0' || SalFmtFormatDateTime(
    SalDateCurrent(), 'hhhhmmss'), 6))
.head 7 +  If SalFileWrite(hV, Right(sV, 12) || sDaTi || PadL(Str(nLA+1), 4) || Spac(32) ||
   Str(Mod(Val(s01), 2)) || PutCrLf(), 65) != 65
.head 8 -  Call SalFileClose(hV)
.head 8 -  Call VisFileDelete(sV)
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Call MessageNoWait('Ошибка при записи в файл (65) ' ||  sV, 'Аварийная ситуация',
     3, 1)
.head 8 -  Return FALSE
.head 7 -  Set bZag = FALSE
.head 6 +  If nmDK[nKd] = 0
.head 7 -  Set nSdeb = nSdeb + nmS[nKd]
.head 6 +  Else
.head 7 -  Set nSkre = nSkre + nmS[nKd]
.head 6 +  If Val(smMFOA[nKd]) = 0
.head 7 -  Set smMFOA[nKd] = GetBankMfo()
.head 6 +  If Val(smMFOB[nKd]) = 0
.head 7 -  Set smMFOB[nKd] = GetBankMfo()
.head 6 -  ! Дебетовые документы
.head 6 +  If nmDK[nKd] = 0
.head 7 -  Set s404 = PadL(VisStrLeftTrim(smMFOA[nKd]), 9) || PadL(
    VisStrLeftTrim(smNLSA[nKd]), 14) || PadR(VisStrLeftTrim(
    StrWinToDosX(smNAMA[nKd])), 38) || PadL(VisStrLeftTrim(smMFOB[nKd]), 9) || PadL(
    VisStrLeftTrim(smNLSB[nKd]), 14) || PadR(VisStrLeftTrim(
    StrWinToDosX(smNAMB[nKd])), 38) || PadR(VisStrLeftTrim(smOKPOB[nKd]), 14) ||
    Str(nmDK[nKd]) || PadL(Str(nmS[nKd]), 16) || PadL(Str(nmVOB[nKd]), 2) || PadR(
    VisStrLeftTrim(StrWinToDosX(smND[nKd])), 10) || PadL(Str(nmISP[nKd]), 8)
.head 6 -  ! Кредитовые документы
.head 6 +  Else
.head 7 -  Set s404 = PadL(VisStrLeftTrim(smMFOA[nKd]), 9) || PadL(
    VisStrLeftTrim(smNLSA[nKd]), 14) || PadR(VisStrLeftTrim(
    StrWinToDosX(smNAMB[nKd])), 38) || PadL(VisStrLeftTrim(smMFOB[nKd]), 9) || PadL(
    VisStrLeftTrim(smNLSB[nKd]), 14) || PadR(VisStrLeftTrim(
    StrWinToDosX(smNAMA[nKd])), 38) || PadR(VisStrLeftTrim(smOKPOB[nKd]), 14) ||
    Str(nmDK[nKd]) || PadL(Str(nmS[nKd]), 16) || PadL(Str(nmVOB[nKd]), 2) || PadR(
    VisStrLeftTrim(StrWinToDosX(smND[nKd])), 10) || PadL(Str(nmISP[nKd]), 8)
.head 6 -  ! Set s404 = s404 || PadL(Str(nmKV[nKd]), 3) ||
    SalFmtFormatDateTime(dmDAOP[nKd], 'yyyyMMdd') || PadL(Str(nmIOST[nKd]), 24) ||
    SalFmtFormatDateTime(dmDAPP[nKd], 'yyyyMMdd') || PadR(VisStrLeftTrim(
    StrWinToDosX(smNAZN[nKd])), 160) || PadR(VisStrLeftTrim(smPOND[nKd]), 8) ||
    IifS(nmSK[nKd]=NUMBER_Null, '  ', PadL(Str(nmSK[nKd]), 2)) || PadR(
    VisStrLeftTrim(smNameFileA[nKd]), 12) || PadL(Str(nKd+1), 4) || PutCrLf()
.head 6 -  ! Set s404 = s404 || PadL(Str(nmKV[nKd]), 3) ||
    SalFmtFormatDateTime(dmDAOP[nKd], 'yyyyMMdd') || PadL(Str(nmIOST[nKd]), 24) ||
    SalFmtFormatDateTime(
    IifD(dmDAPP[nKd]=DATETIME_Null, dmDAOP[nKd], dmDAPP[nKd]), 'yyyyMMdd') || PadR(
    VisStrLeftTrim(StrWinToDosX(smNAZN[nKd])), 160) || Right(
    Str(100000000+nmREF[nKd]), 8) || IifS(nmSK[nKd]=NUMBER_Null, '  ', PadL(
    Str(nmSK[nKd]), 2)) || PadR(VisStrLeftTrim(smNameFileA[nKd]), 12) || PadL(
    Str(nKd+1), 4) || PutCrLf()
.head 6 -  Set s404 = s404 || PadL(Str(nmKV[nKd]), 3) ||
    SalFmtFormatDateTime(dmDAOP[nKd], 'yyyyMMdd') || PadL(Str(nmIOST[nKd]), 24) ||
    SalFmtFormatDateTime(
    IifD(dmDAPP[nKd]=DATETIME_Null, dmDAOP[nKd], dmDAPP[nKd]), 'yyyyMMdd') || PadR(
    VisStrLeftTrim(StrWinToDosX(smNAZN[nKd])), 160) || PadR(smPOND[nKd], 8) ||
    IifS(nmSK[nKd]=NUMBER_Null, '  ', PadL(Str(nmSK[nKd]), 2)) || PadR(
    VisStrLeftTrim(smNameFileA[nKd]), 12) || PadL(Str(nKd+1), 4) || PutCrLf()
.head 6 -  Set nVcrc = nVcrc + CRCstring(s404)
.head 6 +  If SalFileWrite(hV, s404, 404) != 404
.head 7 -  Call SalFileClose(hV)
.head 7 -  Call VisFileDelete(sV)
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Call MessageNoWait('Ошибка при записи в файл (404) ' || sV, 'Аварийная ситуация', 3,
     1)
.head 7 -  Return FALSE
.head 6 -  Set nKd = nKd + 1
.head 5 +  If not SalFileSeek(hV, 30, FILE_SeekBegin)
.head 6 -  Call SalFileClose(hV)
.head 6 -  Call VisFileDelete(sV)
.head 6 -  Call SqlRollback(hSql())
.head 6 -  Call SqlRollback(hSqlAux2())
.head 6 -  Call MessageNoWait('Ошибка при записи в файл (30) ' || sV, 'Аварийная ситуация', 3, 1)
.head 6 -  Return FALSE
.head 5 +  If SalFileWrite(hV, PadL(Str(nSdeb), 16) || PadL(Str(nSkre), 16), 32) != 32
.head 6 -  Call SalFileClose(hV)
.head 6 -  Call VisFileDelete(sV)
.head 6 -  Call SqlRollback(hSql())
.head 6 -  Call SqlRollback(hSqlAux2())
.head 6 -  Call MessageNoWait('Ошибка при записи в файл (32) ' || sV, 'Аварийная ситуация', 3, 1)
.head 6 -  Return FALSE
.head 5 -  Call SalFileClose(hV)
.head 5 +  If s01 = '1'
.head 6 +  If SqlPrepareAndExecute(hSqlAux2(), T("
   SELECT dfi,crc
   FROM klpcrc
   INTO :dDFI,:nCRC
   WHERE sab=:sSab and tip='V'"))
.head 7 +  If SqlFetchNext(hSqlAux2(),nFetchRes)
.head 8 -  Set nInterval = UGOECE(dDFI, sTITI)
.head 8 +  If (SalFmtFormatDateTime(dDFI, 'yyyyMMdd') = SalFmtFormatDateTime(
   SalDateCurrent(), 'yyyyMMdd') and nCRC = nVcrc) or nInterval > 0
.head 9 -  Call VisFileDelete(sV)
.head 9 -  Call SqlRollback(hSql())
.head 9 -  Call SqlRollback(hSqlAux2())
.head 9 -  Call Message(TRUE, IifS(nInterval=3,
     'Выписка не отбирается (банковская дата не совпадает с текущей)', 
     IifS(nInterval=2, 'Не наступило время формирования выписки для ' || sSab,
     IifS(nInterval=1, 'Выписка для ' || sSab ||
     ' в текущем интервале уже отбиралась', 'Идентичная выписка для ' || sSab ||
     ' ранее уже отбиралась (' || SalNumberToStrX(nCRC, 9) || ')'))), TRUE,
     COLOR_Blue)
.head 9 -  Return FALSE
.head 8 +  Else
.head 9 -  Call SqlPrepareAndExecute(hSqlAux2(), T("
     UPDATE klpcrc
     SET dfi= TODAY ,crc=:nVcrc
     WHERE sab=:sSab and tip='V'"))
.head 9 -  Call Message(TRUE, 'Отобрана выписка для ' || sSab || ' (' ||
     SalNumberToStrX(nCRC, 9) || ')', TRUE, COLOR_DarkGreen)
.head 7 +  Else
.head 8 -  Call SqlPrepareAndExecute(hSqlAux2(), T("
     INSERT
     INTO klpcrc (sab,tip,dfi,crc)
     VALUES (:sSab,'V', TODAY ,:nVcrc)"))
.head 5 +  Else
.head 6 -  Call Message(TRUE, 'Отобрана выписка для ' || sSab || ' за ' ||
     SalFmtFormatDateTime(dmDAOP[0], 'dd/MM/yyyy'), TRUE, COLOR_DarkGreen)
.head 5 -  ! Подписать файл и поместить в нужный ящик
.head 5 +  If not bIni ! Надо инициализировать ЭЦП Cipher
.head 6 -  Call Message(TRUE, 'Инициализация ЭЦП Cipher', TRUE, COLOR_Black)
.head 6 -  Set nKw = InitCipher()
.head 6 +  If nKw != 0
.head 7 -  Call VisFileDelete(sV)
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при инициализации ЭЦП Cipher'),
     'Аварийная ситуация', 3, 1)
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 -  Set bIni = TRUE
.head 5 -  Set nhV = llopen(sV, OF_ReadWrite)
.head 5 +  If nhV > 0
.head 6 -  Set nKw = spPutBankSignOnFile(nhV, sV, 2)
.head 6 +  If nKw < 0
.head 7 -  Call llclose(nhV)
.head 7 -  Call VisFileDelete(sV)
.head 7 -  Call SqlRollback(hSql())
.head 7 -  Call SqlRollback(hSqlAux2())
.head 7 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при подписи файла ' || sV),
     'Аварийная ситуация', 3, 1)
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 -  Set sVc = VisFileCreateTemp('~V~')
.head 7 -  Call VisFileDelete(sVc)
.head 7 -  Set nhVc = llcreat(sVc, OF_ReadWrite)
.head 7 +  If nhVc > 0
.head 8 -  ! зашифровать
.head 8 -  ! Set nSendId = 1 ! пока
! (надо получить из KlpLcw по sSab)
.head 8 -  Set nIv = 0
.head 8 -  Set nSendId = 0
.head 8 -  Set nLenArr = LenArray(smlSAB)
.head 8 +  While nIv <= nLenArr
.head 9 +  If SalStrUpperX(sSab) = smlSAB[nIv]
.head 10 -  Set nSendId = nmlNOMER[nIv]
.head 10 -  Break
.head 9 -  Set nIv = nIv + 1
.head 8 -  Set nKw = speProcessFile(1, nhV, nhVc, sV)
.head 8 -  Call llclose(nhV)
.head 8 -  Call llclose(nhVc)
.head 8 +  If nKw != 0
.head 9 -  Call VisFileDelete(sV)
.head 9 -  Call VisFileDelete(sVc)
.head 9 -  Call SqlRollback(hSql())
.head 9 -  Call SqlRollback(hSqlAux2())
.head 9 -  Call MessageNoWait(ErrMsgCipher(nKw, 'Ошибка при шифровании файла ' || sV),
     'Аварийная ситуация', 3, 1)
.head 9 -  Return FALSE
.head 8 +  Else
.head 9 -  Call MomFileCopy(sV, sArchPath || 'ARH\\' || Right(sV, 12), TRUE)
.head 9 -  Call MomFileCopy(sVc, sDiskKata || sSab || '\\OUT\\' || Right(sV, 12), TRUE)
.head 9 -  Call VisFileDelete(sVc)
.head 9 -  Call VisFileDelete(sV)
.head 9 -  Call SqlCommit(hSql())
.head 9 -  Call SqlCommit(hSqlAux2())
.head 9 -  Return TRUE
.head 7 +  Else
.head 8 -  Call llclose(nhV)
.head 8 -  Call SqlRollback(hSql())
.head 8 -  Call SqlRollback(hSqlAux2())
.head 8 -  Call VisFileDelete(sV)
.head 8 -  Call MessageNoWait('Ошибка при создании временного файла ' || sVc,
     'Аварийная ситуация', 3, 1)
.head 8 -  Return FALSE
.head 5 +  Else
.head 6 -  Call SqlRollback(hSql())
.head 6 -  Call SqlRollback(hSqlAux2())
.head 6 -  Call VisFileDelete(sV)
.head 6 -  Call MessageNoWait('Ошибка при открытии файла ' || sV, 'Аварийная ситуация', 3, 1)
.head 6 -  Return FALSE
.head 3 +  Function: UGOECE
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Date/Time: dYes
.head 5 -  String: sInt
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sElement[*]
.head 5 -  String: sLTime[*]
.head 5 -  String: sRTime[*]
.head 5 -  Number: nLHou[*]
.head 5 -  Number: nLMin[*]
.head 5 -  Number: nRHou[*]
.head 5 -  Number: nRMin[*]
.head 5 -  String: sTemp
.head 5 -  Number: nI
.head 5 -  Number: n1
.head 5 -  Number: nSecondsYes
.head 5 -  Number: nSecondsCurrent
.head 5 -  Boolean: bPloxo
.head 4 +  Actions
.head 5 +  If SalFmtFormatDateTime(SalDateCurrent(), 'yyyyMMdd') !=
   SalFmtFormatDateTime(dBankDate, 'yyyyMMdd')
.head 6 -  Return 3
.head 5 +  If Len(SalStrTrimX(sInt)) = 0 or SalDateDay(dYes) != SalDateDay(SalDateCurrent()) or
   SalDateMonth(dYes) != SalDateMonth(SalDateCurrent()) or
   SalDateYear(dYes) != SalDateYear(SalDateCurrent())
.head 6 -  Return 0
.head 5 -  Set nSecondsYes = SalDateHour(dYes)*3600 + SalDateMinute(dYes)*60 + SalDateSecond(dYes)
.head 5 -  Set nSecondsCurrent = SalDateHour(SalDateCurrent())*3600 + SalDateMinute(
    SalDateCurrent())*60 + SalDateSecond(SalDateCurrent())
.head 5 -  Call SalArraySetUpperBound(sElement, 1, -1)
.head 5 -  Call SalArraySetUpperBound(sLTime, 1, -1)
.head 5 -  Call SalArraySetUpperBound(sRTime, 1, -1)
.head 5 -  Call SalArraySetUpperBound(nLHou, 1, -1)
.head 5 -  Call SalArraySetUpperBound(nLMin, 1, -1)
.head 5 -  Call SalArraySetUpperBound(nRHou, 1, -1)
.head 5 -  Call SalArraySetUpperBound(nRMin, 1, -1)
.head 5 -  Set sTemp = sInt
.head 5 -  Set nI = 0
.head 5 -  Set n1 = SalStrScan(sTemp, ',')
.head 5 +  If n1 >= 0
.head 6 +  Loop
.head 7 -  Set sElement[nI] = Left(sTemp, n1)
.head 7 -  Set sTemp = Subs(sTemp, n1+2, Len(sTemp)-n1-1)
.head 7 -  Set nI = nI + 1
.head 7 -  Set n1 = SalStrScan(sTemp, ',')
.head 7 +  If n1 < 0
.head 8 -  Set sElement[nI] = sTemp
.head 8 -  Break
.head 5 +  Else
.head 6 -  Set sElement[0] = sTemp
.head 5 -  Set nI = 0
.head 5 +  While nI <= LenArray(sElement)
.head 6 -  Set n1 = SalStrScan(sElement[nI], '-')
.head 6 +  If n1 < 0
.head 7 -  Return 0
.head 6 +  Else
.head 7 -  Set sLTime[nI] = Left(sElement[nI], n1)
.head 7 -  Set sRTime[nI] = Subs(sElement[nI], n1+2, Len(sElement[nI])-n1-1)
.head 7 +  If Len(sLTime[nI])*Len(sRTime[nI]) = 0
.head 8 -  Return 0
.head 7 +  Else
.head 8 -  Set n1 = SalStrScan(sLTime[nI], ':')
.head 8 -  Set nLHou[nI] = IifN(n1<0, Val(sLTime[nI]), Val(Left(sLTime[nI], n1)))
.head 8 -  Set nLMin[nI] = IifN(n1<0, 0, Val(
    Subs(sLTime[nI], n1+2, Len(sLTime[nI])-n1-1)))
.head 8 -  Set n1 = SalStrScan(sRTime[nI], ':')
.head 8 -  Set nRHou[nI] = IifN(n1<0, Val(sRTime[nI]), Val(Left(sRTime[nI], n1)))
.head 8 -  Set nRMin[nI] = IifN(n1<0, 0, Val(
    Subs(sRTime[nI], n1+2, Len(sRTime[nI])-n1-1)))
.head 8 -  Set bPloxo = nLHou[nI] < 0 or nLHou[nI] > 23 or nLMin[nI] < 0 or nLMin[nI] > 59 or
    nRHou[nI] < 0 or nRHou[nI] > 23 or nRMin[nI] < 0 or nRMin[nI] > 59 or
    nRHou[nI] < nLHou[nI] or (nRHou[nI] = nLHou[nI] and nRMin[nI] <= nLMin[nI])
.head 8 +  If nI > 0
.head 9 -  Set bPloxo = bPloxo or nLHou[nI-1] > nLHou[nI] or nRHou[nI-1] > nLHou[nI] or
    (nRHou[nI-1] = nLHou[nI] and nRMin[nI-1] >= nLMin[nI])
.head 8 +  If bPloxo
.head 9 -  Return 0
.head 8 +  Else
.head 9 +  If nSecondsCurrent >= nLHou[nI]*3600 + nLMin[nI]*60 and nSecondsCurrent <=
   nRHou[nI]*3600 + nRMin[nI]*60
.head 10 -  ! попали в нужный диапазон
.head 10 -  Return IifN(nSecondsYes<nLHou[nI]*3600+nLMin[nI]*60 or
       nSecondsYes>nRHou[nI]*3600+nRMin[nI]*60, 0, 1)
.head 6 -  Set nI = nI + 1
.head 5 -  Return 2
.head 3 +  Function: LenArrayN
.head 4 -  Description: возвращает длину одномерного массива чисел
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: nmArr[*]
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nBound
.head 4 +  Actions
.head 5 -  Call SalArrayGetUpperBound(nmArr, 1, nBound)
.head 5 -  Return nBound
.head 3 +  Function: ErrMsgCipher
.head 4 -  Description: формирование текстовых расшифровок кодов возврата функций Cipher
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Number: nKow
.head 5 -  String: sDes
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sTx
.head 4 +  Actions
.head 5 +  ! If nKow = -1
.head 6 -      Set sTx = 'На дискете отсутствует секретный ключ'
.head 5 +  ! Else If nKow = -2
.head 6 -      Set sTx = 'Ошибка чтения секретного ключа'
.head 5 +  ! Else If nKow = -3
.head 6 -      Set sTx = 'Нарушена целостность секретного ключа'
.head 5 +  ! Else If nKow = -4
.head 6 -      Set sTx = 'PIN-код введен неверно'
.head 5 +  ! Else If nKow = -9
.head 6 -      Set sTx = 'Ошибка инициализации БД открытых ключей'
.head 5 +  ! Else If nKow = -10
.head 6 -      Set sTx = 'Ошибка чтения открытого ключа'
.head 5 +  ! Else If nKow = -13
.head 6 -      Set sTx = 'Нарушена целостность открытого ключа'
.head 5 +  ! Else If nKow = -14
.head 6 -      Set sTx = 'Ошибка поиска открытого ключа'
.head 5 +  ! Else If nKow = -16
.head 6 -      Set sTx = 'Отсутствует заданный каталог'
.head 5 +  ! Else If nKow = -40
.head 6 -      Set sTx = 'Ошибка открытия/чтения файла'
.head 5 +  ! Else If nKow = -41
.head 6 -      Set sTx = 'Ошибка записи в файл'
.head 5 +  ! Else If nKow = -43
.head 6 -      Set sTx = 'Ошибка при постановке ЦП'
.head 5 +  ! Else If nKow = -45
.head 6 -      Set sTx = 'Отсутствует ЦП (файл не был подписан)'
.head 5 +  ! Else If nKow = -47
.head 6 -      Set sTx = 'Неверная ЦП (не снята подпись)'
.head 5 +  ! Else If nKow = -102
.head 6 -      Set sTx = 'Нарушена целостность файла'
.head 5 +  ! Else If nKow = -103
.head 6 -      Set sTx = 'Файл не зашифрован'
.head 5 +  ! Else
.head 6 -      Set sTx = 'Ошибка ' || Str(nKow)
.head 5 -  Set sTx = Spac(128)
.head 5 +  If nKow != 0
.head 6 -  Call spGetErrorMessage(nKow, sTx)
.head 5 -  Set sTx = sDes || IifS(nKow=0, '', ' (' || Str(nKow) || ').' || ' ' || SalStrTrimX(
    StrDosToWinX(sTx)))
.head 5 -  Call Message(TRUE, sTx, TRUE, COLOR_Red)
.head 5 -  Return sTx
.head 3 +  Function: InitCipher
.head 4 -  Description: инициализация подписи CIPHER
.head 4 +  Returns
.head 5 -  Number:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  ! Return _INITKSGN(GetOpKeyPath(), GetSecKeyDrv(), sArchPath, GetPinCodeICT())
       spInitialize(2, nSecKeyMedia, GetOpKeyPath()) +
       speInitialize(3, nSecKeyMedia, GetOpKeyPath())
.head 5 -  Return spInitialize(2, nSecKeyMedia, Left(GetOpKeyPath(), Len(GetOpKeyPath())-1)) +
       speInitialize(3, nSecKeyMedia, Left(GetOpKeyPath(), Len(GetOpKeyPath())-1))
.head 3 +  ! Function: ShowInputPinCodeCipher
.head 4 -     Description: ввод PIN-кода Cipher
.head 4 +     Returns 
.head 5 -     Boolean: 
.head 4 -     Parameters 
.head 4 -     Static Variables 
.head 4 -     Local variables 
.head 4 +     Actions 
.head 5 -     Return SalModalDialog(dlg_InputPinCodeCipher, hWndForm)
.head 3 +  ! Function: GetPinCodeICT
.head 4 -     Description: возвращает значение PIN-кода Cipher
.head 4 +     Returns 
.head 5 -     String: 
.head 4 -     Parameters 
.head 4 -     Static Variables 
.head 4 -     Local variables 
.head 4 +     Actions 
.head 5 -     Return strPinCodeICT
.head 3 +  Function: Suffix
.head 4 -  Description: возвращает суффикс по типу файла и SAB
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: sSab
.head 5 -  String: sTip
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nSuf
.head 5 -  Number: nRnk
.head 5 -  String: sTemp
.head 4 +  Actions
.head 5 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT k.count,k.rnk
     INTO :nSuf,:nRnk
     FROM custcount k, customer c
     WHERE k.tip=:sTip and c.sab=:sSab and k.rnk=c.rnk'))
.head 5 +  If SqlFetchNext(hSqlAux2(), nFetchRes)
.head 6 -  Set nSuf = IifN(nSuf=99, 0, nSuf+1)
.head 6 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     UPDATE custcount
     SET count=:nSuf
     WHERE rnk=:nRnk and tip=:sTip'))
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT rnk
     INTO :nRnk
     FROM customer
     WHERE sab=:sSab'))
.head 6 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 6 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT tip
     INTO :sTemp
     FROM tipcount
     WHERE tip=:sTip'))
.head 6 +  If not SqlFetchNext(hSqlAux2(), nFetchRes)
.head 7 -  Call SqlPrepareAndExecute(hSqlAux2(), T("
     INSERT
     INTO tipcount (tip, name)
     VALUES (:sTip,'')"))
.head 6 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     INSERT
     INTO custcount (rnk,tip,count)
     VALUES (:nRnk,:sTip,:nSuf)'))
.head 5 -  Return Right(Str(nSuf+100), 2)
.head 3 +  Function: LcwRead
.head 4 -  Description: обработка файла лицензии [МФО].Lcw
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sLiPa
.head 5 -  String: sKod
.head 5 -  File Handle: hO
.head 5 -  Number: nSeed
.head 5 -  Number: nB
.head 5 -  Number: n1
.head 5 -  Number: nTmp
.head 5 -  String: sKoPo
.head 5 -  String: sNoPo
.head 5 -  Number: nNoPo
.head 5 -  String: sDali
.head 5 -  Date/Time: dDali
.head 4 +  Actions
.head 5 -  Set sLiPa = GetLicenPath() || GetBankMfo() || '.Lcw'
.head 5 +  If not SalFileOpen(hO, sLiPa, OF_Read)
.head 6 -  Return FALSE
.head 5 +  Else
.head 6 -  Set nSeed = SalFileGetChar(hO)
.head 6 -  Set nIndex = 0
.head 6 +  While TRUE
.head 7 -  Set nB = SalFileGetChar(hO)
.head 7 +  If nB != -1 ! не конец файла
.head 8 -  Set nSeed = Mod(nSeed+1, 256)
.head 8 -  Set nB = SalNumberXOR(nB, nSeed)
.head 8 -  Set n1 = 0
.head 8 -  Set sKod = ''
.head 8 +  While n1 < nB
.head 9 -  Set nTmp = SalFileGetChar(hO)
.head 9 +  If nTmp = -1
.head 10 -  Call SalFileClose(hO)
.head 10 -  Return FALSE
.head 9 +  Else
.head 10 -  Set nSeed = Mod(nSeed+1, 256)
.head 10 -  Set nTmp = SalNumberXOR(nTmp, nSeed)
.head 10 -  Set sKod = sKod || Chr(nTmp)
.head 10 -  Set n1 = n1 + 1
.head 8 -  Set n1 = 0
.head 8 -  Set sKoPo = ''
.head 8 +  While n1 < 4
.head 9 -  Set nTmp = SalFileGetChar(hO)
.head 9 +  If nTmp = -1
.head 10 -  Call SalFileClose(hO)
.head 10 -  Return FALSE
.head 9 +  Else
.head 10 -  Set nSeed = Mod(nSeed+1, 256)
.head 10 -  Set nTmp = SalNumberXOR(nTmp, nSeed)
.head 10 -  Set sKoPo = sKoPo || Chr(nTmp)
.head 10 -  Set n1 = n1 + 1
.head 8 -  Set n1 = 0
.head 8 -  Set sNoPo = ''
.head 8 +  While n1 < 4
.head 9 -  Set nTmp = SalFileGetChar(hO)
.head 9 +  If nTmp = -1
.head 10 -  Call SalFileClose(hO)
.head 10 -  Return FALSE
.head 9 +  Else
.head 10 -  Set nSeed = Mod(nSeed+1, 256)
.head 10 -  Set nTmp = SalNumberXOR(nTmp, nSeed)
.head 10 -  Set sNoPo = sNoPo || Chr(nTmp)
.head 10 -  Set n1 = n1 + 1
.head 8 -  Set nNoPo = Val(sNoPo)
.head 8 -  Set n1 = 0
.head 8 -  Set sDali = ''
.head 8 +  While n1 < 8
.head 9 -  Set nTmp = SalFileGetChar(hO)
.head 9 +  If nTmp = -1
.head 10 -  Call SalFileClose(hO)
.head 10 -  Return FALSE
.head 9 +  Else
.head 10 -  Set nSeed = Mod(nSeed+1, 256)
.head 10 -  Set nTmp = SalNumberXOR(nTmp, nSeed)
.head 10 -  Set sDali = sDali || Chr(nTmp)
.head 10 -  Set n1 = n1 + 1
.head 8 -  Set dDali = SalDateConstruct(Val(Left(sDali, 4)), Val(
    SalStrMidX(sDali, 4, 2)), Val(SalStrMidX(sDali, 6, 2)), 0, 0, 0)
.head 8 -  Set smlKOD  [nIndex] = sKod
.head 8 -  Set smlSAB  [nIndex] = SalStrUpperX(sKoPo)
.head 8 -  Set nmlNOMER[nIndex] = nNoPo
.head 8 -  Set dmlDALI [nIndex] = dDali
.head 8 -  Set nIndex = nIndex + 1
.head 7 +  Else
.head 8 -  Call SalFileClose(hO)
.head 8 -  Return TRUE
.head 3 +  Function: SalNumberXOR
.head 4 -  Description: XOR
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: n1
.head 5 -  Number: n2
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return (n1 & (-1-n2)) | (n2 & (-1-n1))
.head 3 +  Function: SetBankDate
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  ! Call ExecuteParams()
.head 5 -  ! Call GetParamsSettings(hSql())
.head 5 -  ! Set dBankDate = GetParamBankDate()
.head 5 -  Set dBankDate = GetBankDateMom()
.head 5 -  Call SalSetWindowText(menu12, sTitle || ' банковская дата ' ||
     SalFmtFormatDateTime(dBankDate, 'dd/MM/yyyy'))
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  String: sOpenDay
.head 3 -  Number: nI
.head 3 -  Number: nDubl
.head 3 -  !
.head 3 -  String: sNazns
.head 3 -  Number: nBis
.head 3 -  String: sNaznk
.head 3 -  String: sD_rec
.head 3 -  String: sFn_a
.head 3 -  String: sNaznBis
.head 3 -  String: sD_recBis
.head 3 -  !
.head 3 -  Number: nColor
.head 3 -  String: sTitle
.head 3 -  !
.head 3 -  Number: nUid
.head 3 -  Number: nVal
.head 3 -  Number: nKwo
.head 3 -  Boolean: bOk
.head 3 -  !
.head 3 -  Date/Time: dYes
.head 3 -  String: sValueCheck
.head 3 -  !
.head 3 -  Date/Time: dDateDel
.head 3 -  Number: hBtnYes
.head 3 -  Number: hBtnNo
.head 3 -  Number: hBtns[*]
.head 3 -  !
.head 3 -  String: sDelArchiv
.head 3 -  !
.head 3 -  Boolean: bKORP
.head 3 -  Boolean: bmKORP[*]
.head 3 -  Number: nDiti
.head 3 -  Boolean: bKORP1
.head 3 -  !
.head 3 -  String: sSecKeyMedia
.head 3 -  Number: nSecKeyMedia
.head 3 -  String: sDeCryptPath
.head 3 -  String: sEnCryptPath
.head 3 -  !
.head 3 -  String: sDOCPOST
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  ! Call SalCenterWindow(hWndForm)
.head 4 -  Call PrepareWindow(hWndForm)
.head 4 -  ! Call SetWindowFullSize(hWndForm)
.head 4 -  Call SalGetWindowText(menu12, sTitle, 80)
.head 4 -  Call SetBankDate()
.head 4 -  Call SalUseRegistry(FALSE, '')
.head 4 -  Call SalGetProfileString('ElektroKlients', 'SecKeyMedia', '0', sSecKeyMedia,
     GetIniFileName())
.head 4 -  Call SalGetProfileString('ElektroKlients', 'EnCryptPath', 'C:\\Temp\\EnCrypt',
     sEnCryptPath, GetIniFileName())
.head 4 -  Call SalGetProfileString('ElektroKlients', 'DeCryptPath', 'C:\\Temp\\DeCrypt',
     sDeCryptPath, GetIniFileName())
.head 4 -  Set sDeCryptPath = sDeCryptPath || IifS(Right(sDeCryptPath, 1)='\\', '', '\\')
.head 4 -  Set sEnCryptPath = sEnCryptPath || IifS(Right(sEnCryptPath, 1)='\\', '', '\\')
.head 4 -  Set nSecKeyMedia = Val(sSecKeyMedia)
.head 4 -  Call SalUseRegistry(TRUE, GetCompanyName())
.head 4 -  Call SalGetProfileString('CheckBoxesKB', 'Values', '1111111', sValueCheck, '')
.head 4 -  Set cbKV = Left(sValueCheck, 1) = '1'
.head 4 -  Set cbLS = Subs(sValueCheck, 2, 1) = '1'
.head 4 -  Set cbU = Subs(sValueCheck, 3, 1) = '1'
.head 4 -  Set cbIN = Subs(sValueCheck, 4, 1) = '1'
.head 4 -  Set cbOO = Subs(sValueCheck, 5, 1) = '1'
.head 4 -  Set cbWO = Subs(sValueCheck, 6, 1) = '1'
.head 4 -  Set cbWT = Right(sValueCheck, 1) = '1'
.head 4 -  Call SqlPrepareAndExecute(hSql(), 'SET ROLE start1,tech_mom1')
.head 4 -  Set bKORP = Val(GetGlobalOption('KB_Corpo'))=1
.head 4 -  Set dfKorp = 'Корпор. клиенты (' || IifS(bKORP, '+', '-') || ')'
.head 4 -  Call SalWaitCursor(TRUE)
.head 4 -  Set sUserid = Str(GetUserId())
.head 4 -  Set nKLI = -1
.head 4 +  If SqlPrepareAndExecute(hSql(), T("
   SELECT sab,rnk,nmk,okpo,notes
   INTO :sSAB,:nRNK,:sNMK,:sOKPO,:sTIMES
   FROM customer
   WHERE sab is not null and stmt=5
   ORDER BY sab"))
.head 5 -  Call SalArraySetUpperBound(smSAB, 1, -1)
.head 5 -  Call SalArraySetUpperBound(nmRNK, 1, -1)
.head 5 -  Call SalArraySetUpperBound(smNMK, 1, -1)
.head 5 -  Call SalArraySetUpperBound(smOKPO, 1, -1)
.head 5 -  Call SalArraySetUpperBound(smTIMES, 1, -1)
.head 5 -  Call SalArraySetUpperBound(bmKORP, 1, -1)
.head 5 -  Set nKLI = -1
.head 5 +  While SqlFetchNext(hSql(), nFetchRes)
.head 6 +  If bKORP
.head 7 +  If SqlPrepareAndExecute(hSqlAux3(), T("
   SELECT count(*)
   INTO :nDiti
   FROM customer
   WHERE rnkp=:nRNK"))
.head 8 +  If not SqlFetchNext(hSqlAux3(), nFetchRes)
.head 9 -  Set nDiti = 0
.head 7 +  Else
.head 8 -  Set nDiti = 0
.head 6 +  Else
.head 7 -  Set nDiti = 0
.head 6 -  Set nKLI = nKLI + 1
.head 6 -  Set smSAB[nKLI] = sSAB
.head 6 -  Set nmRNK[nKLI] = nRNK
.head 6 -  Set smNMK[nKLI] = SalStrTrimX(sNMK)
.head 6 -  Set smOKPO[nKLI] = SalStrTrimX(sOKPO)
.head 6 -  Set smTIMES[nKLI] = SalStrTrimX(sTIMES)
.head 6 -  Set bmKORP[nKLI] = nDiti>0
.head 6 -  ! вычитать куда-либо ключи из таблицы KLPSBB по SAB
.head 4 +  If nKLI = -1
.head 5 -  Call SalSendMsg(menu12, SAM_Destroy, 0, 0)
.head 4 -  Set hBtnYes = VisMessageLoadButton('&Да', 1)
.head 4 -  Set hBtnNo = VisMessageLoadButton('&Нет', 2)
.head 4 -  Call SalHideWindow(l1)
.head 4 -  Call SalHideWindow(cc1)
.head 4 -  Call SalHideWindow(pbLB)
.head 4 -  Call SalHideWindow(pbAll)
.head 4 -  Call SalHideWindow(pbFind)
.head 4 -  Call SalHideWindow(pbNoDate)
.head 4 -  Call SalHideWindow(pbRun)
.head 4 -  Call SalHideWindow(pbOtkaz)
.head 4 -  Call SalWaitCursor(FALSE)
.head 3 +  On SAM_CreateComplete
.head 4 -  Set sDiskKata = GetElKDir()    ! получить путь к п/я электронных клиентов
.head 4 -  Set sArchPath = GetArchiv_KB() ! получить путь к архиву файлов электронных клиентов
.head 4 -  Set sTempPath = GetTempKPath() ! получить путь временных файлов КЛИЕНТ-БАНК
.head 4 -  Set bIni = FALSE
.head 4 -  Call Message(TRUE, 'Обработка файла лицензии КЛИЕНТ-БАНК...', TRUE, COLOR_Black)
.head 4 -  Call SalDisableWindow(pb1)
.head 4 -  Call SalDisableWindow(pb2)
.head 4 -  Call SalDisableWindow(pb3)
.head 4 -  Call SalDisableWindow(pb4)
.head 4 -  Call SalDisableWindow(pb6)
.head 4 -  Call SalDisableWindow(pb8)
.head 4 -  Call SalDisableWindow(pb9)
.head 4 -  Call SalDisableWindow(pb10)
.head 4 -  Call SalDisableWindow(pbEsc)
.head 4 +  If not LcwRead()
.head 5 -  Call MessageNoWait('Отсутствует или ошибочен файл лицензии ' || GetLicenPath() ||
     GetBankMfo() || '.Lcw.', 'Работа прекращается', 3, 1)
.head 5 -  Call SalDestroyWindow(menu12)
.head 4 +  Else
.head 5 -  Call Message(TRUE, 'Обработан файл лицензии КЛИЕНТ-БАНК.', TRUE, COLOR_DarkGreen)
.head 5 -  Call SalEnableWindow(pbEsc)
.head 5 -  Call SalEnableWindow(pb10)
.head 5 -  Call SalEnableWindow(pb9)
.head 5 -  Call SalEnableWindow(pb8)
.head 5 -  Call SalEnableWindow(pb6)
.head 5 -  Call SalEnableWindow(pb4)
.head 5 -  Call SalEnableWindow(pb3)
.head 5 -  Call SalEnableWindow(pb2)
.head 5 -  Call SalEnableWindow(pb1)
.head 5 -  Call SalSetFocus(pb1)
.head 3 +  On SAM_Close
.head 4 +  If SalMessageBox("Вы намерены прекратить работу? ", "Внимание!", MB_YesNo) = IDYES
.head 5 -  Call SalQuit()
.head 4 +  Else
.head 5 -  Return FALSE
.head 3 +  On SAM_Destroy
.head 4 -  Call SalUseRegistry(TRUE, GetCompanyName())
.head 4 -  Call SalSetProfileString('CheckBoxesKB', 'Values', IifS(cbKV, '1', '0') ||
     IifS(cbLS, '1', '0') || IifS(cbU, '1', '0') || IifS(cbIN, '1', '0') ||
     IifS(cbOO, '1', '0') || IifS(cbWO, '1', '0') || IifS(cbWT, '1', '0'), '')
.head 1 +  Dialog Box: dlg_mess
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Просмотр сообщений
.head 2 -  Accesories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Window Location and Size
.head 4 -  Left:   Default
.head 4 -  Top:    Default
.head 4 -  Width:  8.267"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 2.083"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description: Форма просмотра сообщений
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Multiline Field: ml_text
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left:   0.083"
.head 6 -  Top:    0.036"
.head 6 -  Width:  8.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 1.702"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: 3D Highlight Color
.head 4 +  Message Actions
.head 5 +  On SAM_SetFocus
.head 6 -  Call SalSetFocus(pb_close)
.head 3 +  Pushbutton: pb_close
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Выход (ESC)
.head 4 -  Window Location and Size
.head 5 -  Left:   3.417"
.head 5 -  Top:    1.155"
.head 5 -  Width:  1.367"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.452"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Esc
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name: Q:\BARS98\RESOURCE\BMP\Discard.bmp
.head 4 -  Picture Transparent Color: Gray
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalEndDialog(hWndForm, 0)
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  Number: nRow
.head 2 +  Window Variables
.head 3 -  Number: nR
.head 3 -  Boolean: bIsBegin
.head 3 -  Boolean: bIsEnd
.head 3 -  String: sLog
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow(hWndForm)
.head 3 +  On SAM_CreateComplete
.head 4 -  Call SalSendMsg(hWndForm, WM_Populate, 0, 0)
.head 3 +  On WM_Populate
.head 4 -  Set ml_text = menu12.tblMessage.colText
