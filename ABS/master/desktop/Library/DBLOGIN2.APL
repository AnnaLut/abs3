Application Description: ! DBLOGIN.APD - Dynalib (префикс - DBL)
		! DBLOGIN.APL - библиотека соединения с Базой данных
		! ООО Унити-Барс (C) 1996-2004
		! Разработчик: Сыропоршнев Д.Л.
	Outline Version - 4.0.26
	Design-time Settings
.data VIEWINFO
0000: 6F00000001000000 FFFF01000D004347 5458566965775374 6174650400010000
0020: 0000000000A70000 002C000000020000 0003000000000000 00D5020000F8FFFF
0040: FFE1FFFFFFFFFFFF FF000000007C0200 004D010000010000 0001000000010000
0060: 000F4170706C6963 6174696F6E497465 6D00000000
.enddata
.data DT_MAKERUNDLG
0000: 0200000000001D51 3A5C424152533938 5C4C494252415259 5C64626C6F67696E
0020: 2E646C6C1D513A5C 4241525339385C4C 4942524152595C64 626C6F67696E2E61
0040: 706300000101011D 513A5C4241525339 385C4C4942524152 595C64626C6F6769
0060: 6E2E72756E1D513A 5C4241525339385C 4C4942524152595C 64626C6F67696E2E
0080: 646C6C1D513A5C42 41525339385C4C49 42524152595C6462 6C6F67696E2E6170
00A0: 630000010101175C 4241525339385C42 494E5C64626C6F67 696E2E617064175C
00C0: 4241525339385C42 494E5C64626C6F67 696E2E646C6C175C 4241525339385C42
00E0: 494E5C64626C6F67 696E2E6170630000 010101001D513A5C 4241525339385C4C
0100: 4942524152595C64 626C6F67696E2E64 6C6C1D513A5C4241 525339385C4C4942
0120: 524152595C64626C 6F67696E2E617063 0000010101
.enddata
		Outline Window State: Normal
		Outline Window Location and Size
.data VIEWINFO
0000: 6600040003002D00 0000000000000000 0000B71E5D0E0500 1D00FFFF4D61696E
0020: 0000000000000000 0000000000000000 0000003B00010000 00000000000000E9
0040: 1E800A00008600FF FF496E7465726E61 6C2046756E637469 6F6E730000000000
0060: 0000000000000000 0000000000003200 0100000000000000 0000E91E800A0000
0080: DF00FFFF56617269 61626C6573000000 0000000000000000 0000000000000000
00A0: 3000010000000000 00000000F51E100D 0000F400FFFF436C 6173736573000000
00C0: 0000000000000000 0000000000000000
.enddata
.data VIEWSIZE
0000: D000
.enddata
			Left:   -0.013"
			Top:    0.0"
			Width:  8.013"
			Height: 4.969"
		Options Box Location
.data VIEWINFO
0000: 0818B80BB80B2500
.enddata
.data VIEWSIZE
0000: 0800
.enddata
			Visible? Yes
			Left:   4.15"
			Top:    1.885"
			Width:  3.8"
			Height: 2.073"
		Class Editor Location
			Visible? No
			Left:   0.575"
			Top:    0.094"
			Width:  5.063"
			Height: 2.719"
		Tool Palette Location
			Visible? No
			Left:   6.388"
			Top:    0.729"
		Fully Qualified External References? No
		Reject Multiple Window Instances? No
		Enable Runtime Checks Of External References? Yes
		Use Release 4.0 Scope Rules? No
	Libraries
		Dynalib: Global.apd
		Dynalib: Absapi.apd
		!
		File Include: XSALIMG.APL
		File Include: Winbars2.apl
		File Include: Watchdog.apc
		File Include: Constant.apl
		File Include: Genbutn.apl
		File Include: Genfcls.apl
		File Include: Genlabel.apl
		File Include: vtcal.apl
		! File Include: VTWIN.APL
	Global Declarations
		Window Defaults
			Tool Bar
				Display Style? Etched
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: System Default
				Text Color: System Default
				Background Color: System Default
			Form Window
				Display Style? Etched
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: System Default
				Text Color: System Default
				Background Color: System Default
			Dialog Box
				Display Style? Etched
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: System Default
				Text Color: System Default
				Background Color: System Default
			Top Level Table Window
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: System Default
				Text Color: System Default
				Background Color: System Default
			Data Field
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Multiline Field
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Spin Field
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Background Text
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Pushbutton
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
			Radio Button
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Check Box
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Option Button
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
			Group Box
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Child Table Window
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			List Box
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Combo Box
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Line
				Line Color: Use Parent
			Frame
				Border Color: Use Parent
				Background Color: 3D Face Color
			Picture
				Border Color: Use Parent
				Background Color: Use Parent
		Formats
			Number: 0'%'
			Number: #0
			Number: ###000
			Number: ###000;'($'###000')'
			Date/Time: hh:mm:ss AMPM
			Date/Time: M/d/yy
			Date/Time: MM-dd-yy
			Date/Time: dd-MMM-yyyy
			Date/Time: MMM d, yyyy
			Date/Time: MM d, yyyy hh:mm AMPM
			Date/Time: MMMM d, yyyy hh:mm AMPM
		External Functions
			! seclogin.dll - клиентская библиотека для логина через криптошлюз
			Library name: seclogin.dll
				Function: SetParams
					Description: int SetParams(
							const char* szGatewayPath,
							const char* szGatewayConfig,
							int   nStartType  = START_APPLICATION,
							const char* szCORBADir  =0,
							int         nCORBAPort  =0,
							const char* szDBAlias   =0,
							const char* szDBKeyUser =0,
							const char* szDBKeyPwd  =0,
							const char* szDBKeyRole =0
							);
					Export Ordinal: 0
					Returns
						Number: LONG
					Parameters
						String: LPCSTR
						String: LPCSTR
						Number: INT
						String: LPCSTR
						Number: INT
						String: LPCSTR
						String: LPCSTR
						String: LPCSTR
						String: LPCSTR
				Function: GetLogin
					Description: int GetLogin(
							int nBridgeHandle,
							int nTaskID,
							char* szDBLogin,
							char* szDBPassword);
					Export Ordinal: 0
					Returns
						Number: LONG
					Parameters
						Number: INT
						Number: INT
						Receive String: LPSTR
						Receive String: LPSTR
				Function: DestroyBridge
					Description: int DestroyBridge(int nBridgeHandle);
					Export Ordinal: 0
					Returns
						Number: LONG
					Parameters
						Number: INT
				Function: CreateBridge
					Description: int CreateBridge(
								const char*		szListenerHost,  
								short			nListenerPort, 
								const char*		szListenerID,
								bool			bListenerAuth,  
								bool			bListenerEnc,
								const char*		szRemoteHost, 
								short			nRemotePort, 
								const char*		szRemoteID,
								bool			bRemoteAuth, 
								bool			bRemoteEnc,
								int*			pBridgeHandle
							);
					Export Ordinal: 0
					Returns
						Number: LONG
					Parameters
						String: LPCSTR
						Number: SHORT
						String: LPCSTR
						Boolean: BOOL
						Boolean: BOOL
						String: LPCSTR
						Number: SHORT
						String: LPCSTR
						Boolean: BOOL
						Boolean: BOOL
						Receive Number: LPINT
				Function: Startup
					Description: int SECLOGIN_DECL Startup();
					Export Ordinal: 0
					Returns
						Number: LONG
					Parameters
				Function: Shutdown
					Description: int SECLOGIN_DECL Shutdown();
					Export Ordinal: 0
					Returns
						Number: LONG
					Parameters
			! библиотека шифрования
			Library name: ngsec.dll
				Function: NG_OPEN_MESSAGE
					Description: Расшифровать сообщение
					Export Ordinal: 0
					Returns
						Number: UINT
					Parameters
						Receive Number: LPUINT
						structPointer
							Number: UINT
							String: LPSTR
			Library name: hex2bin.dll
				Function: ConvertHexToBin
					Description: Преобразовать строку hex в обычные символы.
					Export Ordinal: 0
					Returns
						Number: LONG
					Parameters
						String: LPSTR
						String: LPSTR
						Number: LONG
				Function: InsertBuf
					Description: void InsertBuf(
							char*szTarget,       // результирующий BLOB
							longnTargetOffset,   // смещение в результирующем BLOBе
							const char*szSource, // исходный сырой BLOB
							longnSourceOffset,   // смещение в исходном BLOBеlong
							nCopySize            // размер копируемого буфера)
					Export Ordinal: 0
					Returns
					Parameters
						Receive String: LPVOID
						Number: LONG
						String: LPVOID
						Number: LONG
						Number: LONG
			Library name: fcred.dll
				Function: F_InitCred
					Description: Инициализация ЭЦП UNI
							int InitCred
							(
								LPSTR	ioIdBuf,
								LPDWORD	ioIdLenPtr,
								LPCSTR	inPrompt,
								LPCSTR	inPathToIcon,
								DWORD	inWaitTimeout,
								WORD	inNum
							) ;
							
					Export Ordinal: 0
					Returns
						Number: INT
					Parameters
						String: LPSTR
						Receive Number: LPDWORD
						String: LPCSTR
						String: LPCSTR
						Number: DWORD
						Number: WORD
				Function: F_ReinitCred
					Description: Переинициализация ЭЦП UNI
							int ReinitCred
							(	LPCSTR	inId,
								LPCSTR	inPrompt,
								LPCSTR	inPathToIcon,
								DWORD	inWaitTimeout
							) ;
							
					Export Ordinal: 0
					Returns
						Number: INT
					Parameters
						String: LPCSTR
						String: LPCSTR
						String: LPCSTR
						Number: DWORD
				Function: F_DeinitCred
					Description: Деинициализация ЭЦП UNI
							int DeinitCredA(LPCSTR inId) ;
							
					Export Ordinal: 0
					Returns
						Number: INT
					Parameters
						String: LPCSTR
			Library name: user32.dll
		Constants
.data CCDATA
0000: 3000000000000000 0000000000000000 00000000
.enddata
.data CCSIZE
0000: 1400
.enddata
			System
			User
				Number: ECON_AccountLocked	= -17536
				Number: ECON_PasswordExpired	= -17535
				Number: ECON_PasswordWillExpire	= -17534
		Resources
		Variables
			! // DBLOGIN.APL - Переменные /////////////////////////////////////////
			Boolean: bExist			! Отмечен на проходной
			Boolean: bAccountDisable	! login закрыт
			Boolean: bInTerms		! Сроки действия login-а действительный
			Boolean: fInitLib
		Internal Functions
			Function: DatabaseLogin		! __exported
				Description:
				Returns
					Boolean:
				Parameters
					Receive Date/Time: dtWorkDay
				Static Variables
				Local variables
					Date/Time: dtLocalBDate
					Boolean: fRet
				Actions
					Call DBLogin_Init()
					Set fRet = SalModalDialog(dlg_Login, hWndNULL, dtLocalBDate )
					If fRet
						Set dtWorkDay = dtLocalBDate
					Return fRet
			! Function: DBLogin_Init
				                             Description: Инициализация
				                             Returns 
					                             Boolean: 
				                             Parameters 
				                             Static Variables 
				                             Local variables 
				                             Actions 
					                             Return TRUE
			Function: DBLogin_Init
				Description: Инициализация лингвистической таблицы и прочего
						для библиотеки
				Returns
					Boolean:
				Parameters
				Static Variables
				Local variables
					String: strPathToLangResources
					String: strLangId
					!
					String: strFileName
				Actions
					If NOT fInitLib
						! To set constraction mode uncomment below
						! Set CurrentLangTable.fConstructMode = TRUE
						!
						Set bStaticsAsWindows = TRUE
						Set strPathToLangResources = GetLangPath()
						Set strLangId = GetLang()
						Set strFileName = strPathToLangResources || "\\" || strLangId || "\\dblogin.lng"
						!
						If (NOT strLangId) OR (NOT CurrentLangTable.InitFromFile( strFileName, strLangId ))
							Call CurrentLangTable.Init()
							! ====================================================
							Call CurrentLangTable.AddAtom('cTAt','Внимание!')
							Call CurrentLangTable.AddAtom('cTSecurity','Система безопасности')
							Call CurrentLangTable.AddAtom('cTAvtoStart','Автостарт')
							Call CurrentLangTable.AddAtom('cTUser','Пользователь')
							Call CurrentLangTable.AddAtom('cTMessConnectDbs',  'Соединение с Базой Данных:')
							Call CurrentLangTable.AddAtom('cTMessNoConnectDbs','Соединение с Базой Данных не установлено!')
							! ====================================================
							! dlg_Login
							Call CurrentLangTable.AddAtom('dlg_Login.cTWndTitle','Подключение к Базе Данных...')
							! BG
							Call CurrentLangTable.AddAtom('dlg_Login.bgLog_database','База данных:')
							Call CurrentLangTable.AddAtom('dlg_Login.bgLog_user',    'Пользователь:')
							Call CurrentLangTable.AddAtom('dlg_Login.bgLog_password','Пароль:')
							! field strTip
							! button
							Call CurrentLangTable.AddAtom('dlg_Login.pbConnect','Соединить')
							Call CurrentLangTable.AddAtom('dlg_Login.pbExit','Выход')
							! error text
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrBDName','Наименование БД не может быть пустым!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrA1','Ошибка соединения через шлюз №')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrA2','Невозможно установить связь с сервером аудита')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrAudit','Ошибка аудита')
							!
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrC1','Ошибка при активировании канала аудита!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrC2','Не установлен аудирующий коннект к БД.')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrC3','Проверьте учетную запись пользователя аудита, сетевые настройки, настройки SQL.INI файла и')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrC4','дискриптор соединения в настроечных файлах клиентского ПО БД.')
							!
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrU1','Пользователь СУБД')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrU11',  'не существует!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrU2','Банковский день закрыт, работа в комплексе невозможна')
							!
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrU3','Пользователь с рабочим именем')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrU31',  'не зарегистрирован на проходной!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrU4','Потенциальная угроза безопасности системы! Попытка войти в систему под именем пользователя')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrU41',  'не зарегистрированого на проходной!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrU42',  'login которого заблокирован!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrU43',  'login которого заблокирован по сроку действия!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrU5','Учетная запись пользователя с рабочим именем')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrU51',  'заблокирована!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrU52',  'заблокирована по сроку действия!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrA','В доступе к системе ОТКАЗАНО!')
							!
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrD','Ошибка при дешифровании строки параметров запуска!')
							! Error Messages
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrMsg1','Срок действия пароля истекает через несколько дней!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrMsg2','Смените Пароль!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrMsg3','Срок действия пароля истек!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrMsg4','Учетная запись блокирована СУБД!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrMsg5','Пустой пароль.')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrMsg6','Неверное рабочее имя или пароль.')
							Call CurrentLangTable.AddAtom('dlg_Login.cTErrMsg7','Недопустимые символы в пароле.')
							! message text
							Call CurrentLangTable.AddAtom('dlg_Login.cTMess1','Срок действия пароля истекает через')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMess11','день!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMess12','дня!')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMessFileNotFound','Не найден файл конфигурации или в файле конфигурации отсутствует имя Базы Данных!')
							! constants
							Call CurrentLangTable.AddAtom('dlg_Login.cTLog_database','Введите имя Базы Данных...')
							Call CurrentLangTable.AddAtom('dlg_Login.cTLog_user',    'Введите имя пользователя...')
							Call CurrentLangTable.AddAtom('dlg_Login.cTLog_password','Введите пароль пользователя...')
							Call CurrentLangTable.AddAtom('dlg_Login.cTStatusText1', 'Выполнить соединение с Базой Данных...')
							Call CurrentLangTable.AddAtom('dlg_Login.cTStatusText2', 'Выберите Рабочую Банковскую Дату...')
							Call CurrentLangTable.AddAtom('dlg_Login.cTStatusText3', 'Завершить работу с программой...')
							Call CurrentLangTable.AddAtom('dlg_Login.cTConnect','Продолжить')
							Call CurrentLangTable.AddAtom('dlg_Login.cTToLog',  'Регистрация рабочей банковской даты...')
							!
							Call CurrentLangTable.AddAtom('dlg_Login.cTMonth1', 'Январь')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMonth2', 'Февраль')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMonth3', 'Март')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMonth4', 'Апрель')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMonth5', 'Май')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMonth6', 'Июнь')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMonth7', 'Июль')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMonth8', 'Август')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMonth9', 'Сентябрь')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMonth10','Октябрь')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMonth11','Ноябрь')
							Call CurrentLangTable.AddAtom('dlg_Login.cTMonth12','Декабрь')
							Call CurrentLangTable.AddAtom('dlg_Login.cTWeekDay1','Пн')
							Call CurrentLangTable.AddAtom('dlg_Login.cTWeekDay2','Вт')
							Call CurrentLangTable.AddAtom('dlg_Login.cTWeekDay3','Ср')
							Call CurrentLangTable.AddAtom('dlg_Login.cTWeekDay4','Чт')
							Call CurrentLangTable.AddAtom('dlg_Login.cTWeekDay5','Пт')
							Call CurrentLangTable.AddAtom('dlg_Login.cTWeekDay6','Сб')
							Call CurrentLangTable.AddAtom('dlg_Login.cTWeekDay7','Вс')
							! ====================================================
						!
						Set fInitLib = TRUE
					Return fInitLib
			!
		Named Menus
		Class Definitions
		Default Classes
			MDI Window: cBaseMDI
			Form Window:
			Dialog Box:
			Table Window:
			Quest Window:
			Data Field:
			Spin Field:
			Multiline Field:
			Pushbutton:
			Radio Button:
			Option Button:
			Check Box:
			Child Table:
			Quest Child Window: cQuickDatabase
			List Box:
			Combo Box:
			Picture:
			Vertical Scroll Bar:
			Horizontal Scroll Bar:
			Column:
			Background Text:
			Group Box:
			Line:
			Frame:
			Custom Control:
		Application Actions
	Dialog Box: dlg_Login
		Class:
		Property Template:
		Class DLL Name:
		Title: Подключение к Базе Данных...
		Accesories Enabled? Yes
		Visible? Yes
		Display Settings
			Display Style? Default
			Visible at Design time? No
			Type of Dialog: System Modal
			Window Location and Size
				Left:   2.738"
				Top:    1.802"
				Width:  5.567"
				Width Editable? Yes
				Height: 2.8"
				Height Editable? Yes
			Absolute Screen Location? Yes
			Font Name: MS Sans Serif
			Font Size: 8
			Font Enhancement: Default
			Text Color: Default
			Background Color: Default
		Description: Подключение к базе данных
		Tool Bar
			Display Settings
				Display Style? Etched
				Location? Top
				Visible? No
				Size: 0.548"
				Size Editable? Yes
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: Bold
				Text Color: Default
				Background Color: 3D Face Color
			Contents
		Contents
			Frame
				Resource Id: 13389
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Window Location and Size
					Left:   0.086"
					Top:    0.073"
					Width:  5.314"
					Width Editable? Yes
					Height: 0.607"
					Height Editable? Yes
				Visible? Yes
				Corners: Square
				Border Style: Etched
				Border Thickness: 1
				Border Color: 3D Shadow Color
				Background Color: 3D Face Color
			Background Text: База данных:
				Resource Id: 45618
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Window Location and Size
					Left:   0.286"
					Top:    0.26"
					Width:  1.843"
					Width Editable? Yes
					Height: 0.167"
					Height Editable? Yes
				Visible? Yes
				Justify: Right
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: Bold
				Text Color: Default
				Background Color: 3D Face Color
			Data Field: bgLog_database
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class: cLabelControl
				Property Template:
				Class DLL Name:
				Data
					Maximum Data Length: Class Default
					Data Type: Class Default
					Editable? Class Default
				Display Settings
					Window Location and Size
						Left:   Default
						Top:    Default
						Width:  Class Default
						Width Editable? Class Default
						Height: Class Default
						Height Editable? Class Default
					Visible? Class Default
					Border? Class Default
					Justify: Class Default
					Format: Class Default
					Country: Class Default
					Font Name: Class Default
					Font Size: Class Default
					Font Enhancement: Class Default
					Text Color: Class Default
					Background Color: Class Default
					Input Mask: Class Default
				Message Actions
			Data Field: log_database
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Data
					Maximum Data Length: 10
					Data Type: String
					Editable? No
				Display Settings
					Window Location and Size
						Left:   2.286"
						Top:    0.179"
						Width:  2.9"
						Width Editable? Yes
						Height: 0.375"
						Height Editable? Yes
					Visible? Yes
					Border? No
					Justify: Left
					Format: Uppercase
					Country: Default
					Font Name: Arial Cyr
					Font Size: 19
					Font Enhancement: Bold
					Text Color: Dark Blue
					Background Color: 3D Face Color
					Input Mask: Unformatted
				Message Actions
					On SAM_SetFocus
						! Call SalStatusSetText(hWndForm, 'Введите имя Базы Данных...')
						Call SalStatusSetText(hWndForm, CurrentLangTable.GetAtomTitle('dlg_Login.cTLog_database'))
					On UM_NoFontChange
						Return TRUE
					On SAM_Validate
						If not MyValue
							Call SalMessageBeep( MB_IconAsterisk )
							! Call SalMessageBox( 'Наименование БД не может быть пустым!', 'Error', MB_IconAsterisk | MB_Ok )
							Call SalMessageBox( CurrentLangTable.GetAtomTitle('dlg_Login.cTErrBDName'), 'Error', MB_IconAsterisk | MB_Ok )
							Return VALIDATE_Cancel
						Call SetDbs(MyValue)
						Return VALIDATE_Ok
			!
			Frame
				Resource Id: 1926
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Window Location and Size
					Left:   0.086"
					Top:    0.74"
					Width:  5.314"
					Width Editable? Yes
					Height: 0.917"
					Height Editable? Yes
				Visible? Yes
				Corners: Square
				Border Style: Etched
				Border Thickness: 1
				Border Color: 3D Shadow Color
				Background Color: Default
			Background Text: Пользователь:
				Resource Id: 36909
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Window Location and Size
					Left:   0.2"
					Top:    0.929"
					Width:  1.929"
					Width Editable? Yes
					Height: 0.167"
					Height Editable? Yes
				Visible? Yes
				Justify: Right
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: Bold
				Text Color: Default
				Background Color: Default
			Data Field: bgLog_user
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class: cLabelControl
				Property Template:
				Class DLL Name:
				Data
					Maximum Data Length: Class Default
					Data Type: Class Default
					Editable? Class Default
				Display Settings
					Window Location and Size
						Left:   Default
						Top:    Default
						Width:  Class Default
						Width Editable? Class Default
						Height: Class Default
						Height Editable? Class Default
					Visible? Class Default
					Border? Class Default
					Justify: Class Default
					Format: Class Default
					Country: Class Default
					Font Name: Class Default
					Font Size: Class Default
					Font Enhancement: Class Default
					Text Color: Class Default
					Background Color: Class Default
					Input Mask: Class Default
				Message Actions
			Data Field: log_user
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Data
					Maximum Data Length: Default
					Data Type: String
					Editable? Yes
				Display Settings
					Window Location and Size
						Left:   2.286"
						Top:    0.823"
						Width:  2.9"
						Width Editable? Yes
						Height: 0.315"
						Height Editable? Yes
					Visible? Yes
					Border? Yes
					Justify: Left
					Format: Unformatted
					Country: Default
					Font Name: Arial Cyr
					Font Size: 10
					Font Enhancement: Bold
					Text Color: Default
					Background Color: Default
					Input Mask: Unformatted
				Message Actions
					On SAM_SetFocus
						! /////////////////////////////////////////////////////////////////////////////////////////////////////////////
						!
						! Call SalStatusSetText(hWndForm, 'Введите имя пользователя...')
						Call SalStatusSetText(hWndForm, CurrentLangTable.GetAtomTitle('dlg_Login.cTLog_user'))
						!
						! /////////////////////////////////////////////////////////////////////////////////////////////////////////////
					On UM_NoFontChange
						Return TRUE
			Background Text: Пароль:
				Resource Id: 36910
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Window Location and Size
					Left:   0.286"
					Top:    1.344"
					Width:  1.843"
					Width Editable? Yes
					Height: 0.167"
					Height Editable? Yes
				Visible? Yes
				Justify: Right
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: Bold
				Text Color: Default
				Background Color: Default
			Data Field: bgLog_password
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class: cLabelControl
				Property Template:
				Class DLL Name:
				Data
					Maximum Data Length: Class Default
					Data Type: Class Default
					Editable? Class Default
				Display Settings
					Window Location and Size
						Left:   Default
						Top:    Default
						Width:  Class Default
						Width Editable? Class Default
						Height: Class Default
						Height Editable? Class Default
					Visible? Class Default
					Border? Class Default
					Justify: Class Default
					Format: Class Default
					Country: Class Default
					Font Name: Class Default
					Font Size: Class Default
					Font Enhancement: Class Default
					Text Color: Class Default
					Background Color: Class Default
					Input Mask: Class Default
				Message Actions
			Data Field: log_password
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Data
					Maximum Data Length: Default
					Data Type: String
					Editable? Yes
				Display Settings
					Window Location and Size
						Left:   2.286"
						Top:    1.24"
						Width:  2.9"
						Width Editable? Yes
						Height: 0.315"
						Height Editable? Yes
					Visible? Yes
					Border? Yes
					Justify: Left
					Format: Invisible
					Country: Default
					Font Name: MS Serif
					Font Size: 10
					Font Enhancement: None
					Text Color: Default
					Background Color: Default
					Input Mask: Unformatted
				Message Actions
					On SAM_AnyEdit
						Call SalEnableWindow(pbConnect)
					On SAM_SetFocus
						! /////////////////////////////////////////////////////////////////////////////////////////////////////////////
						!
						! Call SalStatusSetText(hWndForm, 'Введите пароль пользователя...')
						Call SalStatusSetText(hWndForm, CurrentLangTable.GetAtomTitle('dlg_Login.cTLog_password'))
						!
						! /////////////////////////////////////////////////////////////////////////////////////////////////////////////
					On UM_NoFontChange
						Return TRUE
			!
			Pushbutton: pbConnect
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class: cPushButtonLabeled
				Property Template:
				Class DLL Name:
				Title: Соединить
				Window Location and Size
					Left:   2.314"
					Top:    1.719"
					Width:  1.5"
					Width Editable? Class Default
					Height: 0.45"
					Height Editable? Class Default
				Visible? Class Default
				Keyboard Accelerator: Enter
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: Class Default
				Picture File Name: \BARS98\RESOURCE\BMP\APPLY.BMP
				Picture Transparent Color: Gray
				Image Style: Class Default
				Text Color: Class Default
				Background Color: Class Default
				Message Actions
					On SAM_Click
						If not Connect.IsConnected()
							Call WaitCursorOn()
							Set fDenied = FALSE
							!
							When SqlError
								Call WaitCursorOff()
								Return FALSE
							!
							Call SalUseRegistry(TRUE, GetDBMS())
							!
							Call SalSetProfileString(GetHost(), "USER", log_user, "netrc")
							Call SalSetProfileString(GetHost(), "AskPassword", "P", "netrc")
							Call SalSetProfileString(GetHost(), "PASS", PackPass(log_password, log_user), "netrc")
							!
							! Call SalMessageBox( 'before connect: user='||log_user||' password='||log_password, '', MB_Ok )
							Set szOraUser = Spac(64)
							Set szOraPassword = Spac(64)
							!
							! !! clsid
							If nUseGateway ! соединятся через шлюз ?
								Set nRes = GetLogin(nBridgeHandle, nTaskID, szOraUser, szOraPassword)
								If nRes
									Call WaitCursorOff()
									! Set szMsgBuf = 'Ошибка соединения через шлюз № ' || Str(nRes)
									Set szMsgBuf = CurrentLangTable.GetAtomTitle('dlg_Login.cTErrA1') || ' ' || Str(nRes) || CredFormatMessage(nRes)
									If Audit_PutMsg('ERROR', 'ID ' ||szSecUser || ' - ' || szMsgBuf)
										! Call SalMessageBox( 'Невозможно установить связь с сервером аудита',
												 'Ошибка аудита', MB_Ok|MB_IconStop )
										Call SalMessageBox( CurrentLangTable.GetAtomTitle('dlg_Login.cTErrA2'),
												  CurrentLangTable.GetAtomTitle('dlg_Login.cTErrAudit'), MB_Ok|MB_IconStop )
										Call SalEndDialog(hWndForm, 0)
										Return 0
									Call SalEndDialog(hWndForm, 0)
									Return FALSE
								Call SalBringWindowToTop(GetDesktopWindow())
								Call SalBringWindowToTop(dlg_Login)
							Else
								Set szOraUser = log_user
								Set szOraPassword = log_password
							!
							! Call DebugN(VisWinGetStyle(SalNumberToWindowHandle(SalWindowHandleToNumber(hWndForm)
							!
							! Инициализация системы аудита...
							Set bConnectDbspy = FALSE
							! If nDBSpyLogin = 0
								! Call SalMessageBox( 'Before DBSpy_Init('||GetDbs()||')', 'Debug: DBLogin', MB_Ok )
								! Установить параметры коннекта для DBSPY (MIK 30-12-2004)
								!
								    Call SalUseRegistry(FALSE, '')
								    Call SalGetProfileString(INI_CommonParameters, 'DBSPY', 'YES', strTemp, GetIniFileName())
								    If strTemp = 'NO'
									    Call DBSpy_SetUser(szOraUser, szOraPassword)
								!
								    Set nDBSpyLogin = DBSpy_Init(GetDbs())
								!
								! Call SalMessageBox(Str(nDBSpyLogin), 'DBSpy_Init', MB_Ok)
								!
								    If nDBSpyLogin != 1 !! error
									    If hWndBanner
										    Call SalDestroyWindow(hWndBanner)
										    Set hWndBanner = hWndNULL
									    If strTemp != 'NO'
										! Call SalMessageBox( 'Ошибка при активировании канала аудита!' || SalNumberToChar( 13 ) || SalNumberToChar( 10 ) ||
												'Не установлен аудирующий коннект к БД. ' || SalNumberToChar( 13 ) || SalNumberToChar( 10 ) ||
												'Проверьте учетную запись пользователя аудита, сетевые настройки, настройки SQL.INI файла и'  || SalNumberToChar( 13 ) || SalNumberToChar( 10 ) ||
												'дискриптор соединения в настроечных файлах клиентского ПО БД.', 'Bars Audit System', MB_IconStop | MB_Ok )
										    Call SalMessageBox(CurrentLangTable.GetAtomTitle('dlg_Login.cTErrC1') || Chr(13) || Chr(10) ||
												     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrC2') || Chr(13) || Chr(10) ||
												     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrC3') || Chr(13) || Chr(10) ||
												     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrC4'), 'Bars Audit System', MB_IconStop | MB_Ok)
									! Call SalEndDialog(dlg_Login, 0)
									! Return 0
								    Else ! user DBSpy successfully connected
									! прописываем имя модуля в v$Session
									    If not DBSpy_SetAppInfo(GetDBMS())
										    Return FALSE
									    Set bConnectDbspy = TRUE
								! Call SalMessageBox( 'After DBSpy_Init&Connect', 'Debug: DBLogin', MB_Ok )
							! Call SalMessageBox( 'Before DBSpy_Init('||GetDbs()||')', 'Debug: DBLogin', MB_Ok )
							! Установить параметры коннекта для DBSPY (MIK 30-12-2004)
							!
							! Call SalUseRegistry(FALSE, '')
							! Call SalGetProfileString(INI_CommonParameters, 'DBSPY', 'YES', strTemp, GetIniFileName())
							! Call SalGetProfileString(INI_CommonParameters, 'DBSPY', 'NO', strTemp, GetIniFileName())
							! If strTemp = 'NO'
								    Call DBSpy_SetUser(szOraUser, szOraPassword)
							Call DBSpy_SetUser(szOraUser, szOraPassword)
							!
							Set nDBSpyLogin = DBSpy_Init(GetDbs())
							!
							! Call SalMessageBox(Str(nDBSpyLogin), 'DBSpy_Init', MB_Ok)
							!
							If nDBSpyLogin != 1 !! error
								If hWndBanner
									Call SalDestroyWindow(hWndBanner)
									Set hWndBanner = hWndNULL
								! If strTemp != 'NO'
									! Call SalMessageBox( 'Ошибка при активировании канала аудита!' || SalNumberToChar( 13 ) || SalNumberToChar( 10 ) ||
											'Не установлен аудирующий коннект к БД. ' || SalNumberToChar( 13 ) || SalNumberToChar( 10 ) ||
											'Проверьте учетную запись пользователя аудита, сетевые настройки, настройки SQL.INI файла и'  || SalNumberToChar( 13 ) || SalNumberToChar( 10 ) ||
											'дискриптор соединения в настроечных файлах клиентского ПО БД.', 'Bars Audit System', MB_IconStop | MB_Ok )
									    Call SalMessageBox(CurrentLangTable.GetAtomTitle('dlg_Login.cTErrC1') || Chr(13) || Chr(10) ||
											     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrC2') || Chr(13) || Chr(10) ||
											     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrC3') || Chr(13) || Chr(10) ||
											     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrC4'), 'Bars Audit System', MB_IconStop | MB_Ok)
								! Call SalEndDialog(dlg_Login, 0)
								! Return 0
							Else ! user DBSpy successfully connected
								! прописываем имя модуля в v$Session
								If not DBSpy_SetAppInfo(GetDBMS())
									Return FALSE
								Set bConnectDbspy = TRUE
							! Call SalMessageBox( 'After DBSpy_Init&Connect', 'Debug: DBLogin', MB_Ok )
							! !
							If bConnectDbspy
								Set SqlInMessage = 1024*20
								Set SqlOutMessage = 1024*20
								Call Connect.Define(log_database, szOraUser, szOraPassword, FALSE)
								!
								Call Connect.Connect()
							If Connect.IsConnected()
								Call XConnectSetParams(Connect)
								!
								Call XRolePoolInit()
								Call SalUseRegistry( FALSE, '' )
								Call SalGetProfileString( INI_CommonParameters, 'AppRoleName', 'START1', strStartRoleName, GetIniFileName() )
								! Call SalMessageBox( 'Start role name: ' || strStartRoleName, 'Debug: DBLogin', MB_Ok )
								Call XRoleSet(Connect.hSql(), 'GLOBAL', strStartRoleName)
								!
								! Call SalMessageBox( 'Before Alter System', 'Debug: DBLogin', MB_Ok )
								If SalStrTrimX(SalStrUpperX(GetDBMS ())) = 'ORACLE'
									! в стартовой роли должно быть право на выполнение
											sys.dbms_application_info
									If SqlPLSQLCommand( Connect.hSql(),
											   "sys.dbms_application_info.set_module('ABSBARS','NULL')")
										Call SqlCommit(Connect.hSql())
									Else
										Call SqlRollback(Connect.hSql())
										Return FALSE
									Call SqlPrepareAndExecute (Connect.hSql(), 
											      "ALTER SESSION SET NLS_NUMERIC_CHARACTERS='. ' 
											       NLS_TERRITORY=AMERICA") 
								!
								! Call SalMessageBox( 'Before Lock Mode', 'Debug: DBLogin', MB_Ok )
								Call SqlLockMode(Connect.hSql())
								!
								! Call SalMessageBox( 'Before GetParamSetings', 'Debug: DBLogin', MB_Ok )
								Call GetParamsSettings(Connect.hSql())
								!
								! Call SalMessageBox( 'Before NlsLang', 'Debug: DBLogin', MB_Ok )
								If SalStrTrimX(SalStrUpperX(GetDBMS ())) = 'ORACLE'
									Set strNlsLang = GetGlobalOption( 'NLS_LANG' )
									If strNlsLang
										Call SqlPrepareAndExecute (Connect.hSql(), 
												      "ALTER SESSION SET NLS_LANGUAGE="|| SalStrUpperX(strNlsLang)) 
									Set strNlsSort = GetGlobalOption( 'NLS_SORT' )
									If strNlsSort
										Call SqlPrepareAndExecute (Connect.hSql(), 
												      "ALTER SESSION SET NLS_SORT="|| SalStrUpperX(strNlsSort)) 
								!
								! Call SalMessageBox( 'Before XConnectMakeAuxiliaries', 'Debug: DBLogin', MB_Ok )
								Call XConnectMakeAuxiliaries()
								!
								Set strUserName=SqlUser
								!
								! Call SalMessageBox( 'Before ExecuteParams', 'Debug: DBLogin', MB_Ok )
								Call ExecuteParams()
								!
								!
								!
								! Если пользователь с class_id=0 - при закрытом дне -  его не пускать
								Set sSql = 'SELECT clsid INTO :nUserClass FROM staff WHERE logname=UPPER(:szOraUser)'
								If SqlPrepareAndExecute (Connect.hSql(), sSql)
									If not SqlFetchNext(Connect.hSql(), nFetchRes)
										If hWndBanner
											Call SalDestroyWindow( hWndBanner )
											Set hWndBanner = hWndNULL
										! Пользователь СУБД szOraUser не существует!
										Call SalMessageBox( CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU1')||' '||szOraUser||' '||
												     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU11'), 
												     CurrentLangTable.GetAtomTitle('cTAt'), MB_Ok|MB_IconExclamation )
										Call Connect.Disconnect()
										Call WaitCursorOff()
										Call SalDestroyWindow(hWndForm)
										Return 0
								If (nUserClass=0 AND SalStrToNumber(GetGlobalOption('RRPDAY')) = 0)
									If hWndBanner
										Call SalDestroyWindow( hWndBanner )
										Set hWndBanner = hWndNULL
									! Call SalMessageBox( 'Банковский день закрыт, работа в комплексе невозможна',
											 'Внимание!', MB_Ok|MB_IconExclamation )
									Call SalMessageBox( CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU2'),
											  CurrentLangTable.GetAtomTitle('cTAt'), MB_Ok|MB_IconExclamation )
									Call Connect.Disconnect()
									Call WaitCursorOff()
									Call SalDestroyWindow(hWndForm)
									Return 0
								!
								!
								! Call SaveInfoToLog (MSG_ConnectDbs || log_database)
								Call SaveInfoToLog (CurrentLangTable.GetAtomTitle('cTMessConnectDbs')|| ' ' || log_database)
								!
								Call SqlIsolationNormal (Connect.hSql())
								!
								! Call SalMessageBox( 'Before Days Check', 'Debug: DBLogin', MB_Ok )
								Call SqlPrepareAndExecute(Connect.hSql(), 'SELECT expiry_date-sysdate INTO :nExpDays FROM user_users')
								If SqlFetchNext( Connect.hSql(), nFetchRes ) AND nExpDays != NUMBER_Null
									Set nExpDays = SalNumberTruncate( nExpDays, 2, 0 )
									If nExpDays <= 3
										If nExpDays <= 1
											Set nExpDays = 1
											! день!
											Set strDaysTitle = CurrentLangTable.GetAtomTitle('dlg_Login.cTMess11')
										Else
											! дня!
											Set strDaysTitle = CurrentLangTable.GetAtomTitle('dlg_Login.cTMess12')
										If hWndBanner
											Call SalDestroyWindow( hWndBanner )
											Set hWndBanner = hWndNULL
										Call SalMessageBeep( MB_IconAsterisk )
										! Срок действия пароля истекает через nExpDays strDaysTitle Смените пароль!
										Call SalMessageBox(CurrentLangTable.GetAtomTitle('dlg_Login.cTMess') || ' ' || 
												     SalNumberToStrX(nExpDays, 0) || ' ' || strDaysTitle || ' ' ||
												     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg2'),
												     CurrentLangTable.GetAtomTitle('cTSecurity'), MB_IconStop | MB_Ok)
										! Срок действия пароля истекает через nExpDays strDaysTitle
										Call SaveInfoToLog(CurrentLangTable.GetAtomTitle('dlg_Login.cTMess')||' ' || SalNumberToStrX( nExpDays, 0) || strDaysTitle)
								!
								Set bExist = FALSE
								If nUseGateway ! соединятся через шлюз ?
									Call SqlPrepareAndExecute(Connect.hSql(),
											'SELECT bax, disable, date_is_valid(adate1, adate2, rdate1, rdate2)
											 INTO :bExist, :bAccountDisable, :bInTerms
											 FROM staff s
											 WHERE upper(trim(s.tabn)) = upper(:log_user) and upper(logname) = upper(:strUserName)' )
								Else
									Call SqlPrepareAndExecute(Connect.hSql(),
											'SELECT bax, disable, date_is_valid(adate1, adate2, rdate1, rdate2)
											 INTO :bExist, :bAccountDisable, :bInTerms
											 FROM staff WHERE logname = upper (user)')
								Call SqlFetchNext(Connect.hSql(), nFetchRes)
								!
								If bExist = NUMBER_Null OR (not bExist)
									If hWndBanner
										Call SalDestroyWindow( hWndBanner )
										Set hWndBanner = hWndNULL
									Call SalMessageBeep(MB_IconStop)
									! Пользователь с рабочим именем IifS(nUseGateway, log_user, strUserName) не зарегистрирован на проходной! В доступе к системе ОТКАЗАНО!
									Call SalMessageBox(CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU3')||' ' || IifS(nUseGateway, log_user, strUserName) || ' '||
											     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU31'), 
											     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrA'), MB_IconStop | MB_Ok)
									! Потенциальная угроза безопасности системы! Попытка войти в систему под именем пользователя (strUserName) не зарегистрированого на проходной!
									Call SaveErrorToLog(CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU4')|| ' (' || IifS(nUseGateway, log_user, strUserName) || '), ' || 
											     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU41'))
									Set fDenied = TRUE
								If EnhancedSecurity()
									If hWndBanner
										Call SalDestroyWindow( hWndBanner )
										Set hWndBanner = hWndNULL
									If bAccountDisable
										Call SalMessageBeep(MB_IconStop)
										! Учетная запись пользователя с рабочим именем strUserName заблокирована! В доступе к системе ОТКАЗАНО!
										Call SalMessageBox(CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU5')|| ' ' || IifS(nUseGateway, log_user, strUserName) || ' ' ||
												     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU51') || PutCrLf() ||
												     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrA'), 
												     CurrentLangTable.GetAtomTitle('cTSecurity'), MB_IconStop | MB_Ok)
										! Потенциальная угроза безопасности системы! Попытка войти в систему под именем пользователя strUserName, login которого заблокирован!
										Call SaveErrorToLog(CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU4')||' (' || IifS(nUseGateway, log_user, strUserName) || '), ' ||
												     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU42'))
										Set fDenied = TRUE
									If bInTerms = NUMBER_Null OR (not bInTerms)
										Call SalMessageBeep(MB_IconStop)
										! Учетная запись пользователя с рабочим именем strUserName заблокирована по сроку действия! В доступе к системе ОТКАЗАНО!
										Call SalMessageBox(CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU5')|| ' ' || IifS(nUseGateway, log_user, strUserName) || ' ' || 
												     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU52') || PutCrLf() ||
												     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrA'), 
												     CurrentLangTable.GetAtomTitle('cTSecurity'), MB_IconStop | MB_Ok)
										! Потенциальная угроза безопасности системы! Попытка войти в систему под именем пользователя (strUserName), loginе которого заблокирован по сроку действия!
										Call SaveErrorToLog(CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU4')|| ' (' || IifS(nUseGateway, log_user, strUserName) || '), ' ||
												     CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU43'))
										Set fDenied = TRUE
								If fDenied
									If Connect.IsConnected()
										Call Connect.Disconnect()
									! Call SaveInfoToLog(MSG_NoConnectDbs())
									Call SaveInfoToLog(CurrentLangTable.GetAtomTitle('cTMessNoConnectDbs'))
									Call SalQuit()
								!
								! Продолжить
								Call SalSetWindowText( pbConnect, CurrentLangTable.GetAtomTitle('dlg_Login.cTConnect') )
								Call SalDisableWindow( log_user )
								Call SalDisableWindow( log_password )
								!
								If SqlPrepareAndExecute( Connect.hSql(), 'SELECT fdat INTO :dtChoose FROM fdat WHERE NVL(stat, 0)=0' ) 
									While SqlFetchNext( Connect.hSql(), nFetchRes )
										Call cal1.SpecialDate(SPECIAL_OneTime, dtChoose,
												     DAY_Unset, SEQ_Unset, COLOR_SysWindowText,
												     COLOR_White, TRUE)
								Set dtWBDate = GetParamBankDate()
								!
								! == begin: Временное решение для пользователя /
								!
								Set sUserTobo = ''
								If GetGlobalOptionEx('HAVETOBO') = 2
									Call SqlPrepareAndExecute(Connect.hSql(),
											"select tobo into :sUserTobo from staff where logname=upper(:szOraUser)")
									Call SqlFetchNext(Connect.hSql(), nFetchRes)
								!
								! == end: Временное решение для пользователя /
								!
								! Проверим можно ли пользователю дату показывать !
								If GetUserMark() >= GetGlobalOptionEx( 'MARKDATE' ) and GetGlobalOptionEx( '/BDATE' ) = 0
									Set bChangeDB = FALSE
									Call SalDisableWindow(log_database)
									!
									Call cal1.SetFocusDate( GetParamBankDate() )
									! Set strPBConnectStatusText = 'Выберите Рабочую Банковскую Дату...'
									Set strPBConnectStatusText = CurrentLangTable.GetAtomTitle('dlg_Login.cTStatusText2')
									Call SalSetWindowSize( hWndForm, 9, 2.8 )
									Call SalCenterWindow( hWndForm )
									Call SalSetFocus( pbConnect )
									Call SalSendMsg( hWndForm, SAM_Destroy, 0, 0 )
									If not SalIsWindowVisible( hWndForm )
										Call SalShowWindow( hWndForm )
									Call SalWaitCursor( FALSE )
								Else
									If GetUserMark() < 0 ! Технический пользователь
										If SqlPrepareAndExecute(Connect.hSql(), 'SELECT TRUNC(sysdate) INTO :dtWBDate FROM dual')
											Call SqlFetchNext(Connect.hSql(), nFetchRes)
											If SqlPrepareAndExecute(Connect.hSql(), 'SELECT NVL(stat, 0) INTO :nTechDayStatus FROM fdat WHERE fdat=:dtWBDate')
												If not SqlFetchNext(Connect.hSql(), nFetchRes) OR nTechDayStatus != 0
													If hWndBanner
														Call SalDestroyWindow( hWndBanner )
														Set hWndBanner = hWndNULL
													! Call SalMessageBox( 'Банковский день закрыт, работа в комплексе невозможна',
															 'Внимание!', MB_Ok|MB_IconExclamation )
													Call SalMessageBox( CurrentLangTable.GetAtomTitle('dlg_Login.cTErrU2'),
															  CurrentLangTable.GetAtomTitle('cTAt'), MB_Ok|MB_IconExclamation )
													Call Connect.Disconnect()
													Call WaitCursorOff()
													Call SalDestroyWindow(hWndForm)
													Return 0
									Call SalPostMsg( pbConnect, SAM_Click, 0, 0 )
							Else
								If hWndBanner
									Call SalDestroyWindow( hWndBanner )
									Set hWndBanner = hWndNULL
									If not SalIsWindowVisible( hWndForm )
										Call SalShowWindow( hWndForm )
								Call SalWaitCursor(FALSE)
								If not bConnectDbspy
									Set nConnectError = nDBSpyLogin
								Else
									Set nConnectError = SqlError(Connect.hSql())
								!
								! Call SalMessageBox(Str(nConnectError), '', MB_Ok)
								!
								! Set strConnectErrMsg = MSG_NoConnectDbs()
								Set strConnectErrMsg = CurrentLangTable.GetAtomTitle('cTMessNoConnectDbs')
								Select Case nConnectError
									Case ECON_PasswordWillExpire
										! Срок действия пароля истекает черз несколько дней! [Error ORA-28001] Смените Пароль!
										Set strConnectErrMsg = strConnectErrMsg || ' ' ||
												    CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg1') || ' [Error ORA-28001] ' ||
												    CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg2')
										Break
									Case ECON_PasswordExpired
										! Срок действия пароля истек! [Error ORA-28001] Смените Пароль!
										Set strConnectErrMsg = strConnectErrMsg || ' ' || 
												    CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg3') || ' [Error ORA-28001] ' ||
												    CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg2')
										Break
									Case ECON_AccountLocked
										! Учетная запись блокирована СУБД! [Error ORA-28000]
										Set strConnectErrMsg = strConnectErrMsg || ' ' || CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg4') || ' [Error ORA-28000]'
										Break
									Case 48000
										! Учетная запись блокирована СУБД! [Error ORA-28000]
										Set strConnectErrMsg = strConnectErrMsg || ' ' || CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg4') || ' [Error ORA-28000]'
										Break
									Case 21005	! Null password given
										! Пустой пароль. [Error ORA-01005]
										Set strConnectErrMsg = strConnectErrMsg || ' ' || CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg5') || ' [Error ORA-01005]'
										Break
									Case 01005	! Null password given
										! Пустой пароль. [Error ORA-01005]
										Set strConnectErrMsg = strConnectErrMsg || ' ' || CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg5') || ' [Error ORA-01005]'
										Break
									Case 21017	! Invalid username or password
										! Неверное рабочее имя или пароль. [Error ORA-01017]
										Set strConnectErrMsg = strConnectErrMsg || ' ' || CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg6') || ' [Error ORA-01017]'
										Break
									Case 01017	! Invalid username or password
										! Неверное рабочее имя или пароль. [Error ORA-01017]
										Set strConnectErrMsg = strConnectErrMsg || ' ' || CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg6') || ' [Error ORA-01017]'
										Break
									Case 21040	! Invalid charackters in password
										! Недопустимые символы в пароле. [Error ORA-01040]
										Set strConnectErrMsg = strConnectErrMsg || ' ' || CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg7') || ' [Error ORA-01040]'
										Break
									Case 01040	! Invalid charackters in password
										! Недопустимые символы в пароле. [Error ORA-01040]
										Set strConnectErrMsg = strConnectErrMsg || ' ' || CurrentLangTable.GetAtomTitle('dlg_Login.cTErrMsg7') || ' [Error ORA-01040]'
										Break
									Default
										Set strConnectErrMsg = strConnectErrMsg || ' [Error #' || SalNumberToStrX(nConnectError, 0) || ']'
										Break
								If bConnectDbspy
									Call DBSpy_Report(NUMBER_Null, DATETIME_Null, strConnectErrMsg,	DBSpy_Error, GetDBMS())
								Call SalMessageBox(strConnectErrMsg, CurrentLangTable.GetAtomTitle('cTAt'), MB_Ok)
						Else
							If GetGlobalOptionEx('HAVETOBO') = 2 and sUserTobo = '/'
							Else
								If SqlPLSQLCommand(Connect.hSql(), "set_bankdate(dtWBDate)")
									! Регистрация рабочей банковской даты...
									Call SqlCommitEx(Connect.hSql(), CurrentLangTable.GetAtomTitle('dlg_Login.cTToLog'))
								Else
									Call SqlRollbackEx(Connect.hSql(), 'Неуспешная регистрация рабочей банковской даты')
							Call SalEndDialog(hWndForm, TRUE)
					On SAM_SetFocus
						Call SalStatusSetText(hWndForm, strPBConnectStatusText)
			Pushbutton: pbExit
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class: cPushButtonLabeled
				Property Template:
				Class DLL Name:
				Title: Выход
				Window Location and Size
					Left:   3.886"
					Top:    1.719"
					Width:  1.5"
					Width Editable? Class Default
					Height: 0.45"
					Height Editable? Class Default
				Visible? Class Default
				Keyboard Accelerator: Esc
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: Class Default
				Picture File Name: \BARS98\RESOURCE\BMP\DISCARD.BMP
				Picture Transparent Color: Gray
				Image Style: Class Default
				Text Color: Class Default
				Background Color: Class Default
				Message Actions
					On SAM_Click
						Call SalEndDialog(hWndForm, 0)
					On SAM_SetFocus
						! //////////////////////////////////////////////////////////////////////////////////////////////////////////////
						!
						! Call SalStatusSetText(hWndForm, 'Завершить работу с программой...')
						Call SalStatusSetText(hWndForm, CurrentLangTable.GetAtomTitle('dlg_Login.cTStatusText3'))
						!
						! //////////////////////////////////////////////////////////////////////////////////////////////////////////////
			!
			Pushbutton: pbSecurityHole1
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Title:
				Window Location and Size
					Left:   10.0"
					Top:    0.929"
					Width:  0.186"
					Width Editable? Yes
					Height: 0.143"
					Height Editable? Yes
				Visible? No
				Keyboard Accelerator: F12
				Font Name: Default
				Font Size: Default
				Font Enhancement: Default
				Picture File Name:
				Picture Transparent Color: None
				Image Style: Single
				Text Color: Default
				Background Color: Default
				Message Actions
					On SAM_Click
						If SalStrUpperX(SalStrTrimX(GetDBMS())) = "ORACLE"
							Set log_user = 'barstest'
							Set log_password = 'bars2002'
						Else
							Set log_user = 'informix'
							Set log_password = 'infbars'
						!
						Call SalEnableWindow(pbConnect)
						Call SalPostMsg(pbConnect, SAM_Click, 0, 0)
			Pushbutton: pbSecurityHole2
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Title:
				Window Location and Size
					Left:   11.0"
					Top:    0.929"
					Width:  0.186"
					Width Editable? Yes
					Height: 0.143"
					Height Editable? Yes
				Visible? No
				Keyboard Accelerator: F11
				Font Name: Default
				Font Size: Default
				Font Enhancement: Default
				Picture File Name:
				Picture Transparent Color: None
				Image Style: Single
				Text Color: Default
				Background Color: Default
				Message Actions
					On SAM_Click
						If bChangeDB
							Call SalColorSet(log_database, COLOR_IndexWindow, COLOR_White)
							!
							Call SalEnableWindow(log_database)
							Set log_database=''
							!
							Call SalSetFocus(log_database)
			!
			Custom Control: cal1
.data CLASSPROPSSIZE
0000: 3600
.enddata
.data CLASSPROPS
0000: 56543A43616C656E 6461720025000100 0000000100010000 0200000001000001
0020: 0001010000000A30 312F30312F323030 310000000000
.enddata
.data INHERITPROPS
0000: 0100
.enddata
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class: cCalendar
				Property Template:
				Class DLL Name:
				Display Settings
					DLL Name:
					MS Windows Class Name:
					Style:  Class Default
					ExStyle:  Class Default
					Title:
					Window Location and Size
						Left:   5.55"
						Top:    0.06"
						Width:  3.233"
						Width Editable? Class Default
						Height: 2.119"
						Height Editable? Class Default
					Visible? Class Default
					Border? Class Default
					Etched Border? Class Default
					Hollow? Class Default
					Vertical Scroll? Class Default
					Horizontal Scroll? Class Default
					Tab Stop? Class Default
					Tile To Parent? Class Default
					Font Name: Class Default
					Font Size: Class Default
					Font Enhancement: Class Default
					Text Color: Class Default
					Background Color: System Frame Color
					DLL Settings
				Message Actions
					On SAM_Create
						Call cal1.WeekStartSet( 2 )
						! Set strWeekDay[0]='Вс'
						Set strWeekDay[0]=CurrentLangTable.GetAtomTitle('dlg_Login.cTWeekDay7')
						! Set strWeekDay[1]='Пн'
						Set strWeekDay[1]=CurrentLangTable.GetAtomTitle('dlg_Login.cTWeekDay1')
						! Set strWeekDay[2]='Вт'
						Set strWeekDay[2]=CurrentLangTable.GetAtomTitle('dlg_Login.cTWeekDay2')
						! Set strWeekDay[3]='Ср'
						Set strWeekDay[3]=CurrentLangTable.GetAtomTitle('dlg_Login.cTWeekDay3')
						! Set strWeekDay[4]='Чт'
						Set strWeekDay[4]=CurrentLangTable.GetAtomTitle('dlg_Login.cTWeekDay4')
						! Set strWeekDay[5]='Пт'
						Set strWeekDay[5]=CurrentLangTable.GetAtomTitle('dlg_Login.cTWeekDay5')
						! Set strWeekDay[6]='Сб'
						Set strWeekDay[6]=CurrentLangTable.GetAtomTitle('dlg_Login.cTWeekDay6')
						Call cal1.SetWeekDayText( strWeekDay )
						! Set strMonth[0]='Январь'
						Set strMonth[0]=CurrentLangTable.GetAtomTitle('dlg_Login.cTMonth1')
						! Set strMonth[1]='Февраль'
						Set strMonth[1]=CurrentLangTable.GetAtomTitle('dlg_Login.cTMonth2')
						! Set strMonth[2]='Март'
						Set strMonth[2]=CurrentLangTable.GetAtomTitle('dlg_Login.cTMonth3')
						! Set strMonth[3]='Апрель'
						Set strMonth[3]=CurrentLangTable.GetAtomTitle('dlg_Login.cTMonth4')
						! Set strMonth[4]='Май'
						Set strMonth[4]=CurrentLangTable.GetAtomTitle('dlg_Login.cTMonth5')
						! Set strMonth[5]='Июнь'
						Set strMonth[5]=CurrentLangTable.GetAtomTitle('dlg_Login.cTMonth6')
						! Set strMonth[6]='Июль'
						Set strMonth[6]=CurrentLangTable.GetAtomTitle('dlg_Login.cTMonth7')
						! Set strMonth[7]='Август'
						Set strMonth[7]=CurrentLangTable.GetAtomTitle('dlg_Login.cTMonth8')
						! Set strMonth[8]='Сентябрь'
						Set strMonth[8]=CurrentLangTable.GetAtomTitle('dlg_Login.cTMonth9')
						! Set strMonth[9]='Октябрь'
						Set strMonth[9]=CurrentLangTable.GetAtomTitle('dlg_Login.cTMonth10')
						! Set strMonth[10]='Ноябрь'
						Set strMonth[10]=CurrentLangTable.GetAtomTitle('dlg_Login.cTMonth11')
						! Set strMonth[11]='Декабрь'
						Set strMonth[11]=CurrentLangTable.GetAtomTitle('dlg_Login.cTMonth12')
						Call cal1.SetMonthText( strMonth )
						Call cal1.ClearSpecials(  )
						Call cal1.SpecialDate(SPECIAL_Weekly,
								     DATETIME_Null, DAY_Sunday, SEQ_Unset,
								     COLOR_SysWindowText, COLOR_Gray, TRUE)
						Call cal1.SpecialDate(SPECIAL_Weekly,
								     DATETIME_Null, DAY_Monday, SEQ_Unset,
								     COLOR_SysWindowText, COLOR_Gray, TRUE)
						Call cal1.SpecialDate(SPECIAL_Weekly,
								     DATETIME_Null, DAY_Tuesday, SEQ_Unset,
								     COLOR_SysWindowText, COLOR_Gray, TRUE)
						Call cal1.SpecialDate(SPECIAL_Weekly,
								     DATETIME_Null, DAY_Wednesday, SEQ_Unset,
								     COLOR_SysWindowText, COLOR_Gray, TRUE)
						Call cal1.SpecialDate(SPECIAL_Weekly,
								     DATETIME_Null, DAY_Thursday, SEQ_Unset,
								     COLOR_SysWindowText, COLOR_Gray, TRUE)
						Call cal1.SpecialDate(SPECIAL_Weekly,
								     DATETIME_Null, DAY_Friday, SEQ_Unset,
								     COLOR_SysWindowText, COLOR_Gray, TRUE)
						Call cal1.SpecialDate(SPECIAL_Weekly,
								     DATETIME_Null, DAY_Saturday, SEQ_Unset,
								     COLOR_SysWindowText, COLOR_Gray, TRUE)
					On SAM_CustControlCmd
						Call cal1.GetFocusDate(dtChoose)
						If cal1.IsSpecialDate(SPECIAL_OneTime, dtChoose, DAY_Unset, SEQ_Unset)
							Call cal1.SpecialDate(SPECIAL_OneTime, dtWBDate, DAY_Unset, SEQ_Unset, 
									     COLOR_SysWindowText, COLOR_White, TRUE)
							Set dtWBDate = dtChoose
							Call cal1.SpecialDate(SPECIAL_OneTime, dtWBDate, DAY_Unset, SEQ_Unset, 
									     COLOR_SysWindowText, COLOR_Green, TRUE)
		Functions
			Function: UnpackPass
				Description:
				Returns
					String:
				Parameters
					String: strPwd
					String: strUser
				Static Variables
				Local variables
					String: strRes
					Number: ni
					Number: nP1
					Number: nU1
				Actions
					Set ni = 0
					While ni < 18
						Set nP1 = SalStrToNumber(SalStrMidX(strPwd, ni*3+2, 3))
						Call SalStrFirstC(strUser, nU1)
						Set nP1 = SalNumberXOR(nU1, nP1)
						Set strRes = strRes || SalNumberToChar(nP1)
						Set ni = ni+1
					Return strRes
			Function: PackPass
				Description:
				Returns
					String:
				Parameters
					String: strPwd
					String: strUser
				Static Variables
				Local variables
					String: strRes
					Number: ni
					Number: nP1
					Number: nU1
				Actions
					Set ni = 0
					Set strRes = "EP"
					While ni < 18
						Call SalStrFirstC(strUser, nU1)
						Call SalStrFirstC(strPwd, nP1)
						Set nP1 = SalNumberXOR(nU1, nP1)
						Set strRes = strRes || SalStrRightX("  " || SalNumberToStrX(nP1, 0), 3)
						Set ni = ni+1
					Return strRes
			Function: SalNumberXOR
				Description:
				Returns
					Number:
				Parameters
					Number: n1
					Number: n2
				Static Variables
				Local variables
					Number: nRes
				Actions
					Set nRes = (n1 & (-1-n2)) | (n2 & (-1-n1))
					Return nRes
			Function: CredFormatMessage
				Description: Возвращает описание ошибок для функций библиотеки CreateCred.dll
				Returns
					String:
				Parameters
					Number: nErrorCode
				Static Variables
				Local variables
					String: strMessage
				Actions
					Call SalStrSetBufferLength( strMessage, 4096 )
					Select Case ( nErrorCode )
						Case 0
							Set strMessage = 'Ok'
							Break
						Case 1
							Set strMessage = 'Неопределенная ошибка'
							Break
						Case 3
							Set strMessage = 'Время ожидания закончилось'
							Break
						Case 4
							Set strMessage = 'Программа NbuSecurity не запущена'
							Break
						Case 5
							Set strMessage = 'Недопустимые аргументы'
							Break
						Default
							Set strMessage = 'Неизвестный код ошибки'
					Return strMessage
		Window Parameters
			Receive Date/Time: dtWBDate
		Window Variables
			: Connect
				Class: cABSConnect
			!
			String: strTemp
			String: strUserName
			String: strNlsLang
			String: strNlsSort
			String: strStartRoleName
			String: strPBConnectStatusText
			Number: nSize
			Number: nFetchRes
			Number: nConnectError
			Number: nExpDays
			String: strDaysTitle
			String: strConnectErrMsg
			String: strHexedLogin
			String: strEncodedLogin
			Number: nMinorStatus
			Window Handle: hWndBanner
			!
			Boolean: fDenied
			String: strWeekDay[7]
			String: strMonth[12]
			Date/Time: dtChoose
			Number: nDBSpyLogin
			Number: nUseGateway
			String: szGatewayPath
			String: szGatewayConfigPath
			String: szGatewayOpenKey
			String: szGatewaySecretKeyDrv
			String: szCORBADir  ! служебная директория для CORBA
			Number: nCORBAPort  ! номер порта сервера CORBA
			String: szSecUser
			String: szSecPassword
			String: szOraUser
			String: szOraPassword
			Number: nRes
			String: szMsgBuf
			Number: nTaskID   	! ID задачи
			Number: nUserClass 	! тип пользователя
			Number: nTechDayStatus  ! статус технического банковского дня
			String: sSql
			Number: nStartGatewayAs  ! 0 - стартовать шлюз как Application, 1 - как сервис
			Number: nBridgeHandle    ! handle на мост при работе через шлюз
			Number: nBridge2Handle    ! handle на мост при работе через шлюз
			Number: nBridge3Handle    ! handle на мост при работе через шлюз
			Number: nBridge4Handle    ! handle на мост при работе через шлюз
			String: strIDOperBuf     ! ID буфера ключа
			Number: nIDOperLength    ! Длина ID буфера ключа
			String: strIconPath      ! Путь к иконке
			Boolean: bChangeDB
			String: sUserTobo
			!
			Boolean: bConnectDbspy
		Message Actions
			On SAM_Create
				! Внешний пароль есть?
				If nArgCount > 2
					Set strHexedLogin = strArgArray[2] 
				!
				Set nDBSpyLogin = 0
				Set nUseGateway = 0
				Set bChangeDB   = TRUE
				! Set strPBConnectStatusText = 'Выполнить соединение с Базой Данных...'
				Set strPBConnectStatusText = CurrentLangTable.GetAtomTitle('dlg_Login.cTStatusText1')
				Call WaitCursorOn()
				Call SalCenterWindow(hWndForm)
				Call SetWindowFont(hWndForm)
				! Присваиваем значения многоязыковым объектам
				Call SalSendMsgToChildren( hWndForm, UM_QueryLabelText, 0, 0 )
				Call SalSetWindowText( hWndForm, CurrentLangTable.GetAtomTitle('dlg_Login.cTWndTitle') )
				!
				! Кнопку закрываем только если нет внешнего пароля!
				If not strHexedLogin
					Call SalDisableWindow(pbConnect)
				!
				If GetDbs()=''
					! Call MessageInfo('Не найден файл конфигурации или в файле ' ||
							       'конфигурации отсутствует имя Базы Данных!')
					Call MessageInfo(CurrentLangTable.GetAtomTitle('dlg_Login.cTMessFileNotFound'))
					Call SalEndDialog(hWndForm, FALSE)
					Return 0
				Else
					Set log_database=GetDbs()
				!
				If strHexedLogin
					Set strEncodedLogin = SalStrRepeatX( ' ', 128)
					Call ConvertHexToBin( strHexedLogin, strEncodedLogin, 128 )
					Set nMinorStatus = 0
					If NG_OPEN_MESSAGE( nMinorStatus, SalStrLength( strHexedLogin)/2, strEncodedLogin ) != 0
						Call SalSendMsg( hWndForm, SAM_Destroy, 0, 0 )
						! Call SalMessageBox('Ошибка при дешифровании строки параметров запуска!', 'Автостарт', MB_Ok | MB_IconStop)
						Call SalMessageBox(CurrentLangTable.GetAtomTitle('dlg_Login.cTErrD'), 
								  CurrentLangTable.GetAtomTitle('cTAvtoStart'), MB_Ok | MB_IconStop)
						Return FALSE
					Call SalStrFirstC( strEncodedLogin, nSize )
					Set log_user = SalStrLeftX( strEncodedLogin, nSize )
					!
					Set hWndBanner = SalCreateWindow( frm_ConnectBanner, hWndNULL, log_user )
					!
					Set strEncodedLogin = SalStrRightX( strEncodedLogin, SalStrLength(strEncodedLogin)-nSize)
					Call SalStrFirstC( strEncodedLogin, nSize )
					Set log_password = SalStrLeftX( strEncodedLogin, nSize )
					! Call Debug( log_user )
					! Call Debug( log_password )
				Else
					Call SalUseRegistry(TRUE, GetDBMS())
					Call SalGetProfileString(GetHost(), "USER", "", strUserName, "netrc")
					Set log_user = strUserName
					If strUserName
						Call SalSetFocus(log_password)
				! инициализируем dll криптошлюза если выставлен параметр UseGateway   ddd
				Call SalUseRegistry(FALSE, '')
				Set nUseGateway = UseGateway()
				! Call Debug('UseGateway ='||SalNumberToStrX( nUseGateway, 0 ))
				If nUseGateway ! логиниться через шлюз
					Set nTaskID = SalGetProfileInt(INI_CommonParameters, 'TaskID', 1, GetIniFileName())
					! Call Debug('логиниться через шлюз')
					Call SalGetProfileString(INI_CommonParameters, 'GatewayPath', STRING_Null, szGatewayPath, GetIniFileName())
					If szGatewayPath=''
						Set szGatewayPath = STRING_Null
					! Call Debug('GatewayPath='|| szGatewayPath)
					Call SalGetProfileString(INI_CommonParameters, 'GatewayConfigPath', STRING_Null, szGatewayConfigPath, GetIniFileName())
					If szGatewayConfigPath=''
						Set szGatewayConfigPath=STRING_Null
					! Call Debug('GatewayConfigPath='|| szGatewayConfigPath)
					Call SalGetProfileString(INI_CommonParameters, 
							'CORBADir', STRING_Null, szCORBADir, GetIniFileName())
					Set nCORBAPort = SalGetProfileInt(INI_CommonParameters, 'CORBAPort', 8888, GetIniFileName())
					! Call Debug('DBS='|| GetDbs())
					Set nStartGatewayAs = SalGetProfileInt(INI_CommonParameters, 'StartGatewayAs', 0, GetIniFileName())
					Call SetParams( szGatewayPath,  szGatewayConfigPath, 
								nStartGatewayAs,
								szCORBADir, nCORBAPort, GetDbs(), 
							       'KEYKEEPER', 'key123456', 'keykeeper_role' )
					Set nRes = Startup()
					If nRes
						Call SalEndDialog(hWndForm, FALSE)
						Return 0
					Set strIDOperBuf = SalStrRepeatX( ' ', 32 )
					Set nIDOperLength = 32
					Call InsertBuf(
								strIDOperBuf,
								0,
								Chr(0),
								0,
								1)
					Set strIconPath = GetIconPath()
					If '' = strIconPath
						Set strIconPath = STRING_Null
					Set nRes = F_InitCred(
								strIDOperBuf,
								nIDOperLength,
								'АБС БАРС Міленіум',
								GetIconPath(),
								0xFFFFFFFF,
								0
								)
					If nRes
						! Ошибка инициализации системы безопасности
						Set szMsgBuf = 'Ошибка '||SalNumberToStrX( nRes, 0 )||PutCrLf()
								||CredFormatMessage(nRes)
						Call SalMessageBox( szMsgBuf, 'Система безопасности', MB_Ok|MB_IconStop )
						Call SalEndDialog(hWndForm, FALSE)
						Return 0
					! Call SalMessageBox( 'Выбран ключ '||strIDOperBuf, 'Система безопасности', MB_Ok )
					Set log_user = strIDOperBuf
					Set nRes = CreateBridge(
								GetBridgeListHost(),
								GetBridgeListPort(),
								strIDOperBuf,
								GetBridgeListAuth(),
								GetBridgeListEnc(),
								GetBridgeRemHost(),
								GetBridgeRemPort(),
								GetBridgeRemID(),
								GetBridgeRemAuth(),
								GetBridgeRemEnc(),
								nBridgeHandle
							)
					If nRes
						Call SalEndDialog(hWndForm, FALSE)
						Return 0
					If GetBridgeList2Host() != STRING_Null
						Set nRes = CreateBridge(
									GetBridgeList2Host(),
									GetBridgeList2Port(),
									strIDOperBuf,
									GetBridgeList2Auth(),
									GetBridgeList2Enc(),
									GetBridgeRem2Host(),
									GetBridgeRem2Port(),
									GetBridgeRem2ID(),
									GetBridgeRem2Auth(),
									GetBridgeRem2Enc(),
									nBridge2Handle
								)
						If nRes
							Call SalEndDialog(hWndForm, FALSE)
							Return 0
					If GetBridgeList3Host() != STRING_Null
						Set nRes = CreateBridge(
									GetBridgeList3Host(),
									GetBridgeList3Port(),
									strIDOperBuf,
									GetBridgeList3Auth(),
									GetBridgeList3Enc(),
									GetBridgeRem3Host(),
									GetBridgeRem3Port(),
									GetBridgeRem3ID(),
									GetBridgeRem3Auth(),
									GetBridgeRem3Enc(),
									nBridge3Handle
								)
						If nRes
							Call SalEndDialog(hWndForm, FALSE)
							Return 0
					If GetBridgeList4Host() != STRING_Null
						Set nRes = CreateBridge(
									GetBridgeList4Host(),
									GetBridgeList4Port(),
									strIDOperBuf,
									GetBridgeList4Auth(),
									GetBridgeList4Enc(),
									GetBridgeRem4Host(),
									GetBridgeRem4Port(),
									GetBridgeRem4ID(),
									GetBridgeRem4Auth(),
									GetBridgeRem4Enc(),
									nBridge4Handle
								)
						If nRes
							Call SalEndDialog(hWndForm, FALSE)
							Return 0
				!
				If strHexedLogin OR nUseGateway = 1
					! Притушим окошко логина
					Call SalHideWindow( hWndForm )
					Call SalPostMsg(pbConnect, SAM_Click, 0, 0)
				Call WaitCursorOff()
				If UseGateway()
					Call SalEnableWindow(pbConnect)
				Call SalBringWindowToTop(GetDesktopWindow())
				Call SalBringWindowToTop(dlg_Login)
			On SAM_CreateComplete
				Call SalBringWindowToTop(GetDesktopWindow())
				Call SalBringWindowToTop(dlg_Login)
				If AutoLogon()
					Call SalSendMsg(pbSecurityHole1, SAM_Click, 0, 0)
				Call SalBringWindowToTop(GetDesktopWindow())
				Call SalBringWindowToTop(dlg_Login)
			On SAM_Destroy
				! Call SalMessageBox( '--', 'Debug',  MB_Ok )
				If hWndBanner
					Call SalDestroyWindow( hWndBanner )
					Set hWndBanner = hWndNULL
	Form Window: frm_ConnectBanner
		Class:
		Property Template:
		Class DLL Name:
		Title: Автосоединение...
		Icon File:
		Accesories Enabled? No
		Visible? Yes
		Display Settings
			Display Style? Default
			Visible at Design time? Yes
			Automatically Created at Runtime? No
			Initial State: Normal
			Maximizable? No
			Minimizable? No
			System Menu? No
			Resizable? No
			Window Location and Size
				Left:   Default
				Top:    Default
				Width:  4.567"
				Width Editable? Yes
				Height: 1.167"
				Height Editable? Yes
			Form Size
				Width:  Default
				Height: Default
				Number of Pages: Dynamic
			Font Name: Default
			Font Size: Default
			Font Enhancement: Default
			Text Color: Default
			Background Color: Default
		Description:
		Named Menus
		Menu
		Tool Bar
			Display Settings
				Display Style? Default
				Location? Top
				Visible? Yes
				Size: Default
				Size Editable? Yes
				Font Name: Default
				Font Size: Default
				Font Enhancement: Default
				Text Color: Default
				Background Color: Default
			Contents
		Contents
			Data Field: dfUserName
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Data
					Maximum Data Length: Default
					Data Type: String
					Editable? No
				Display Settings
					Window Location and Size
						Left:   0.15"
						Top:    0.262"
						Width:  4.117"
						Width Editable? Yes
						Height: 0.286"
						Height Editable? Yes
					Visible? Yes
					Border? No
					Justify: Center
					Format: Unformatted
					Country: Default
					Font Name: Arial Cyr
					Font Size: 11
					Font Enhancement: Default
					Text Color: Default
					Background Color: 3D Face Color
					Input Mask: Unformatted
				Message Actions
		Functions
		Window Parameters
			String: strUserName
		Window Variables
		Message Actions
			On SAM_Create
				Call SalCenterWindow( hWndForm )
				! Set dfUserName = 'Пользователь: ' || strUserName
				Set dfUserName = CurrentLangTable.GetAtomTitle('cTUser')||': ' || strUserName
