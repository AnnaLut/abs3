.head 0 +  Application Description: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Доимпорт данных в АБС (Klitas,Scheta..) !
! ООО Унити-Барс (C) 1999                 !
! Разработчик: Марийко Б.Г.               !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
.head 1 -  Outline Version - 4.0.26
.head 1 +  Design-time Settings
.data VIEWINFO
0000: 6F00000001000000 FFFF01000D004347 5458566965775374 6174650400010000
0020: 0000000000B20000 002C000000020000 0003000000000000 00B1010000FCFFFF
0040: FFE9FFFFFFFFFFFF FF000000007C0200 004D010000010000 0001000000010000
0060: 000F4170706C6963 6174696F6E497465 6D00000000
.enddata
.data DT_MAKERUNDLG
0000: 0200000000001C71 3A5C626172733938 5C6C696272617279 5C524547434C4E2E
0020: 646C6C1C713A5C62 61727339385C6C69 62726172795C5245 47434C4E2E617063
0040: 00000101011C713A 5C6261727339385C 6C6962726172795C 524547434C4E2E72
0060: 756E1C713A5C6261 727339385C6C6962 726172795C524547 434C4E2E646C6C1C
0080: 713A5C6261727339 385C6C6962726172 795C524547434C4E 2E61706300000101
00A0: 01185C4241525339 385C42494E5C696D 65785F646F702E61 7064165C42415253
00C0: 39385C42494E5C69 6D706578702E646C 6C165C4241525339 385C42494E5C696D
00E0: 706578702E617063 0000010101001C71 3A5C626172733938 5C6C696272617279
0100: 5C524547434C4E2E 646C6C1C713A5C62 61727339385C6C69 62726172795C5245
0120: 47434C4E2E617063 0000010101
.enddata
.head 2 -  Outline Window State: Normal
.head 2 +  Outline Window Location and Size
.data VIEWINFO
0000: 6600040003002D00 0000000000000000 0000B71E5D0E0500 1D00FFFF4D61696E
0020: 0000000000000000 0000000000000000 0000003B00010000 00000000000000E9
0040: 1E800A00008600FF FF496E7465726E61 6C2046756E637469 6F6E730000000000
0060: 0000000000000000 0000000000003200 0100000000000000 0000E91E800A0000
0080: DF00FFFF56617269 61626C6573000000 0000000000000000 0000000000000000
00A0: 3000010000000000 00000000F51E100D 0000F400FFFF436C 6173736573000000
00C0: 0000000000000000 0000000000000000
.enddata
.data VIEWSIZE
0000: D000
.enddata
.head 3 -  Left:   -0.013"
.head 3 -  Top:    0.0"
.head 3 -  Width:  8.013"
.head 3 -  Height: 4.969"
.head 2 +  Options Box Location
.data VIEWINFO
0000: 1018B80BB80B2500
.enddata
.data VIEWSIZE
0000: 0800
.enddata
.head 3 -  Visible? Yes
.head 3 -  Left:   4.15"
.head 3 -  Top:    1.885"
.head 3 -  Width:  3.8"
.head 3 -  Height: 2.073"
.head 2 +  Class Editor Location
.head 3 -  Visible? No
.head 3 -  Left:   0.575"
.head 3 -  Top:    0.094"
.head 3 -  Width:  5.063"
.head 3 -  Height: 2.719"
.head 2 +  Tool Palette Location
.head 3 -  Visible? No
.head 3 -  Left:   6.388"
.head 3 -  Top:    0.729"
.head 2 -  Fully Qualified External References? No
.head 2 -  Reject Multiple Window Instances? Yes
.head 2 -  Enable Runtime Checks Of External References? Yes
.head 2 -  Use Release 4.0 Scope Rules? No
.head 1 +  Libraries
.head 2 -  Dynalib: Global.apd
.head 2 -  Dynalib: Message.apd
.head 2 -  Dynalib: Absapi.apd
.head 2 -  !
.head 2 -  File Include: Constant.apl
.head 2 -  File Include: Winbars2.apl
.head 2 -  ! File Include: Docfun.apl
.head 2 -  File Include: Vtmeter.apl
.head 2 -  File Include: Vtdos.apl
.head 2 -  File Include: Vtlbx.apl
.head 2 -  File Include: Vtfile.apl
.head 1 +  Global Declarations
.head 2 +  Window Defaults
.head 3 +  Tool Bar
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Form Window
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Dialog Box
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Top Level Table Window
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Data Field
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Multiline Field
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Spin Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Background Text
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Pushbutton
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Radio Button
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Check Box
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Option Button
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Group Box
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Child Table Window
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  List Box
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Combo Box
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Line
.head 4 -  Line Color: Use Parent
.head 3 +  Frame
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: 3D Face Color
.head 3 +  Picture
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 2 +  Formats
.head 3 -  Number: 0'%'
.head 3 -  Number: #0
.head 3 -  Number: ###000
.head 3 -  Number: ###000;'($'###000')'
.head 3 -  Date/Time: hh:mm:ss AMPM
.head 3 -  Date/Time: M/d/yy
.head 3 -  Date/Time: MM-dd-yy
.head 3 -  Date/Time: dd-MMM-yyyy
.head 3 -  Date/Time: MMM d, yyyy
.head 3 -  Date/Time: MMM d, yyyy hh:mm AMPM
.head 3 -  Date/Time: MMMM d, yyyy hh:mm AMPM
.head 2 +  External Functions
.head 2 +  Constants
.data CCDATA
0000: 3000000000000000 0000000000000000 00000000
.enddata
.data CCSIZE
0000: 1400
.enddata
.head 3 +  System
.head 3 +  User
.head 2 -  Resources
.head 2 -  Variables
.head 2 +  Internal Functions
.head 3 +  Function: ImportDopData		!  __exported
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return SalModalDialog(dlg_ImportDopData, hWndForm)
.head 2 -  Named Menus
.head 2 +  Class Definitions
.data RESOURCE 0 0 1 1265076824
0000: BE0000006C000000 0000000000000000 0200000100FFFF01 00160000436C6173
0020: 73566172004F7574 6C696E6552006567 496E666F41003C00 000D630052616469
0040: 6F4C69730074426F 7886000000F00500 0000E0010D000000 FF3F0D00B9000100
0060: FFFFE01A00000001 FE00FF8327000000 01FB00FF0F340000 00EE0100FF3F
.enddata
.head 2 +  Default Classes
.head 3 -  MDI Window: cBaseMDI
.head 3 -  Form Window:
.head 3 -  Dialog Box:
.head 3 -  Table Window:
.head 3 -  Quest Window:
.head 3 -  Data Field:
.head 3 -  Spin Field:
.head 3 -  Multiline Field:
.head 3 -  Pushbutton:
.head 3 -  Radio Button:
.head 3 -  Option Button:
.head 3 -  Check Box:
.head 3 -  Child Table:
.head 3 -  Quest Child Window: cQuickDatabase
.head 3 -  List Box:
.head 3 -  Combo Box:
.head 3 -  Picture:
.head 3 -  Vertical Scroll Bar:
.head 3 -  Horizontal Scroll Bar:
.head 3 -  Column:
.head 3 -  Background Text:
.head 3 -  Group Box:
.head 3 -  Line:
.head 3 -  Frame:
.head 3 -  Custom Control:
.head 2 -  Application Actions
.head 1 +  Dialog Box: dlg_ImportDopData
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: ДоИмпорт данных (клиенты, счета):  "ОДБ Барс" (#ODBK) ---> "АБС Барс-98"
.head 2 -  Accesories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Type of Dialog: Modal
.head 3 -  Window Location and Size
.head 4 -  Left:   1.15"
.head 4 -  Top:    0.813"
.head 4 -  Width:  9.85"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 4.286"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: MS Sans Serif
.head 3 -  Font Size: 8
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description: Доимпорт данных о клиентах и счетах банка: "ОДБ Барс" -> "АБС Барс-98"
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Group Box: Информация
.head 4 -  Resource Id: 46938
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   0.088"
.head 5 -  Top:    0.031"
.head 5 -  Width:  9.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.917"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Pushbutton: pbImport
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Импорт
.head 4 -  Window Location and Size
.head 5 -  Left:   6.583"
.head 5 -  Top:    3.488"
.head 5 -  Width:  1.467"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Enter
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalWaitCursor(TRUE)
.head 6 -  Set dfStatus = " Пожалуйста, подождите ! Выполняется доимпортирование данных ..."
.head 6 -  Call SalDisableWindow(pbImport)
.head 6 -  Call SalDisableWindow(pbExit)
.head 6 +  If cbCustomer
.head 7 -  Set dfStatus = 'Обновление Customer ...'
.head 7 -  Set nPos = 0
.head 7 -  Set nDelta = 100 / nReck
.head 7 -  Call SqlPrepareAndExecute(hSqlA, "
     SELECT RNK,NMK,C_AG,K040,K050,K060,K070,K080,K090,N_XOZ,K110,SAB,KOD,T01,DRE,NRE,DREN,ADRK,RUK,TELR,GLB,TELB,
            NMKV,PG,UST,ISP,REG_,DST_,DATE_OFF,DATE_ON,K140,DOK,DOK_SER,DOK_NOM,DOK_VID
     FROM " || sKlitas || "
     INTO :nRNK,:sNMK,:nC_AG,:sK040,:sK050,:sK060,:sK070,:sK080,:sK090,:sN_XOZ,:sK110,:sSAB,:sKOD,:nT01,:dDRE,:nNRE,
          :dDREN,:sADRK,:sRUK,:sTELR,:sGLB,:sTELB,:sNMKV,:sPG,:sUST,:sISP,:nREG_,:nDST_,:dDATE_OFF,:dDATE_ON,
          :sK140,:sDOK,:sDOK_SER,:sDOK_NOM,:sDOK_VID")
.head 7 +  While SqlFetchNext(hSqlA, nFetchRes)
.head 8 +  If nC_AG=1 Or nC_AG=2 Or nC_AG=9      ! Банки
.head 9 -  Set nCustType = BANKS
.head 8 +  Else If nC_AG=3 Or nC_AG=4 Or nC_AG=7 ! Юр.лица
.head 9 -  Set nCustType = CORPS
.head 8 +  Else If nC_AG=5 Or nC_AG=6            ! Физические лица
.head 9 -  Set nCustType = PERSON
.head 8 +  Else
.head 9 -  Set nCustType = CORPS               ! Если не определен ... Юридические лица
.head 8 -  Set nCountry = Val(sK040)
.head 8 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT count(*)
     FROM country
     INTO :nTemp
     WHERE country=:nCountry'))
.head 8 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 8 +  If nTemp = 0
.head 9 -  Set nCountry = 804
.head 8 -  Set nPrinsider = Val(sK060)
.head 8 -  Set nTaxf = Val(sK050)
.head 8 -  ! Set nStmt = NUMBER_Null
.head 8 -  Set nCrisk = NUMBER_Null
.head 8 +  If nT01 = 0
.head 9 -  Set nTgr = 1
.head 8 +  Else If nT01 = 1
.head 9 -  Set nTgr = 2
.head 8 +  Else
.head 9 -  Set nTgr = 3
.head 8 +  If nREG_ = 0 or nDST_ = 0
.head 9 -  Set nREG_ = -1
.head 9 -  Set nDST_ = -1
.head 8 -  Set sK070 = IifS(Left(sK070,1)=' ', '', SalStrTrimX(sK070))
.head 8 -  Set sK080 = IifS(Left(sK080,1)=' ', '', SalStrTrimX(sK080))
.head 8 -  Set sK090 = IifS(Left(sK090,1)=' ', '', SalStrTrimX(sK090))
.head 8 -  Set sN_XOZ = IifS(Left(sN_XOZ,1)=' ', '', SalStrTrimX(sN_XOZ))
.head 8 -  Set sK110 = IifS(Left(sK110,1)=' ', '', SalStrTrimX(sK110))
.head 8 -  Set sNMK = SalStrTrimX(sNMK)
.head 8 -  Set sADRK = SalStrTrimX(sADRK)
.head 8 -  Set sRUK = SalStrTrimX(sRUK)
.head 8 -  Set sTELR = SalStrTrimX(sTELR)
.head 8 -  Set sGLB = SalStrTrimX(sGLB)
.head 8 -  Set sTELB = SalStrTrimX(sTELB)
.head 8 -  Set sNMKK = SalStrTrimX(Left(sNMK, 35)) ! 38 ???
.head 8 -  Set sNMKV = SalStrTrimX(sNMKV)
.head 8 -  Set sUST = SalStrTrimX(sUST)
.head 8 -  Set sISP = SalStrTrimX(sISP)
.head 8 -  Set sSAB = SalStrTrimX(sSAB)
.head 8 -  Set sKOD = SalStrTrimX(sKOD)
.head 8 -  Set sNRE = Str(nNRE)
.head 8 -  Set sDOK = SalStrTrimX(sDOK)
.head 8 -  Set sDOK_SER = SalStrTrimX(sDOK_SER)
.head 8 -  Set sDOK_NOM = SalStrTrimX(sDOK_NOM)
.head 8 -  Set sDOK_VID = SalStrTrimX(sDOK_VID)
.head 8 -  Set nPASSP = IifN(SalStrUpperX(sDOK)='ПАСПОРТ' or Len(sDOK_SER)>1 or Len(sDOK_NOM)>1, 1, 99)
.head 8 +  If сbOemToAnsi
.head 9 -  Set sNMK   = StrDosToWinX(sNMK)
.head 9 -  Set sNMKK  = StrDosToWinX(sNMKK)
.head 9 -  Set sADRK  = StrDosToWinX(sADRK)
.head 9 -  Set sRUK   = StrDosToWinX(sRUK)
.head 9 -  Set sTELR  = StrDosToWinX(sTELR)
.head 9 -  Set sGLB   = StrDosToWinX(sGLB)
.head 9 -  Set sTELB  = StrDosToWinX(sTELB)
.head 9 -  Set sNMKV  = StrDosToWinX(sNMKV)
.head 9 -  Set sUST   = StrDosToWinX(sUST)
.head 9 -  Set sISP   = StrDosToWinX(sISP)
.head 9 -  Set sN_XOZ = StrDosToWinX(sN_XOZ)
.head 9 -  Set sDOK = StrDosToWinX(sDOK)
.head 9 -  Set sDOK_SER = StrDosToWinX(sDOK_SER)
.head 9 -  Set sDOK_NOM = StrDosToWinX(sDOK_NOM)
.head 9 -  Set sDOK_VID = StrDosToWinX(sDOK_VID)
.head 8 +  If Val(sPG) = 1 ! Новый клиент
.head 9 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT count(*)
     FROM customer
     INTO :nTemp
     WHERE rnk=:nRNK'))
.head 9 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 9 +  If nTemp = 0
.head 10 -  Set sSqlInsert = "
    INSERT
    INTO customer (rnk,custtype,nmk,nmkv,nmkk,codcagent,country,prinsider,okpo,adr," ||
                   IifS(sSAB='' or sSAB=STRING_Null, "", "sab,") || "taxf,c_reg,c_dst,rgtax,adm,datet,datea,
                   date_on,date_off,crisk,tgr,ise,fs,oe,sed,ved,mb)
    VALUES (:nRNK,:nCustType,:sNMK,:sNMKV,:sNMKK,:nC_AG,:nCountry,:nPrinsider,:sKOD,:sADRK," ||
            IifS(sSAB='' or sSAB=STRING_Null, "", ":sSAB,") || ":nTaxf,:nREG_,:nDST_,:sNRE,:sISP,:dDREN,:dDRE,
            :dDATE_ON,:dDATE_OFF,:nCrisk,:nTgr,:sK070,:sK080,:sK090,:sN_XOZ,:sK110,:sK140)"
.head 10 +  If not SqlPrepareAndExecute(hSql(), sSqlInsert)
.head 11 -  Set dfStatus = ' Ошибка импортирования Клиента - Рег. N: ' || Str(nRNK)
.head 11 -  Call SqlRollback(hSql())
.head 11 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 10 +  Else
.head 11 +  If nCustType = CORPS       ! Юр. лица
.head 12 -  ! If SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO corps (rnk,nmku,ruk,telr,buh,telb,ise,fs,oe,sed,ved)
   VALUES (:nRNK,:sUST,:sRUK,:sTELR,:sGLB,:sTELB,:sK070,:sK080,:sK090,:sN_XOZ,:sK110)")
.head 12 +  If SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO corps (rnk,nmku,ruk,telr,buh,telb)
   VALUES (:nRNK,:sUST,:sRUK,:sTELR,:sGLB,:sTELB)")
.head 13 -  Set dfStatus = ' Юр.  лицо - Рег. N: ' || Str(nRNK) || ' - ' || sNMK || ' - добавлен'
.head 13 -  Call SqlCommitEx(hSql(), dfStatus)
.head 13 -  ! Call SqlPrepareAndExecute(hSql(), "
     SELECT max(RNK)+1
     INTO :nMaxRNK
     FROM customer")
.head 13 +  ! If SqlFetchNext(hSql(), nFetchRes)
.head 14 -  Call Del_SQ('s_customer')
.head 14 -  Call Set_SQ('s_customer', nMaxRNK)
.head 13 -  Set n1i = n1i + 1
.head 12 +  Else
.head 13 -  Set dfStatus = ' Ошибка импортирования Клиента - Рег. N: ' || Str(nRNK)
.head 13 -  Call SqlRollback(hSql())
.head 13 -  Call MessageNoWait(dfStatus, 'Авария', 30, 1)
.head 11 +  Else If nCustType = PERSON ! Физ. лица
.head 12 +  If SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO person (rnk,sex,passp,ser,numdoc,organ)
   VALUES (:nRNK,'0',1,:sDOK_SER,:sDOK_NOM,:sDOK_VID)")
.head 13 -  Set dfStatus = ' Физ.  лицо - Рег. N:' || ' ' || Str(nRNK) || ' - ' || sNMK || ' - добавлен'
.head 13 -  Call SqlCommitEx(hSql(), dfStatus)
.head 13 -  ! Call SqlPrepareAndExecute(hSql(), "
     SELECT max(RNK)+1
     INTO :nMaxRNK
     FROM customer")
.head 13 +  ! If SqlFetchNext(hSql(), nFetchRes)
.head 14 -  Call Del_SQ('s_customer')
.head 14 -  Call Set_SQ('s_customer', nMaxRNK)
.head 13 -  Set n1i = n1i + 1
.head 12 +  Else
.head 13 -  Set dfStatus = ' Ошибка импортирования Клиента - Рег. N: ' || Str(nRNK)
.head 13 -  Call SqlRollback(hSql())
.head 13 -  Call MessageNoWait(dfStatus, 'Авария', 30, 1)
.head 11 +  Else If nCustType = BANKS  ! Банки
.head 12 -  Set sBankA = GetBankMfo()
.head 12 -  Set sBic = ''
.head 12 -  Set sAltBic = ''
.head 12 +  If SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO custbank (rnk,mfo,bic,alt_bic,ruk,telr,buh,telb)
   VALUES (:nRNK,:sBankA,:sBic,:sAltBic,:sRUK,:sTELR,:sGLB,:sTELB)")
.head 13 -  Set dfStatus = ' Банк - Рег. N: ' || Str(nRNK) || ' - ' || sNMK || ' - добавлен'
.head 13 -  Call SqlCommitEx(hSql(), dfStatus)
.head 13 -  ! Call SqlPrepareAndExecute(hSql(), "
     SELECT max(RNK)+1
     INTO :nMaxRNK
     FROM customer")
.head 13 +  ! If SqlFetchNext(hSql(), nFetchRes)
.head 14 -  Call Del_SQ('s_customer')
.head 14 -  Call Set_SQ('s_customer', nMaxRNK)
.head 13 -  Set n1i = n1i + 1
.head 12 +  Else
.head 13 -  Set dfStatus = ' Ошибка импортирования Клиента - Рег. N: ' || Str(nRNK)
.head 13 -  Call SqlRollback(hSql())
.head 13 -  Call MessageNoWait(dfStatus, 'Авария', 30, 1)
.head 8 +  Else If Val(sPG) = 2 ! Обновление клиента
.head 9 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT count(*)
     FROM customer
     INTO :nTemp
     WHERE rnk=:nRNK'))
.head 9 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 9 +  If nTemp = 1
.head 10 -  Set sSqlUpdate = "
    UPDATE customer
    SET custtype=:nCustType,nmk=:sNMK,nmkv=:sNMKV,nmkk=:sNMKK,codcagent=:nC_AG,country=:nCountry,
        prinsider=:nPrinsider,okpo=:sKOD,adr=:sADRK," || IifS(sSAB='' or sSAB=STRING_Null, "", "sab=:sSAB,")
        || "
        taxf=:nTaxf,c_reg=:nREG_,c_dst=:nDST_,rgtax=:sNRE,adm=:sISP,datet=:dDREN,datea=:dDRE,
        date_on=:dDATE_ON,date_off=:dDATE_OFF,crisk=:nCrisk,tgr=:nTgr,ise=:sK070,fs=:sK080,oe=:sK090,
        sed=:sN_XOZ,ved=:sK110,mb=:sK140
    WHERE rnk=:nRNK"
.head 10 +  If not SqlPrepareAndExecute(hSql(), sSqlUpdate)
.head 11 -  Set dfStatus = ' Ошибка импортирования Клиента - Рег. N: ' || Str(nRNK)
.head 11 -  Call SqlRollback(hSql())
.head 11 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 10 +  Else
.head 11 +  If nCustType = CORPS       ! Юр. лица
.head 12 -  ! If SqlPrepareAndExecute(hSql(), "
   UPDATE corps
   SET nmku=:sUST,ruk=:sRUK,telr=:sTELR,buh=:sGLB,telb=:sTELB,ise=:sK070,fs=:sK080,oe=:sK090,sed=:sN_XOZ,
       ved=:sK110
   WHERE rnk=:nRNK")
.head 12 +  If SqlPrepareAndExecute(hSql(), "
   UPDATE corps
   SET nmku=:sUST,ruk=:sRUK,telr=:sTELR,buh=:sGLB,telb=:sTELB
   WHERE rnk=:nRNK")
.head 13 -  Call SqlGetModifiedRows(hSql(), nTemp)
.head 13 +  If nTemp = 1
.head 14 -  Set dfStatus = ' Юр.  лицо - Рег. N: ' || Str(nRNK) || ' - ' || sNMK || ' - обновлен'
.head 14 -  Call SqlCommitEx(hSql(), dfStatus)
.head 14 -  Set n1u = n1u + 1
.head 13 +  Else
.head 14 -  ! If SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO corps (rnk,nmku,ruk,telr,buh,telb,ise,fs,oe,sed,ved)
   VALUES (:nRNK,:sUST,:sRUK,:sTELR,:sGLB,:sTELB,:sK070,:sK080,:sK090,:sN_XOZ,:sK110)")
.head 14 +  If SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO corps (rnk,nmku,ruk,telr,buh,telb)
   VALUES (:nRNK,:sUST,:sRUK,:sTELR,:sGLB,:sTELB)")
.head 15 -  Call SqlPrepareAndExecute(hSql(), "
     DELETE
     FROM person
     WHERE rnk=:nRNK")
.head 15 -  Call SqlPrepareAndExecute(hSql(), "
     DELETE
     FROM custbank
     WHERE rnk=:nRNK")
.head 15 -  Set dfStatus = ' Юр.  лицо - Рег. N: ' || Str(nRNK) || ' - ' || sNMK || ' - обновлен'
.head 15 -  Call SqlCommitEx(hSql(), dfStatus)
.head 15 -  Set n1u = n1u + 1
.head 14 +  Else
.head 15 -  Set dfStatus = ' Ошибка импортирования Клиента - Рег. N: ' || Str(nRNK)
.head 15 -  Call SqlRollback(hSql())
.head 15 -  Call MessageNoWait(dfStatus, 'Авария', 30, 1)
.head 12 +  Else
.head 13 -  Set dfStatus = ' Ошибка импортирования Клиента - Рег. N: ' || Str(nRNK)
.head 13 -  Call SqlRollback(hSql())
.head 13 -  Call MessageNoWait(dfStatus, 'Авария', 30, 1)
.head 11 +  Else If nCustType = PERSON ! Физ. лица
.head 12 +  If SqlPrepareAndExecute(hSql(), "
   UPDATE person
   SET sex='0',passp=:nPASSP,ser=:sDOK_SER,numdoc=:sDOK_NOM,organ=:sDOK_VID
   WHERE rnk=:nRNK")
.head 13 -  Call SqlGetModifiedRows(hSql(), nTemp)
.head 13 +  If nTemp = 1
.head 14 -  Set dfStatus = ' Физ.  лицо - Рег. N: ' || Str(nRNK) || ' - ' || sNMK || ' - обновлен'
.head 14 -  Call SqlCommitEx(hSql(), dfStatus)
.head 14 -  Set n1u = n1u + 1
.head 13 +  Else
.head 14 +  If SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO person (rnk,sex,passp)
   VALUES (:nRNK,1,99)")
.head 15 -  Call SqlPrepareAndExecute(hSql(), "
     DELETE
     FROM corps
     WHERE rnk=:nRNK")
.head 15 -  Call SqlPrepareAndExecute(hSql(), "
     DELETE
     FROM custbank
     WHERE rnk=:nRNK")
.head 15 -  Set dfStatus = ' Физ.  лицо - Рег. N: ' || Str(nRNK) || ' - ' || sNMK || ' - обновлен'
.head 15 -  Call SqlCommitEx(hSql(), dfStatus)
.head 15 -  Set n1u = n1u + 1
.head 14 +  Else
.head 15 -  Set dfStatus = ' Ошибка импортирования Клиента - Рег. N: ' || Str(nRNK)
.head 15 -  Call SqlRollback(hSql())
.head 15 -  Call MessageNoWait(dfStatus, 'Авария', 30, 1)
.head 12 +  Else
.head 13 -  Set dfStatus = ' Ошибка импортирования Клиента - Рег. N: ' || Str(nRNK)
.head 13 -  Call SqlRollback(hSql())
.head 13 -  Call MessageNoWait(dfStatus, 'Авария', 30, 1)
.head 11 +  Else If nCustType = BANKS ! Банки
.head 12 -  Set sBankA = GetBankMfo()
.head 12 -  Set sBic = ''
.head 12 -  Set sAltBic = ''
.head 12 +  If SqlPrepareAndExecute(hSql(), "
   UPDATE custbank 
   SET mfo=:sBankA,bic=:sBic,alt_bic=:sAltBic
   WHERE rnk=:nRNK")
.head 13 -  Call SqlGetModifiedRows(hSql(), nTemp)
.head 13 +  If nTemp = 1
.head 14 -  Set dfStatus = ' Банк - Рег. N: ' || Str(nRNK) || ' - ' || sNMK || ' - обновлен'
.head 14 -  Call SqlCommitEx(hSql(), dfStatus)
.head 14 -  Set n1u = n1u + 1
.head 13 +  Else
.head 14 +  If SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO custbank (rnk,mfo,bic,alt_bic,ruk,telr,buh,telb)
   VALUES (:nRNK,:sBankA,:sBic,:sAltBic,:sRUK,:sTELR,:sGLB,:sTELB)")
.head 15 -  Call SqlPrepareAndExecute(hSql(), "
     DELETE
     FROM corps
     WHERE rnk=:nRNK")
.head 15 -  Call SqlPrepareAndExecute(hSql(), "
     DELETE
     FROM person
     WHERE rnk=:nRNK")
.head 15 -  Set dfStatus = ' Банк - Рег. N: ' || Str(nRNK) || ' - ' || sNMK || ' - обновлен'
.head 15 -  Call SqlCommitEx(hSql(), dfStatus)
.head 15 -  Set n1u = n1u + 1
.head 14 +  Else
.head 15 -  Set dfStatus = ' Ошибка импортирования Клиента - Рег. N: ' || Str(nRNK)
.head 15 -  Call SqlRollback(hSql())
.head 15 -  Call MessageNoWait(dfStatus, 'Авария', 30, 1)
.head 12 +  Else
.head 13 -  Set dfStatus = ' Ошибка импортирования Клиента - Рег. N: ' || Str(nRNK)
.head 13 -  Call SqlRollback(hSql())
.head 13 -  Call MessageNoWait(dfStatus, 'Авария', 30, 1)
.head 8 +  Else If Val(sPG) = 3 ! Удаление (Закрытие) клиента
.head 9 +  If SqlPrepareAndExecute(hSql(), "
   UPDATE customer
   SET DATE_OFF=BANKDATE
   WHERE rnk=:nRNK")
.head 10 -  Call SqlCommitEx(hSql(), dfStatus)
.head 9 +  Else
.head 10 -  Set dfStatus = ' Ошибка удаления (закрытия) Клиента - Рег. N: ' || Str(nRNK)
.head 10 -  Call SqlRollback(hSql())
.head 10 -  Call MessageNoWait(dfStatus, 'Авария', 30, 1)
.head 8 -  Set nPos = nPos + nDelta
.head 8 -  Call ccProgressBar.SetProgress(nPos)
.head 6 +  If cbAccNv
.head 7 -  Set dfStatus = 'Обновление Accounts (нац.валюта) ...'
.head 7 -  Set nPos = 0
.head 7 -  Set nDelta = 100 / nRecs
.head 7 -  Set nKv = GetBaseVal()
.head 7 -  ! Call SqlPrepareAndExecute(hSqlA, "
     SELECT ISP,PAP,NLS,NLO,IS,LIM,DAPP,PS,RNK,DAOS,BANK,DAPS,NAMS,OSN,PR,PR2600
     FROM " || sSchetas || "
     INTO :nISP,:nPAP,:sNLS,:nNLO,:nIS,:nLIM,:nDAPP,:nPS,:nRNK,:dDAOS,:nBANK,:dDAPS,:sNAMS,:nOSN,:sPR,:sPR2600")
.head 7 -  Call SqlPrepareAndExecute(hSqlA, "
     SELECT ISP,PAP,NLS,NLO,IS,LIM,DAPP,PS,RNK,DAOS,BANK,DAPS,NAMS,OSN,PR,PR2600
     FROM " || sSchetas || "
     INTO :nISP,:nPAP,:sNLS,:sNLO,:nIS,:nLIM,:nDAPP,:nPS,:nRNK,:dDAOS,:nBANK,:dDAPS,:sNAMS,:nOSN,:sPR,:sPR2600")
.head 7 +  While SqlFetchNext(hSqlA, nFetchRes)
.head 8 -  Set nPR = IifN(SalStrTrimX(sPR)='', 0, Val(sPR)/100)
.head 8 -  Set nPR2600 = IifN(SalStrTrimX(sPR2600)='', 0, Val(sPR2600)/100)
.head 8 -  ! Set sNlsAlt = IifS(nNLO=0 or nNLO=NUMBER_Null, '', Str(nNLO))
.head 8 -  Set sNlsAlt = StrDosToWinX(SalStrTrimX(sNLO))
.head 8 -  Set sNbs = Left(sNLS, 4)
.head 8 +  If nDAPP = 0 Or nDAPP = NUMBER_Null
.head 9 -  Set dDapp = DATETIME_Null
.head 8 +  Else
.head 9 -  Set sDat = Right('0' || Str(nDAPP), 6)
.head 9 -  Set dDapp = MMddyyyyToDate(SalStrMidX(sDat, 2, 2) || '-' || SalStrMidX(sDat, 0, 2) || '-' || IifS(Val(
    SalStrMidX(sDat, 4, 2))<80, '20', '19') || SalStrMidX(sDat, 4, 2))
.head 8 -  Set nISP = IifN(nISP=0 or nISP=NUMBER_Null, nIspNone, nISP)
.head 8 -  Set sNAMS = SalStrTrimX(sNAMS)
.head 8 -  Set sNLS = SalStrTrimX(sNLS)
.head 8 +  If сbOemToAnsi
.head 9 -  Set sNAMS = StrDosToWinX(sNAMS)
.head 8 -  Set nLIM = IifN(nLIM=NUMBER_Null, 0, nLIM)
.head 8 -  ! Set nOstb = IifN(nIS=NUMBER_Null, 0, -nIS)
.head 8 -  Set nOstb = 0
.head 8 -  Set nOstc = nOstb
.head 8 +  If nPAP < 3 ! неблокированы
.head 9 -  Set nPAP = nPAP + 1
.head 9 -  Set nBlkD = 0
.head 9 -  Set nBlkK = 0
.head 8 +  Else If nPAP > 4 and nPAP < 8 ! блокированы на Д и К
.head 9 -  Set nPAP = nPAP - 4
.head 9 -  Set nBlkD = 1
.head 9 -  Set nBlkK = 1
.head 8 +  Else If nPAP > 9 and nPAP < 13 ! блокированы на Д
.head 9 -  Set nPAP = nPAP - 9
.head 9 -  Set nBlkD = 1
.head 9 -  Set nBlkK = 0
.head 8 +  Else If nPAP > 14 and nPAP < 18 ! блокированы на K
.head 9 -  Set nPAP = nPAP - 14
.head 9 -  Set nBlkD = 0
.head 9 -  Set nBlkK = 1
.head 8 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT count(*)
     FROM vids
     INTO :nTemp
     WHERE vid=:nPS'))
.head 8 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 8 -  Set nPS = IifN(nTemp=0, 1, nPS)
.head 8 -  Set nOSN = IifN(nOSN!=1, 2, nOSN)
.head 8 -  Set nIr = nPR
.head 8 -  Set nIr2600 = nPR2600
.head 8 +  If nBANK = 1 ! Новый счет
.head 9 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT count(*)
     FROM accounts
     INTO :nTemp
     WHERE nls=:sNLS and kv=:nKv'))
.head 9 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 9 -  ! Call Debug(Str(nTemp) || ' ' || sNLS || ' ' || Str(nKv))
.head 9 +  If nTemp = 0
.head 10 -  Set nLastAcc = Get_SQ('s_accounts')
.head 10 +  ! If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO accounts (acc,nls,nlsalt,kv,nbs,daos,dapp,isp,nms,lim,ostb,ostc,ostq,dos,kos,dosq,kosq,pap,tip,vid,
                  mdate,sec,seco,blkd,blkk,pos,grp)
   VALUES (:nLastAcc,:sNLS,:sNlsAlt,:nKv,:sNbs,:dDAOS,:dDapp,:nISP,:sNAMS,:nLIM,:nOstb,:nOstc,0,0,0,0,0,:nPAP,
           'ODB',:nPS,:dDAPS,7,7,:nBlkD,:nBlkK,0,100)")
.head 11 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 11 -  Call SqlRollback(hSql())
.head 11 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 10 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO accounts (acc,nls,nlsalt,kv,nbs,daos,dapp,isp,nms,lim,ostb,ostc,ostq,dos,kos,dosq,kosq,pap,tip,vid,
                  mdate,seco,blkd,blkk,pos,grp,rnk)
   VALUES (:nLastAcc,:sNLS,:sNlsAlt,:nKv,:sNbs,:dDAOS,:dDapp,:nISP,:sNAMS,:nLIM,:nOstb,:nOstc,0,0,0,0,0,:nPAP,
           'ODB',:nPS,:dDAPS,7,:nBlkD,:nBlkK,0,100,:nRNK)")
.head 11 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 11 -  Call SqlRollback(hSql())
.head 11 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 10 +  Else
.head 11 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO cust_acc (acc,rnk)
   VALUES (:nLastAcc,:nRNK)")
.head 12 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 12 -  Call SqlRollback(hSql())
.head 12 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 11 +  Else
.head 12 +  If nPR != 0 or nPR2600 != 0
.head 13 -  Set bFirst = FALSE
.head 13 +  If nPR != 0
.head 14 -  Set bFlaga = TRUE
.head 14 -  ! Set nPAPa = nPAP * (3-nPAP) / 2
.head 14 -  ! Set nPAPa = (nPAP-1) * (2-nPAP) / 2
.head 14 -  Set nPAPa = SalNumberPower(2, nPAP-1) - 1
.head 14 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_accn
     WHERE acc=:nLastAcc and id=:nPAPa")
.head 14 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 15 -  ! Call DebugN(nLastAcc)
.head 15 -  ! Call DebugN(nPAP)
.head 15 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO int_accn (acc,id,metr,basem,basey,freq)
   VALUES (:nLastAcc,:nPAPa,0,0,0,1)")
.head 16 -  Set dfStatus = 'Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 16 -  Set bFlaga = FALSE
.head 16 -  Call SqlRollback(hSql())
.head 16 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 14 +  If bFlaga
.head 15 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_ratn
     WHERE acc=:nLastAcc and id=:nPAPa and bdat=:dDate")
.head 15 -  Set bIra = SqlFetchNext(hSql(), nFetchRes)
.head 15 +  If not SqlPrepareAndExecute(hSql(), IifS(bIra, "
   UPDATE int_ratn
   SET ir=:nIr
   WHERE acc=:nLastAcc and id=:nPAPa and bdat=:dDate", "
   INSERT
   INTO int_ratn (acc,id,bdat,ir)
   VALUES (:nLastAcc,:nPAPa,:dDate,:nIr)"))
.head 16 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 16 -  Call SqlRollback(hSql())
.head 16 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 15 +  Else
.head 16 -  Call SqlCommit(hSql())
.head 16 -  Set dfStatus = ' Импортирован cчет ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 16 -  Set n2i = n2i + 1
.head 16 -  Set bFirst = FALSE
.head 13 +  If nPR2600 != 0
.head 14 -  Set bFlaga = TRUE
.head 14 -  Set nPAPa = 0
.head 14 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_accn
     WHERE acc=:nLastAcc and id=:nPAPa")
.head 14 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 15 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO int_accn (acc,id,metr,basem,basey,freq)
   VALUES (:nLastAcc,:nPAPa,0,0,0,1)")
.head 16 -  Set dfStatus = 'Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 16 -  Set bFlaga = FALSE
.head 16 -  Call SqlRollback(hSql())
.head 16 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 14 +  If bFlaga
.head 15 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_ratn
     WHERE acc=:nLastAcc and id=:nPAPa and bdat=:dDate")
.head 15 -  Set bIra = SqlFetchNext(hSql(), nFetchRes)
.head 15 +  If not SqlPrepareAndExecute(hSql(), IifS(bIra, "
   UPDATE int_ratn
   SET ir=:nIr2600
   WHERE acc=:nLastAcc and id=:nPAPa and bdat=:dDate", "
   INSERT
   INTO int_ratn (acc,id,bdat,ir)
   VALUES (:nLastAcc,:nPAPa,:dDate,:nIr2600)"))
.head 16 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 16 -  Call SqlRollback(hSql())
.head 16 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 15 +  Else
.head 16 -  Call SqlCommit(hSql())
.head 16 +  If bFirst
.head 17 -  Set dfStatus = ' Импортирован cчет ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 17 -  Set n2i = n2i + 1
.head 12 +  Else
.head 13 -  Call SqlCommit(hSql())
.head 13 -  Set dfStatus = ' Импортирован cчет ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 13 -  Set n2i = n2i + 1
.head 8 +  Else If nBANK = 2 ! Обновление счета
.head 9 -  Set nTempacc = 0
.head 9 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT acc,dapp
     FROM accounts
     INTO :nTempacc,:dTempdapp
     WHERE nls=:sNLS and kv=:nKv'))
.head 9 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 9 -  ! Call DebugN(nTempacc)
.head 9 +  If nTempacc > 0
.head 10 +  If dTempdapp != dDapp
.head 11 +  If not SqlPrepareAndExecute(hSql(), "
   UPDATE accounts
   SET nlsalt=:sNlsAlt,daos=:dDAOS,dapp=:dDapp,isp=:nISP,nms=:sNAMS,lim=:nLIM,pap=:nPAP,vid=:nPS,
       mdate=:dDAPS,blkd=:nBlkD,blkk=:nBlkK,rnk=:nRNK
   WHERE acc=:nTempacc")
.head 12 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 12 -  Call SqlRollback(hSql())
.head 12 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 11 +  Else
.head 12 +  If nPR != 0
.head 13 -  Set bFlaga = TRUE
.head 13 -  ! Set nPAPa = nPAP * (3-nPAP) / 2
.head 13 -  ! Set nPAPa = (nPAP-1) * (2-nPAP) / 2
.head 13 -  Set nPAPa = SalNumberPower(2, nPAP-1) - 1
.head 13 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_accn
     WHERE acc=:nTempacc and id=:nPAPa")
.head 13 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 14 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO int_accn (acc,id,metr,basem,basey,freq)
   VALUES (:nTempacc,:nPAPa,0,0,0,1)")
.head 15 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 15 -  Set bFlaga = FALSE
.head 15 -  Call SqlRollback(hSql())
.head 15 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 13 +  If bFlaga
.head 14 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acrn.fproc(" || Str(nTempacc) || ",BANKDATE)
     INTO :nOLDir
     FROM dual")
.head 14 -  Call SqlFetchNext(hSql(), nFetchRes)
.head 14 -  ! Call DebugN(nOLDir)
.head 14 -  ! Call DebugN(nIr)
.head 14 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_ratn
     WHERE acc=:nTempacc and id=:nPAPa and bdat=:dDate")
.head 14 -  Set bIra = SqlFetchNext(hSql(), nFetchRes)
.head 14 -  ! Call Debug(Str(nTempacc) || ' ' || DtoS(dDate))
.head 14 +  If nOLDir != nIr
.head 15 +  If not SqlPrepareAndExecute(hSql(), IifS(bIra, "
   UPDATE int_ratn
   SET ir=:nIr
   WHERE acc=:nTempacc and id=:nPAPa and bdat=:dDate", "
   INSERT
   INTO int_ratn (acc,id,bdat,ir)
   VALUES (:nTempacc,:nPAPa,:dDate,:nIr)"))
.head 16 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 16 -  Call SqlRollback(hSql())
.head 16 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 15 +  Else
.head 16 -  Call SqlCommit(hSql())
.head 16 -  Set n2u = n2u + 1
.head 14 +  Else
.head 15 -  Call SqlCommit(hSql())
.head 15 -  Set n2u = n2u + 1
.head 12 +  Else
.head 13 -  Call SqlCommit(hSql())
.head 13 -  Set n2u = n2u + 1
.head 8 +  Else If nBANK = 3 ! Закрытие счета
.head 9 -  Set nTempacc = 0
.head 9 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT acc
     FROM accounts
     INTO :nTempacc
     WHERE nls=:sNLS and kv=:nKv'))
.head 9 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 9 +  If nTempacc > 0
.head 10 +  If not SqlPrepareAndExecute(hSql(), "
   UPDATE accounts
   SET dazs=:dDate
   WHERE acc=:nTempacc")
.head 11 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 11 -  Call SqlRollback(hSql())
.head 11 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 10 +  Else
.head 11 -  Call SqlCommit(hSql())
.head 11 -  Set n2d = n2d + 1
.head 8 -  Set nPos = nPos + nDelta
.head 8 -  Call ccProgressBar.SetProgress(nPos)
.head 6 +  If cbAccNb
.head 7 -  Set dfStatus = 'Обновление Accounts (внебаланс) ...'
.head 7 -  Set nPos = 0
.head 7 -  Set nDelta = 100 / nRecn
.head 7 -  ! Call SqlPrepareAndExecute(hSqlA, "
     SELECT ISP,PAP,NBS,NLO,ISV,0,DAPP,1,RNK,DAOS,BANK,NAMS,0,0,KV
     FROM " || sSchetanb || "
     INTO :nISP,:nPAP,:sNLS,:nNLO,:nIS,:nLIM,:dDapp,:nPS,:nRNK,:dDAOS,:nBANK,:sNAMS,:nOSN,:nPRST,:nKv")
.head 7 -  Call SqlPrepareAndExecute(hSqlA, "
     SELECT ISP,PAP,NBS,NLO,ISV,0,DAPP,1,RNK,DAOS,BANK,NAMS,0,0,KV
     FROM " || sSchetanb || "
     INTO :nISP,:nPAP,:sNLS,:sNLO,:nIS,:nLIM,:dDapp,:nPS,:nRNK,:dDAOS,:nBANK,:sNAMS,:nOSN,:nPRST,:nKv")
.head 7 +  While SqlFetchNext(hSqlA, nFetchRes)
.head 8 -  Set nKv = IifN(nKv=0 or nKv = NUMBER_Null, GetBaseVal(), nKv)
.head 8 -  Set nPR = nPRST
.head 8 -  ! Set sNlsAlt = IifS(nNLO=0 or nNLO=NUMBER_Null, '', Str(nNLO))
.head 8 -  Set sNlsAlt = StrDosToWinX(SalStrTrimX(sNLO))
.head 8 -  Set sNbs = Left(sNLS, 4)
.head 8 -  Set nISP = IifN(nISP=0 or nISP=NUMBER_Null, nIspNone, nISP)
.head 8 -  Set sNAMS = SalStrTrimX(sNAMS)
.head 8 -  Set sNLS = SalStrTrimX(sNLS)
.head 8 +  If сbOemToAnsi
.head 9 -  Set sNAMS = StrDosToWinX(sNAMS)
.head 8 -  Set nLIM = IifN(nLIM=NUMBER_Null, 0 , nLIM)
.head 8 -  ! Set nOstb = IifN(nIS=NUMBER_Null, 0, -nIS)
.head 8 -  Set nOstb = 0
.head 8 -  Set nOstc = nOstb
.head 8 +  If nPAP < 3 ! неблокированы
.head 9 -  Set nPAP = nPAP + 1
.head 9 -  Set nBlkD = 0
.head 9 -  Set nBlkK = 0
.head 8 +  Else If nPAP > 4 and nPAP < 8 ! блокированы на Д и К
.head 9 -  Set nPAP = nPAP - 4
.head 9 -  Set nBlkD = 1
.head 9 -  Set nBlkK = 1
.head 8 +  Else If nPAP > 9 and nPAP < 13 ! блокированы на Д
.head 9 -  Set nPAP = nPAP - 9
.head 9 -  Set nBlkD = 1
.head 9 -  Set nBlkK = 0
.head 8 +  Else If nPAP > 14 and nPAP < 18 ! блокированы на K
.head 9 -  Set nPAP = nPAP - 14
.head 9 -  Set nBlkD = 0
.head 9 -  Set nBlkK = 1
.head 8 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT count(*)
     FROM vids
     INTO :nTemp
     WHERE vid=:nPS'))
.head 8 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 8 -  Set nPS = IifN(nTemp=0, 1, nPS)
.head 8 -  Set nOSN = IifN(nOSN!=1, 2, 1)
.head 8 -  Set nIr = nPR
.head 8 +  If nBANK = 1 ! Новый счет
.head 9 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT count(*)
     FROM accounts
     INTO :nTemp
     WHERE nls=:sNLS and kv=:nKv'))
.head 9 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 9 +  If nTemp = 0
.head 10 -  Set nLastAcc = Get_SQ('s_accounts')
.head 10 -  ! Call Debug(Str(nLastAcc))
.head 10 +  ! If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO accounts (acc,nls,nlsalt,kv,nbs,daos,dapp,isp,nms,lim,ostb,ostc,ostq,dos,kos,dosq,kosq,pap,tip,vid,
                  sec,seco,blkd,blkk,pos,grp)
   VALUES (:nLastAcc,:sNLS,:sNlsAlt,:nKv,:sNbs,:dDAOS,:dDapp,:nISP,:sNAMS,:nLIM,:nOstb,:nOstc,0,0,0,0,0,:nPAP,
           'ODB',:nPS,7,7,:nBlkD,:nBlkK,0,100)")
.head 11 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 11 -  Call SqlRollback(hSql())
.head 11 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 10 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO accounts (acc,nls,nlsalt,kv,nbs,daos,dapp,isp,nms,lim,ostb,ostc,ostq,dos,kos,dosq,kosq,pap,tip,vid,
                  seco,blkd,blkk,pos,grp,rnk)
   VALUES (:nLastAcc,:sNLS,:sNlsAlt,:nKv,:sNbs,:dDAOS,:dDapp,:nISP,:sNAMS,:nLIM,:nOstb,:nOstc,0,0,0,0,0,:nPAP,
           'ODB',:nPS,7,:nBlkD,:nBlkK,0,100,:nRNK)")
.head 11 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 11 -  Call SqlRollback(hSql())
.head 11 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 10 +  Else
.head 11 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO cust_acc (acc,rnk)
   VALUES (:nLastAcc,:nRNK)")
.head 12 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 12 -  Call SqlRollback(hSql())
.head 12 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 11 +  Else
.head 12 +  If nPR != 0
.head 13 -  Set bFlaga = TRUE
.head 13 -  ! Set nPAPa = nPAP * (3-nPAP) / 2
.head 13 -  ! Set nPAPa = (nPAP-1) * (2-nPAP) / 2
.head 13 -  Set nPAPa = SalNumberPower(2, nPAP-1) - 1
.head 13 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_accn
     WHERE acc=:nLastAcc and id=:nPAPa")
.head 13 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 14 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO int_accn (acc,id,metr,basem,basey,freq)
   VALUES (:nLastAcc,:nPAPa,0,0,0,1)")
.head 15 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 15 -  Set bFlaga = FALSE
.head 15 -  Call SqlRollback(hSql())
.head 15 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 13 +  If bFlaga
.head 14 +  If not SqlPrepareAndExecute(hSql(), IifS(bIra, "
   UPDATE int_ratn
   SET ir=:nIr
   WHERE acc=:nLastAcc and id=:nPAPa and bdat=:dDate", "
   INSERT
   INTO int_ratn (acc,id,bdat,ir)
   VALUES (:nLastAcc,:nPAPa,:dDate,:nIr)"))
.head 15 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 15 -  Call SqlRollback(hSql())
.head 15 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 14 +  Else
.head 15 -  Call SqlCommit(hSql())
.head 15 -  Set n3i = n3i + 1
.head 12 +  Else
.head 13 -  Call SqlCommit(hSql())
.head 13 -  Set n3i = n3i + 1
.head 8 +  Else If nBANK = 2 ! Обновление счета
.head 9 -  Set nTempacc = 0
.head 9 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT acc
     FROM accounts
     INTO :nTempacc
     WHERE nls=:sNLS and kv=:nKv'))
.head 9 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 9 -  ! Call DebugN(nTempacc)
.head 9 +  If nTempacc > 0
.head 10 +  If dTempdapp != dDapp
.head 11 +  If not SqlPrepareAndExecute(hSql(), "
   UPDATE accounts
   SET nlsalt=:sNlsAlt,daos=:dDAOS,dapp=:dDapp,isp=:nISP,nms=:sNAMS,lim=:nLIM,pap=:nPAP,vid=:nPS,
       mdate=:dDAPS,blkd=:nBlkD,blkk=:nBlkK,rnk=:nRNK
   WHERE acc=:nTempacc")
.head 12 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 12 -  Call SqlRollback(hSql())
.head 12 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 11 +  Else
.head 12 +  If nPR != 0
.head 13 -  Set bFlaga = TRUE
.head 13 -  ! Set nPAPa = nPAP * (3-nPAP) / 2
.head 13 -  ! Set nPAPa = (nPAP-1) * (2-nPAP) / 2
.head 13 -  Set nPAPa = SalNumberPower(2, nPAP-1) - 1
.head 13 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_accn
     WHERE acc=:nTempacc and id=:nPAPa")
.head 13 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 14 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO int_accn (acc,id,metr,basem,basey,freq)
   VALUES (:nTempacc,:nPAPa,0,0,0,1)")
.head 15 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 15 -  Set bFlaga = FALSE
.head 15 -  Call SqlRollback(hSql())
.head 15 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 13 +  If bFlaga
.head 14 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acrn.fproc(" || Str(nTempacc) || ",BANKDATE)
     INTO :nOLDir
     FROM dual")
.head 14 -  Call SqlFetchNext(hSql(), nFetchRes)
.head 14 -  ! Call DebugN(nOLDir)
.head 14 -  ! Call DebugN(nIr)
.head 14 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_ratn
     WHERE acc=:nTempacc and id=:nPAPa and bdat=:dDate")
.head 14 -  Set bIra = SqlFetchNext(hSql(), nFetchRes)
.head 14 -  ! Call Debug(Str(nTempacc) || ' ' || DtoS(dDate))
.head 14 +  If nOLDir != nIr
.head 15 +  If not SqlPrepareAndExecute(hSql(), IifS(bIra, "
   UPDATE int_ratn
   SET ir=:nIr
   WHERE acc=:nTempacc and id=:nPAPa and bdat=:dDate", "
   INSERT
   INTO int_ratn (acc,id,bdat,ir)
   VALUES (:nTempacc,:nPAPa,:dDate,:nIr)"))
.head 16 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 16 -  Call SqlRollback(hSql())
.head 16 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 15 +  Else
.head 16 -  Call SqlCommit(hSql())
.head 16 -  Set n3u = n3u + 1
.head 14 +  Else
.head 15 -  Call SqlCommit(hSql())
.head 15 -  Set n3u = n3u + 1
.head 12 +  Else
.head 13 -  Call SqlCommit(hSql())
.head 13 -  Set n3u = n3u + 1
.head 8 +  Else If nBANK = 3 ! Закрытие счета
.head 9 -  Set nTempacc = 0
.head 9 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT acc
     FROM accounts
     INTO :nTempacc
     WHERE nls=:sNLS and kv=:nKv'))
.head 9 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 9 +  If nTempacc > 0
.head 10 +  If not SqlPrepareAndExecute(hSql(), "
   UPDATE accounts
   SET dazs=:dDate
   WHERE acc=:nTempacc")
.head 11 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 11 -  Call SqlRollback(hSql())
.head 11 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 10 +  Else
.head 11 -  Call SqlCommit(hSql())
.head 11 -  Set n3d = n3d + 1
.head 8 -  Set nPos = nPos + nDelta
.head 8 -  Call ccProgressBar.SetProgress(nPos)
.head 6 +  If cbAccIv
.head 7 -  Set dfStatus = 'Обновление Accounts (ин.валюта) ...'
.head 7 -  Set nPos = 0
.head 7 -  Set nDelta = 100 / nRecv
.head 7 -  ! Call SqlPrepareAndExecute(hSqlA, "
     SELECT ISP,PAP,NLS,NLO,ISV,LIM,VDATE,PS,RNK,DAOS,BCH,DAPS,NAMS,KRAZ,PRST,KV
     FROM " || sSchetav || "
     INTO :nISP,:nPAP,:sNLS,:nNLO,:nIS,:nLIM,:dDapp,:nPS,:nRNK,:dDAOS,:nBANK,:dDAPS,:sNAMS,:nOSN,:nPRST,:nKv")
.head 7 -  Call SqlPrepareAndExecute(hSqlA, "
     SELECT ISP,PAP,NLS,NLO,ISV,LIM,VDATE,PS,RNK,DAOS,BCH,DAPS,NAMS,KRAZ,PRST,KV
     FROM " || sSchetav || "
     INTO :nISP,:nPAP,:sNLS,:sNLO,:nIS,:nLIM,:dDapp,:nPS,:nRNK,:dDAOS,:nBANK,:dDAPS,:sNAMS,:nOSN,:nPRST,:nKv")
.head 7 +  While SqlFetchNext(hSqlA, nFetchRes)
.head 8 -  Set nPR = nPRST
.head 8 -  ! Set sNlsAlt = IifS(nNLO=0 or nNLO=NUMBER_Null, '', Str(nNLO))
.head 8 -  Set sNlsAlt = StrDosToWinX(SalStrTrimX(sNLO))
.head 8 -  Set sNbs = Left(sNLS, 4)
.head 8 -  Set nISP = IifN(nISP=0 or nISP=NUMBER_Null, nIspNone, nISP)
.head 8 -  Set sNAMS = SalStrTrimX(sNAMS)
.head 8 -  Set sNLS = SalStrTrimX(sNLS)
.head 8 +  If сbOemToAnsi
.head 9 -  Set sNAMS = StrDosToWinX(sNAMS)
.head 8 -  Set nLIM = IifN(nLIM=NUMBER_Null, 0 , nLIM)
.head 8 -  ! Set nOstb = IifN(nIS=NUMBER_Null, 0, -nIS)
.head 8 -  Set nOstb = 0
.head 8 -  Set nOstc = nOstb
.head 8 +  If nPAP < 3 ! неблокированы
.head 9 -  Set nPAP = nPAP + 1
.head 9 -  Set nBlkD = 0
.head 9 -  Set nBlkK = 0
.head 8 +  Else If nPAP > 4  and nPAP < 8  ! блокированы на Д и К
.head 9 -  Set nPAP = nPAP - 4
.head 9 -  Set nBlkD = 1
.head 9 -  Set nBlkK = 1
.head 8 +  Else If nPAP > 9  and nPAP < 13 ! блокированы на Д
.head 9 -  Set nPAP = nPAP - 9
.head 9 -  Set nBlkD = 1
.head 9 -  Set nBlkK = 0
.head 8 +  Else If nPAP > 14 and nPAP < 18 ! блокированы на K
.head 9 -  Set nPAP = nPAP - 14
.head 9 -  Set nBlkD = 0
.head 9 -  Set nBlkK = 1
.head 8 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT count(*)
     FROM vids
     INTO :nTemp
     WHERE vid=:nPS'))
.head 8 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 8 -  Set nPS = IifN(nTemp=0, 1, nPS)
.head 8 -  Set nOSN = IifN(nOSN!=1, 2, 1)
.head 8 -  Set nIr = nPR
.head 8 +  If nBANK = 1 ! Новый счет
.head 9 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT count(*)
     FROM accounts
     INTO :nTemp
     WHERE nls=:sNLS and kv=:nKv'))
.head 9 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 9 +  If nTemp = 0
.head 10 -  Set nLastAcc = Get_SQ('s_accounts')
.head 10 +  ! If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO accounts (acc,nls,nlsalt,kv,nbs,daos,dapp,isp,nms,lim,ostb,ostc,ostq,dos,kos,dosq,kosq,pap,tip,vid,
                  mdate,sec,seco,blkd,blkk,pos,grp)
   VALUES (:nLastAcc,:sNLS,:sNlsAlt,:nKv,:sNbs,:dDAOS,:dDapp,:nISP,:sNAMS,:nLIM,:nOstb,:nOstc,0,0,0,0,0,:nPAP,
           'ODB',:nPS,:dDAPS,7,7,:nBlkD,:nBlkK,:nOSN,100)")
.head 11 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 11 -  Call SqlRollback(hSql())
.head 11 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 10 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO accounts (acc,nls,nlsalt,kv,nbs,daos,dapp,isp,nms,lim,ostb,ostc,ostq,dos,kos,dosq,kosq,pap,tip,vid,
                  mdate,seco,blkd,blkk,pos,grp,rnk)
   VALUES (:nLastAcc,:sNLS,:sNlsAlt,:nKv,:sNbs,:dDAOS,:dDapp,:nISP,:sNAMS,:nLIM,:nOstb,:nOstc,0,0,0,0,0,:nPAP,
           'ODB',:nPS,:dDAPS,7,:nBlkD,:nBlkK,:nOSN,100,:nRNK)")
.head 11 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 11 -  Call SqlRollback(hSql())
.head 11 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 10 +  Else
.head 11 -  ! Call Debug('acc=' || Str(nLastAcc) || ', rnk=' || Str(nRNK))
.head 11 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO cust_acc (acc,rnk)
   VALUES (:nLastAcc,:nRNK)")
.head 12 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 12 -  Call SqlRollback(hSql())
.head 12 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 11 +  Else
.head 12 +  If nPR != 0
.head 13 -  Set bFlaga = TRUE
.head 13 -  ! Set nPAPa = nPAP * (3-nPAP) / 2
.head 13 -  ! Set nPAPa = (nPAP-1) * (2-nPAP) / 2
.head 13 -  Set nPAPa = SalNumberPower(2, nPAP-1) - 1
.head 13 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_accn
     WHERE acc=:nLastAcc and id=:nPAPa")
.head 13 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 14 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO int_accn (acc,id,metr,basem,basey,freq)
   VALUES (:nLastAcc,:nPAPa,0,0,0,1)")
.head 15 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 15 -  Set bFlaga = FALSE
.head 15 -  Call SqlRollback(hSql())
.head 15 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 13 +  If bFlaga
.head 14 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_ratn
     WHERE acc=:nLastAcc and id=:nPAPa and bdat=:dDate")
.head 14 -  Set bIra = SqlFetchNext(hSql(), nFetchRes)
.head 14 +  If not SqlPrepareAndExecute(hSql(), IifS(bIra, "
   UPDATE int_ratn
   SET ir=:nIr
   WHERE acc=:nLastAcc and id=:nPAPa and bdat=:dDate", "
   INSERT
   INTO int_ratn (acc,id,bdat,ir)
   VALUES (:nLastAcc,:nPAPa,:dDate,:nIr)"))
.head 15 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 15 -  Call SqlRollback(hSql())
.head 15 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 14 +  Else
.head 15 -  Call SqlCommit(hSql())
.head 15 -  Set n4i = n4i + 1
.head 12 +  Else
.head 13 -  Call SqlCommit(hSql())
.head 13 -  Set n4i = n4i + 1
.head 8 +  Else If nBANK = 2 ! Обновление счета
.head 9 -  Set nTempacc = 0
.head 9 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT acc
     FROM accounts
     INTO :nTempacc
     WHERE nls=:sNLS and kv=:nKv'))
.head 9 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 9 -  ! Call DebugN(nTempacc)
.head 9 +  If nTempacc > 0
.head 10 +  If dTempdapp != dDapp
.head 11 +  If not SqlPrepareAndExecute(hSql(), "
   UPDATE accounts
   SET nlsalt=:sNlsAlt,daos=:dDAOS,dapp=:dDapp,isp=:nISP,nms=:sNAMS,lim=:nLIM,pap=:nPAP,vid=:nPS,
       mdate=:dDAPS,blkd=:nBlkD,blkk=:nBlkK,pos=:nOSN,rnk=:nRNK
   WHERE acc=:nTempacc")
.head 12 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 12 -  Call SqlRollback(hSql())
.head 12 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 11 +  Else
.head 12 +  If nPR != 0
.head 13 -  Set bFlaga = TRUE
.head 13 -  ! Set nPAPa = nPAP * (3-nPAP) / 2
.head 13 -  ! Set nPAPa = (nPAP-1) * (2-nPAP) / 2
.head 13 -  Set nPAPa = SalNumberPower(2, nPAP-1) - 1
.head 13 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_accn
     WHERE acc=:nTempacc and id=:nPAPa")
.head 13 +  If not SqlFetchNext(hSql(), nFetchRes)
.head 14 +  If not SqlPrepareAndExecute(hSql(), "
   INSERT
   INTO int_accn (acc,id,metr,basem,basey,freq)
   VALUES (:nTempacc,:nPAPa,0,0,0,1)")
.head 15 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 15 -  Set bFlaga = FALSE
.head 15 -  Call SqlRollback(hSql())
.head 15 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 13 +  If bFlaga
.head 14 -  ! Call Debug(Str(nTempacc) || ' ' || DtoS(dDate))
.head 14 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acrn.fproc(" || Str(nTempacc) || ",BANKDATE)
     INTO :nOLDir
     FROM dual")
.head 14 -  Call SqlFetchNext(hSql(), nFetchRes)
.head 14 -  ! ! Call DebugN(nOLDir)
.head 14 -  ! ! Call DebugN(nIr)
.head 14 -  Call SqlPrepareAndExecute(hSql(), "
     SELECT acc
     FROM int_ratn
     WHERE acc=:nTempacc and id=:nPAPa and bdat=:dDate")
.head 14 -  Set bIra = SqlFetchNext(hSql(), nFetchRes)
.head 14 -  ! Call Debug(Str(nTempacc) || ' ' || DtoS(dDate))
.head 14 +  If nOLDir != nIr
.head 15 +  If not SqlPrepareAndExecute(hSql(), IifS(bIra, "
   UPDATE int_ratn
   SET ir=:nIr
   WHERE acc=:nTempacc and id=:nPAPa and bdat=:dDate", "
   INSERT
   INTO int_ratn (acc,id,bdat,ir)
   VALUES (:nTempacc,:nPAPa,:dDate,:nIr)"))
.head 16 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' ||
    Str(nRNK)
.head 16 -  Call SqlRollback(hSql())
.head 16 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 15 +  Else
.head 16 -  Call SqlCommit(hSql())
.head 16 -  Set n4u = n4u + 1
.head 14 +  Else
.head 15 -  Call SqlCommit(hSql())
.head 15 -  Set n4u = n4u + 1
.head 12 +  Else
.head 13 -  Call SqlCommit(hSql())
.head 13 -  Set n4u = n4u + 1
.head 8 +  Else If nBANK = 3 ! Закрытие счета
.head 9 -  Set nTempacc = 0
.head 9 -  Call SqlPrepareAndExecute(hSqlAux2(), T('
     SELECT acc
     FROM accounts
     INTO :nTempacc
     WHERE nls=:sNLS and kv=:nKv'))
.head 9 -  Call SqlFetchNext(hSqlAux2(), nFetchRes)
.head 9 +  If nTempacc > 0
.head 10 +  If not SqlPrepareAndExecute(hSql(), "
   UPDATE accounts
   SET dazs=:dDate
   WHERE acc=:nTempacc")
.head 11 -  Set dfStatus = ' Ошибка импортирования cчета ' || sNLS || '(' || Str(nKv) || ') - Рег. N: ' || Str(nRNK)
.head 11 -  Call SqlRollback(hSql())
.head 11 -  Call MessageNoWait(dfStatus, 'Ошибка', 30, 1)
.head 10 +  Else
.head 11 -  Call SqlCommit(hSql())
.head 11 -  Set n4d = n4d + 1
.head 8 -  Set nPos = nPos + nDelta
.head 8 -  Call ccProgressBar.SetProgress(nPos)
.head 6 -  Call SalEnableWindow(pbExit)
.head 6 -  Call SalSetFocus(pbExit)
.head 6 -  ! Call MessageInfo(dfStatus)
.head 6 -  Call ccProgressBar.SetProgress(100)
.head 6 -  ! Call Debug('n1i=' || Str(n1i) || ' n1u=' || Str(n1u) || ' n1d=' || Str(n1d) || ' n2i=' || Str(n2i) ||
            ' n2u=' || Str(n2u) || ' n2d=' || Str(n2d) || ' n3i=' || Str(n3i) || ' n3u=' || Str(n3u) ||
            ' n3d=' || Str(n3d) || ' n4i=' || Str(n4i) || ' n4u=' || Str(n4u) || ' n4d=' || Str(n4d))
.head 6 -  Set s1 = " Выполнено доимпортирование данных: " || IifS(n1i+n1u+n1d>0, "Customer (" || IifS(n1i>0, "добавлено " ||
    Str(n1i), "") || IifS(n1u>0, IifS(n1i>0, ", ", "") || "обновлено " || Str(n1u), "") || IifS(n1d>0, IifS(n1i+n1u>0,
    ", ", "") || "закрыто " || Str(n1d), "") || ")", "")
.head 6 -  Set s2 = IifS(n2i+n2u+n2d>0, " Accounts (нац.валюта) (" || IifS(n2i>0, "добавлено " || Str(n2i), "") || IifS(n2u>0,
    IifS(n2i>0, ", ", "") || "обновлено " || Str(n2u), "") || IifS(n2d>0, IifS(n2i+n2u>0, ", ", "") || "закрыто " ||
    Str(n2d), "") || ")", "")
.head 6 -  Set s3 = IifS(n3i+n3u+n3d>0, " Accounts (внебаланс) (" || IifS(n3i>0, "добавлено " || Str(n3i), "") || IifS(n3u>0,
    IifS(n3i>0, ", ", "") || "обновлено " || Str(n3u), "") || IifS(n3d>0, IifS(n3i+n3u>0, ", ", "") || "закрыто " ||
    Str(n3d), "") || ")", "")
.head 6 -  Set s4 = IifS(n4i+n4u+n4d>0, " Accounts (ин.валюта) (" || IifS(n4i>0, "добавлено " || Str(n4i), "") || IifS(n4u>0,
    IifS(n4i>0, ", ", "") || "обновлено " || Str(n4u), "") || IifS(n4d>0, IifS(n4i+n4u>0, ", ", "") || "закрыто " ||
    Str(n4d), "") || ")", "")
.head 6 -  Set dfStatus = IifS(n1i+n1u+n1d+n2i+n2u+n2d+n3i+n3u+n3d+n4i+n4u+n4d>0, s1 || s2 || s3 || s4,
    " Изменений произведено не было !")
.head 6 -  Call SalWaitCursor(FALSE)
.head 3 +  Pushbutton: pbExit
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Выход
.head 4 -  Window Location and Size
.head 5 -  Left:   8.083"
.head 5 -  Top:    3.488"
.head 5 -  Width:  1.467"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Esc
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalFileSetCurrentDirectory(sOdir)
.head 6 -  Call SqlDisconnect(hSqlA)
.head 6 -  Call SalEndDialog(hWndForm, 4)
.head 3 +  Custom Control: ccProgressBar
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left:   0.183"
.head 6 -  Top:    1.571"
.head 6 -  Width:  9.4"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.262"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: MS Sans Serif
.head 5 -  Font Size: 8
.head 5 -  Font Enhancement: None
.head 5 -  Text Color: Dark Blue
.head 5 -  Background Color: Gray
.head 5 -  DLL Settings
.head 4 -  Message Actions
.head 3 -  Group Box: Обновление данных
.head 4 -  Resource Id: 29163
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   0.088"
.head 5 -  Top:    2.048"
.head 5 -  Width:  9.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.274"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Check Box: cbCustomer
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Клиенты банка
.head 4 -  Window Location and Size
.head 5 -  Left:   0.283"
.head 5 -  Top:    2.238"
.head 5 -  Width:  3.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set cbCustomer = bKlitas
.head 5 +  ! On SAM_Click
.head 6 -  Call SalSendMsg(hWndItem, SAM_Create, 0, 0)
.head 3 +  Check Box: cbAccNv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Счета в Нац. валюте
.head 4 -  Window Location and Size
.head 5 -  Left:   0.283"
.head 5 -  Top:    2.488"
.head 5 -  Width:  3.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set cbAccNv = bSchetas
.head 5 +  ! On SAM_Click
.head 6 -  Call SalSendMsg(hWndItem, SAM_Create, 0, 0)
.head 3 +  Check Box: cbAccNb
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Счета по Внебалансу
.head 4 -  Window Location and Size
.head 5 -  Left:   0.283"
.head 5 -  Top:    2.738"
.head 5 -  Width:  3.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set cbAccNb = bSchetanb
.head 5 +  ! On SAM_Click
.head 6 -  Call SalSendMsg(hWndItem, SAM_Create, 0, 0)
.head 3 +  Check Box: cbAccIv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Счета в Ин. валюте
.head 4 -  Window Location and Size
.head 5 -  Left:   0.283"
.head 5 -  Top:    2.988"
.head 5 -  Width:  3.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set cbAccIv = bSchetav
.head 5 +  ! On SAM_Click
.head 6 -  Call SalSendMsg(hWndItem, SAM_Create, 0, 0)
.head 3 +  Check Box: сbOemToAnsi
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Перекодировать ( DOS -> WIN )
.head 4 -  Window Location and Size
.head 5 -  Left:   0.25"
.head 5 -  Top:    3.536"
.head 5 -  Width:  6.033"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.286"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Message Actions
.head 3 -  Frame
.head 4 -  Resource Id: 46943
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left:   0.083"
.head 5 -  Top:    3.452"
.head 5 -  Width:  9.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.452"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Corners: Square
.head 4 -  Border Style: Drop-Shadow
.head 4 -  Border Thickness: 1
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 3 +  Multiline Field: dfStatus
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? No
.head 5 -  Window Location and Size
.head 6 -  Left:   0.183"
.head 6 -  Top:    0.238"
.head 6 -  Width:  9.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 1.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Bold-Italic
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Data Field: df1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   3.783"
.head 6 -  Top:    2.262"
.head 6 -  Width:  0.833"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Right
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Gray
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 +  Data Field: df2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   3.783"
.head 6 -  Top:    2.512"
.head 6 -  Width:  0.833"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Right
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Gray
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 +  Data Field: df3
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   3.783"
.head 6 -  Top:    2.762"
.head 6 -  Width:  0.833"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Right
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Gray
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 +  Data Field: df4
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:   3.783"
.head 6 -  Top:    3.012"
.head 6 -  Width:  0.833"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Right
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Gray
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 2 -  Functions
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  Date/Time: dDate
.head 3 -  Number: nReck
.head 3 -  Number: nRecs
.head 3 -  Number: nRecn
.head 3 -  Number: nRecv
.head 3 -  String: sDir
.head 3 -  String: sOdir
.head 3 -  String: sKlitas
.head 3 -  String: sSchetas
.head 3 -  String: sSchetanb
.head 3 -  String: sSchetav
.head 3 -  Boolean: bKlitas
.head 3 -  Boolean: bSchetas
.head 3 -  Boolean: bSchetanb
.head 3 -  Boolean: bSchetav
.head 3 -  String: sKat
.head 3 -  Sql Handle: hSqlA
.head 3 -  Number: n1i
.head 3 -  Number: n1u
.head 3 -  Number: n1d
.head 3 -  Number: n2i
.head 3 -  Number: n2u
.head 3 -  Number: n2d
.head 3 -  Number: n3i
.head 3 -  Number: n3u
.head 3 -  Number: n3d
.head 3 -  Number: n4i
.head 3 -  Number: n4u
.head 3 -  Number: n4d
.head 3 -  Number: nRNK
.head 3 -  String: sNMK
.head 3 -  Number: nC_AG
.head 3 -  String: sK040
.head 3 -  String: sK050
.head 3 -  String: sK060
.head 3 -  String: sK070
.head 3 -  String: sK080
.head 3 -  String: sK090
.head 3 -  String: sN_XOZ
.head 3 -  String: sK110
.head 3 -  String: sSAB
.head 3 -  String: sKOD
.head 3 -  Number: nT01
.head 3 -  Date/Time: dDRE
.head 3 -  Number: nNRE
.head 3 -  String: sNRE
.head 3 -  Date/Time: dDREN
.head 3 -  String: sADRK
.head 3 -  String: sRUK
.head 3 -  String: sTELR
.head 3 -  String: sGLB
.head 3 -  String: sTELB
.head 3 -  String: sNMKV
.head 3 -  String: sPG
.head 3 -  String: sUST
.head 3 -  String: sISP
.head 3 -  Number: nREG_
.head 3 -  Number: nDST_
.head 3 -  Date/Time: dDATE_OFF
.head 3 -  Date/Time: dDATE_ON
.head 3 -  ! Date/Time: dtPdate
.head 3 -  ! Date/Time: dtBday
.head 3 -  Number: nPos
.head 3 -  Number: nDelta
.head 3 -  Number: nTgr
.head 3 -  String: sNMKK
.head 3 -  Number: nTemp
.head 3 -  String: sBankA
.head 3 -  String: sBic
.head 3 -  String: sAltBic
.head 3 -  Number: nFetchRes
.head 3 -  Number: nCustType
.head 3 -  Number: nCountry
.head 3 -  Number: nPrinsider
.head 3 -  Number: nTaxf
.head 3 -  ! Number: nStmt
.head 3 -  Number: nCrisk
.head 3 -  Number: nISP
.head 3 -  Number: nPAP
.head 3 -  Number: nPAPa
.head 3 -  String: sNLS
.head 3 -  ! Number: nNLO
.head 3 -  String: sNLO
.head 3 -  Number: nIS
.head 3 -  Number: nLIM
.head 3 -  ! Number: nDOS
.head 3 -  ! Number: nKOS
.head 3 -  Number: nDAPP
.head 3 -  Number: nPS
.head 3 -  Date/Time: dDAOS
.head 3 -  Number: nBANK
.head 3 -  Date/Time: dDAPS
.head 3 -  String: sNAMS
.head 3 -  Number: nOSN
.head 3 -  Number: nLastAcc
.head 3 -  String: sNbs
.head 3 -  String: sNlsAlt
.head 3 -  String: sDat
.head 3 -  Date/Time: dDapp
.head 3 -  Number: nOstb
.head 3 -  Number: nOstc
.head 3 -  Number: nBlkD
.head 3 -  Number: nBlkK
.head 3 -  Number: nKv
.head 3 -  String: sPR
.head 3 -  String: sPR2600
.head 3 -  Number: nPR
.head 3 -  Number: nPR2600
.head 3 -  Number: nIr
.head 3 -  Number: nIr2600
.head 3 -  Number: nTempacc
.head 3 -  Number: nPRST
.head 3 -  Boolean: bFlaga
.head 3 -  Number: nMaxRNK
.head 3 -  ! Number: nMaxACC
.head 3 -  Boolean: bIra
.head 3 -  String: s1
.head 3 -  String: s2
.head 3 -  String: s3
.head 3 -  String: s4
.head 3 -  !
.head 3 -  Number: nIspNone
.head 3 -  String: sIspNone
.head 3 -  !
.head 3 -  String: sK140
.head 3 -  !
.head 3 -  String: sSqlUpdate
.head 3 -  String: sSqlInsert
.head 3 -  !
.head 3 -  Date/Time: dTempdapp
.head 3 -  Number: nOLDir
.head 3 -  !
.head 3 -  Boolean: bFirst
.head 3 -  !
.head 3 -  String: sDOK
.head 3 -  String: sDOK_SER
.head 3 -  String: sDOK_NOM
.head 3 -  String: sDOK_VID
.head 3 -  Number: nPASSP
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call PrepareWindow(hWndForm)
.head 4 -  Call SalWaitCursor(TRUE)
.head 4 -  Call SalUseRegistry(FALSE, '')
.head 4 -  Call SalGetProfileString('Import', 'IspNone', '1', sIspNone, GetIniFileName())
.head 4 -  Set nIspNone = IifN(Val(sIspNone)>0, Val(sIspNone), 1)
.head 4 -  Set n1i = 0
.head 4 -  Set n1u = 0
.head 4 -  Set n1d = 0
.head 4 -  Set n2i = 0
.head 4 -  Set n2u = 0
.head 4 -  Set n2d = 0
.head 4 -  Set n3i = 0
.head 4 -  Set n3u = 0
.head 4 -  Set n3d = 0
.head 4 -  Set n4i = 0
.head 4 -  Set n4u = 0
.head 4 -  Set n4d = 0
.head 3 +  On SAM_CreateComplete
.head 4 -  Set dDate = GetBankDate()
.head 4 -  Set sKat = SalFmtFormatDateTime(dDate, 'yyMMdd')
.head 4 -  Call SalUseRegistry(FALSE, '')
.head 4 -  Call SalDisableWindow(pbImport)
.head 4 -  Call SalGetProfileString('Import', 'BarsFoxOdbkPath', '\\#ODBK\\', sDir, GetIniFileName())
.head 4 -  Set sDir = sDir || IifS(Right(sDir, 1)='\\', '', '\\') || sKat || '\\'
.head 4 -  Set sKlitas   = 'Klitas.Dbf'
.head 4 -  Set sSchetas  = 'Schetas.Dbf'
.head 4 -  Set sSchetanb = 'Schetanb.Dbf'
.head 4 -  Set sSchetav  = 'Sctetav.Dbf'
.head 4 -  Set bKlitas   = File(sDir || sKlitas)
.head 4 -  Set bSchetas  = File(sDir || sSchetas)
.head 4 -  Set bSchetanb = File(sDir || sSchetanb)
.head 4 -  Set bSchetav  = File(sDir || sSchetav)
.head 4 +  If bKlitas or bSchetas or bSchetanb or bSchetav
.head 5 -  Call SalFileGetCurrentDirectory(sOdir)
.head 5 -  Call SalFileSetCurrentDirectory(sDir)
.head 5 -  Set SqlDatabase = 'dBase_Files'
.head 5 +  If SqlConnect(hSqlA)
.head 6 +  If bKlitas
.head 7 -  Call SqlPrepareAndExecute(hSqlA, "
     SELECT count(*)
     FROM " || sKlitas || "
     INTO :nReck")
.head 7 +  If SqlFetchNext(hSqlA, nFetchRes)
.head 8 -  Set bKlitas = nReck > 0
.head 6 +  If bSchetas
.head 7 -  Call SqlPrepareAndExecute(hSqlA, "
     SELECT count(*)-1
     FROM " || sSchetas || "
     INTO :nRecs")
.head 7 +  If SqlFetchNext(hSqlA, nFetchRes)
.head 8 -  Set bSchetas = nRecs > 0
.head 6 +  If bSchetanb
.head 7 -  Call SqlPrepareAndExecute(hSqlA, "
     SELECT count(*)-1
     FROM " || sSchetanb || "
     INTO :nRecn")
.head 7 +  If SqlFetchNext(hSqlA, nFetchRes)
.head 8 -  Set bSchetanb = nRecn > 0
.head 6 +  If bSchetav
.head 7 -  Call SqlPrepareAndExecute(hSqlA, "
     SELECT count(*)-1
     FROM " || sSchetav || "
     INTO :nRecv")
.head 7 +  If SqlFetchNext(hSqlA, nFetchRes)
.head 8 -  Set bSchetav = nRecv > 0
.head 5 +  Else
.head 6 -  Call SalFileSetCurrentDirectory(sOdir)
.head 6 -  Call SalWaitCursor(FALSE)
.head 6 -  Call MessageNoWait('Ошибка подсоединения к базе данных ' || SqlDatabase, 'Аварийное сообщение', 0, 1)
.head 6 -  Call SalEndDialog(hWndForm, 2)
.head 4 +  Else
.head 5 -  Call SalFileSetCurrentDirectory(sOdir)
.head 5 -  Call SalWaitCursor(FALSE)
.head 5 -  Call MessageNoWait('Отсутствуют файлы для обновления.', 'Сообщение', 30, 0)
.head 5 -  Call SalEndDialog(hWndForm, 1)
.head 5 -  Return FALSE
.head 4 +  If bKlitas or bSchetas or bSchetanb or bSchetav
.head 5 -  Call SalWaitCursor(FALSE)
.head 5 +  If not IsBankDayOpen()
.head 6 -  Call MessageNoWait("День закрыт ! Изменения не могут быть выполнены.", "Сообщение", 30, 0)
.head 6 -  Call SalEndDialog(hWndForm, 5)
.head 6 -  Return FALSE
.head 5 -  Set cbCustomer = bKlitas
.head 5 -  Set cbAccNv = bSchetas
.head 5 -  Set cbAccNb = bSchetanb
.head 5 -  Set cbAccIv = bSchetav
.head 5 -  Set сbOemToAnsi = TRUE
.head 5 +  If nReck > 0
.head 6 -  Set df1 = nReck
.head 5 +  If nRecs > 0
.head 6 -  Set df2 = nRecs
.head 5 +  If nRecn > 0
.head 6 -  Set df3 = nRecn
.head 5 +  If nRecv > 0
.head 6 -  Set df4 = nRecv
.head 5 -  Call SalDisableWindow(cbCustomer)
.head 5 -  Call SalDisableWindow(cbAccNv)
.head 5 -  Call SalDisableWindow(cbAccNb)
.head 5 -  Call SalDisableWindow(cbAccIv)
.head 5 -  Call SalEnableWindow(pbImport)
.head 4 +  Else
.head 5 -  Call SqlDisconnect(hSqlA)
.head 5 -  Call SalWaitCursor(FALSE)
.head 5 -  Call SalFileSetCurrentDirectory(sOdir)
.head 5 -  Call SalEndDialog(hWndForm, 1)
