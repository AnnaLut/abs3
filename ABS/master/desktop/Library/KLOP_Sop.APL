Application Description: автоматическая оплата документов принятых по системе КЛИЕНТ-БАНК (СберБанк)
	Outline Version - 4.0.26
	Design-time Settings
.data VIEWINFO
0000: 6F00000001000000 FFFF01000D004347 5458566965775374 6174650400010000
0020: 0000000000B20000 002C000000020000 0003000000000000 005E030000FCFFFF
0040: FFE2FFFFFF000000 0000000000DE0100 0041010000010000 0000000000010000
0060: 000F4170706C6963 6174696F6E497465 6D02000000075769 6E646F7773066D65
0080: 6E753132
.enddata
.data DT_MAKERUNDLG
0000: 000000001E5C4241 525339385C524553 4F555243455C4943 4F5C4D6F6E65792E
0020: 69636F185C424152 5339385C42494E5C 6B6C6F705F736F70 2E657865165C4241
0040: 525339385C42494E 5C6E65776170702E 646C6C165C424152 5339385C42494E5C
0060: 6E65776170702E61 7063000001010115 513A5C43454E5455 52415C6E65776170
0080: 702E72756E15513A 5C43454E54555241 5C6E65776170702E 646C6C15513A5C43
00A0: 454E545552415C6E 65776170702E6170 6300000101011A51 3A5C424152533938
00C0: 5C42494E5C6B6C6F 705F656C6C2E6578 6518513A5C424152 5339385C42494E5C
00E0: 6E65776170702E64 6C6C18513A5C4241 525339385C42494E 5C6E65776170702E
0100: 6170630000010101 15513A5C43454E54 5552415C6E657761 70702E61706C1551
0120: 3A5C43454E545552 415C6E6577617070 2E646C6C15513A5C 43454E545552415C
0140: 6E65776170702E61 70630000010101
.enddata
		Outline Window State: Normal
		Outline Window Location and Size
.data VIEWINFO
0000: 6600040003002D00 0000000000000000 0000B71E5D0E0500 1D00FFFF4D61696E
0020: 0000000000000000 0000000000000000 0000003B00010000 00000000000000E9
0040: 1E800A00008600FF FF496E7465726E61 6C2046756E637469 6F6E730000000000
0060: 0000000000000000 0000000000003200 0100000000000000 0000E91E800A0000
0080: DF00FFFF56617269 61626C6573000000 0000000000000000 0000000000000000
00A0: 3000010000000000 00000000F51E100D 0000F400FFFF436C 6173736573000000
00C0: 0000000000000000 0000000000000000
.enddata
.data VIEWSIZE
0000: D000
.enddata
			Left:   -0.013"
			Top:    0.0"
			Width:  8.013"
			Height: 4.969"
		Options Box Location
.data VIEWINFO
0000: 0118B80BB80B2500
.enddata
.data VIEWSIZE
0000: 0800
.enddata
			Visible? Yes
			Left:   4.15"
			Top:    1.885"
			Width:  3.8"
			Height: 2.073"
		Class Editor Location
			Visible? No
			Left:   0.575"
			Top:    0.094"
			Width:  5.063"
			Height: 2.719"
		Tool Palette Location
			Visible? No
			Left:   6.388"
			Top:    0.729"
		Fully Qualified External References? Yes
		Reject Multiple Window Instances? No
		Enable Runtime Checks Of External References? Yes
		Use Release 4.0 Scope Rules? No
	Libraries
		Dynalib: Absapi.apd
		Dynalib: Global.apd
		Dynalib: Service.apd
		Dynalib: Message.apd
		Dynalib: Ssplasho.apd
		Dynalib: Dblogin.apd
		Dynalib: License.apd
		Dynalib: ROLEAUTH.APD
		! Dynalib: DSIG.APD
		!
		File Include: Vtdos.apl
		! File Include: dsdll.apl
		File Include: Docfun6.apl
		File Include: Vtfile.apl
		File Include: Vtstr.apl
		File Include: Vtcal.apl
		File Include: Vtarray.apl
		File Include: Vttblwin.apl
		File Include: Vtmsgbox.apl
		File Include: Winbars2.apl
		File Include: Constant.apl
		File Include: Watchdog.apc
		File Include: Winapi.apl
		File Include: qckole2.apl
		File Include: Gentbl.apl
	Global Declarations
		Window Defaults
			Tool Bar
				Display Style? Etched
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: System Default
				Text Color: System Default
				Background Color: System Default
			Form Window
				Display Style? Etched
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: System Default
				Text Color: System Default
				Background Color: System Default
			Dialog Box
				Display Style? Etched
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: System Default
				Text Color: System Default
				Background Color: System Default
			Top Level Table Window
				Font Name: MS Sans Serif
				Font Size: 8
				Font Enhancement: System Default
				Text Color: System Default
				Background Color: System Default
			Data Field
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Multiline Field
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Spin Field
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Background Text
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Pushbutton
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
			Radio Button
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Check Box
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Option Button
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
			Group Box
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Child Table Window
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			List Box
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Combo Box
				Font Name: Use Parent
				Font Size: Use Parent
				Font Enhancement: Use Parent
				Text Color: Use Parent
				Background Color: Use Parent
			Line
				Line Color: Use Parent
			Frame
				Border Color: Use Parent
				Background Color: 3D Face Color
			Picture
				Border Color: Use Parent
				Background Color: Use Parent
		Formats
			Number: 0'%'
			Number: #0
			Number: ###000
			Number: ###000;'($'###000')'
			Date/Time: hh:mm:ss AMPM
			Date/Time: M/d/yy
			Date/Time: MM-dd-yy
			Date/Time: dd-MMM-yyyy
			Date/Time: MMM d, yyyy
			Date/Time: MMM d, yyyy hh:mm AMPM
			Date/Time: MMMM d, yyyy hh:mm AMPM
		External Functions
			Library name: IctBob.Dll
				Function: llopen
					Description: открытие файла (C++)
					Export Ordinal: 0
					Returns
						Number: HANDLE
					Parameters
						! первый параметр: имя файла,
								  второй: тип открытия
						String: LPCSTR
						Number: INT
				Function: llcreat
					Description: создание файла (C++)
					Export Ordinal: 0
					Returns
						Number: HANDLE
					Parameters
						! первый параметр: имя файла,
								  второй: тип открытия
						String: LPCSTR
						Number: INT
				Function: llclose
					Description: закрытие файла (C++)
					Export Ordinal: 0
					Returns
						Number: HANDLE
					Parameters
						Number: HANDLE
				Function: llread
					Description: чтение файла (C++)
					Export Ordinal: 0
					Returns
						Number: UINT
					Parameters
						Number: HANDLE
						String: LPVOID
						Number: UINT
				Function: llwrite
					Description:
					Export Ordinal: 0
					Returns
						Number: UINT
					Parameters
						Number: HANDLE
						String: LPCSTR
						Number: UINT
				Function: lllseek
					Description:
					Export Ordinal: 0
					Returns
						Number: LONG
					Parameters
						Number: HANDLE
						Number: LONG
						Number: INT
				Function: llstr2str
					Description: преобразование строки HEXtoBIN
					Export Ordinal: 0
					Returns
					Parameters
						String: LPSTR
						Receive String: LPVOID
						Number: ULONG
			Library name: XSal2_32.dll
				! *** Cell functions
				Function: XSalTblSetCellBackColor
					Description: BOOL XSalTblSetCellBackColor(
								HWND p_hwndCol,
								COLORREF p_cBackColor );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
				Function: XSalTblGetCellBackColor
					Description: BOOL XSalTblGetCellBackColor(
								HWND p_hwndCol,
								COLORREF FAR * p_lpcBackColor );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Receive Number: LPLONG
				Function: XSalTblSetCellFont
					Description: BOOL XSalTblSetCellFont(
								HWND p_hwndCol,
								HFONT p_hFont );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: DWORD
				Function: XSalTblSetCellFontName
					Description: BOOL XSalTblSetCellFontName(
								HWND p_hwndCol,
								LPSTR p_szFontName,
								int p_nFontSize,
								WORD p_nFontEnh );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						String: LPSTR
						Number: INT
						Number: WORD
				Function: XSalTblGetCellFont
					Description: BOOL XSalTblGetCellFont(
								HWND p_hwndCol,
								HFONT FAR * p_lphFont );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Receive Number: LPDWORD
				Function: XSalTblSetCellImage
					Description: BOOL XSalTblSetCellImage(
								HWND p_hwndCol,
								HIMAGE p_hImage,
								short p_nPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: DWORD
						Number: WORD
				Function: XSalTblSetCellImageFile
					Description: BOOL XSalTblSetCellImageFile(
								HWND p_hwndCol,
								LPSTR p_sImageFile,
								short p_nPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						String: LPSTR
						Number: WORD
				Function: XSalTblSetCellImageString
					Description: BOOL XSalTblSetCellImageString(
								HWND p_hwndCol,
								HSTRING p_sImage,
								short p_nPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						String: HSTRING
						Number: WORD
				Function: XSalTblSetCellImageResource
					Description: BOOL XSalTblSetCellImageResource(
								HWND p_hwndCol,
								LPSTR p_szImageResource,
								short p_nPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						String: LPSTR
						Number: WORD
				Function: XSalTblGetCellImage
					Description: BOOL XSalTblGetCellImage(
								HWND p_hwndCol,
								HIMAGE FAR * p_lphImage,
								short FAR * p_lpnPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Receive Number: LPDWORD
						Receive Number: LPWORD
				Function: XSalTblSetCellCustom
					Description: BOOL XSalTblSetCellCustom(
								HWND p_hwndCol,
								LONG p_nCustomValue );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
				Function: XSalTblGetCellCustom
					Description: BOOL XSalTblGetCellCustom(
								HWND p_hwndCol,
								LONG FAR * p_lpnCustomValue );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Receive Number: LPLONG
				! *** Column functions
				Function: XSalTblSetColumnBackColor
					Description: BOOL XSalTblSetColumnBackColor(
								HWND p_hwndCol,
								COLORREF p_cBackColor );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
				Function: XSalTblGetColumnBackColor
					Description: BOOL XSalTblGetColumnBackColor(
								HWND p_hwndCol,
								COLORREF FAR * p_lpcBackColor );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Receive Number: LPLONG
				Function: XSalTblSetColumnFont
					Description: BOOL XSalTblSetColumnFont(
								HWND p_hwndCol,
								HFONT p_hFont );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: DWORD
				Function: XSalTblSetColumnFontName
					Description: BOOL XSalTblSetColumnFontName(
								HWND p_hwndCol,
								LPSTR p_szFontName,
								int p_nFontSize,
								WORD p_nFontEnh );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						String: LPSTR
						Number: INT
						Number: WORD
				Function: XSalTblGetColumnFont
					Description: BOOL XSalTblGetColumnFont(
								HWND p_hwndCol,
								HFONT FAR * p_lphFont );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Receive Number: LPDWORD
				Function: XSalTblSetColumnImage
					Description: BOOL XSalTblSetColumnImage(
								HWND p_hwndCol,
								HIMAGE p_hImage,
								short p_nPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: DWORD
						Number: WORD
				Function: XSalTblSetColumnImageFile
					Description: BOOL XSalTblSetColumnImageFile(
								HWND p_hwndCol,
								LPSTR p_sImageFile,
								short p_nPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						String: LPSTR
						Number: WORD
				Function: XSalTblSetColumnImageString
					Description: BOOL XSalTblSetColumnImageString(
								HWND p_hwndCol,
								HSTRING p_sImage,
								short p_nPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						String: HSTRING
						Number: WORD
				Function: XSalTblSetColumnImageResource
					Description: BOOL XSalTblSetColumnImageResource(
								HWND p_hwndCol,
								LPSTR p_szImageResource,
								short p_nPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						String: LPSTR
						Number: WORD
				Function: XSalTblGetColumnImage
					Description: BOOL XSalTblGetColumnImage(
								HWND p_hwndCol,
								HIMAGE FAR * p_lphImage,
								short FAR * p_lpnPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Receive Number: LPDWORD
						Receive Number: LPWORD
				Function: XSalTblSetColumnCustom
					Description: BOOL XSalTblSetColumnCustom(
								HWND p_hwndCol,
								LONG p_nCustomValue );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
				Function: XSalTblGetColumnCustom
					Description: BOOL XSalTblGetColumnCustom(
								HWND p_hwndCol,
								LONG FAR * p_lpnCustomValue );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Receive Number: LPLONG
				! *** Row functions
				Function: XSalTblSetRowBackColor
					Description: BOOL XSalTblSetRowBackColor(
								HWND p_hwndCol,
								LONG p_nRow,
								COLORREF p_cBackColor );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
						Number: LONG
				Function: XSalTblGetRowBackColor
					Description: BOOL XSalTblGetRowBackColor(
								HWND p_hwndCol,
								LONG p_nRow,
								COLORREF FAR * p_lpcBackColor );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
						Receive Number: LPLONG
				Function: XSalTblSetRowFont
					Description: BOOL XSalTblSetRowFont(
								HWND p_hwndTable,
								LONG p_nRow,
								HFONT p_hFont );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
						Number: DWORD
				Function: XSalTblSetRowFontName
					Description: BOOL XSalTblSetRowFontName(
								HWND p_hwndTable,
								LONG p_nRow,
								LPSTR p_szFontName,
								int p_nFontSize,
								WORD p_nFontEnh );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
						String: LPSTR
						Number: INT
						Number: WORD
				Function: XSalTblGetRowFont
					Description: BOOL XSalTblGetRowFont(
								HWND p_hwndTable,
								LONG p_nRow,
								HFONT FAR * p_lphFont );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
						Receive Number: LPDWORD
				Function: XSalTblSetRowImage
					Description: BOOL XSalTblSetRowImage(
								HWND p_hwndTable,
								LONG p_nRow,
								HIMAGE p_hImage,
								short p_nPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
						Number: DWORD
						Number: WORD
				Function: XSalTblSetRowImageFile
					Description: BOOL XSalTblSetRowImageFile(
								HWND p_hwndTable,
								LONG p_nRow,
								LPSTR p_sImageFile,
								short p_nPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
						String: LPSTR
						Number: WORD
				Function: XSalTblSetRowImageString
					Description: BOOL XSalTblSetRowImageString(
								HWND p_hwndTable,
								LONG p_nRow,
								HSTRING p_sImage,
								short p_nPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
						String: HSTRING
						Number: WORD
				Function: XSalTblSetRowImageResource
					Description: BOOL XSalTblSetRowImageResource(
								HWND p_hwndTable,
								LONG p_nRow,
								LPSTR p_szImageResource,
								short p_nPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
						String: LPSTR
						Number: WORD
				Function: XSalTblGetRowImage
					Description: BOOL XSalTblGetRowImage(
								HWND p_hwndTable,
								LONG p_nRow,
								HIMAGE FAR * p_lphImage,
								short FAR * p_lpnPosition );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
						Receive Number: LPDWORD
						Receive Number: LPWORD
				Function: XSalTblSetRowCustom
					Description: BOOL XSalTblSetRowCustom(
								HWND p_hwndTable,
								LONG p_nRow,
								LONG p_nCustomValue );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
						Number: LONG
				Function: XSalTblGetRowCustom
					Description: BOOL XSalTblGetRowCustom(
								HWND p_hwndTable,
								LONG p_nRow,
								LONG FAR * p_lpnCustomValue );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Window Handle: HWND
						Number: LONG
						Receive Number: LPLONG
				! *** Custom-drawn function
				Function: XSalTblGetCustomInfo
					Description: BOOL XSalTblGetCustomInfo(
								LPCUSTOMCELL p_lpCustomCell,
									HDC FAR * p_lphdc,
									LPINT p_lpnCol, LPLONG p_lpnRow,
									LPLONG p_lpnCustomValue,
									LPRECT p_lpRect );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Number: DWORD
						Receive Number: LPDWORD
						Receive Number: LPINT
						Receive Number: LPLONG
						Receive Number: LPLONG
						structPointer
							Receive Number: INT
							Receive Number: INT
							Receive Number: INT
							Receive Number: INT
				Function: XSalTblSetClipRect
					Description: BOOL XSalTblGetCustomInfo(
								LPCUSTOMCELL p_lpCustomCell,
								LPRECT p_lpRect );
					Export Ordinal: 0
					Returns
						Boolean: BOOL
					Parameters
						Number: DWORD
						structPointer
							Number: INT
							Number: INT
							Number: INT
							Number: INT
		Constants
.data CCDATA
0000: 3000000000000000 0000000000000000 00000000
.enddata
.data CCSIZE
0000: 1400
.enddata
			System
			User
		Resources
		Variables
			Number: nCount0 ! счетчик к-ва документов в файле А
			Number: nCount1 ! счетчик сумм по дебету  в файле А
			Number: nCount2 ! счетчик сумм по кредиту в файле А
			String: strPinCodeVEGA
			! только для отладки
			File Handle: h1
			! все необходимые для ВСЕХ окон переменные
			String: sDiskKataIN
			String: sDiskKataOUT
			String: sDiskKataINS
			String: sDiskKataOUTS
			String: sDiskKataOUTI
			String: sDiskKataLETTER
			String: sArchPath
			String: sTempPath
			Number: nKLI
			String: sSAB
			String: smSAB[*]
			! String: sSABP
			! String: smSABP[*]
			Number: nRNK
			Number: nmRNK[*]
			String: sNMK
			String: smNMK[*]
			String: sOKPO
			String: smOKPO[*]
			String: sTIMES
			String: smTIMES[*]
			!
			String: sVERS
			String: smVERS[*]
			!
			Number: nFetchRes
			! String: sX
			! String: sY
			! Number: nX
			! Number: nY
			Number: nKw
			!
			String: sMass[*]
			String: sDirs[*]
			Number: nCount
			Number: nHo
			Number: nHc
			String: sFileTmp
			Number: nSendId
			Boolean: bIni
			String: sPinKod
			Number: nNf
			!
			! Number: nI
			Number: nII
			Number: nLenArr
			String: sUserid
			! переменные для файла лицензии
			String: smlKOD[*]
			String: smlSAB[*]
			Number: nmlNOMER[*]
			Date/Time: dmlDALI[*]
			! переменные для выбора LISTBOX и Calendar
			Number: nArray[*]
			String: sSelectNAIM[*]
			String: sSelectSAB[*]
			Date/Time: dSelect
			String: smWeek[7]
			String: smMonth[12]
			Date/Time: dDada
			String: sDat
			! String: sSqlSAB
			Number: nIndex
			!
			String: sMFOA
			String: smMFOA[*]
			String: sNLSA
			String: smNLSA[*]
			String: sNAMA
			String: smNAMA[*]
			String: sMFOB
			String: smMFOB[*]
			String: sNLSB
			String: smNLSB[*]
			String: sNAMB
			String: smNAMB[*]
			String: sOKPOB
			String: smOKPOB[*]
			String: sOKPOZ
			String: smOKPOZ[*]
			Number: nDK
			Number: nmDK[*]
			Number: nS
			Number: nmS[*]
			Number: nVOB
			Number: nmVOB[*]
			String: sND
			String: smND[*]
			Number: nISP
			Number: nmISP[*]
			Number: nKV
			Number: nmKV[*]
			Date/Time: dDAOP
			Date/Time: dmDAOP[*]
			Number: nIOST
			Number: nmIOST[*]
			Date/Time: dDAPP
			Date/Time: dmDAPP[*]
			String: sNAZN
			String: smNAZN[*]
			String: smD_rec[*]
			String: sPOND
			String: smPOND[*]
			Number: nSK
			Number: nmSK[*]
			String: sNameFileA
			String: smNameFileA[*]
			!
			Boolean: bU
			Number: nIU
			Number: nIL
			Number: nIQ
			Number: nIN
			Number: nIV
			Number: nIO
			Number: nIW
			!
			Number: nKodirowka
			!
			String: sFrag
			Number: nIl1
			!
			Number: nUsers
			Date/Time: dtExpDate
			Date/Time: dBankDate
			Date/Time: dBankDateM1
			!
			Date/Time: dBankTek
			!
			String: sIdVega
			String: sIds
			String: smIds[*]
			String: sSab
			String: smSab[*]
			!
			String: sTemaPisma
			!
			Long String: g_lsSecretKey      ! Секрентный ключ
			Long String: g_lsSecretKeyCopy  ! Копия секретного ключа (надо для отката при записи измененного ключа на TouchMemory)
			String: sErrTxt
		Internal Functions
			! все функции доступны здесь всем окнам
			Function: LenArray
				Description: возвращает длину одномерного массива строк
				Returns
					Number:
				Parameters
					String: smArr[*]
				Static Variables
				Local variables
					Number: nBound
				Actions
					Call SalArrayGetUpperBound(smArr, 1, nBound)
					Return nBound
			Function: DaySymbol
				Description: преобразовывает день  в символ
				Returns
					String:
				Parameters
					Date/Time: dDa
				Static Variables
				Local variables
					Number: nDa
					String: sDay
				Actions
					Set nDa = SalDateDay(dDa)
					If nDa < 10
						Set sDay = Str(nDa)
					Else
						Set sDay = SalNumberToChar(nDa+55)
					Return sDay
			Function: MonthSymbol
				Description: преобразовывает месяц  в символ
				Returns
					String:
				Parameters
					Date/Time: dDa
				Static Variables
				Local variables
					Number: nMo
					String: sMonth
				Actions
					Set nMo = SalDateMonth(dDa)
					If nMo<10
						Set sMonth = Str(nMo)
					Else
						Set sMonth = SalNumberToChar(nMo+55)
					Return sMonth
			Function: YearSymbol
				Description: преобразовывает год  в символ
				Returns
					String:
				Parameters
					Date/Time: dDa
				Static Variables
				Local variables
					Number: nY
					String: sYear
				Actions
					Set nY = SalNumberMax(SalDateYear(dDa) - 1998, 0)
					If nY<10
						Set sYear = Str(nY)
					Else
						Set sYear = SalNumberToChar(nY+55)
					Return sYear
			Function: StrWinToDosX2
				Description:
				Returns
					String:
				Parameters
					String: sIn
				Static Variables
				Local variables
					String: sOut
				Actions
					Set sOut = Spac(Len(sIn))
					Call CharToOemUkr(sIn, sOut)
					Return sOut
			Function: GetBankDateMom
				Description:
				Returns
					Date/Time:
				Parameters
				Static Variables
				Local variables
					String: sBDate
				Actions
					Set sBDate = GetValueStr("
							    SELECT val
							    FROM   params
							    WHERE  par='BANKDATE'")
					Return SalDateConstruct(Val(Subs(sBDate, 7, 4)), Val(Left(sBDate, 2)), Val(Subs(sBDate, 4, 2)), 0, 0, 0)
			Function: GetSqlError
				Description:
				Returns
					String:
				Parameters
					Number: nwParam
					Number: nlParam
				Static Variables
				Local variables
					String: strErrorText
					Sql Handle: hSqlErrorHandle
					Number: nErrorNum
					Number: nErrorPos
					: cTool
						Class: cABSConnect
					String: p_errtxt
					String: p_errumsg
					String: p_erracode
					String: p_erramsg
					String: p_errahlp
					String: p_modcode
					String: p_modname
					Long String: p_errmsg
				Actions
					Call SqlExtractArgs(nwParam, nlParam, hSqlErrorHandle, nErrorNum, nErrorPos)
					Set strErrorText = SqlGetErrorTextX(nErrorNum)
					Set strErrorText = VisStrSubstitute(strErrorText, PutLf(), PutCrLf())
					Call XConnectGetParams(cTool)
					Call cTool.Connect()
					Set p_errtxt = SalStrLeftX(strErrorText, SalStrScan(strErrorText, PutCrLf()))
					When SqlError
						Call cTool.Disconnect()
						Return strErrorText
					Call SqlPLSQLCommand(cTool.hSql(), "bars_error.get_error_info(p_errtxt,p_errumsg,p_erracode,p_erramsg,p_errahlp,
							     p_modcode,p_modname,p_errmsg)")
					Set strErrorText = p_errumsg
					Call cTool.Disconnect()
					Return strErrorText
		Named Menus
		Class Definitions
.data RESOURCE 0 0 1 25218691
0000: 37010000A2000000 0000000000000000 0200000200FFFF01 00160000436C6173
0020: 73566172004F7574 6C696E6552006567 496E666F22003C00 000A630047656E46
0040: 696C746500727400 00000400001E0002 0400C10001000000 3F8001F800000037
0060: 040001F00D000000 FF1F110000DC0002 00FF7F1570000000 0100FFFF21018022
0080: 000001C200000B63 47F8444669B30004 00770200F601004F 800100FE008D0400
00A0: 010DFD00FF371100 02F700FFDF15DC00 0100FF7F
.enddata
		Default Classes
			MDI Window: cBaseMDI
			Form Window:
			Dialog Box:
			Table Window:
			Quest Window:
			Data Field:
			Spin Field:
			Multiline Field:
			Pushbutton:
			Radio Button:
			Option Button:
			Check Box:
			Child Table:
			Quest Child Window: cQuickDatabase
			List Box:
			Combo Box:
			Picture:
			Vertical Scroll Bar:
			Horizontal Scroll Bar:
			Column:
			Background Text:
			Group Box:
			Line:
			Frame:
			Custom Control:
		Application Actions
			On SAM_AppStartup
				Call SplashOpenWindow()
				! Инициализация начальных параметров
				! Call SplashSetStatusText("Инициализация параметров...")
				Call GetConfigSettings()
				!
				! Call SplashSetStatusText("Инициализация аудита...")
				Call DBSpy_Init(GetDbs())
				!
				! Call SplashSetStatusText("Инициализация интерфейса...")
				Call SplashCloseWindow()
				If DatabaseLogin(dBankTek)
					Call SetWorkBankDate(dBankTek)
					Set nUsers = GetGlobalOptionEx('USRLIMIT')
					Set dtExpDate = SalFmtFormatStrDateTime(GetGlobalOption('EXPDATE'), 'dd/MM/yyyy')
					If dtExpDate < SalDateCurrent()
						Call SalMessageBeep(MB_IconStop)
						Call SalMessageBox('Истек срок действия лицензии!', 'Bars: Лицензирование!', MB_Ok)
						Call SalQuit()
					Else
						If IsLicenseValid(GetBankMfo(), GetBankName(), nUsers, dtExpDate, FALSE)
							If dtExpDate - SalDateCurrent() < 31
								Call SalMessageBeep(MB_IconStop)
								Call SalMessageBox('Срок действия лицензии истекает через ' || Str(dtExpDate-SalDateCurrent()) || ' дней!',
										     'Bars: Лицензирование!', MB_Ok)
							Call SalCreateWindow(menu12, hWndNULL)
							! Call SalModalDialog(menu11, hWndForm)
						Else
							Call SalMessageBeep(MB_IconStop)
							Call SalMessageBox('Лицензия неверна или истек срок ее действия!', 'Bars: Лицензирование!', MB_Ok)
							Call SalQuit()
				Else
					Call SalQuit()
			On SAM_SqlError
				! Call ShowSqlError(wParam, lParam)
				Set sErrTxt = GetSqlError(wParam, lParam)
				Return FALSE
			On SAM_AppExit
				Call SaveInfoToLog(MSG_DisconnectDbs() || GetDbs())
				If hSqlAux3()
					Call SqlDisconnect(hSqlAux3())
				If hSqlAux2()
					Call SqlDisconnect(hSqlAux2())
				If hSqlAux()
					Call SqlDisconnect(hSqlAux())
				If hSql()
					Call SqlDisconnect(hSql())
				Call DBSpy_Disconnect()
				Call SalQuit()
	Form Window: menu12
		Class:
		Property Template:
		Class DLL Name:
		Title: Оплата документов "электронных" клиентов
		Icon File:
		Accesories Enabled? No
		Visible? Yes
		Display Settings
			Display Style? Default
			Visible at Design time? Yes
			Automatically Created at Runtime? No
			Initial State: Normal
			Maximizable? Yes
			Minimizable? Yes
			System Menu? Yes
			Resizable? Yes
			Window Location and Size
				Left:   2.4"
				Top:    1.885"
				Width:  17.133"
				Width Editable? Yes
				Height: 8.131"
				Height Editable? Yes
			Form Size
				Width:  Default
				Height: Default
				Number of Pages: Dynamic
			Font Name: Default
			Font Size: 8
			Font Enhancement: Default
			Text Color: Default
			Background Color: Default
		Description:
		Named Menus
		Menu
		Tool Bar
			Display Settings
				Display Style? Default
				Location? Top
				Visible? Yes
				Size: Default
				Size Editable? Yes
				Font Name: Default
				Font Size: Default
				Font Enhancement: Default
				Text Color: Default
				Background Color: Default
			Contents
		Contents
			Pushbutton: pb1
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Title: F1. АВТОМАТ
				Window Location and Size
					Left:   0.083"
					Top:    0.036"
					Width:  2.933"
					Width Editable? Yes
					Height: 0.239"
					Height Editable? Yes
				Visible? Yes
				Keyboard Accelerator: F1
				Font Name: Default
				Font Size: Default
				Font Enhancement: Bold
				Picture File Name:
				Picture Transparent Color: None
				Image Style: Single
				Text Color: Default
				Background Color: Default
				Message Actions
					On SAM_Click
						Call SalDisableWindow(pb1)
						While TRUE
							Call SetBankDate()
							If bAUTO
								Call PayAllDok()
								If cbW
									Call BackAllDok()
							Call Message('Ожидание оплаты документов КЛИЕНТ-БАНК', FALSE, FALSE, 0)
							!
							If MessageNoWait('Ожидание оплаты документов КЛИЕНТ-БАНК. Выход - ESC', 'ВЕРТУШКА КЛИЕНТ-БАНК', GetWaitPeriod(), 0)
								Break
						Call SalEnableWindow(pb1)
						Call SalSetFocus(pb1)
			Pushbutton: pb3
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Title: F2. Одноразовая оплата
				Window Location and Size
					Left:   0.083"
					Top:    0.274"
					Width:  2.933"
					Width Editable? Yes
					Height: 0.238"
					Height Editable? Yes
				Visible? Yes
				Keyboard Accelerator: F2
				Font Name: Default
				Font Size: Default
				Font Enhancement: Bold
				Picture File Name:
				Picture Transparent Color: None
				Image Style: Single
				Text Color: Blue
				Background Color: Default
				Message Actions
					On SAM_Click
						Call SetBankDate()
						Call SalDisableWindow(pb3)
						If bAUTO
							Call PayAllDok()
							If cbW
								Call BackAllDok()
						Call SalEnableWindow(pb3)
						Call SalSetFocus(pb3)
			Pushbutton: pbEsc
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Title: ESC. ВЫХОД
				Window Location and Size
					Left:   0.083"
					Top:    0.512"
					Width:  2.933"
					Width Editable? Yes
					Height: 0.238"
					Height Editable? Yes
				Visible? Yes
				Keyboard Accelerator: Esc
				Font Name: Default
				Font Size: Default
				Font Enhancement: Bold
				Picture File Name:
				Picture Transparent Color: None
				Image Style: Single
				Text Color: Yellow
				Background Color: Default
				Message Actions
					On SAM_Click
						Call SalMessageBeep(-1)
						If SalMessageBox("Вы намерены выйти из программы ? ", "Внимание !", MB_YesNo) = IDYES
							Call SalQuit()
						Else
							Return FALSE
			Multiline Field: ml1
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Data
					Maximum Data Length: 2048
					String Type: Long String
					Editable? No
				Display Settings
					Border? Yes
					Word Wrap? Yes
					Vertical Scroll? No
					Window Location and Size
						Left:   3.067"
						Top:    0.036"
						Width:  13.55"
						Width Editable? Yes
						Height: 0.714"
						Height Editable? Yes
					Visible? Yes
					Font Name: Default
					Font Size: Default
					Font Enhancement: Bold
					Text Color: Black
					Background Color: Sky
				Message Actions
					On SAM_SetFocus
						Call SalSetFocus(pb1)
			Background Text: ТЕКУЩЕЕ СООБЩЕНИЕ
				Resource Id: 36610
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Window Location and Size
					Left:   12.3"
					Top:    0.762"
					Width:  4.3"
					Width Editable? Yes
					Height: 0.167"
					Height Editable? Yes
				Visible? Yes
				Justify: Right
				Font Name: Default
				Font Size: Default
				Font Enhancement: Default
				Text Color: Dark Gray
				Background Color: Default
			Child Table: tblMessage
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Display Settings
					Window Location and Size
						Left:   0.083"
						Top:    1.036"
						Width:  16.567"
						Width Editable? Yes
						Height: 6.452"
						Height Editable? Yes
					Visible? Yes
					Font Name: Courier
					Font Size: 9
					Font Enhancement: Bold
					Text Color: Charcoal
					Background Color: Light Gray
					View: Table
					Allow Row Sizing? No
					Lines Per Row: Default
				Memory Settings
					Maximum Rows in Memory: 10000000
					Discardable? No
				Contents
					Column: colTime
						Class Child Ref Key: 0
						Class ChildKey: 0
						Class:
						Property Template:
						Class DLL Name:
						Title: Время
						Visible? Yes
						Editable? No
						Maximum Data Length: Default
						Data Type: String
						Justify: Right
						Width:  0.914"
						Width Editable? Yes
						Format: Unformatted
						Country: Default
						Input Mask: Unformatted
						Cell Options
							Cell Type? Standard
							Multiline Cell? No
							Cell DropDownList
								Sorted? Yes
								Vertical Scroll? Yes
								Auto Drop Down? No
								Allow Text Editing? Yes
							Cell CheckBox
								Check Value:
								Uncheck Value:
								Ignore Case? Yes
						List Values
						Message Actions
					Column: colText
						Class Child Ref Key: 0
						Class ChildKey: 0
						Class:
						Property Template:
						Class DLL Name:
						Title: Текст сообщения
						Visible? Yes
						Editable? No
						Maximum Data Length: 2048
						Data Type: String
						Justify: Left
						Width:  9.644"
						Width Editable? Yes
						Format: Unformatted
						Country: Default
						Input Mask: Unformatted
						Cell Options
							Cell Type? Standard
							Multiline Cell? No
							Cell DropDownList
								Sorted? Yes
								Vertical Scroll? Yes
								Auto Drop Down? No
								Allow Text Editing? Yes
							Cell CheckBox
								Check Value:
								Uncheck Value:
								Ignore Case? Yes
						List Values
						Message Actions
				Functions
				Window Variables
				Message Actions
					On SAM_DoubleClick
						Set nRowT = SalTblQueryContext(tblMessage)
						Call SalModalDialog(dlg_edit_mess, hWndForm, nRowT)
			Check Box: cbW
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Title: Автоматический возврат ошибочных документов
				Window Location and Size
					Left:   0.1"
					Top:    0.762"
					Width:  5.65"
					Width Editable? Yes
					Height: 0.25"
					Height Editable? Yes
				Visible? Yes
				Font Name: Default
				Font Size: Default
				Font Enhancement: Bold
				Text Color: Dark Red
				Background Color: Default
				Message Actions
			Data Field: dfVers
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Data
					Maximum Data Length: Default
					Data Type: String
					Editable? Yes
				Display Settings
					Window Location and Size
						Left:   9.433"
						Top:    0.75"
						Width:  1.167"
						Width Editable? Yes
						Height: 0.167"
						Height Editable? Yes
					Visible? Yes
					Border? No
					Justify: Left
					Format: Unformatted
					Country: Default
					Font Name: Default
					Font Size: 8
					Font Enhancement: Default
					Text Color: Default
					Background Color: 3D Face Color
					Input Mask: Unformatted
				Message Actions
		Functions
			Function: SetBankDate
				Description:
				Returns
				Parameters
				Static Variables
				Local variables
				Actions
					Call ExecuteParams()
					Call GetParamsSettings(hSql())
					Set dBankDate = GetBankDate()
					Set dBankDateM1 = dBankDate - 1
					Call SalSetWindowText(menu12, sTitle || ', банковская дата ' || SalFmtFormatDateTime(dBankDate, 'dd/MM/yyyy') || ' (' ||
							     GetDbs() || ' - ' || Str(GetSessionId()) || ')')
			Function: Message
				Description: вывод текста в окно и запись в LOG
				Returns
					Boolean:
				Parameters
					String: sStr
					Boolean: bTL
					Boolean: bEK
					Number: nColor
				Static Variables
				Local variables
					Number: nNewRow
					String: sTime
				Actions
					If bTL
						Call SaveInfoToLog(sStr)
					Set sTime = SalFmtFormatDateTime(SalDateCurrent(), 'hhhh:mm:ss ')
					Call SalSetWindowText(ml1, IifS(Len(sStr)>0, sTime, '') || sStr)
					If sStr != '' and bEK
						! вмалевать строку в табличку TblMessage
						Set nNewRow = SalTblInsertRow(tblMessage, TBL_MaxRow)
						Call SalTblSetContext(tblMessage, nNewRow)
						Set tblMessage.colTime = SalStrTrimX(sTime)
						Set tblMessage.colText = sStr
						Call SalTblSetFocusRow(tblMessage, nNewRow)
						If nColor != 0
							Call XSalTblSetRowBackColor(tblMessage, nNewRow, nColor)
					Call SalUpdateWindow(hWndForm)
			Function: PayAllDok
				Description: оплата документов
				Returns
					Boolean:
				Parameters
				Static Variables
				Local variables
					! String: ssNaePon[*]
					! Number: nnFl[*]
					Number: nnNeom[*]
					Number: nnS[*]
					String: ssNls[*]
					String: ssMfo[*]
					String: ssNlsp[*]
					String: ssNaimp[*]
					String: ssNd[*]
					String: ssText1[*]
					String: ssPond[*]
					! String: ssPrwo[*]
					String: ssNaex[*]
					Number: nnCkv[*]
					String: ssKokb[*]
					Number: nnVob[*]
					Date/Time: ddDatad[*]
					String: ssKoka[*]
					Date/Time: ddDaVal[*]
					String: sNaex
					! Number: nnRefKlp[*]
					! Number: nFl
					Number: nNeom
					String: sNd
					String: sNls
					String: sMfo
					String: sNaimp
					String: sNlsp
					String: sText1
					String: sKokb
					String: sPrwo
					Number: nVob
					String: sPond
					Number: nCkv
					Date/Time: dDatad
					String: sKoka
					! String: sNaePon
					! Date/Time: dNaePon
					! Number: nRefKlp
					Number: nElemCount
					Date/Time: dDaVal
					String: sMaket
					String: sNAMAs
					String: sVspo
					String: ssVspo[*]
					Number: nDk
					Number: nAcc
					Number: nOSTB
					Number: nOSTB8
					Boolean: bRoll
					String: AMFO
					: cDoc
						Class: cDoc
					Number: nRef
					! String: sPon
					! String: sNae
					String: sOper
					Boolean: bUIklp
					Number: nCountUpd
					Date/Time: dBankDate
					String: sSab0
					!
					Number: i
					Number: j
					String: strErrorNo
					String: strErrAbs
					String: strNls
					!
					String: ssNaimo[*]
					String: sNaimo
					!
					Number: nFLverify
					!
					! Date/Time: dDateDokKB
					! Date/Time: ddDateDokKB[*]
					String: sMfoA
					String: ssMfoA[*]
					Boolean: bPay
					Number: nVobBars
					String: spWozwr
					String: sTemp
					!
					Number: nNeop
					Number: nNuop
					!
					Number: nId
					Number: nnId[*]
					!
					String: sLock
				Actions
					Set dBankDate = GetBankDateMom()
					Set AMFO = GetBankMfo()
					Set nIndex = 0
					Set sLock = GetValueStr('
							    SELECT n_er
							    FROM   s_er
							    WHERE  k_er=9349')
					! Call SalArraySetUpperBound(ssNaePon, 1, -1)
					! Call SalArraySetUpperBound(nnFl, 1, -1)
					Call SalArraySetUpperBound(nnNeom, 1, -1)
					Call SalArraySetUpperBound(nnS, 1, -1)
					Call SalArraySetUpperBound(ssNls, 1, -1)
					Call SalArraySetUpperBound(ssMfo, 1, -1)
					Call SalArraySetUpperBound(ssNlsp, 1, -1)
					Call SalArraySetUpperBound(ssNaimp, 1, -1)
					Call SalArraySetUpperBound(ssNd, 1, -1)
					Call SalArraySetUpperBound(ssText1, 1, -1)
					Call SalArraySetUpperBound(ssPond, 1, -1)
					! Call SalArraySetUpperBound(ssPrwo, 1, -1)
					Call SalArraySetUpperBound(ssNaex, 1, -1)
					Call SalArraySetUpperBound(nnCkv, 1, -1)
					Call SalArraySetUpperBound(ssKokb, 1, -1)
					Call SalArraySetUpperBound(nnVob, 1, -1)
					Call SalArraySetUpperBound(ddDatad, 1, -1)
					Call SalArraySetUpperBound(ssKoka, 1, -1)
					Call SalArraySetUpperBound(ddDaVal, 1, -1)
					Call SalArraySetUpperBound(ssVspo, 1, -1)
					! Call SqlPrepareAndExecute(hSqlAux2(), "
							     SELECT eom,s,nls,mfo,nlsp,naimp,nd,text1,pond,naex,kv,kokb,vob,datad,koka,daval,naimo,mfoa,id,drec
							     INTO   :nNeom,:nS,:sNls,:sMfo,:sNlsp,:sNaimp,:sNd,:sText1,:sPond,:sNaex,:nCkv,:sKokb,:nVob,:dDatad,:sKoka,:dDaVal,
							            :sNaimo,:sMfoA,:nId,:sVspo
							     FROM   klp
							     WHERE  fl=0 or (fl=1 and substr(nvl(prwo,' '),1,1)<>'*')
							     ORDER BY decode(substr(text1,1,1),'+',1,'*',2,3),datedokkb,id,pond
							     FOR UPDATE OF fl NOWAIT")
					Call SqlPrepareAndExecute(hSqlAux2(), "
							     SELECT eom,s,nls,mfo,nlsp,naimp,nd,text1,pond,naex,kv,kokb,vob,datad,koka,daval,naimo,mfoa,id,drec
							     INTO   :nNeom,:nS,:sNls,:sMfo,:sNlsp,:sNaimp,:sNd,:sText1,:sPond,:sNaex,:nCkv,:sKokb,:nVob,:dDatad,:sKoka,:dDaVal,
							            :sNaimo,:sMfoA,:nId,:sVspo
							     FROM   klp
							     WHERE  fl=0 or (fl=1 and substr(nvl(prwo,' '),1,1)<>'*')
							     ORDER BY decode(substr(text1,1,1),'+',1,'*',2,3),datedokkb,id,pond
							     FOR UPDATE OF fl NOWAIT")
					While SqlFetchNext(hSqlAux2(), nFetchRes)
						! Set ssNaePon[nIndex] = sNaex || Right('0000000000' || SalStrTrimX(sPond), 10)
						! Set nnRefKlp[nIndex] = nRefKlp
						! Set nnFl[nIndex] = nFl
						Set nnNeom[nIndex] = nNeom
						Set nnS[nIndex] = nS
						Set ssNls[nIndex] = sNls
						Set ssMfo[nIndex] = sMfo
						Set ssNlsp[nIndex] = sNlsp
						Set ssNaimp[nIndex] = sNaimp
						Set ssNd[nIndex] = sNd
						Set ssText1[nIndex] = sText1
						Set ssPond[nIndex] = sPond
						! Set ssPrwo[nIndex] = sPrwo
						Set ssNaex[nIndex] = sNaex
						Set nnCkv[nIndex] = nCkv
						Set ssKokb[nIndex] = sKokb
						Set nnVob[nIndex] = nVob
						Set ddDatad[nIndex] = dDatad
						Set ssKoka[nIndex] = sKoka
						Set ddDaVal[nIndex] = dDaVal
						Set ssVspo[nIndex] = sVspo
						Set ssNaimo[nIndex] = sNaimo
						! Set ddDateDokKB[nIndex] = dDateDokKB
						Set ssMfoA[nIndex] = sMfoA
						Set nnId[nIndex] = nId
						Set nIndex = nIndex + 1
					! Call SalArrayDimCount(ssNaePon, nIndex)
					! Call SalArrayGetUpperBound(ssNaePon, nIndex, nElemCount)
					Set nElemCount = nIndex - 1
					! Call Debug('nElemCount=' || Str(nElemCount))
					Set nIndex = 0
					Set nNuop = 0
					Set nNeop = 0
					While nIndex <= nElemCount
						! Call Debug(Str(nIndex))
						Set nFLverify = -1
						! Set nRefKlp = nnRefKlp[nIndex]
						Set sPond = ssPond[nIndex]
						Set sNaex = ssNaex[nIndex]
						! Set dDateDokKB = ddDateDokKB[nIndex]
						Set nId = nnId[nIndex]
						If SqlPrepareAndExecute(hSqlAux3(), "
								   SELECT fl
								   INTO   :nFLverify
								   FROM   klp
								   WHERE  id=:nId") and SqlFetchNext(hSqlAux3(), nFetchRes) and (nFLverify=0 or nFLverify=1)
							! Set sNaePon = ssNaePon[nIndex]
							! Set dNaePon = ddDatad[nIndex]
							! Set nFl = nnFl[nIndex]
							Set nNeom = nnNeom[nIndex]
							Set nS = nnS[nIndex]
							Set sNls = ssNls[nIndex]
							Set sMfo = ssMfo[nIndex]
							Set sNlsp = ssNlsp[nIndex]
							Set sNaimp = ssNaimp[nIndex]
							Set sNd = ssNd[nIndex]
							Set sText1 = ssText1[nIndex]
							! Set sPrwo = ssPrwo[nIndex]
							Set nCkv = nnCkv[nIndex]
							Set sKokb = ssKokb[nIndex]
							Set nVob = nnVob[nIndex]
							Set dDatad = ddDatad[nIndex]
							Set sKoka = ssKoka[nIndex]
							Set dDaVal = ddDaVal[nIndex]
							Set sVspo = ssVspo[nIndex]
							Set sNaimo = ssNaimo[nIndex]
							Set sMfoA = ssMfoA[nIndex]
							Set sMaket = IifS(nVob=1 or nVob=6, IifS(SalStrTrimX(sMfo)=AMFO, 'I', 'O'), 'T')
							Set nI = VisArrayFindString(smTIP, sMaket)
							Set sTTS = IifS(nI>=0, smTTS[nI], '')
							Set nVobBars = IifN(nVob=3, 7, IifN(nVob=6, 6, 1))
							Set nDk = IifN(nVob=3, 2, 1)
							!
							Set sNAMAs = 'Плательщик не идентифицирован'
							If Len(sNaimo) = 0
								If nVob = 1 or nVob = 6
									If SqlPrepareAndExecute(hSqlAux3(), T('
											   SELECT nvl(c.nmkk,c.nmk)
											   INTO   :sNAMAs
											   FROM   customer c, accounts a
											   WHERE  a.nls=:sNls and a.kv=:nCkv and c.rnk=a.rnk'))
										Call SqlFetchNext(hSqlAux3(), nFetchRes)
								Else
									If SqlPrepareAndExecute(hSqlAux3(), T('
											   SELECT nvl(c.nmkk,c.nmk)
											   INTO   :sNAMAs
											   FROM   customer c, accounts a
											   WHERE  a.nls=:sNlsp and a.kv=:nCkv and c.rnk=a.rnk'))
										Call SqlFetchNext(hSqlAux3(), nFetchRes)
							Else
								Set sNAMAs = sNaimo
							! Set sVspo = IifS(dDaVal=DATETIME_Null, sVspo, '#D' || SalFmtFormatDateTime(dDaVal, 'yyMMdd') || sVspo)
							If Len(sTTS) > 0
								!
								Set bPay = TRUE
								!
								If bPay and not DopustMfo(sMfoA)
									Set sPrwo = '*Недопустимое МФО ' || IifS(nDk=1, 'плательщика', 'получателя')
									Set bPay = FALSE
								If bPay and not DopustMfo(sMfo)
									Set sPrwo = '*Недопустимое МФО ' || IifS(nDk=1, 'получателя', 'плательщика')
									Set bPay = FALSE
								! If bPay and (dDatad > dBankDate or dDatad+10 < dBankDate)
									          Set sPrwo = 'Ошибка даты документа'
									          Set bPay = FALSE
								If bPay and (dDatad > dBankDate or dDatad+30 < dBankDate)
									Set sPrwo = 'Ошибка даты документа'
									Set bPay = FALSE
								If bPay
									If nVob = 1 or nVob = 6
										Call SqlPrepareAndExecute(hSqlAux3(), T("
												     SELECT i.acc
												     FROM   acci i, accounts a, customer c
												     WHERE  a.nls=:sNls and a.kv=:nCkv and c.rnk=a.rnk and c.sab=substr(:sNaex,8,1)||substr(:sNaex,-3) and
												            a.acc=i.acc and nvl(i.pers,0)=1"))
										If not SqlFetchNext(hSqlAux3(), nFetchRes)
											Call SqlPrepareAndExecute(hSqlAux3(), T("
													     SELECT i.acc
													     FROM   acci i, accounts a, customer c, klp_top k
													     WHERE  a.nls=:sNls and a.kv=:nCkv and k.rnk=a.rnk and c.rnk=k.rnkp and
													            c.sab=substr(:sNaex,8,1)||substr(:sNaex,-3) and a.acc=i.acc and nvl(i.high,0)=1"))
											If not SqlFetchNext(hSqlAux3(), nFetchRes)
												Set sPrwo = '*Запрет на дебет счёта ' || sNls
												Set bPay = FALSE
									Else
										Call SqlPrepareAndExecute(hSqlAux3(), T("
												     SELECT i.acc
												     FROM   acci i, accounts a, customer c
												     WHERE  a.nls=:sNlsp and a.kv=:nCkv and c.rnk=a.rnk and c.sab=substr(:sNaex,8,1)||substr(:sNaex,-3) and
												            a.acc=i.acc and nvl(i.pers,0)=1"))
										If not SqlFetchNext(hSqlAux3(), nFetchRes)
											Call SqlPrepareAndExecute(hSqlAux3(), T("
													     SELECT i.acc
													     FROM   acci i, accounts a, customer c, klp_top k
													     WHERE  a.nls=:sNlsp and a.kv=:nCkv and k.rnk=a.rnk and c.rnk=k.rnkp and
													            c.sab=substr(:sNaex,8,1)||substr(:sNaex,-3) and a.acc=i.acc and nvl(i.high,0)=1"))
											If not SqlFetchNext(hSqlAux3(), nFetchRes)
												Set sPrwo = '*Запрет на дебет счёта ' || sNlsp
												Set bPay = FALSE
								!
								If bPay
									! Call cDoc.SetDoc(0, sTTS, nDk, nVobBars, sNd, dDatad, dBankDate, IifD(dDaVal=DATETIME_Null, dBankDate, dDaVal),
											     IifD(dDaVal=DATETIME_Null, dBankDate, dDaVal), IifS(nDk=1, SalStrTrimX(sNls), SalStrTrimX(sNlsp)),
											     IifS(nDk=1, sNAMAs, sNaimp), IifS(nDk=1, sMfoA, sMfo), '', nCkv, nS,
											     IifS(nDk=1, SalStrTrimX(sKoka), SalStrTrimX(sKokb)), IifS(nDk=1, SalStrTrimX(sNlsp), SalStrTrimX(sNls)),
											     IifS(nDk=1, sNaimp, sNAMAs), IifS(nDk=1, SalStrTrimX(sMfo), SalStrTrimX(sMfoA)), '', nCkv, nS,
											     IifS(nDk=1, SalStrTrimX(sKokb), SalStrTrimX(sKoka)), sText1, sVspo, GetIdOper(), '', NUMBER_Null, 0)
									! Call cDoc.SetDoc(0, sTTS, nDk, nVobBars, sNd, dDatad, dBankDate, dBankDate, dBankDate,
											     IifS(nDk=1, SalStrTrimX(sNls), SalStrTrimX(sNlsp)), IifS(nDk=1, sNAMAs, sNaimp), IifS(nDk=1, sMfoA, sMfo),
											     '', nCkv, nS, IifS(nDk=1, SalStrTrimX(sKoka), SalStrTrimX(sKokb)), IifS(nDk=1, SalStrTrimX(sNlsp),
											     SalStrTrimX(sNls)), IifS(nDk=1, sNaimp, sNAMAs), IifS(nDk=1, SalStrTrimX(sMfo), SalStrTrimX(sMfoA)), '',
											     nCkv, nS, IifS(nDk=1, SalStrTrimX(sKokb), SalStrTrimX(sKoka)), sText1, sVspo, GetIdOper(), '', NUMBER_Null,
											     0)
									Call cDoc.SetDoc(0, sTTS, nDk, nVobBars, sNd, dDatad, dBankDate, dBankDate,
											     IifD(dDaVal=DATETIME_Null, dBankDate, dDaVal), IifS(nDk=1, SalStrTrimX(sNls), SalStrTrimX(sNlsp)),
											     IifS(nDk=1, sNAMAs, sNaimp), IifS(nDk=1, sMfoA, sMfo), '', nCkv, nS, IifS(nDk=1, SalStrTrimX(sKoka),
											     SalStrTrimX(sKokb)), IifS(nDk=1, SalStrTrimX(sNlsp), SalStrTrimX(sNls)), IifS(nDk=1, sNaimp, sNAMAs),
											     IifS(nDk=1, SalStrTrimX(sMfo), SalStrTrimX(sMfoA)), '', nCkv, nS, IifS(nDk=1, SalStrTrimX(sKokb),
											     SalStrTrimX(sKoka)), sText1, sVspo, GetIdOper(), '', NUMBER_Null, 0)
									! Set cDoc.m_nTim = 1440
									Set g_nTim = 1440
									! Call Debug('2')
									Set sErrTxt = ''
									Set spWozwr = ''
									If cDoc.oDoc()
										! Call Debug('5')
										Set nRef = cDoc.m_nRef
										Call SaveInfoToLog('KLOP_SOP(1): cDoc.oDoc() return ref==>' || Str(nRef))
										! Set sNae = Left(sNaePon, 12)
										! Set sPon = Str(Val(Right(sNaePon, 10)))
										If SqlPrepareAndExecute(hSqlAux3(), "
												   UPDATE klp
												   SET    fl=8,prwo='',ref=:nRef
												   WHERE  id=:nId")
											Set sOper = Right(Str(10000+nNeom), 4)
											Set bUIklp = SqlPrepareAndExecute(hSqlAux3(), T("
													    UPDATE klpond
													    SET    ref=:nRef
													    WHERE  pond=:sPond and filename=:sNaex"))
											Set nCountUpd = 0
											Call SqlGetModifiedRows(hSqlAux3(), nCountUpd)
											If nCountUpd = 0
												Set bUIklp = SqlPrepareAndExecute(hSqlAux3(), T("
														    INSERT
														    INTO   klpond (ref,pond,filename)
														    VALUES (:nRef,:sPond,:sNaex)"))
											If bUIklp
												Set sSab0 = Stuff(Subs(sNaex, 8, 5), 2, 1, '')
												! If SqlPrepareAndExecute(hSqlAux3(), T("
														   INSERT
														   INTO   klpoow (sab,oper,mfoa,nlsa,mfob,nlsb,namb,s,nd,nazn,pond,nfia,tip)
														   VALUES (:sSab0,:sOper,:AMFO,:sNls,:sMfo,:sNlsp,:sNaimp,:nS,:sNd,:sText1,:sPond,:sNaex,'O')"))
												Call SqlCommit(hSqlAux3())
												Call Message(sNaex || ' ' || PadR(sPond, 9) || ' - Опл.док.' || SalStrTrimX(sNd) || ', (Ref=' || Str(nRef)
														     || '), СчётА=' || sNls || ', МФОБ=' || sMfo || ', СчётБ=' || sNlsp || ', Вал=' || Str(nCkv) ||
														     ', Сумма=' || SalNumberToStrX(nS/100, 2) || ', Получатель - ' || sNaimp || ', Назначение платежа - '
														     || sText1, TRUE, TRUE, 0)
												Set nNuop = nNuop + 1
											Else
												Call SqlRollback(hSqlAux3())
												Set nNeop = nNeop + 1
										Else
											Call SqlRollback(hSqlAux3())
											Set nNeop = nNeop + 1
									Else
										Call SqlRollback(hSqlAux3())
										Set nNeop = nNeop + 1
										! Call Message('Откат для ref=' || Str(nRefKlp), TRUE, TRUE, 0)
										! Call Message('Ошибка для ref=' || Str(nRefKlp) || ' - ' || spWozwr, TRUE)
										If cDoc.m_nErr != 0
											! Call Debug('(1)cDoc.m_nErr=' || Str(cDoc.m_nErr))
											Set strErrAbs = ''
											Set strErrorNo = Right('0000' || Str(cDoc.m_nErr), 4)
											Call SqlPrepareAndExecute(hSqlAux3(), T('
													     SELECT n_er
													     INTO   :strErrAbs
													     FROM   s_er
													     WHERE  k_er=:strErrorNo'))
											Call SqlFetchNext(hSqlAux3(), nFetchRes)
											Set spWozwr = SalStrTrimX(strErrAbs)
										Else
											! Call Debug('(2)cDoc.m_nErr=' || Str(cDoc.m_nErr))
											If Len(sErrTxt) > 0
												Set spWozwr = SalStrTrimX(sErrTxt)
										! Call Debug(spWozwr)
										If Len(spWozwr) > 60
											If At(' ', spWozwr) = 0
												Set spWozwr = SalStrTrimX(Left(spWozwr, 60))
											Else
												! режем причину неудачи до 60
												Set i = 61
												While i > 0
													Set sTemp = Subs(spWozwr, i, 1)
													If sTemp = ' '
														Set spWozwr = Left(spWozwr, i-1)
														Set i = 0
													Else
														Set i = i - 1
										!
										If Len(sLock) > 0 and sLock = Left(spWozwr, Len(sLock))
											! nothing
										Else
											Call SqlPrepareAndExecute(hSqlAux(), '
													     UPDATE klp
													     SET    prwo=:spWozwr,fl=1
													     WHERE  id=:nId')
											Call Message(sNaex || ' ' || PadR(sPond, 9) || ' - НЕопл.док.' || SalStrTrimX(sNd) || ', (' || spWozwr ||
													     '), СчётА=' || sNls || ', МФОБ=' || sMfo || ', СчётБ=' || sNlsp || ', Вал=' || Str(nCkv) || ', Сумма='
													     || SalNumberToStrX(nS/100, 2) || ', Получатель - ' || sNaimp || ', Назначение платежа - ' || sText1,
													     TRUE, TRUE, COLOR_LightGray)
											Call SqlCommit(hSqlAux3())
								Else
									Call SqlPrepareAndExecute(hSqlAux3(), "
											     UPDATE klp
											     SET    prwo=:sPrwo,fl=1
											     WHERE  id=:nId")
									Call Message(sNaex || ' ' || PadR(sPond, 9) || ' - НЕопл.док.' || SalStrTrimX(sNd) || ', (' || sPrwo ||
											     '), СчётА=' || sNls || ', МФОБ=' || sMfo || ', СчётБ=' || sNlsp || ', Вал=' || Str(nCkv) || ', Сумма=' ||
											     SalNumberToStrX(nS/100, 2) || ', Получатель - ' || sNaimp || ', Назначение платежа - ' || sText1, TRUE,
											     TRUE, COLOR_LightGray)
									Call SqlCommit(hSqlAux3())
									Set nNeop = nNeop + 1
							! Call Debug(
									'nRefKlp            = ' || Str(nRefKlp)                                          || PutCrLf() ||
									'sTTS               = ' || sTTS                                                  || PutCrLf() ||
									'nDk                = ' || Str(nDk)                                              || PutCrLf() ||
									'nVob               = ' || Str(nVob)                                             || PutCrLf() ||
									'sNd                = ' || sNd                                                   || PutCrLf() ||
									'dDatad             = ' || SalFmtFormatDateTime(dDatad, 'dd-MM-yyyy hhhh:mm:ss') || PutCrLf() ||
									'SalStrTrimX(sNls)  = ' || SalStrTrimX(sNls)                                     || PutCrLf() ||
									'sNAMAs             = ' || sNAMAs                                                || PutCrLf() ||
									'AMFO               = ' || AMFO                                                  || PutCrLf() ||
									'nCkv               = ' || Str(nCkv)                                             || PutCrLf() ||
									'nS                 = ' || Str(nS)                                               || PutCrLf() ||
									'SalStrTrimX(sKoka) = ' || SalStrTrimX(sKoka)                                    || PutCrLf() ||
									'SalStrTrimX(sNlsp) = ' || SalStrTrimX(sNlsp)                                    || PutCrLf() ||
									'sNaimp             = ' || sNaimp                                                || PutCrLf() ||
									'SalStrTrimX(sMfo)  = ' || SalStrTrimX(sMfo)                                     || PutCrLf() ||
									'nCkv               = ' || Str(nCkv)                                             || PutCrLf() ||
									'nS                 = ' || Str(nS)                                               || PutCrLf() ||
									'SalStrTrimX(sKokb) = ' || SalStrTrimX(sKokb)                                    || PutCrLf() ||
									'sText1             = ' || sText1                                                || PutCrLf() ||
									'sVspo              = ' || sVspo                                                 || PutCrLf() ||
									'GetIdOper()        = ' || GetIdOper()
									)
							Else
								Call MessageNoWait('Ошибка заполнения справочника автоматических операций. Невозможно обработать док.' || sNd ||
										     ', СчётА=' || sNls || ', МФО=' || sMfo || ', СчётБ=' || sNlsp || ', Сумма=' || SalNumberToStrX(nS, 2) ||
										     ', Получатель - ' || sNaimp || ', Назначение платежа - ' || sText1, 'Ошибка !', 30, 1)
								Return FALSE
							! Call Debug('2')
						Set nIndex = nIndex + 1
					If nNuop + nNeop > 0
						Call Message('Оплачено документов: ' || Str(nNuop) || IifS(nNeop>0, ', НЕОПЛАЧЕНО документов: ' || Str(nNeop), ''),
								     TRUE, TRUE, COLOR_Maize)
					Return TRUE
			Function: BackAllDok
				Description: возврат документов
				Returns
					Boolean:
				Parameters
				Static Variables
				Local variables
					Number: nnNeom[*]
					Number: nnS[*]
					Number: nnCkv[*]
					String: ssNls[*]
					String: ssMfo[*]
					String: ssNlsp[*]
					String: ssNaimp[*]
					String: ssNd[*]
					String: ssText1[*]
					String: ssPond[*]
					String: ssPrwo[*]
					String: ssNaex[*]
					! Date/Time: ddDatad[*]
					String: sNaex
					Number: nNeom
					Number: nS
					Number: nCkv
					String: sNd
					String: sNls
					String: sMfo
					String: sNaimp
					String: sNlsp
					String: sText1
					String: sPrwo
					Number: nVob
					String: sPond
					! Date/Time: dDatad
					Number: nElemCount
					String: AMFO
					Number: nRef
					String: sOper
					String: sSab0
					Number: nIndex
					!
					Number: nWozw
					Number: nId
					Number: nnId[*]
				Actions
					Set AMFO = GetBankMfo()
					Set nIndex = 0
					Call SalArraySetUpperBound(nnNeom, 1, -1)
					Call SalArraySetUpperBound(nnS, 1, -1)
					Call SalArraySetUpperBound(nnCkv, 1, -1)
					Call SalArraySetUpperBound(ssNls, 1, -1)
					Call SalArraySetUpperBound(ssMfo, 1, -1)
					Call SalArraySetUpperBound(ssNlsp, 1, -1)
					Call SalArraySetUpperBound(ssNaimp, 1, -1)
					Call SalArraySetUpperBound(ssNd, 1, -1)
					Call SalArraySetUpperBound(ssText1, 1, -1)
					Call SalArraySetUpperBound(ssPond, 1, -1)
					Call SalArraySetUpperBound(ssPrwo, 1, -1)
					Call SalArraySetUpperBound(ssNaex, 1, -1)
					! Call SalArraySetUpperBound(ddDatad, 1, -1)
					Call SqlPrepareAndExecute(hSqlAux2(), "
							     SELECT eom,s,nls,mfo,nlsp,naimp,nd,text1,pond,prwo,naex,kv,id
							     INTO   :nNeom,:nS,:sNls,:sMfo,:sNlsp,:sNaimp,:sNd,:sText1,:sPond,:sPrwo,:sNaex,:nCkv,:nId
							     FROM   klp
							     WHERE  fl=1 and prwo is not null
							     ORDER BY id
							     FOR UPDATE OF fl NOWAIT")
					While SqlFetchNext(hSqlAux2(), nFetchRes)
						Set nnNeom[nIndex] = nNeom
						Set nnS[nIndex] = nS
						Set nnCkv[nIndex] = nCkv
						Set ssNls[nIndex] = sNls
						Set ssMfo[nIndex] = sMfo
						Set ssNlsp[nIndex] = sNlsp
						Set ssNaimp[nIndex] = sNaimp
						Set ssNd[nIndex] = sNd
						Set ssText1[nIndex] = sText1
						Set ssPond[nIndex] = sPond
						Set ssPrwo[nIndex] = sPrwo
						Set ssNaex[nIndex] = sNaex
						! Set ddDatad[nIndex] = dDatad
						Set nnId[nIndex] = nId
						Set nIndex = nIndex + 1
					Set nElemCount = nIndex - 1
					Set nIndex = 0
					Set nWozw = 0
					While nIndex <= nElemCount
						Set nNeom = nnNeom[nIndex]
						Set nS = nnS[nIndex]
						Set nCkv = nnCkv[nIndex]
						Set sNls = ssNls[nIndex]
						Set sMfo = ssMfo[nIndex]
						Set sNlsp = ssNlsp[nIndex]
						Set sNaimp = ssNaimp[nIndex]
						Set sNd = ssNd[nIndex]
						Set sText1 = ssText1[nIndex]
						Set sPond = ssPond[nIndex]
						Set sPrwo = ssPrwo[nIndex]
						Set sNaex = ssNaex[nIndex]
						! Set dDatad = ddDatad[nIndex]
						Set nId = nnId[nIndex]
						If SqlPrepareAndExecute(hSqlAux3(), '
								   UPDATE klp
								   SET    fl=9
								   WHERE  id=:nId')
							Set sSab0 = Stuff(Subs(sNaex, 8, 5), 2, 1, '')
							Set sOper = Right(Str(10000+nNeom), 4)
							If SqlPrepareAndExecute(hSqlAux3(), T("
									   INSERT
									   INTO   klpoow (sab,oper,mfoa,nlsa,mfob,nlsb,namb,s,nd,nazn,pond,prwo,nfia,tip)
									   VALUES (:sSab0,:sOper,:AMFO,:sNls,:sMfo,:sNlsp,:sNaimp,:nS,:sNd,:sText1,:sPond,:sPrwo,:sNaex,'W')"))
								Call SqlCommit(hSqlAux3())
								Call Message(sNaex || ' ' || PadR(sPond, 9) || ' - Возвр.док.' || SalStrTrimX(sNd) || ' (' || sPrwo || '), СчётА='
										     || sNls || ', МФОБ=' || sMfo || ', СчётБ=' || sNlsp || ', Вал=' || Str(nCkv) || ', Сумма=' ||
										     SalNumberToStrX(nS/100, 2) || ', Получатель - ' || sNaimp || ', Назначение платежа - ' || sText1, TRUE, TRUE,
										     COLOR_Orchid)
								Set nWozw = nWozw + 1
							Else
								Call SqlRollback(hSqlAux3())
						Else
							Call SqlRollback(hSqlAux3())
						Set nIndex = nIndex + 1
					If nWozw > 0
						Call Message('Возвращено документов: ' || Str(nWozw), TRUE, TRUE, COLOR_Maize)
					Return TRUE
		Window Parameters
		Window Variables
			String: sBankMfo
			Number: nI
			String: sTitle
			!
			Number: nRowT
			!
			Boolean: bAUTO
			String: sTIP
			String: smTIP[*]
			String: sTTS
			String: smTTS[*]
			!
			Boolean: bIni
			String: sValueCheck
		Message Actions
			On SAM_Create
				Call SalWaitCursor(TRUE)
				Call SalCenterWindow(hWndForm)
				Call SalGetWindowText(menu12, sTitle, 80)
				Call SetBankDate()
				! Call SqlPrepareAndExecute(hSql(), 'SET ROLE start1,tech_mom1')
				Call SetRole(hSql(),'start1')
				Call SetRole(hSql(),'tech_mom1')
				Set sUserid = Str(GetUserId())
				Set sBankMfo = GetBankMfo()
				Call SalUseRegistry(TRUE, GetCompanyName())
				Call SalGetProfileString('CheckBoxKBpay', 'Values', '1', sValueCheck, '')
				Set cbW = Subs(sValueCheck, 1, 1) = '1'
			On SAM_CreateComplete
				Set bAUTO = Val(GetGlobalOption('KL_PAY'))=1
				If SqlPrepareAndExecute(hSql(), "
						   SELECT tip,tts
						   INTO   :sTIP,:sTTS
						   FROM   kli_tts")
				Set nI = 0
				While SqlFetchNext(hSql(), nFetchRes)
					Set smTIP[nI] = sTIP
					Set smTTS[nI] = sTTS
					Set nI = nI + 1
				!
				If GetSignOn() = 1
					Set nI = 0
					Set bIni = FALSE
					While nI < 3 and not bIni
						Set bIni = DSig_sIni()
						Set nI = nI + 1
				Else
					Set bIni = TRUE
				If not bIni
					Call MessageNoWait('Ошибка инициалицации ЭЦП, выход...', 'ВНИМАНИЕ!!!', 30, 1)
					Call SalQuit()
				Else
					Set g_nTim = 1440
				!
				Set dfVers = 'v1.01.02'
				Call SalSetFocus(pb1)
				Call SalWaitCursor(FALSE)
			On SAM_Close
				If SalMessageBox("Вы намерены прекратить работу? ", "Внимание!", MB_YesNo) = IDYES
					Call SalQuit()
				Else
					Return FALSE
			On SAM_Destroy
				Call SalUseRegistry(TRUE, GetCompanyName())
				Call SalSetProfileString('CheckBoxKBpay', 'Values', IifS(cbW, '1', '0'), '')
	Dialog Box: dlg_edit_mess
		Class:
		Property Template:
		Class DLL Name:
		Title: Просмотр сообщений
		Accesories Enabled? No
		Visible? Yes
		Display Settings
			Display Style? Default
			Visible at Design time? Yes
			Type of Dialog: Modal
			Window Location and Size
				Left:   2.888"
				Top:    1.042"
				Width:  8.657"
				Width Editable? Yes
				Height: 2.881"
				Height Editable? Yes
			Absolute Screen Location? Yes
			Font Name: Default
			Font Size: Default
			Font Enhancement: Default
			Text Color: Default
			Background Color: Default
		Description: Форма просмотра сообщений
		Tool Bar
			Display Settings
				Display Style? Default
				Location? Top
				Visible? Yes
				Size: Default
				Size Editable? Yes
				Font Name: Default
				Font Size: Default
				Font Enhancement: Default
				Text Color: Default
				Background Color: Default
			Contents
		Contents
			Background Text: Время
				Resource Id: 31939
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Window Location and Size
					Left:   0.15"
					Top:    0.048"
					Width:  0.917"
					Width Editable? Yes
					Height: 0.25"
					Height Editable? Yes
				Visible? Yes
				Justify: Left
				Font Name: Default
				Font Size: 10
				Font Enhancement: Default
				Text Color: Default
				Background Color: Default
			Data Field: df_time
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Data
					Maximum Data Length: Default
					Data Type: String
					Editable? No
				Display Settings
					Window Location and Size
						Left:   1.0"
						Top:    0.06"
						Width:  1.2"
						Width Editable? Yes
						Height: 0.25"
						Height Editable? Yes
					Visible? Yes
					Border? No
					Justify: Left
					Format: Unformatted
					Country: Default
					Font Name: Default
					Font Size: 10
					Font Enhancement: Default
					Text Color: Default
					Background Color: 3D Face Color
					Input Mask: Unformatted
				Message Actions
			Multiline Field: ml_text
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Data
					Maximum Data Length: Default
					String Type: String
					Editable? No
				Display Settings
					Border? Yes
					Word Wrap? Yes
					Vertical Scroll? Yes
					Window Location and Size
						Left:   0.133"
						Top:    0.333"
						Width:  8.3"
						Width Editable? Yes
						Height: 1.729"
						Height Editable? Yes
					Visible? Yes
					Font Name: Default
					Font Size: 10
					Font Enhancement: Default
					Text Color: Default
					Background Color: 3D Highlight Color
				Message Actions
			Pushbutton: pb_close
				Class Child Ref Key: 0
				Class ChildKey: 0
				Class:
				Property Template:
				Class DLL Name:
				Title:
				Window Location and Size
					Left:   7.8"
					Top:    2.107"
					Width:  0.633"
					Width Editable? Yes
					Height: 0.4"
					Height Editable? Yes
				Visible? Yes
				Keyboard Accelerator: Esc
				Font Name: Default
				Font Size: Default
				Font Enhancement: Default
				Picture File Name: Q:\BARS98\RESOURCE\BMP\Discard.bmp
				Picture Transparent Color: Gray
				Image Style: Single
				Text Color: Default
				Background Color: Default
				Message Actions
					On SAM_Click
						Call SalEndDialog(hWndForm, 0)
					! On SAM_TooltipSetText
						             Return XSalTooltipSetText(lParam, 'Закрыть окно')
		Functions
		Window Parameters
			Number: nRow
		Window Variables
		Message Actions
			On SAM_Create
				Call SalCenterWindow(hWndForm)
			On SAM_CreateComplete
				Set df_time = menu12.tblMessage.colTime
				Set ml_text = menu12.tblMessage.colText
				Call SalSetFocus(pb_close)
