.head 0 +  Application Description:
.head 1 -  Outline Version - 4.0.26
.head 1 +  Design-time Settings
.data VIEWINFO
0000: 6F00000001000000 FFFF01000D004347 5458566965775374 6174650400010000
0020: 00000000009D0000 002C000000020000 0003000000FFFFFF FFFFFFFFFFFCFFFF
0040: FFE8FFFFFFFFFFFF FF000000007C0200 004D010000010000 0001000000010000
0060: 000F4170706C6963 6174696F6E497465 6D00000000
.enddata
.data DT_MAKERUNDLG
0000: 030000000017443A 5C576F726B5C4372 65645C73716C6E73 692E65786517443A
0020: 5C576F726B5C4372 65645C73716C6E73 692E646C6C17443A 5C576F726B5C4372
0040: 65645C73716C6E73 692E617063000001 010117443A5C576F 726B5C437265645C
0060: 73716C6E73692E72 756E17443A5C576F 726B5C437265645C 73716C6E73692E64
0080: 6C6C17443A5C576F 726B5C437265645C 73716C6E73692E61 7063000001010117
00A0: 443A5C576F726B5C 437265645C73716C 6E73692E61706417 443A5C576F726B5C
00C0: 437265645C73716C 6E73692E646C6C17 443A5C576F726B5C 437265645C73716C
00E0: 6E73692E61706300 000101011C443A5C 4241525339385C4C 4942524152595C53
0100: 716C6E73692E6170 6C1C443A5C424152 5339385C4C494252 4152595C73716C6E
0120: 73692E646C6C1C44 3A5C424152533938 5C4C494252415259 5C73716C6E73692E
0140: 6170630000010101
.enddata
.head 2 -  Outline Window State: Normal
.head 2 +  Outline Window Location and Size
.data VIEWINFO
0000: 6600040003002D00 0000000000000000 0000B71E5D0E0500 1D00FFFF4D61696E
0020: 0000000000000000 0000000000000000 0000003B00010000 00000000000000E9
0040: 1E800A00008600FF FF496E7465726E61 6C2046756E637469 6F6E730000000000
0060: 0000000000000000 0000000000003200 0100000000000000 0000E91E800A0000
0080: DF00FFFF56617269 61626C6573000000 0000000000000000 0000000000000000
00A0: 3000010000000000 00000000F51E100D 0000F400FFFF436C 6173736573000000
00C0: 0000000000000000 0000000000000000
.enddata
.data VIEWSIZE
0000: D000
.enddata
.head 3 -  Left:   -0.013"
.head 3 -  Top:    0.0"
.head 3 -  Width:  8.013"
.head 3 -  Height: 4.969"
.head 2 +  Options Box Location
.data VIEWINFO
0000: 0218B80BB80B2500
.enddata
.data VIEWSIZE
0000: 0800
.enddata
.head 3 -  Visible? Yes
.head 3 -  Left:   4.15"
.head 3 -  Top:    1.885"
.head 3 -  Width:  3.8"
.head 3 -  Height: 2.073"
.head 2 +  Class Editor Location
.head 3 -  Visible? No
.head 3 -  Left:   0.575"
.head 3 -  Top:    0.094"
.head 3 -  Width:  5.063"
.head 3 -  Height: 2.719"
.head 2 +  Tool Palette Location
.head 3 -  Visible? No
.head 3 -  Left:   6.388"
.head 3 -  Top:    0.729"
.head 2 -  Fully Qualified External References? Yes
.head 2 -  Reject Multiple Window Instances? No
.head 2 -  Enable Runtime Checks Of External References? Yes
.head 2 -  Use Release 4.0 Scope Rules? No
.head 1 +  Libraries
.head 2 -  File Include: strfnc.apl
.head 2 -  File Include: vtstr.apl
.head 1 +  Global Declarations
.head 2 +  Window Defaults
.head 3 +  Tool Bar
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Form Window
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Dialog Box
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Top Level Table Window
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Data Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Multiline Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Spin Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Background Text
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Pushbutton
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Radio Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Check Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Option Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Group Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Child Table Window
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  List Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Combo Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Line
.head 4 -  Line Color: Use Parent
.head 3 +  Frame
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: 3D Face Color
.head 3 +  Picture
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 2 +  Formats
.head 3 -  Number: 0'%'
.head 3 -  Number: #0
.head 3 -  Number: ###000
.head 3 -  Number: ###000;'($'###000')'
.head 3 -  Date/Time: hh:mm:ss AMPM
.head 3 -  Date/Time: M/d/yy
.head 3 -  Date/Time: MM-dd-yy
.head 3 -  Date/Time: dd-MMM-yyyy
.head 3 -  Date/Time: MMM d, yyyy
.head 3 -  Date/Time: MMM d, yyyy hh:mm AMPM
.head 3 -  Date/Time: MMMM d, yyyy hh:mm AMPM
.head 2 +  External Functions
.head 3 +  Library name: sqlwntm.dll 
.head 4 +  Function: sqlnsi
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: SHORT
.head 5 +  Parameters
.head 6 -  Sql Handle: HSQLHANDLE
.head 6 -  Receive Number: LPBYTE
.head 4 +  Function: sqldes
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: SHORT
.head 5 +  Parameters
.head 6 -  Sql Handle: HSQLHANDLE
.head 6 -  Number: BYTE
.head 6 -  Receive Number: LPBYTE
.head 6 -  Receive Number: LPBYTE
.head 6 -  Receive String: LPSTR
.head 6 -  Receive Number: LPBYTE
.head 6 -  Receive Number: LPBYTE
.head 6 -  Receive Number: LPBYTE
.head 2 +  Constants
.data CCDATA
0000: 3000000000000000 0000000000000000 00000000
.enddata
.data CCSIZE
0000: 1400
.enddata
.head 3 -  System
.head 3 +  User
.head 4 -  Number: DTYPE_NONE	= 0
.head 4 -  Number: DTYPE_CHAR	= 1
.head 4 -  Number: DTYPE_NUMBER	= 2
.head 4 -  Number: DTYPE_DATETIME	= 3
.head 4 -  Number: DTYPE_BLOB	= 4
.head 4 -  Number: DTYPE_DATE	= 5
.head 4 -  Number: DTYPE_TIME	= 6
.head 4 -  !
.head 4 -  Number: RDBMS_Informix	= 0
.head 4 -  Number: RDBMS_Oracle	= 1
.head 4 -  Number: RDBMS_dBase	= 2
.head 4 -  Number: RDBMS_Excel	= 3
.head 4 -  Number: RDBMS_DB2	= 4
.head 4 -  !
.head 4 -  String: strCRLF = "
"
.head 4 -  String: COLNAME_CharSet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
.head 2 -  Resources
.head 2 -  Variables
.head 2 +  Internal Functions
.head 3 +  Function: SqlDescribe
.head 4 -  Description: По hSql заполняет массив объектов класса cSqlColumnDescriptor;
Возвращает количество результирующих полей в запросе.

.head 4 +  Returns
.head 5 -  Number: nColsQty
.head 4 +  Parameters
.head 5 -  Sql Handle: hPrepSql
.head 5 -  : iCol[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sTmp[*]
.head 4 +  Actions
.head 5 -  Return SqlDescribeRet(hPrepSql, iCol, sTmp)
.head 3 +  Function: SqlDescribeRet
.head 4 -  Description: По hSql заполняет массив объектов класса cSqlColumnDescriptor;
Возвращает количество результирующих полей в запросе.

.head 4 +  Returns
.head 5 -  Number: nColsQty
.head 4 +  Parameters
.head 5 -  Sql Handle: hPrepSql
.head 5 -  : iCol[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 5 -  Receive String: sColTypesList[*]
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 5 -  Number: nCols
.head 5 -  String: strName
.head 5 -  Number: nType
.head 5 -  Number: nPrec
.head 5 -  Number: nScale
.head 5 -  Number: nLen
.head 5 -  Number: nNameLen
.head 5 -  !
.head 5 -  Number: nStrings
.head 5 -  Number: nNumbers
.head 5 -  Number: nDates
.head 4 +  Actions
.head 5 -  Set nCols = SqlGetColumns( hPrepSql )
.head 5 -  Set i = 0
.head 5 -  Set nStrings=0
.head 5 -  Set nNumbers=0
.head 5 -  Set nDates=0
.head 5 +  While i < nCols
.head 6 -  Set strName = ""
.head 6 -  Call SalStrSetBufferLength ( strName, 64 )
.head 6 -  Call SqlDescribeColumn( hPrepSql, i+1, nType, nLen, strName, nNameLen, nPrec, nScale )
.head 6 -  Set iCol[i].nColType = nType
.head 6 -  Set iCol[i].nColLength = nLen
.head 6 -  Set iCol[i].strColName = strName
.head 6 -  Set iCol[i].nColNameLength = nNameLen
.head 6 -  Set iCol[i].nColPrec = nPrec
.head 6 -  Set iCol[i].nColScale = nScale
.head 6 -  ! By Ivan for FieldByName function
.head 6 -  ! Количество переменных соответствующих типов
.head 6 +  Select Case iCol[i].nColType
.head 7 +  Case DTYPE_NUMBER
.head 8 -  Set iCol[i].sBindName='n'
.head 8 -  Set iCol[i].nBindIndex=nNumbers
.head 8 -  Set nNumbers=nNumbers+1
.head 8 -  Break
.head 7 +  Case DTYPE_DATETIME
.head 8 -  Set iCol[i].sBindName='d'
.head 8 -  Set iCol[i].nBindIndex=nDates
.head 8 -  Set nDates=nDates+1
.head 8 -  Break
.head 7 +  Case DTYPE_DATE
.head 8 -  Set iCol[i].sBindName='d'
.head 8 -  Set iCol[i].nBindIndex=nDates
.head 8 -  Set nDates=nDates+1
.head 8 -  Break
.head 7 +  Case DTYPE_TIME
.head 8 -  Set iCol[i].sBindName='d'
.head 8 -  Set iCol[i].nBindIndex=nDates
.head 8 -  Set nDates=nDates+1
.head 8 -  Break
.head 7 +  Default
.head 8 -  Set iCol[i].sBindName='s'
.head 8 -  Set iCol[i].nBindIndex=nStrings
.head 8 -  Set nStrings=nStrings+1
.head 8 -  Break
.head 6 -  Set sColTypesList[i] = iCol[i].sBindName
.head 6 -  ! End
.head 6 -  Set i = i + 1
.head 5 -  Return nCols
.head 3 +  Function: SqlDescribeStr
.head 4 -  Description: По hSql заполняет массив объектов класса cSqlColumnDescriptor;
Возвращает количество результирующих полей в запросе.
Приводит все типы колонок к строкам

.head 4 +  Returns
.head 5 -  Number: nColsQty
.head 4 +  Parameters
.head 5 -  Sql Handle: hPrepSql
.head 5 -  : iCol[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 5 -  Number: nCols
.head 5 -  String: strName
.head 5 -  Number: nType
.head 5 -  Number: nPrec
.head 5 -  Number: nScale
.head 5 -  Number: nLen
.head 5 -  Number: nNameLen
.head 4 +  Actions
.head 5 -  Set nCols = SqlGetColumns( hPrepSql )
.head 5 -  Set i = 0
.head 5 +  While i < nCols
.head 6 -  Set strName = ""
.head 6 -  Call SalStrSetBufferLength ( strName, 64 )
.head 6 -  Call SqlDescribeColumn( hPrepSql, i+1, nType, nLen, strName, nNameLen, nPrec, nScale )
.head 6 +  Select Case nType
.head 7 +  Case DTYPE_NUMBER
.head 8 +  If nLen>nPrec+nScale+1
.head 9 -  Set iCol[i].nColLength = nLen
.head 8 +  Else
.head 9 -  Set iCol[i].nColLength = nPrec+nScale+1
.head 8 -  Set iCol[i].strColName = strName
.head 8 -  Set iCol[i].nColNameLength = nNameLen
.head 8 -  Set iCol[i].nColPrec = 0
.head 8 -  Set iCol[i].nColScale = 0
.head 8 -  Break
.head 7 +  Case DTYPE_DATETIME
.head 8 -  Set iCol[i].nColType = DTYPE_CHAR
.head 8 -  Set iCol[i].nColLength = 18
.head 8 -  Set iCol[i].strColName = strName
.head 8 -  Set iCol[i].nColNameLength = nNameLen
.head 8 -  Set iCol[i].nColPrec = 0
.head 8 -  Set iCol[i].nColScale = 0
.head 8 -  Break
.head 7 +  Case DTYPE_DATE
.head 8 -  Set iCol[i].nColType = DTYPE_CHAR
.head 8 -  Set iCol[i].nColLength = 10
.head 8 -  Set iCol[i].strColName = strName
.head 8 -  Set iCol[i].nColNameLength = nNameLen
.head 8 -  Set iCol[i].nColPrec = 0
.head 8 -  Set iCol[i].nColScale = 0
.head 8 -  Break
.head 7 +  Case DTYPE_TIME
.head 8 -  Set iCol[i].nColType = DTYPE_CHAR
.head 8 -  Set iCol[i].nColLength = 8
.head 8 -  Set iCol[i].strColName = strName
.head 8 -  Set iCol[i].nColNameLength = nNameLen
.head 8 -  Set iCol[i].nColPrec = 0
.head 8 -  Set iCol[i].nColScale = 0
.head 8 -  Break
.head 7 +  Default
.head 8 -  Set iCol[i].nColType = DTYPE_CHAR
.head 8 -  Set iCol[i].nColLength = nLen
.head 8 -  Set iCol[i].strColName = strName
.head 8 -  Set iCol[i].nColNameLength = nNameLen
.head 8 -  Set iCol[i].nColPrec = 0
.head 8 -  Set iCol[i].nColScale = 0
.head 8 -  Break
.head 6 -  Set iCol[i].nColType = DTYPE_CHAR
.head 6 -  Set i = i + 1
.head 5 -  Return nCols
.head 3 +  Function: SqlGetCreateStatement
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number: nRes
.head 4 +  Parameters
.head 5 -  Sql Handle: hPrepSql
.head 5 -  String: strTableName
.head 5 -  Number: nRDBMS
.head 5 -  Receive Long String: strStatement
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nCols
.head 5 -  : iCols[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 4 +  Actions
.head 5 -  Set nCols = SqlDescribe( hPrepSql, iCols )
.head 5 -  Call SqlCorrectColumnName( nCols, iCols )
.head 5 +  If nCols > 0 
.head 6 -  Return SqlGetCreateStatementX( iCols, nCols, strTableName, strStatement, nRDBMS )
.head 5 +  Else
.head 6 -  Return -1
.head 3 +  Function: SqlGetCreateStatementStr
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number: nRes
.head 4 +  Parameters
.head 5 -  Sql Handle: hPrepSql
.head 5 -  String: strTableName
.head 5 -  Number: nRDBMS
.head 5 -  Receive Long String: strStatement
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nCols
.head 5 -  : iCols[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 4 +  Actions
.head 5 -  Set nCols = SqlDescribeStr( hPrepSql, iCols )	!!!
.head 5 -  Call SqlCorrectColumnName( nCols, iCols )
.head 5 +  If nCols > 0 
.head 6 -  Return SqlGetCreateStatementX( iCols, nCols, strTableName, strStatement, nRDBMS )
.head 5 +  Else
.head 6 -  Return -1
.head 3 +  Function: SqlGetColumns
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number: nCols
.head 4 +  Parameters
.head 5 -  Sql Handle: hPrepSql
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nCols
.head 4 +  Actions
.head 5 +  If sqlnsi( hPrepSql, nCols ) != 0
.head 6 -  Return -1
.head 5 +  Else
.head 6 -  Return nCols
.head 3 +  Function: SqlDescribeColumn
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number: nRes
.head 4 +  Parameters
.head 5 -  Sql Handle: hPrepSql
.head 5 -  Number: nColumn
.head 5 -  Receive Number: nColType
.head 5 -  Receive Number: nColLength
.head 5 -  Receive String: strColName
.head 5 -  Receive Number: nColNameLength
.head 5 -  Receive Number: nColPrec
.head 5 -  Receive Number: nColScale
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqldes( hPrepSql, nColumn, nColType, nColLength, strColName, nColNameLength, nColPrec, nColScale )
.head 3 +  Function: SqlGetCreateStatementX
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number: nRes
.head 4 +  Parameters
.head 5 -  : iCols[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 5 -  Number: nCols
.head 5 -  String: strTableName
.head 5 -  Receive Long String: strStatement
.head 5 -  Boolean: fOracle
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  Set i = 0
.head 5 -  Set strStatement = "CREATE TABLE " || strTableName || " (" || strCRLF
.head 5 +  While i < nCols
.head 6 -  Set strStatement = strStatement || "  " || iCols[i].strColName || " " 
|| GetTypeName( iCols[i].nColType, iCols[i].nColLength, iCols[i].nColPrec, iCols[i].nColScale, fOracle )
.head 6 -  Set i = i + 1
.head 6 +  If i < nCols
.head 7 -  Set strStatement = strStatement || "," || strCRLF
.head 5 -  Set strStatement = strStatement || strCRLF || ")"
.head 5 -  Return 0
.head 3 +  Function: SqlCorrectColumnName
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: nCols
.head 5 -  : iCol[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 5 -  Number: nExpr
.head 5 -  String: strPColList
.head 4 +  Actions
.head 5 -  Set i = 0
.head 5 -  Set nExpr = 0
.head 5 -  Set strPColList = ""
.head 5 +  While i < nCols
.head 6 +  If NOT StrIsAlphaNumber( iCol[i].strColName ) OR
SalStrLength( iCol[i].strColName ) > 10 OR
SalStrScan(strPColList, ';'|| iCol[i].strColName || ';') >= 0
.head 7 -  Set nExpr = nExpr + 1
.head 7 -  Set iCol[i].strColName = 'EXPR' || SalNumberToStrX( nExpr, 0)
.head 6 -  Set strPColList = ';'||iCol[i].strColName||';'
.head 6 -  Set i = i + 1
.head 5 -  Return 0
.head 3 +  Function: GetTypeName
.head 4 -  Description: Возвращает имя типа данных (по его коду, длине и пр.)
.head 4 +  Returns
.head 5 -  String: strTypeName
.head 4 +  Parameters
.head 5 -  Number: nType
.head 5 -  Number: nLen
.head 5 -  Number: nPrec
.head 5 -  Number: nScale
.head 5 -  Number: nRDBMS
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  Select Case nType
.head 6 +  Case DTYPE_CHAR
.head 7 -  Return "CHAR(" || SalNumberToStrX( nLen, 0 ) || ")"
.head 6 +  Case DTYPE_NUMBER
.head 7 +  Select Case nRDBMS
.head 8 +  Case RDBMS_Excel
.head 9 -  Return "NUMBER"
.head 9 -  Break
.head 8 +  Case RDBMS_dBase
.head 9 +  If nLen < 19
.head 10 -  Return "NUMBER(" || SalNumberToStrX( nLen, 0 ) || "," || SalNumberToStrX( nPrec, 0 ) || ")"
.head 9 +  Else
.head 10 -  Return "NUMBER(19," || SalNumberToStrX( nPrec, 0 ) || ")"
.head 9 -  Break
.head 8 +  Default
.head 9 -  Return "NUMBER(" || SalNumberToStrX( nLen, 0 ) || "," || SalNumberToStrX( nPrec, 0 ) || ")"
.head 9 -  Break
.head 6 +  Case DTYPE_DATETIME
.head 7 +  Select Case nRDBMS
.head 8 +  Case RDBMS_Informix
.head 9 -  Return "DATETIME YEAR TO MINUTE"
.head 9 -  Break
.head 8 +  Default
.head 9 -  Return "DATE"
.head 9 -  Break
.head 6 +  Case DTYPE_BLOB
.head 7 +  Select Case nRDBMS
.head 8 +  Case RDBMS_Informix
.head 9 -  Return "BYTE"
.head 9 -  Break
.head 8 +  Case RDBMS_Oracle
.head 9 -  Return "LONG RAW"
.head 9 -  Break
.head 8 +  Default
.head 9 -  Return "CHAR(" || SalNumberToStrX( nLen, 0 ) || ")"
.head 9 -  Break
.head 6 +  Case DTYPE_DATE
.head 7 -  Return "DATE"
.head 6 +  Case DTYPE_TIME
.head 7 +  Select Case nRDBMS
.head 8 +  Case RDBMS_Informix
.head 9 -  Return "DATETIME HOUR TO SECOND"
.head 9 -  Break
.head 8 +  Default
.head 9 -  Return "DATE"
.head 9 -  Break
.head 6 +  Default
.head 7 -  Return "UNKNOWN#" || SalNumberToStrX( nType, 0 ) || "(" || SalNumberToStrX( nType, 0 ) || ")"
.head 3 +  Function: StrIsAlphaNumber
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: strName
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 5 -  String: Char
.head 5 -  Boolean: fFailed
.head 4 +  Actions
.head 5 -  Set i = 0
.head 5 -  Set fFailed = FALSE
.head 5 +  While NOT fFailed AND i < SalStrLength( strName )
.head 6 -  Set Char = SalStrMidX( strName, i, 1 )
.head 6 +  If SalStrScan(COLNAME_CharSet, Char) = -1
.head 7 -  Set fFailed = TRUE
.head 6 -  Set i = i + 1
.head 5 -  Return (NOT fFailed)
.head 3 -  ! By Eve
.head 3 +  Function: SqlGetAllStatements
.head 4 -  Description: Получить набор SQL выражений (CREATE, SELECT, INSERT)
.head 4 +  Returns
.head 5 -  Number: nRes
.head 4 +  Parameters
.head 5 -  ! Prepared SQL Statement
.head 5 -  Sql Handle: hPrepSql
.head 5 -  ! Имя таблицы
.head 5 -  String: strTableName
.head 5 -  Number: nRDBMS
.head 5 -  Receive String: strCreateStmt
.head 5 -  Receive String: strSelectStmt
.head 5 -  Receive String: strInsertStmt
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nCols
.head 5 -  : iCols[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 4 +  Actions
.head 5 -  Set nCols = SqlDescribe( hPrepSql, iCols )
.head 5 -  Call SqlCorrectColumnName( nCols, iCols )
.head 5 +  If nCols > 0 
.head 6 +  If SqlGetCreateStatementX( iCols, nCols, strTableName, strCreateStmt, nRDBMS ) !=0
.head 7 -  Return -1
.head 6 -  Set strSelectStmt = SqlGetStatement( strTableName, iCols, nCols, 'SELECT' )
.head 6 -  Set strInsertStmt = SqlGetStatement( strTableName, iCols, nCols, 'INSERT' )
.head 6 +  If NOT strSelectStmt OR NOT strInsertStmt
.head 7 -  Return -1
.head 6 +  Else
.head 7 -  Return 0
.head 5 +  Else
.head 6 -  Return -1
.head 3 +  Function: SqlAddIntoStatement
.head 4 -  Description: Получить набор SQL выражений (CREATE, SELECT, INSERT)
.head 4 +  Returns
.head 5 -  Number: nRes
.head 4 +  Parameters
.head 5 -  ! Prepared SQL Statement
.head 5 -  Sql Handle: hPrepSql
.head 5 -  ! Модифицируемый SQL
.head 5 -  Receive String: strSelectStmt
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nCols
.head 5 -  : iCols[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 4 +  Actions
.head 5 -  Set nCols = SqlDescribe( hPrepSql, iCols )
.head 5 -  Call SqlCorrectColumnName( nCols, iCols )
.head 5 +  If nCols > 0 
.head 6 -  Set strSelectStmt = strSelectStmt || ' ' || SqlGetStatement( '', iCols, nCols, 'INTO' )
.head 6 +  If NOT strSelectStmt
.head 7 -  Return -1
.head 6 +  Else
.head 7 -  Return 0
.head 5 +  Else
.head 6 -  Return -1
.head 3 +  Function: SqlGetReportVarList
.head 4 -  Description: Получить списки полей и Бинд-переменных для отчета
.head 4 +  Returns
.head 5 -  Number: nRes
.head 4 +  Parameters
.head 5 -  ! Prepared SQL Statement
.head 5 -  Sql Handle: hPrepSql
.head 5 -  ! Список Бинд-переменных
.head 5 -  Receive String: sBinds
.head 5 -  ! Список полей
.head 5 -  Receive String: sFields
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nCols
.head 5 -  : iCols[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 4 +  Actions
.head 5 -  Set nCols = SqlDescribe( hPrepSql, iCols )
.head 5 -  Call SqlCorrectColumnName( nCols, iCols )
.head 5 +  If nCols > 0 
.head 6 -  Set sBinds = SqlGetStatement( '', iCols, nCols, 'REP_BINDS' )
.head 6 -  Set sFields = SqlGetStatement( '', iCols, nCols, 'SELECT_LIST' )
.head 6 +  If NOT sBinds OR NOT sFields
.head 7 -  Return -1
.head 6 +  Else
.head 7 -  Return 0
.head 5 +  Else
.head 6 -  Return -1
.head 3 +  Function: SqlGetStatement
.head 4 -  Description: Возвращает выражения для выборки/вставки для таблицы
 через масивы временных переменных
sBind[*] - для строк
nBind[*] - для чисел
dBind[*] - для дат
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  ! Имя таблицы  (или разделитель полей для nStmtType='SELECT_DELIM')
.head 5 -  String: strTableName
.head 5 -  ! Описание колонок
.head 5 -  : iCols[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 5 -  ! Количество колонок в описании
.head 5 -  Number: nCols
.head 5 -  ! Тип выражения
.head 5 -  String: nStmtType
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 5 -  String: SelectList
.head 5 -  String: BindList
.head 5 -  Number: nStrings
.head 5 -  Number: nNumbers
.head 5 -  Number: nDates
.head 5 -  Number: nValueLength
.head 5 -  String: sRepBinds
.head 5 -  String: s
.head 5 -  String: sParamsEval
.head 5 -  String: sDelimFields
.head 5 -  String: sLength  ! строка дя вычисления длинны поля
.head 5 -  : iColDesc[200]
.head 6 -  Class: cColumnDelimDescriptor
.head 4 +  Actions
.head 5 -  ! Если форматированные поля с разделителями
.head 5 +  If nStmtType='SELECT_DELIM'
.head 6 -  Set i=0
.head 6 +  While i<nCols
.head 7 -  Call iColDesc[i].GetCopyFrom(iCols[i])
.head 7 -  Set s = iColDesc[i].toString()
.head 7 -  Set i=i+1
.head 5 -  ! Состав выборки
.head 5 -  Set SelectList=''
.head 5 -  ! Бинд-переменные
.head 5 -  Set BindList=''
.head 5 -  Set sParamsEval=''
.head 5 -  Set sDelimFields=''
.head 5 -  ! Количество переменных соответствующих типов
.head 5 -  Set nStrings=0
.head 5 -  Set nNumbers=0
.head 5 -  Set nDates=0
.head 5 -  ! Инициализация цикла
.head 5 -  Set i = 0
.head 5 +  While i < nCols
.head 6 +  If i!=0
.head 7 -  Set SelectList = SelectList || ', '
.head 7 -  Set BindList = BindList || ', '
.head 7 -  Set sRepBinds = sRepBinds || ', '
.head 7 -  Set sParamsEval = sParamsEval || ' || "," || '
.head 7 -  Set sDelimFields = sDelimFields || '||'||strTableName||'||' 
.head 7 -  ! Set sDelimFields = sDelimFields ||'||'
.head 6 +  Select Case iCols[i].nColType
.head 7 +  Case DTYPE_NUMBER
.head 8 -  Set BindList = BindList || ':nBind[' || SalNumberToStrX( nNumbers, 0 ) || ']'
.head 8 -  Set sRepBinds = sRepBinds || 'nBind[' || SalNumberToStrX( nNumbers, 0 ) || ']'
.head 8 -  Set sParamsEval = sParamsEval || '":' || iCols[i].strColName || '=' || "'" || '" || ' ||
'SalNumberToStrX( nBind[' || SalNumberToStrX( nNumbers, 0 ) || '], 0) || ' || '"' || "'" || '"'
.head 8 -  !
.head 8 +  If iColDesc[i].nWidth = 0 ! размер не определен, значит длинна поля - это длинна значения
.head 9 -  Set sLength = 'SalStrLength(SalNumberToStrX(nBind['||SalNumberToStrX(nNumbers,0)||'],0)'
.head 8 +  Else
.head 9 -  Set sLength = SalNumberToStrX(iColDesc[i].nWidth,0)
.head 8 -  !
.head 8 -  Set sDelimFields = sDelimFields || 'NumberToStrFormatX(nBind[' || SalNumberToStrX( nNumbers, 0 ) || '],'||sLength||','||iColDesc[i].sBlankChr||",'"||iColDesc[i].sAlign||"')"
.head 8 -  !
.head 8 -  Set nNumbers=nNumbers+1
.head 8 -  !
.head 8 -  Break
.head 7 +  Case DTYPE_DATETIME
.head 8 -  Set BindList = BindList || ':dBind[' || SalNumberToStrX( nDates, 0 ) || ']'
.head 8 -  Set sRepBinds = sRepBinds || 'dBind[' || SalNumberToStrX( nDates, 0 ) || ']'
.head 8 -  Set sParamsEval = sParamsEval || '":' || iCols[i].strColName || '=' || "'" || '" || ' ||
'SalFmtFormatDateTime( dBind[' || SalNumberToStrX( nDates, 0 ) || '], "dd/MM/yyyy") || ' || '"' || "'" || '"'
.head 8 -  !
.head 8 +  If iColDesc[i].nWidth = 0 ! размер не определен, значит длинна поля - это длинна значения
.head 9 -  Set sLength = 'SalStrLength( SalFmtFormatDateTime(dBind['||SalNumberToStrX( nDates, 0)||'], '||iColDesc[i].sSpec||'))'
.head 8 +  Else
.head 9 -  Set sLength = SalNumberToStrX(iColDesc[i].nWidth,0)
.head 8 -  Set sDelimFields =  sDelimFields || ' StrToStrFormatX(SalFmtFormatDateTime(dBind['||
                         SalNumberToStrX( nDates, 0)||'], '||iColDesc[i].sSpec||'),'||SalNumberToStrX(iColDesc[i].nWidth,0)||','||iColDesc[i].sBlankChr||",'"||iColDesc[i].sAlign||"') "
.head 8 -  !
.head 8 -  Set nDates=nDates+1
.head 8 -  Break
.head 7 +  Case DTYPE_DATE
.head 8 -  Set BindList = BindList || ':dBind[' || SalNumberToStrX( nDates, 0 ) || ']'
.head 8 -  Set sRepBinds = sRepBinds || 'dBind[' || SalNumberToStrX( nDates, 0 ) || ']'
.head 8 -  Set sParamsEval = sParamsEval || '":' || iCols[i].strColName || '=' || "'" || '" || ' ||
'SalFmtFormatDateTime( dBind[' || SalNumberToStrX( nDates, 0 ) || '], "dd/MM/yyyy") || ' || '"' || "'" || '"'
.head 8 -  !
.head 8 +  If iColDesc[i].nWidth = 0 ! размер не определен, значит длинна поля - это длинна значения
.head 9 -  Set sLength = 'SalStrLength( SalFmtFormatDateTime(dBind['||SalNumberToStrX( nDates, 0)||'], '||iColDesc[i].sSpec||'))'
.head 8 +  Else
.head 9 -  Set sLength = SalNumberToStrX(iColDesc[i].nWidth,0)
.head 8 -  !
.head 8 -  Set sDelimFields =  sDelimFields || ' StrToStrFormatX(SalFmtFormatDateTime(dBind['||
                         SalNumberToStrX( nDates, 0)||'], '||iColDesc[i].sSpec||'),'||SalNumberToStrX(iColDesc[i].nWidth,0)||','||iColDesc[i].sBlankChr||",'"||iColDesc[i].sAlign||"') "
.head 8 -  !
.head 8 -  Break
.head 7 +  Case DTYPE_TIME
.head 8 -  Set BindList = BindList || ':dBind[' || SalNumberToStrX( nDates, 0 ) || ']'
.head 8 -  Set sRepBinds = sRepBinds || 'dBind[' || SalNumberToStrX( nDates, 0 ) || ']'
.head 8 -  Set sParamsEval = sParamsEval || '":' || iCols[i].strColName || '=' || "'" || '" || ' ||
'SalFmtFormatDateTime( dBind[' || SalNumberToStrX( nDates, 0 ) || '], "dd/MM/yyyy") || ' || '"' || "'" || '"'
.head 8 -  !
.head 8 +  If iColDesc[i].nWidth = 0 ! размер не определен, значит длинна поля - это длинна значения
.head 9 -  Set sLength = 'SalStrLength( SalFmtFormatDateTime(dBind['||SalNumberToStrX( nDates, 0)||'], '||iColDesc[i].sSpec||'))'
.head 8 +  Else
.head 9 -  Set sLength = SalNumberToStrX(iColDesc[i].nWidth,0)
.head 8 -  !
.head 8 -  Set sDelimFields =  sDelimFields || ' StrToStrFormat(SalFmtFormatDateTime(dBind['||
                         SalNumberToStrX( nDates, 0)||'], '||iColDesc[i].sSpec||'),'||SalNumberToStrX(iColDesc[i].nWidth,0)||','||iColDesc[i].sBlankChr||",'"||iColDesc[i].sAlign||"') "
.head 8 -  !
.head 8 -  Set nDates=nDates+1
.head 8 -  Break
.head 7 +  Default
.head 8 -  Set BindList = BindList || ':sBind[' || SalNumberToStrX( nStrings, 0 ) || ']'
.head 8 -  Set sRepBinds = sRepBinds || 'sBind[' || SalNumberToStrX( nStrings, 0 ) || ']'
.head 8 -  Set sParamsEval = sParamsEval || '":' || iCols[i].strColName || '=' || "'" || '" || ' ||
'sBind[' || SalNumberToStrX( nStrings, 0 ) || '] || ' || '"' || "'" || '"'
.head 8 -  !
.head 8 +  If iColDesc[i].nWidth = 0 ! размер не определен, значит длинна поля - это длинна значения
.head 9 -  Set sLength = 'SalStrLength(sBind[' || SalNumberToStrX( nStrings, 0 ) || '] )'
.head 8 +  Else
.head 9 -  Set sLength = SalNumberToStrX(iColDesc[i].nWidth,0)
.head 8 -  !
.head 8 -  Set sDelimFields = sDelimFields || 'StrToStrFormatX2(sBind[' || SalNumberToStrX( nStrings, 0 ) || '],'||sLength||','||iColDesc[i].sBlankChr||",'"||iColDesc[i].sAlign||"')"
.head 8 -  !
.head 8 -  ! Added By Ivan for FieldByName function
.head 8 -  Set iCols[i].sBindName='s'
.head 8 -  Set iCols[i].nBindIndex=nStrings
.head 8 -  Set nStrings=nStrings+1
.head 8 -  Break
.head 6 -  Set SelectList = SelectList || iCols[i].strColName
.head 6 -  Set i = i + 1
.head 5 -  !
.head 5 -  !
.head 5 +  If nStmtType='SELECT'
.head 6 -  Return 'SELECT ' || SelectList || ' INTO ' || BindList || ' FROM ' || strTableName
.head 5 +  Else If nStmtType='INSERT'
.head 6 -  Return 'INSERT INTO ' || strTableName || '(' || SelectList || ' ) VALUES ( ' || BindList || ')'
.head 5 +  Else If nStmtType='INTO'
.head 6 -  Return ' INTO ' || BindList
.head 5 +  Else If nStmtType='REP_BINDS'
.head 6 -  Return sRepBinds
.head 5 +  Else If nStmtType='SELECT_LIST'
.head 6 -  Return SelectList
.head 5 +  Else If nStmtType='SELECT_TO_PARAMS'
.head 6 -  Return sParamsEval
.head 5 +  Else If nStmtType='SELECT_DELIM'
.head 6 -  Return sDelimFields
.head 5 +  Else
.head 6 -  ! Call SalMessageBox( 'Неизвестный тип выражения!', 'Ошибка', MB_Ok | MB_IconStop )
.head 6 -  Return ''
.head 3 +  Function: SqlGetParamsExpr
.head 4 -  Description: Получить выражение, при вычислении которого результат запроса
помещается в строку параметров
.head 4 +  Returns
.head 5 -  Number: nRes
.head 4 +  Parameters
.head 5 -  ! Prepared SQL Statement
.head 5 -  Sql Handle: hPrepSql
.head 5 -  ! Список Бинд-переменных
.head 5 -  Receive String: sParamsExpr
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nCols
.head 5 -  : iCols[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 4 +  Actions
.head 5 -  Set nCols = SqlDescribe( hPrepSql, iCols )
.head 5 -  Call SqlCorrectColumnName( nCols, iCols )
.head 5 +  If nCols > 0 
.head 6 -  Set sParamsExpr = SqlGetStatement( '', iCols, nCols, 'SELECT_TO_PARAMS' )
.head 6 +  If NOT sParamsExpr
.head 7 -  Return -1
.head 6 +  Else
.head 7 -  Return 0
.head 5 +  Else
.head 6 -  Return -1
.head 3 -  !
.head 3 +  Function: SqlGetColTypes
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  ! Prepared SQL Statement
.head 5 -  Sql Handle: hPrepSql
.head 5 -  ! returned Columns Type List
.head 5 -  Receive String: sColTypesList[*]
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  : iCols[*]
.head 6 -  Class: cSqlColumnDescriptor
.head 4 +  Actions
.head 5 -  Call SqlDescribeRet(hPrepSql, iCols, sColTypesList)
.head 3 -  !
.head 2 -  Named Menus
.head 2 +  Class Definitions
.head 3 +  Functional Class: cSqlColumnDescriptor
.head 4 -  Description:
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  String: strColName
.head 5 -  Number: nColNameLength
.head 5 -  Number: nColType
.head 5 -  Number: nColLength
.head 5 -  Number: nColPrec
.head 5 -  Number: nColScale
.head 5 -  ! Added By Ivan for FieldByName function
.head 5 -  String: sBindName
.head 5 -  Number: nBindIndex
.head 4 -  Functions
.head 3 +  Functional Class: cColumnDelimDescriptor
.head 4 -  Description: Клас описания колонок для визуальнеого построения
.head 4 +  Derived From
.head 5 -  Class: cSqlColumnDescriptor
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Number: nWidth     !ширина
.head 5 -  String: sBlankChr  !символ , кот. будем дополнять значение до длины nWidth
.head 5 -  String: sAlign     !выравнивание
.head 5 -  String: sSpec      !Дополнительн. параметр
.head 4 +  Functions
.head 5 +  Function: GetCopy
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  : iColDescSource
.head 8 -  Class: cColumnDelimDescriptor
.head 7 -  : iColDescDest
.head 8 -  Class: cColumnDelimDescriptor
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  ! Call SalMessageBox('Исходный:'||iColDescSource.toString()||SalNumberToChar(13)||SalNumberToChar(10)||
                   'Куда    :'||iColDescDest.toString(), '!',0)
.head 7 -  Set iColDescDest.nWidth          =iColDescSource.nWidth
.head 7 -  Set iColDescDest.sBlankChr       =iColDescSource.sBlankChr
.head 7 -  Set iColDescDest.sAlign          =iColDescSource.sAlign
.head 7 -  Set iColDescDest.sSpec           =iColDescSource.sSpec
.head 7 -  ! from base class
.head 7 -  Set iColDescDest.strColName      =iColDescSource.strColName
.head 7 -  Set iColDescDest.nColNameLength  =iColDescSource.nColNameLength
.head 7 -  Set iColDescDest.nColType        =iColDescSource.nColType
.head 7 -  Set iColDescDest.nColLength      =iColDescSource.nColLength
.head 7 -  Set iColDescDest.nColPrec        =iColDescSource.nColPrec
.head 7 -  Set iColDescDest.nColScale       =iColDescSource.nColScale
.head 7 -  ! Call SalMessageBox('После Исходный:'||iColDescSource.toString()||SalNumberToChar(13)||SalNumberToChar(10)||
                   'Куда    :'||iColDescDest.toString(), '!',0)
.head 5 +  Function: GetCopyFrom
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  : iColDescSource
.head 8 -  Class: cColumnDelimDescriptor
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  ! Call SalMessageBox('Исходный :'||iColDescSource.toString()||SalNumberToChar(13)||SalNumberToChar(10)||
                   'Свои поля:'||toString(), '!',0)
.head 7 -  Set nWidth          =iColDescSource.nWidth
.head 7 -  Set sBlankChr       =iColDescSource.sBlankChr
.head 7 -  Set sAlign          =iColDescSource.sAlign
.head 7 -  Set sSpec           =iColDescSource.sSpec
.head 7 -  ! from base class
.head 7 -  Set strColName      =iColDescSource.strColName
.head 7 -  Set nColNameLength  =iColDescSource.nColNameLength
.head 7 -  Set nColType        =iColDescSource.nColType
.head 7 -  Set nColLength      =iColDescSource.nColLength
.head 7 -  Set nColPrec        =iColDescSource.nColPrec
.head 7 -  Set nColScale       =iColDescSource.nColScale
.head 7 -  ! Call SalMessageBox('После Исходный:'||iColDescSource.toString()||SalNumberToChar(13)||SalNumberToChar(10)||
                   'Куда    :'||toString(), '!',0)
.head 5 +  Function: toString
.head 6 -  Description: Состояние полей класса
.head 6 +  Returns
.head 7 -  String:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: sString
.head 7 -  String: nl
.head 6 +  Actions
.head 7 -  Set nl = SalNumberToChar(13)||SalNumberToChar(10)
.head 7 -  Set sString = 'Имя колонки      :'||strColName|| nl ||
              'Тип колонки      :'||getDataTypeName(nColType)||nl||
              'Длинна колонки   :'||SalNumberToStrX(nColLength,0)||nl||
              'Указанная длина  :'||SalNumberToStrX(nWidth,0)||nl||
              'Символ дополнения:'||'"'||sBlankChr||'"'||nl||
              'Выравнивание     :'||sAlign||nl||              
              'Спец. параметр   :'||sSpec          
.head 7 +  If nColType = DTYPE_NUMBER
.head 8 -  Set sString  = sString|| 
            'Целая часть      :'||SalNumberToStrX(nColScale,0)||nl||
            'Дробная часть    :'||SalNumberToStrX(nColPrec,0)||nl
.head 7 -  Return sString
.head 5 +  Function: getDataTypeName
.head 6 -  Description:  Получить описанеи типа данных
.head 6 +  Returns
.head 7 -  String:
.head 6 +  Parameters
.head 7 -  Number: nDataType
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: s
.head 6 +  Actions
.head 7 +  Select Case nDataType
.head 8 +  Case DTYPE_NONE
.head 9 -  Set s = 'NOT_DEFINED'
.head 9 -  Break
.head 8 +  Case DTYPE_CHAR
.head 9 -  Set s = 'VARCHAR'
.head 9 -  Break
.head 8 +  Case DTYPE_NUMBER
.head 9 -  Set s = 'NUMBER'
.head 9 -  Break
.head 8 +  Case DTYPE_DATETIME
.head 9 -  Set s = 'DATETIME'
.head 9 -  Break
.head 8 +  Case DTYPE_BLOB
.head 9 -  Set s = 'BLOB'
.head 9 -  Break
.head 8 +  Case DTYPE_DATE
.head 9 -  Set s = 'DATE'
.head 9 -  Break
.head 8 +  Case DTYPE_TIME
.head 9 -  Set s = 'TIME'
.head 9 -  Break
.head 7 -  Return s
.head 2 +  Default Classes
.head 3 -  MDI Window: cBaseMDI
.head 3 -  Form Window:
.head 3 -  Dialog Box:
.head 3 -  Table Window:
.head 3 -  Quest Window:
.head 3 -  Data Field:
.head 3 -  Spin Field:
.head 3 -  Multiline Field:
.head 3 -  Pushbutton:
.head 3 -  Radio Button:
.head 3 -  Option Button:
.head 3 -  Check Box:
.head 3 -  Child Table:
.head 3 -  Quest Child Window: cQuickDatabase
.head 3 -  List Box:
.head 3 -  Combo Box:
.head 3 -  Picture:
.head 3 -  Vertical Scroll Bar:
.head 3 -  Horizontal Scroll Bar:
.head 3 -  Column:
.head 3 -  Background Text:
.head 3 -  Group Box:
.head 3 -  Line:
.head 3 -  Frame:
.head 3 -  Custom Control:
.head 2 -  Application Actions
