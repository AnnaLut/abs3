begin
  begin insert into CASHLESS_NBS values(1600,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(1919,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2063,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2500,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2501,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2502,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2510,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2511,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2512,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2513,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2514,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2518,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2520,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2523,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2525,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2526,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2527,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2528,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2530,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2531,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2538,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2540,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2541,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2542,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2543,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2544,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2545,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2546,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2548,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2550,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2551,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2552,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2553,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2554,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2555,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2556,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2558,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2560,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2561,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2562,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2565,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2567,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2568,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2570,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2571,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2572,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2600,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2601,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2602,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2603,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2604,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2605,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2606,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2607,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2608,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2609,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2610,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2611,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2612,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2615,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2616,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2617,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2618,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2620,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2621,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2622,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2625,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2626,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2627,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2628,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2629,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2630,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2635,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2636,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2637,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2638,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2640,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2641,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2642,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2643,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2644,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2650,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2651,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2652,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2653,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2654,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2655,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2656,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2657,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2658,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2659,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2700,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2701,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2706,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2707,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2708,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2900,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2900,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2901,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2902,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2903,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2909,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2924,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(2924,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3519,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3540,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3548,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3570,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3578,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3579,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3600,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3600,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3619,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3622,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3720,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3720,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3739,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(3739,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(6110,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(6118,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(6510,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(6514,'06'); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(6518,''); exception when dup_val_on_index then null; end;
  begin insert into CASHLESS_NBS values(9760,''); exception when dup_val_on_index then null; end;
  end;
/
commit;