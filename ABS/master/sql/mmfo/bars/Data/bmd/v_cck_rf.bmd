set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'Портфель РОБОЧИХ кредитів ФО / V_CCK_RF';
  l_tablinesdef := '200';
  l_tabselect_statement := '';
  l_tabname     := 'V_CCK_RF';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 7, 'CC_ID', 'C', 'Зовн.~№ КД', '1.5', null, 5, 0, 0, 1, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 8, 'DSDATE', 'D', 'Дата Поч~дії КД', '1.3', null, 13, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 9, 'DWDATE', 'D', 'Дата заверш~дії КД~', '1.3', null, 14, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 11, 'ISP', 'N', 'Відп~інсп~по КД', '.5', null, 17, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 12, 'KV', 'N', 'Валюта', '.3', null, 11, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 14, 'ND', 'N', 'Реф КД~в АБС', '2', null, 1, 0, 1, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', 'ShowAccList(0,AVIEW_ALL,AVIEW_ReadOnly|AVIEW_AllOptions,"exists(select 1 from V_ND_ACCOUNTS where nd=:ND and acc=a.acc)")', 0);
  bars_metabase.add_column(l_tabid, 17, 'PR', 'N', '%~ст', '.7', null, 12, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 20, 'RNK', 'N', 'РНК~позичальника', '1.5', null, 3, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', 'EditCustomer( IifN(:VIDD <10,2,3), NUMBER_Null, :CC_NMK, CVIEW_ReadOnly, hWndForm, 0, "", FALSE)', 0);
  bars_metabase.add_column(l_tabid, 21, 'S', 'N', 'Поточна сума~ ліміту', '', null, 9, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 22, 'SDOG', 'N', 'Початкова~сума по договору', '', null, 8, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 28, 'DAZS', 'D', 'Фактична~дата закр КД', '1.3', null, 15, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 29, 'NAMK', 'C', 'Позичальник (ПІБ)', '', null, 4, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 30, 'BRANCH', 'C', 'Бранч~КД', '', null, 0, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 31, 'PROD', 'C', 'Код~продукту', '1', null, 2, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 33, 'NDI', 'N', 'Реф~повяз~дог', '1.3', null, 16, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 35, 'ACC8', 'N', 'ACC рах ~8999*LIM', '1.3', null, 99, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 36, 'SOS_NAME', 'C', 'Стан~КД', '1.6', null, 7, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 37, 'VIDD_NAME', 'C', 'Вид~КД', '2.1', null, 6, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 38, 'SOS', 'N', 'Стан~КД(код)', '', null, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 39, 'OSTC', 'N', 'Непогашений~ залишок', '', null, 10, 0, 0, 0, 0, '', '# ##0.00', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 40, 'NLS', 'C', 'NLS рах ~8999*LIM', '', null, 98, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 41, 'OPL_DAY', 'N', 'День~сплати~боргу', '.5', null, 17, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('KU_108');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NKD');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'KVZ');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '14', l_newcolid, l_varcolid, 'Вал зал');
  else
    dbms_output.put_line('В БМД не описана таблица KU_108 для описания условий фильтра таблицы V_CCK_RF.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('KU_108');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NKD');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'MPAWN');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '14', l_newcolid, l_varcolid, 'Местонах зал');
  else
    dbms_output.put_line('В БМД не описана таблица KU_108 для описания условий фильтра таблицы V_CCK_RF.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('KU_108');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NKD');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'NLSZ');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '14', l_newcolid, l_varcolid, 'Зал.Счет ');
  else
    dbms_output.put_line('В БМД не описана таблица KU_108 для описания условий фильтра таблицы V_CCK_RF.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('KU_108');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NKD');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'NZD');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '14', l_newcolid, l_varcolid, 'Реф ЗалДог');
  else
    dbms_output.put_line('В БМД не описана таблица KU_108 для описания условий фильтра таблицы V_CCK_RF.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('KU_108');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NKD');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'OKPOZ');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '14', l_newcolid, l_varcolid, 'ОКПО залогодателя');
  else
    dbms_output.put_line('В БМД не описана таблица KU_108 для описания условий фильтра таблицы V_CCK_RF.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('KU_108');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NKD');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'PAWN');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '14', l_newcolid, l_varcolid, 'Вид залога');
  else
    dbms_output.put_line('В БМД не описана таблица KU_108 для описания условий фильтра таблицы V_CCK_RF.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('CUSTOMER');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'NMK');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '20', l_newcolid, l_varcolid, 'Найменування контрагента');
  else
    dbms_output.put_line('В БМД не описана таблица CUSTOMER для описания условий фильтра таблицы V_CCK_RF.');
  end if;

  -- добавляем описание сортировки
  bars_metabase.add_sortorder(l_tabid, 14, 1, 'DESC');

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 1, 'КД: Перегляд параметрів КД ', '', '', '', '', '', '80', '', '/barsroot/CreditUi/NewCredit/?custtype=3'||chr(38)||'nd=:ND'||chr(38)||'sos=:SOS', 80);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 2, 'КД: Рахунки та операції,пов''язані з КД', '', '', 'ONCE', '', '', '106', '', '/barsroot/CreditUi/accounts/Index/?id=:ND', 106);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 3, 'КД: Побудова ГПК для обраного КД', '', '', 'EACH', '', '', '83', '', 'sPar=CC_W_LIM1_EXT[NSIFUNCTION][ACCESSCODE=>0][PROC=>PUL.PUT(''ND'',:ND);PUL.PUT(''ACC8'',:ACC8)][EXEC=>BEFORE][showDialogWindow=>false][EDIT_MODE=>MULTI_EDIT]', 83);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 4, 'КД: Графік лімітів кредитування', '', '', 'ONCE', '', '', '79', '', '/barsroot/CreditUi/glk/Index/?id=:ND', 79);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 6, 'КД: Дод./Параметри КД', '', '', 'ONCE', '', '', '55', '', '/barsroot/CreditUi/NewCredit/?custtype=2'||chr(38)||'nd=:ND'||chr(38)||'tagOnly=true', 55);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 7, 'КД: Видача  кредиту  Б/Г по ПЛ/інструкціям', '', '', 'EACH', '', '', '58', '', 'sPar=CCK_PL_INS1[NSIFUNCTION][ACCESSCODE=>2][PROC=>PUL.Set_Mas_Ini(''ND'',:ND,''X'')][EXEC=>BEFORE][DESCR=>ТОЛЬКО ДЛЯ ФЛ КД: Видача  кредиту  Б/Г по пл/інструкціям][showDialogWindow=>false]', 58);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 8, 'КП: Дострокове погашення/перебудова ГПК', '', '', 'ONCE', '', '', '107', '', 'sPar=CC_VP_DOSR[ACCESSCODE=>0][DESCR=>Дострокове погашення /погашення/перебудова ГПК/][showDialogWindow=>false][CONDITIONS=> nd=:ND]', 107);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 10, 'КД: Таблична форма рахунків по КД', '', '', 'ONCE', '', '', '111', '', '/barsroot/customerlist/custacc.aspx?type=3'||chr(38)||'nd=:ND', 111);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 11, 'КД: Заведення користувацьких подій', '', '', 'ONCE', '', '', '37', '', 'sPar=CC_SOB_U[ACCESSCODE=>0][PROC=>PUL.Set_Mas_Ini(''ND'',:ND,''X'')][EXEC=>BEFORE][showDialogWindow=>false][CONDITIONS=> nd=:ND]', 37);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 18, 'КД: Дані про реструктуризацію КД', '', '', 'ONCE', '', '', '51', '', 'sPar=CCK_RESTR[NSIFUNCTION][CONDITIONS=>ND=:ND][ACCESSCODE=>2][showDialogWindow=>false]
', 51);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 23, 'КД: Події по обраному КД', '', '', 'ONCE', '', '', '93', '', 'sPar=CC_SOB[ACCESSCODE=>1][PROC=>PUL.Set_Mas_Ini(''ND'',:ND,''X'')][EXEC=>BEFORE][showDialogWindow=>false][CONDITIONS=> nd=:ND]', 93);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 25, 'КД: Інтергрований показник фінстану позичальника', '', '', '', '', '', '105', '', '/barsroot/barsweb/dynform.aspx?form=frm_fin2_kart_kl_fl'||chr(38)||'rnk=:RNK', 105);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 30, 'КП ФО: 0.Нарахування Пені', '', '', 'ONCE', '', '', '', '', 'sPar=V_INTEREST_CCK[NSIFUNCTION][ACCESSCODE=>2][PROC=>p_interest_fine(11,:E)][PAR=>:E(SEM=Дата по,TYPE=D)][EXEC=>BEFORE][showDialogWindow=>false]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 31, 'КП ФО: 1.Нарахування Відсотків,  Комісії, Пені', '', '', 'ONCE', '', '', '', '', 'sPar=V_INTEREST_CCK[NSIFUNCTION][ACCESSCODE=>2][PROC=>p_interest_cck1(11,:E)][PAR=>:E(SEM=Дата по,TYPE=D)][EXEC=>BEFORE][showDialogWindow=>false]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 32, 'КП ФО: 2 Нарахування Відсотків,  Комісії, Пені  для КД з залиш.на SG ', '', '', 'ONCE', '', '', '', '', 'sPar=V_INTEREST_CCK[NSIFUNCTION][ACCESSCODE=>2][PROC=>p_interest_cck1(12,:E)][PAR=>:E(SEM=Дата по,TYPE=D)][EXEC=>BEFORE][showDialogWindow=>false]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 33, 'КП ФО: 3 Нарахування Відсотків,  Комісії, Пені для КД з платіж.датами', '', '', 'ONCE', '', '', '', '', 'sPar=V_INTEREST_CCK[NSIFUNCTION][ACCESSCODE=>2][PROC=>p_interest_cck1(13,null)][EXEC=>BEFORE][showDialogWindow=>false]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 34, 'КП ФО: 3 Нарахування Відсотків,  Комісії, Пені для КД з платіж.датами (ануїтет)', '', '', 'ONCE', '', '', '', '', 'sPar=V_INTEREST_CCK[NSIFUNCTION][ACCESSCODE=>2][PROC=>p_interest_cck1(15,null)][EXEC=>BEFORE][showDialogWindow=>false]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 38, 'КП ФО: 4 Нарахування Відсотків,  Комісії, Пені для КД, що прострочені ', '', '', 'ONCE', '', '', '', '', 'sPar=V_INTEREST_CCK[NSIFUNCTION][ACCESSCODE=>2][PROC=>p_interest_cck1(14,null)][EXEC=>BEFORE][showDialogWindow=>false]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 39, 'КП ЮО: 5 Нарахування Відсотків,  Комісії, Пені для ОДНОГО  КД', '', '', 'ONCE', '', '', '', '', 'sPar=V_INTEREST_CCK_ND[NSIFUNCTION][ACCESSCODE=>2][PROC=>p_interest_cck1( - :R,:E)][PAR=>:E(SEM=Дата по,TYPE=D), :R(SEM=Реф_КД,TYPE=N)][EXEC=>BEFORE][showDialogWindow=>false]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 40, 'КП ЮО: 5 Нарахування Відсотків,  Комісії, Пені для  ВИДІЛЕНОГО  КД', '', '', 'EACH', '', '', '', '', 'sPar=V_INTEREST_CCK_ND[NSIFUNCTION][ACCESSCODE=>2][PROC=>PUL.PUT(''ND'',:ND);p_interest_cck1( - 999,:E)][PAR=>:E(SEM=Дата по,TYPE=D)][EXEC=>BEFORE][showDialogWindow=>false]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 45, 'КП: Графік подій по портфелю', '', '', 'ONCE', '', '', '86', '', 'sPar=CC_SOB_WF[ACCESSCODE=>1][PROC=>PUL_DAT(:B,:E)][PAR=>:B(SEM=З,TYPE=S),:E(SEM=По,TYPE=S)][EXEC=>BEFORE]', 86);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 47, 'КП ФО:  Нарахування Відсотків по Києву (тестово)', '', '', 'ONCE', '', '', '', '', 'sPar=V_INTEREST_CCK[NSIFUNCTION][ACCESSCODE=>2][PROC=>p_interest_cck1(17,:E)][PAR=>:E(SEM=Дата по,TYPE=D)][EXEC=>BEFORE][showDialogWindow=>false]', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 83, 'КД: Забезпечення існуючі/нові', '', '', 'EACH', '', '', '65', '', '/barsroot/CreditUi/provide/Index/?id=:ND', 65);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 85, 'КД: Картка клієнта', '', '', 'ONCE', '', '', '155', '', '/barsroot/clientregister/registration.aspx?readonly=1'||chr(38)||'rnk=:RNK', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 99, 'КП: Архів закритих КД ', '', '', 'ONCE', '', '', '75', '', 'sPar=V_CCK_ZF[ACCESSCODE=>1][DESCR=>КП: Архів закритих КД]', 75);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 555, 'КП ФО: 1.Нарахування Відсотків,  Комісії, Пені', '', '', 'ONCE', '', '', '', '', 'sPar=V_INTEREST_CCK[NSIFUNCTION][ACCESSCODE=>2][PROC=>cck_ui.p_cck_interest(11,:E)][PAR=>:E(SEM=Дата по,TYPE=D)][EXEC=>BEFORE][showDialogWindow=>false]', null);

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 1, null, ':DWDATE < GL.BD ', 2, 'COLOR_Salmon');

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 2, null, ':DWDATE > GL.BD and :SOS > 10 ', 2, 'COLOR_Orchid');

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 3, null, ':DWDATE = GL.BD', 2, 'COLOR_LightGreen');

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 5, null, ':DWDATE < GL.BD +7', 2, 'COLOR_LightAqua');

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 10, null, ':DWDATE < GL.BD +30', 2, 'COLOR_LightGray');

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
