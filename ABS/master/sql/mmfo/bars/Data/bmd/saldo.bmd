set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'Рахунки, доступнi користувачу на перегляд';
  l_tablinesdef := '';
  l_tabselect_statement := '';
  l_tabname     := 'SALDO';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 5, 'DAOS', 'D', 'Дата вiдкриття рах.', '1', 10, 10, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 6, 'DAPP', 'D', 'Дата останнього руху', '1', 10, 12, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 10, 'ISP', 'N', 'Виконавець рах.', '1', 22, 9, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 13, 'KV', 'N', 'Код валюти', '1', 22, 3, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 15, 'MDATE', 'D', 'Дата погашення рахунку', '1', 10, 13, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 18, 'NLS', 'C', 'Особовий рахунок', '1', 15, 1, 1, 0, 1, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 20, 'NMS', 'C', 'Найменування рах', '2', 70, 8, 1, 0, 1, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 25, 'PAP', 'N', 'Ознака Акт-Пас (1,2,3)', '1', 22, null, 1, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 28, 'BLKD', 'N', 'Код блок. на дебет', '1', 22, 17, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 29, 'BLKK', 'N', 'Код блок. на кредит', '1', 22, 18, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 30, 'DAZS', 'D', 'Дата закриття рах.', '1', 10, 11, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 31, 'DOS', 'N', 'Обороти-Дебет', '1', 22, 14, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 33, 'KOS', 'N', 'Обороти-Кредит', '1', 22, 15, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 39, 'OSTC', 'N', 'Залишок (в коп.)', '1', 22, 7, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 40, 'ACC', 'N', 'ACC ', '1', 22, 20, 1, 1, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 42, 'NBS', 'C', 'Баланс.рахунок', '1', 4, 4, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 44, 'TIP', 'C', 'Тип рахунку', '1', 3, 21, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 45, 'RNK', 'N', 'Реєстр. № клiєнта', '1', 22, 6, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 46, 'BRANCH', 'C', 'Код вiддiлення', '2', 30, 5, 1, 0, 0, 1, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 47, 'LIM', 'N', 'Лiмiт ', '2.5', 22, 16, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 48, 'NLSALT', 'C', 'Альтерн. номер рахунку', '1', 15, 19, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 49, 'ACCC', 'N', '', '', 22, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 50, 'DOSQ', 'N', 'Обор.Дт - грн-екв.', '', 22, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 51, 'KF', 'C', 'Код фiлiї', '', 6, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 52, 'KOSQ', 'N', 'Обор.Кт - грн-екв.', '', 22, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 53, 'NBS2', 'C', 'Альтернат. балансового счета', '', 4, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 54, 'OSTB', 'N', '', '', 22, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 55, 'OSTF', 'N', '', '', 22, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 56, 'OSTQ', 'N', '', '', 22, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 57, 'POS', 'N', '', '', 22, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 58, 'SEC', 'C', '', '', 64, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 59, 'TOBO', 'C', 'Код пiдроздiлу', '', 30, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 60, 'TRCN', 'N', '', '', 22, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 61, 'VID', 'N', '', '', 22, null, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 62, 'OB22', 'C', 'ОБ22', '', 2, 2, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('BRANCH');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'BRANCH');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 46, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица BRANCH для описания сложного поля таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'S181');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's1', '40', l_newcolid, l_varcolid, 'Параметр S181');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'R013');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's2', '40', l_newcolid, l_varcolid, 'Параметр R013');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'S180');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's3', '40', l_newcolid, l_varcolid, 'Параметр S180');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'S080');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's4', '40', l_newcolid, l_varcolid, 'Параметр S080');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'R011');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's5', '40', l_newcolid, l_varcolid, 'Параметр R011');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'S240');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's6', '40', l_newcolid, l_varcolid, 'Параметр S240');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'S260');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's7', '40', l_newcolid, l_varcolid, 'Параметр S260');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'S270');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's8', '40', l_newcolid, l_varcolid, 'Параметр S270');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM_INT');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'OB88');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'i1', '40', l_newcolid, l_varcolid, 'Параметр OB88');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM_INT для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM_INT');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'P080');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'i2', '40', l_newcolid, l_varcolid, 'Параметр P080');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM_INT для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM_INT');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'R020_FA');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'i3', '40', l_newcolid, l_varcolid, 'Параметр R020_FA');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM_INT для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM_INT');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'TYPNLS');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'i4', '40', l_newcolid, l_varcolid, 'Код корпор. клієнта');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM_INT для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('ND_ACC');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'ND');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '40', l_newcolid, l_varcolid, 'Референс  Кред_Дог');
  else
    dbms_output.put_line('В БМД не описана таблица ND_ACC для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('V_ACC_SHTAR');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'SHTAR');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '40', l_newcolid, l_varcolid, 'Код Тарифного~пакету');
  else
    dbms_output.put_line('В БМД не описана таблица V_ACC_SHTAR для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('INT_ACCN');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'ID');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '40', l_newcolid, l_varcolid, 'ID - тип % картки');
  else
    dbms_output.put_line('В БМД не описана таблица INT_ACCN для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('V_ACC_PRCT');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'PROECT');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '40', l_newcolid, l_varcolid, 'БПК: Проект');
  else
    dbms_output.put_line('В БМД не описана таблица V_ACC_PRCT для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('CUSTOMERW');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'VALUE');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'c2', '45', l_newcolid, l_varcolid, 'Дод.реквізит клієнта');
  else
    dbms_output.put_line('В БМД не описана таблица CUSTOMERW для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('CUSTOMER');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'OKPO');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'c1', '45', l_newcolid, l_varcolid, 'Код ЗКПО');
  else
    dbms_output.put_line('В БМД не описана таблица CUSTOMER для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('V_CUSTOMER');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'ISE');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'v2', '45', l_newcolid, l_varcolid, 'IНСТ СЕКТОР ЕКОНОМ(K070)');
  else
    dbms_output.put_line('В БМД не описана таблица V_CUSTOMER для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('V_CUSTOMER');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'VED');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'v3', '45', l_newcolid, l_varcolid, 'Вид экон. діяльності');
  else
    dbms_output.put_line('В БМД не описана таблица V_CUSTOMER для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('V_CUSTOMER');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'K050');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'v1', '45', l_newcolid, l_varcolid, 'K050');
  else
    dbms_output.put_line('В БМД не описана таблица V_CUSTOMER для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('RNKP_KOD');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'KODK');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '45', l_newcolid, l_varcolid, 'Код корпорацiї');
  else
    dbms_output.put_line('В БМД не описана таблица RNKP_KOD для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('BRANCH');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'BRANCH');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'B040');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '46', l_newcolid, l_varcolid, 'Код пдрзд.банку~по дов.НБУ SP_B040');
  else
    dbms_output.put_line('В БМД не описана таблица BRANCH для описания условий фильтра таблицы SALDO.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('V_BRANCH_TIP');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'BRANCH');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'VAL');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '46', l_newcolid, l_varcolid, 'Код Типу');
  else
    dbms_output.put_line('В БМД не описана таблица V_BRANCH_TIP для описания условий фильтра таблицы SALDO.');
  end if;

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
