set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'XLS-табл  СУМ для ПРОВОДОК ПО МСФЗ-16 ';
  l_tablinesdef := '26';
  l_tabselect_statement := 'select * from TMP_XOZ16_XLS where kf = sys_context(''bars_context'',''user_mfo'') ';
  l_tabname     := 'TMP_XOZ16_XLS';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 0, 'NPP', 'N', '№ рядка~в XLS-табл', '', null, 0, 1, 0, 0, 1, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 1, 'PROD', 'C', '4600.XX', '', null, 4, 0, 1, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 2, 'CC_ID', 'C', 'Номер~договору~B
', '', null, 2, 0, 0, 1, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 3, 'DAT01', 'D', 'Звітна~дата', '', null, 51, 1, 0, 0, 0, '', '', 1, 0, '', 1, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 4, 'SDATE', 'D', 'Дата~договору~C
', '', null, 3, 1, 0, 0, 0, '', '', 1, 0, '', 1, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 5, 'NLS_3519', 'C', 'Рахунок~3519*26~Дог.
', '', null, 10, 0, 1, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 6, 'NLS_3519_OLD', 'C', 'Рахунок~3519*26~XLS(G)
', '', null, 9, 0, 1, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 11, 'RNKA', 'N', 'РНК(АБС)~Клієнта', '', null, 1, 1, 0, 0, 1, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 12, 'ND', 'N', 'Реф.дог~в АБС', '', null, 50, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 20, 'S11', 'N', '1.1)Визнання зобов`язань~4600/**=>3615/04~BW', '', null, 11, 1, 0, 0, 0, '', '# ##0.00', 1, 0, 'Sum(S11)', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 25, 'S12', 'N', '1.2)Визнання активу~4600/**=>3500/04~CB', '', null, 12, 1, 0, 0, 0, '', '# ##0.00', 1, 0, 'Sum(S12)', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 30, 'S21', 'N', '2.1)Нарахування витрат~7028/01=>3618/01~CG', '', null, 21, 1, 0, 0, 0, '', '# ##0.00', 1, 0, 'Sum(S21)', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 35, 'S22', 'N', '2.2)Переоцінка активу~3615/04<=>4600/**~CY', '', null, 22, 1, 0, 0, 0, '', '# ##0.00', 1, 0, 'Sum(S22)', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 40, 'S31', 'N', '3.1)Закриття нар/витрат~3618/01=>3519/26~CO', '', null, 31, 1, 0, 0, 0, '', '# ##0.00', 1, 0, 'Sum(S31)', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 45, 'S32', 'N', '3.2)Закриття ДЗ~3615/04=>3519/26~CP', '', null, 32, 1, 0, 0, 0, '', '# ##0.00', 1, 0, 'Sum(S32)', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 50, 'S33', 'N', '3.3)Закриття ДЗ(ПДВ)~7399/67=>3519/26~CM', '', null, 33, 1, 0, 0, 0, '', '# ##0.00', 1, 0, 'Sum(S33)', 0, 0, 1, '', '', 0);

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('CUSTOMER');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 11, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица CUSTOMER для описания сложного поля таблицы TMP_XOZ16_XLS.');
  end if;

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 2, 'Завантаження з XLS-файлу', '', '', 'ONCE', '', '', '', '', 'sPar=[PROC=>XOZ16.GET_XLS( 0, :p_file_name, SYSDATE,:p_clob)][MULTI_ROW_PARAMS=>:p_clob(KIND=FROM_UPLOAD_EXCEL,TYPE=CLOB,GET_FROM=EXCEL_FILE,COL_NAMES_FROM=EXCEL_HEADERS)]
', 7, '' );

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 4, 'BW=1.1)Визнання зобов`язань<br>4600/**=>3615/04
', 'XOZ16.OPR ( 0, 11, null, :X ) ', ':X(SEM=Деталі,TYPE=S)', 'ONCE', 'Виконати проводки <br>BW=1.1)Визнання зобов`язань<br>4600/**=>3615/04<br> ?
', 'Виконано !', '', '', '', 19, '' );

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 5, 'CB=1.2)Визнання активу<br>4600/**=>3500/04', 'XOZ16.OPR ( 0, 12, null, :X ) ', ':X(SEM=Деталі,TYPE=S)', 'ONCE', 'Виконати проводки <br>CB=1.2)Визнання активу<br>4600/**=>3500/04<br> ?', 'Виконано !', '', '', '', 21, '' );

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 6, 'CG=2.1)Нарахування витрат<br>7028/01=>3618/01', 'XOZ16.OPR ( 0, 21, null, :X ) ', ':X(SEM=Період,TYPE=S)', 'ONCE', 'Виконати проводки <br>CG=2.1)Нарахування витрат<br>7028/01=>3618/01<br> ?', 'Виконано !', '', '', '', 13, '' );

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 7, 'CY=2.2)Переоцінка активу<br>3615/04<=>4600/**', 'XOZ16.OPR ( 0, 22, null, :X ) ', ':X(SEM=Період,TYPE=S)', 'ONCE', 'Виконати проводки <br>CY=2.2)Переоцінка активу<br>3615/04<=>4600/**<br> ?', 'Виконано !', '', '', '', 17, '' );

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 8, 'CO=3.1)Закриття нар/витрат<br>3618/01=>3519/26', 'XOZ16.OPR ( 0, 31, null, :X ) ', ':X(SEM=Деталі,TYPE=S)', 'ONCE', 'Виконати проводки <br>CO=3.1)Закриття нар/витрат<br>3618/01=>3519/26<br> ?

 ', 'Виконано !', '', '', '', 85, '' );

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 9, 'CP=3.2)Закриття ДЗ<br>3615/04=>3519/26', 'XOZ16.OPR ( 0, 32, null, :X ) ', ':X(SEM=Деталі,TYPE=S)', 'ONCE', 'Виконати проводки <br>CP=3.2)Закриття ДЗ<br>3615/04=>3519/26<br> ?', 'Виконано !', '', '', '', 84, '' );

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 10, 'CM=3.3)Закриття ДЗ(ПДВ)<br>7399/67=>3519/26', 'XOZ16.OPR ( 0, 33, null, :X ) ', ':X(SEM=Деталі,TYPE=S)', 'ONCE', 'Виконати проводки <br>CM=3.3)Закриття ДЗ(ПДВ)<br>7399/67=>3519/26<br> ?', 'Виконано !', '', '', '', 33, '' );

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 11, 'Переглянути створені документи,<br>
та сформувати тікет', '', '', 'ONCE', '', '', '', '', 'sPar=OPER_MON[ACCESSCODE=>1][CONDITIONS=>OPER_MON.tt in (''PS1'',''IF0'')][showDialogWindow=>false][EXEC=>BEFORE]', 51, '' );

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 12, 'WACC:Переглянути всі рахунки угод <br>
портфелю ХОЗ-16(оренда)', '', '', 'ONCE', '', '', '', '', '/barsroot/customerlist/custacc.aspx?type=7', 98, '' );

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 1, null, 'ND is null', 2, 'COLOR_Gray ');

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 2, null, 'NLS_3519_OLD is not null', 2, 'COLOR_LightGreen');

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'NLS_3519_OLD');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 3, l_newcolid, 'NLS_3519_OLD is not null', 2, 'COLOR_LightGray');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'NLS_3519');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 4, l_newcolid, 'NLS_3519_OLD is not null', 2, 'COLOR_LightAqua');
  end if;

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
