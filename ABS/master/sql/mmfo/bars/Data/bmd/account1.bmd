set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'Рахунки для перегляду по фільтру';
  l_tablinesdef := '50';
  l_tabselect_statement := '';
  l_tabname     := 'ACCOUNT1';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 1, 'ACC', 'N', 'ACC ', '1', null, 99, 1, 1, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 3, 'BLKD', 'N', 'Код~блк~дебет', '.2', null, 17, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 4, 'BLKK', 'N', 'Код~блк~кредит', '.2', null, 18, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 5, 'DAOS', 'D', 'Дата вiдкр~ рах.', '1.5', null, 10, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 6, 'DAPP', 'D', 'Дата остан~руху~ІСТОРІЯ', '1.5', null, 11, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '/barsroot/customerlist/showhistory.aspx?acc=:ACC'||chr(38)||'type=1', '', 0);
  bars_metabase.add_column(l_tabid, 7, 'DAZS', 'D', 'Дата закр~рах.', '1.5', null, 23, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 8, 'DOS/100', 'N', 'Обороти~Дебет', '1.5', null, 14, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 9, 'ACCC', 'N', 'ACCC', '1.5', null, 20, 0, 0, 0, 1, '', '', 0, 0, '', 0, 1, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 11, 'ISP', 'N', 'Вик~ рах.', '.3', null, 22, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 12, 'KOS/100', 'N', 'Обороти~Кредит', '1.5', null, 15, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 14, 'KV', 'N', 'Код~вал', '.2', null, 3, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 15, 'LIM/100', 'N', 'Лiмiт ', '1.5', null, 16, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 16, 'MDATE', 'D', 'Дата погаш~раунку', '1.5', null, 12, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 17, 'NBS', 'C', 'Бал~рах', '.3', null, 4, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 19, 'NLS', 'C', 'Особов~рахунок~КАРТКА', '1.5', null, 1, 1, 0, 1, 0, '', '', 1, 0, 'To_char(count(*) )', 0, 0, 1, '/barsroot/viewaccounts/accountform.aspx?type=0'||chr(38)||'acc=:ACC'||chr(38)||'rnk='||chr(38)||'accessmode=1', '', 0);
  bars_metabase.add_column(l_tabid, 21, 'NMS', 'C', 'Найменування~рах~ДОЧІРНІ', '2.5', null, 8, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, 'sPar=ACCOUNT1[CONDITIONS=>(ACCOUNT1.ACCC = :ACC) ][ACCESSCODE=>1][showDialogWindow=>false]', '', 0);
  bars_metabase.add_column(l_tabid, 23, 'OSTC/100', 'N', 'Залишок~фактич.', '1.5', null, 7, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 26, 'PAP', 'N', 'А~П', '.1', null, 19, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 34, 'RNK', 'N', 'Реєстр.~ клiєнта~КАРТКА', '1.5', null, 6, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '/barsroot/clientregister/registration.aspx?readonly=1'||chr(38)||'rnk=:RNK', '', 0);
  bars_metabase.add_column(l_tabid, 36, 'BRANCH', 'C', 'Код~вiддiлення', '2', null, 21, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 38, 'KOSQ', 'N', '***', '1.5', null, 98, 0, 0, 0, 0, '', '', 0, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 39, 'TIP', 'C', 'Тип~рах', '.2', null, 5, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 40, 'NLSALT', 'C', '***', '1.5', null, 95, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 41, 'OB22', 'C', 'ОБ22', '.2', null, 2, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('ACCOUNT1');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 9, l_newtabid, l_newcolid, 'aa', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица ACCOUNT1 для описания сложного поля таблицы ACCOUNT1.');
  end if;

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('TABVAL');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'KV');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 14, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица TABVAL для описания сложного поля таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'R013');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's2', '1', l_newcolid, l_varcolid, 'Параметр  R013');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'S180');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's1', '1', l_newcolid, l_varcolid, 'Параметр  S180');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'S080');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's3', '1', l_newcolid, l_varcolid, 'Параметр  S080');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'R011');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's5', '1', l_newcolid, l_varcolid, 'Параметр  R011');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'S240');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's4', '1', l_newcolid, l_varcolid, 'Параметр  S240');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'S260');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's6', '1', l_newcolid, l_varcolid, 'Параметр  S260');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'S270');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 's7', '1', l_newcolid, l_varcolid, 'Параметр  S270');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM_INT');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'OB88');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'i5', '1', l_newcolid, l_varcolid, 'Параметр OB88');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM_INT для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM_INT');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'P080');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'i3', '1', l_newcolid, l_varcolid, 'Параметр  P080');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM_INT для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM_INT');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'R020_FA');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'i4', '1', l_newcolid, l_varcolid, 'Параметр  R020_FA');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM_INT для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('SPECPARAM_INT');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'TYPNLS');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, 'i2', '1', l_newcolid, l_varcolid, 'САУ корпоративного клiєнта');
  else
    dbms_output.put_line('В БМД не описана таблица SPECPARAM_INT для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('ND_ACC');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ACC');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'ND');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '1', l_newcolid, l_varcolid, 'Референс  Кред_Дог');
  else
    dbms_output.put_line('В БМД не описана таблица ND_ACC для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('S6_MIGRNLS');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NLS_BARS');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'NLS_FIL');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '19', l_newcolid, l_varcolid, '"Старий" рахунок');
  else
    dbms_output.put_line('В БМД не описана таблица S6_MIGRNLS для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('CUSTOMER');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'OKPO');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '34', l_newcolid, l_varcolid, 'Код ЗКПО');
  else
    dbms_output.put_line('В БМД не описана таблица CUSTOMER для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('RNKP_KOD');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'KODK');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '34', l_newcolid, l_varcolid, 'Код корпорацiї');
  else
    dbms_output.put_line('В БМД не описана таблица RNKP_KOD для описания условий фильтра таблицы ACCOUNT1.');
  end if;

  -- добавляем описание сортировки
  bars_metabase.add_sortorder(l_tabid, 7, 1, 'DESC');

  -- добавляем описание сортировки
  bars_metabase.add_sortorder(l_tabid, 14, 3, 'ASC ');

  -- добавляем описание сортировки
  bars_metabase.add_sortorder(l_tabid, 39, 2, 'ASC ');

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 1, null, ':DAZS is not null ', 2, 'COLOR_LightGray');

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 2, null, 'NBS is null', 2, 'COLOR_Yellow');

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'ACCC');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 3, l_newcolid, 'ACCC is not null ', 2, 'COLOR_Yellow');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'OSTC/100');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 4, l_newcolid, 'OSTC < 0', 1, 'COLOR_Red');
  end if;

  -- добавляем описание раскраски
  l_newcolid := bars_metabase.get_colid(l_tabid, 'OSTC/100');
  if (l_newcolid is not null) then
    bars_metabase.add_tblcolor(l_tabid, 5, l_newcolid, 'OSTC >  0', 1, 'COLOR_DarkBlue');
  end if;

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 6, null, 'DOS > 0', 1, 'COLOR_Red');

  -- добавляем описание раскраски
  bars_metabase.add_tblcolor(l_tabid, 7, null, 'KOS > 0', 1, 'COLOR_DarkBlue');

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
