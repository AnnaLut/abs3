set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'CCK-12) Портфель РОБОЧИХ кредитів ЮО';
  l_tablinesdef := '';
  l_tabselect_statement := '';
  l_tabname     := 'CC_V_12';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 7, 'CC_ID', 'C', 'Зовн.~№ КД', '', null, 10, 0, 0, 1, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 8, 'DSDATE', 'D', 'Дата Поч~дії КД~----------~ГЛК', '', null, 11, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, 'sPar=CC_W_GLK1[NSIFUNCTION][ACCESSCODE=>0][PROC=>PUL.Set_Mas_Ini(''ND'',:ND, ''X'' )][EXEC=>BEFORE]', '', 0);
  bars_metabase.add_column(l_tabid, 9, 'DWDATE', 'D', 'Дата заверш~дії КД~----------~ГПК', '', null, 12, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, 'sPar=CC_W_LIM1[NSIFUNCTION][ACCESSCODE=>0][PROC=>PUL.Set_Mas_Ini(''ND'',:ND, ''X'' )][EXEC=>BEFORE]', '', 0);
  bars_metabase.add_column(l_tabid, 11, 'ISP', 'N', 'Відп~інсп~по КД', '', null, 85, 0, 0, 0, 1, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 12, 'KV', 'N', 'Вал~~----------~ДОД.РЕКВ.', '', null, 18, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, 'sPar=CC_DOPW[NSIFUNCTION][ACCESSCODE=>2][PROC=>PUL.Set_Mas_Ini(''ND'',:ND, ''X'' )][EXEC=>BEFORE]', '', 0);
  bars_metabase.add_column(l_tabid, 14, 'ND', 'N', 'Реф КД~в АБС~!----------~ПЕРЕГЛ./КОРР', '', null, 2, 0, 1, 0, 0, '', '', 1, 0, '', 0, 0, 1, '/barsroot/CreditUi/NewCredit/?custtype=2'||chr(38)||'nd=:ND', 'ShowAccList(0,AVIEW_ALL,AVIEW_ReadOnly|AVIEW_AllOptions,"exists(select 1 from V_ND_ACCOUNTS where nd=:ND and acc=a.acc)")', 0);
  bars_metabase.add_column(l_tabid, 17, 'PR', 'N', '%~ст', '', null, 51, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 20, 'RNK', 'N', 'РНК~позич~----------~РАХУНКИ', '', null, 13, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '/barsroot/customerlist/custacc.aspx?type=3'||chr(38)||'nd=:ND', 'EditCustomer( IifN(:VIDD <10,2,3), NUMBER_Null, :CC_NMK, CVIEW_ReadOnly, hWndForm, 0, "", FALSE)', 0);
  bars_metabase.add_column(l_tabid, 21, 'S', 'N', 'Залишок~по тілу~----------~ПОДІЇ', '', null, 17, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, 'sPar=CC_SOB_W[NSIFUNCTION][ACCESSCODE=>3][PROC=>PUL.Set_Mas_Ini(''ND'',:ND, ''X'' )][EXEC=>BEFORE]', '', 0);
  bars_metabase.add_column(l_tabid, 22, 'SDOG', 'N', 'Сума~по дог~!----------~ЗАБЕЗПЕЧЕН', '', null, 16, 0, 0, 0, 0, '', '# ##0.00', 1, 0, '', 0, 0, 0, 'sPar=V_ZAL_ND[ACCESSCODE=>0][PROC=>OVRN.PUL_OVR(0,:ND,:ACC8)][EXEC=>BEFORE]', '', 0);
  bars_metabase.add_column(l_tabid, 24, 'VIDD', 'N', 'Вид~КД', '', null, 0, 0, 0, 0, 1, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 28, 'DAZS', 'D', 'Фактична~Дата закр КД', '', null, 81, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 29, 'NAMK', 'C', 'Назва~Позичальника~----------~КАРТКА КЛ', '', null, 14, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '/barsroot/clientregister/registration.aspx?readonly=1'||chr(38)||'rnk=:RNK', '', 0);
  bars_metabase.add_column(l_tabid, 30, 'BRANCH', 'C', 'Бранч~КД', '', null, 57, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 31, 'PROD', 'C', 'Код~Продукт', '', null, 50, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 32, 'SOS', 'N', 'Стан~договору', '', null, 80, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 33, 'NDI', 'N', 'Реф~повяз~дог', '', null, 60, 0, 0, 0, 0, '', '', 1, 0, '', 0, 0, 1, '', '', 0);
  bars_metabase.add_column(l_tabid, 34, 'TR', 'B', 'Транш~КЛ', '', null, 1, 0, 0, 0, 0, '', '', 0, 0, '', 1, 0, 0, 'sPar=CC_W_TRANSH[NSIFUNCTION][ACCESSCODE=>2][PROC=>PUL.Set_Mas_Ini(''ND'',:ND, ''X'' )][EXEC=>BEFORE]', '', 0);
  bars_metabase.add_column(l_tabid, 35, 'ACC8', 'N', 'ACC8', '', null, 99, 0, 0, 0, 0, '', '', 0, 0, '', 0, 1, 0, '', '', 0);

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('STAFF$BASE');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'ID');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 11, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица STAFF$BASE для описания сложного поля таблицы CC_V_12.');
  end if;

  -- добавляем описание сложного поля
  l_newtabid := bars_metabase.get_tabid('CC_VIDD');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'VIDD');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_extrnval(l_tabid, 24, l_newtabid, l_newcolid, '', '', '', '');
  else
    dbms_output.put_line('В БМД не описана таблица CC_VIDD для описания сложного поля таблицы CC_V_12.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('KU_108');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NKD');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'KVZ');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '14', l_newcolid, l_varcolid, 'Вал зал');
  else
    dbms_output.put_line('В БМД не описана таблица KU_108 для описания условий фильтра таблицы CC_V_12.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('KU_108');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NKD');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'MPAWN');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '14', l_newcolid, l_varcolid, 'Местонах зал');
  else
    dbms_output.put_line('В БМД не описана таблица KU_108 для описания условий фильтра таблицы CC_V_12.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('KU_108');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NKD');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'NLSZ');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '14', l_newcolid, l_varcolid, 'Зал.Счет ');
  else
    dbms_output.put_line('В БМД не описана таблица KU_108 для описания условий фильтра таблицы CC_V_12.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('KU_108');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NKD');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'NZD');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '14', l_newcolid, l_varcolid, 'Реф ЗалДог');
  else
    dbms_output.put_line('В БМД не описана таблица KU_108 для описания условий фильтра таблицы CC_V_12.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('KU_108');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NKD');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'OKPOZ');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '14', l_newcolid, l_varcolid, 'ОКПО залогодателя');
  else
    dbms_output.put_line('В БМД не описана таблица KU_108 для описания условий фильтра таблицы CC_V_12.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('KU_108');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'NKD');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'PAWN');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '14', l_newcolid, l_varcolid, 'Вид залога');
  else
    dbms_output.put_line('В БМД не описана таблица KU_108 для описания условий фильтра таблицы CC_V_12.');
  end if;

  -- добавляем описание для условий фильтра
  l_newtabid := bars_metabase.get_tabid('CUSTOMER');
  l_newcolid := bars_metabase.get_colid(l_newtabid, 'RNK');
  l_varcolid := bars_metabase.get_colid(l_newtabid, 'NMK');
  if (l_newtabid is not null and l_newcolid is not null) then
    bars_metabase.add_browsetbl(l_tabid, l_newtabid, '', '20', l_newcolid, l_varcolid, 'Найменування контрагента');
  else
    dbms_output.put_line('В БМД не описана таблица CUSTOMER для описания условий фильтра таблицы CC_V_12.');
  end if;

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 1, 'Події в КП ФО', '', '', 'ONCE', '', '', '', '', '', null);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 25, 'Індивідуальний Ручний розбір кредит.залишків', '', '', 'ONCE', '', '', '', '', '/barsroot/creditui/analysisbalance/?nd=:ND', 17);

  -- добавляем описание функции на справочник
  bars_metabase.add_nsifunction(l_tabid, 99, 'Архів закритих КД ', '', '', 'ONCE', '', '', '', '', '', null);

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
