set serveroutput on

declare

  type t_rec_extrnval is record (
    tabid            meta_extrnval.tabid%type,
    colid            meta_extrnval.colid%type,
    srccolname       meta_columns.colname%type,
    tab_alias        meta_extrnval.tab_alias%type,
    tab_cond         meta_extrnval.tab_cond%type,
    src_cond         meta_extrnval.src_cond%type,
    col_dyn_tabname  varchar2(30));
  type t_tab_extrnval is table of t_rec_extrnval;
  l_extrnval     t_tab_extrnval := t_tab_extrnval();

  type t_rec_browsetbl is record (
    hosttabid   meta_browsetbl.hosttabid%type,
    hostcolid   meta_browsetbl.hostcolkeyid%type,
    addcolname  meta_columns.colname%type,
    varcolname  meta_columns.colname%type,
    addtabalias meta_browsetbl.addtabalias%type,
    cond_tag    meta_browsetbl.cond_tag%type);
  type t_tab_browsetbl is table of t_rec_browsetbl;
  l_browsetbl    t_tab_browsetbl := t_tab_browsetbl();

  type t_rec_filtertbl is record (
    tabid       meta_filtertbl.tabid%type,
    colid       meta_filtertbl.colid%type,
    fltcode     meta_filtertbl.filter_code%type,
    flag_ins    meta_filtertbl.flag_ins%type,
    flag_del    meta_filtertbl.flag_del%type,
    flag_upd    meta_filtertbl.flag_upd%type);
  type t_tab_filtertbl is table of t_rec_filtertbl;
  l_filtertbl    t_tab_filtertbl := t_tab_filtertbl();

  type t_rec_dependency is record (
    id               meta_dependency_cols.id%type,
    tabid            meta_dependency_cols.tabid%type,
    colid            meta_dependency_cols.colid%type,
    event            meta_dependency_cols.event%type,
    depcolid         meta_dependency_cols.depcolid%type,
    action_type      meta_dependency_cols.action_type%type,
    action_name      meta_dependency_cols.action_name%type,
    default_value    meta_dependency_cols.default_value%type,
    condition        meta_dependency_cols.condition%type);
  type t_tab_dependency is table of t_rec_dependency;
  l_dependency     t_tab_dependency := t_tab_dependency();

  l_tabid        meta_tables.tabid%type;
  l_tabname      meta_tables.tabname%type;
  l_tabsemantic  meta_tables.semantic%type;
  l_tablinesdef  varchar2(16);
  l_tabselect_statement meta_tables.select_statement%type;
  l_newtabid     meta_tables.tabid%type;
  l_newcolid     meta_columns.colid%type;
  l_varcolid     meta_columns.colid%type;
  l_colname      meta_columns.colname%type;

begin

  l_tabsemantic := 'Данi по iнв.вiдомостi(щоден) ФО - БПК деталiзованi';
  l_tablinesdef := '';
  l_tabselect_statement := '';
  l_tabname     := 'INV_BPK';

  -- получаем код таблицы
  l_tabid := bars_metabase.get_tabid(l_tabname);

  -- если таблица не описана в БМД
  if l_tabid is null then

    -- получаем код для новой таблицы
    l_tabid := bars_metabase.get_newtabid();

    -- добавляем описание таблицы в БМД
    bars_metabase.add_table(l_tabid, l_tabname, l_tabsemantic, l_tabselect_statement);

  -- если таблица описана в БМД
  else

    -- обновляем семантику таблицы
    bars_metabase.set_tabsemantic(l_tabid, l_tabsemantic);

    -- обновляем linesdef таблицы
    bars_metabase.set_tablinesdef(l_tabid, l_tablinesdef);

    -- обновляем select_statement таблицы
    bars_metabase.set_tabselect_statement(l_tabid, l_tabselect_statement);

    -- сохраняем ссылки сложных полей других таблиц на поля нашей таблицы
    select e.tabid, e.colid, c.colname, e.tab_alias, e.tab_cond, e.src_cond, e.col_dyn_tabname
      bulk collect
      into l_extrnval
      from meta_extrnval e, meta_columns c
     where e.srctabid = l_tabid
       and e.srctabid = c.tabid and e.srccolid = c.colid;

    -- сохраняем ссылки для условий фильтра полей других таблиц на поля нашей таблицы
    select b.hosttabid, b.hostcolkeyid, c.colname, v.colname, b.addtabalias, v.semantic
      bulk collect
      into l_browsetbl
      from meta_browsetbl b, meta_columns c, meta_columns v
     where b.addtabid = l_tabid
       and b.addtabid = c.tabid and b.addcolkeyid = c.colid
       and b.addtabid = v.tabid and b.var_colid = v.colid;

    -- сохраняем ссылки полей других таблиц на нашу вложенную таблицу
    select tabid, colid, filter_code, flag_ins, flag_del, flag_upd
      bulk collect
      into l_filtertbl
      from meta_filtertbl
     where filter_tabid = l_tabid and tabid <> l_tabid;

    -- сохраняем зависимости между колонками таблицы
    select id, tabid, colid, event, depcolid, action_type, action_name, default_value, condition
      bulk collect
      into l_dependency
      from meta_dependency_cols
     where tabid = l_tabid;

    -- удаляем описание полей
    bars_metabase.delete_metatables(l_tabid);

  end if;

  -- добавляем описание полей
  bars_metabase.add_column(l_tabid, 1, 'G00', 'D', 'Дата формування', '.5', 10, 1, 1, 1, 0, 0, '', 'dd.MM.yyyy', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 2, 'G01', 'C', '01~Назва РУ', '.5', 70, 2, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 3, 'G02', 'C', '02~МФО установи~(вiддiлення)', '.5', 30, 3, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 4, 'G03', 'C', '03~Номер ТВБВ', '1', 30, 4, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 5, 'G04', 'C', '04~ПIБ позичальника', '1', 70, 5, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 6, 'G05', 'C', '05~Iдентифiкацiйний~код ФО', '.5', 10, 6, 1, 1, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 7, 'G06', 'N', '06~Сума кредиту~за угодою~в валютi угоди', '.5', 22, 7, 1, 0, 0, 0, '', '# #00.00', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 8, 'G07', 'N', '07~Валюта кредиту', '.2', 3, 8, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 9, 'G08', 'C', '08~№ кредитної угоди', '.5', 20, 9, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 10, 'G09', 'C', '09~Дата фактичного~надання кредиту', '.5', 10, 10, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 11, 'G10', 'C', '10~Планова дата~погашення~(початкова)', '.5', 10, 11, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 12, 'G11', 'C', '11~Чинна дата~погашення~з врахуванням~ост.пролонг.', '.5', 10, 12, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 13, 'G12', 'C', '12~Ознака~реструктуризацiї~кредиту', '.1', 1, 13, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 14, 'G13', 'N', '13~Кiль-ть~здiйснених~реструктуризацiй', '.1', 2, 14, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 15, 'G13A', 'N', '13а~Кiль-ть~здiйснених~рестр-цiй~в розрiзi видiв', '.1', 2, 15, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 16, 'G13B', 'N', '13б~Кiль-ть~здiйснених~рестр-цiй~в розрiзi видiв', '.1', 2, 16, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 17, 'G13D', 'N', '13д~Кiль-ть~здiйснених~рестр-цiй~в розрiзi видiв', '.1', 2, 19, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 18, 'G13E', 'N', '13е~Кiль-ть~здiйснених~рестр-цiй~в розрiзi видiв', '.1', 2, 20, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 19, 'G13G', 'N', '13г~Кiль-ть~здiйснених~рестр-цiй~в розрiзi видiв', '.1', 2, 18, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 20, 'G13I', 'N', '13i~Кiль-ть~здiйснених~рестр-цiй~в розрiзi видiв', '.1', 2, 23, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 21, 'G13J', 'N', '13ж~Кiль-ть~здiйснених~рестр-цiй~в розрiзi видiв', '.1', 2, 21, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 22, 'G13V', 'N', '13в~Кiль-ть~здiйснених~рестр-цiй~в розрiзi видiв', '.1', 2, 17, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 23, 'G13Z', 'N', '13з~Кiль-ть~здiйснених~рестр-цiй~в розрiзi видiв', '.1', 2, 22, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 24, 'G14', 'C', '14~Дата~виникнення~1-го непогаш.простр.платежу~за основним боргом', '.5', 10, 24, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 25, 'G15', 'C', '15~Дата~виникнення~1-го непогаш.простр.платежу~за нарах.доходами', '.5', 10, 25, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 26, 'G16', 'C', '16~Дата визнання~забор-тi~безнадiйною', '.5', 10, 26, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 27, 'G17', 'N', '17~Ознака~iнсайдера~згiдно~KL_K061', '.1', 2, 27, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 28, 'G18', 'C', '18~Пiдстава~для надання~кредиту~iнсайдеру банку', '.5', 110, 28, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 29, 'G19', 'C', '19~Номер БР,~на якому обл-ся~кредит на~звiт.дату', '.2', 4, 29, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 30, 'G20', 'C', '20~Частина~№ аналiтичного~рахунку', '.2', 9, 30, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 31, 'G21', 'N', '21~Сума залишку~на звiтну дату~в валютi~кредиту', '.5', 22, 31, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G21)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 32, 'G22', 'N', '22~Сума залишку~на звiтну дату~в нац.валютi', '.5', 22, 32, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G22)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 33, 'G23', 'N', '23~Сума неамортизованого~дисконту', '.5', 22, 33, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G23)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 34, 'G24', 'N', '24~Код облiку~заборгованостi~на БР', '.1', 4, 34, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 35, 'G25', 'N', '25~Сума~позабал.зобов"язань~неризикових', '.5', 22, 35, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G25)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 36, 'G26', 'N', '26~Сума~позабал.зобов"язань~ризикових', '.5', 22, 36, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G26)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 37, 'G27', 'N', '27~Дiюча~% ставка', '.1', 3, 37, 1, 0, 0, 0, '', '#00.0000', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 38, 'G28', 'N', '28~Нар.неспл.непр.доходи~(осн.борг вч або пр<180дн)', '.5', 22, 38, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G28)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 39, 'G29', 'N', '29~Нар.неспл.непр.доходи~(осн.борг пр>180дн)', '.5', 22, 39, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G29)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 40, 'G30', 'N', '30~Нар.пр.<31дня доходи~(осн.борг вч або пр<180дн)', '.5', 22, 40, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G30)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 41, 'G31', 'N', '31~Нар.пр.<31дня доходи~(осн.борг пр>180дн)', '.5', 22, 41, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G31)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 42, 'G32', 'N', '32~Нар.пр.>31,<60 доходи~(осн.борг вч або пр<180дн)', '.5', 22, 42, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G32)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 43, 'G33', 'N', '33~Нар.пр.>31,<60 доходи~(осн.борг пр>180дн)', '.5', 22, 43, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G33)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 44, 'G34', 'N', '34~Прострочені~нарах.доходи~понад~60 днів', '.5', 22, 44, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G34)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 45, 'G35', 'N', '35~Сума~забезп-ня~у вигляді~поруки,~грн.', '.5', 22, 45, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G35)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 46, 'G36', 'C', '36~Оцiнка фiн.стану~позичальника~(клас)', '.1', 1, 46, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 47, 'G37', 'C', '37~Внутрiшнiй кредитний~рейтинг~позичальника', '.1', 3, 47, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 48, 'G38', 'C', '38~Дата останньої~оцiнки~фiн.стану', '.5', 10, 48, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 49, 'G39', 'C', '39~Категорiя ризику~кредитної~операцiї', '.1', 1, 49, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 50, 'G40', 'C', '40~Обслуговування~боргу~позичальником', '.1', 1, 50, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 51, 'G41', 'C', '41~Вид забезпечення~(зг.KL_S031)', '.2', 30, 51, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 52, 'G42', 'N', '42~Додатковий код~предмету~застави', '.1', 10, 52, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 53, 'G43', 'N', '43~Загальна сума~забезпечення~без поруки,~грн.', '.5', 22, 53, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G43)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 54, 'G44', 'N', '44~Сума забез-ня~до розрахунку~резерву', '.5', 22, 54, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G44)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 55, 'G45', 'N', '45~Сума заборг-тi~до розрахунку~резерву', '.5', 22, 55, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G45)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 56, 'G46', 'N', '46~Коефiцiєнт~резервування~за ступенем ризику~(%)', '.2', 2, 56, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 57, 'G47', 'N', '47~Розрахункова~сума~резерву,~грн.', '.5', 22, 57, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G47)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 58, 'G48', 'N', '48~Факт.сформ.сума~резерву~за рах-к прибутку', '.5', 22, 58, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G48)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 59, 'G49', 'N', '49~Факт.сформ.сума~резерву~за рах-к валових витрат', '.5', 22, 59, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G49)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 60, 'G50', 'N', '50~Вiдхилення суми~фактично сформованого~резерву ', '.5', 22, 60, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G50)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 61, 'G51', 'C', '51~Категорiя~громадян-чорнобильцiв', '.1', 1, 61, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 62, 'G52', 'N', '52~Сума розрахункова~резерву~за простроч. кред.оп.', '.5', 22, 62, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G52)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 63, 'G53', 'N', '53~Сума факт.сформ.резерву~за простроч.~кред.оп.', '.5', 22, 63, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G53)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 64, 'G54', 'C', '54~Приналежнiсть~до працiвникiв банку', '.1', 1, 64, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 65, 'G55', 'C', '55~Цiльове призначення кредиту~(по кол54)', '.5', 2, 65, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 66, 'G56', 'C', '56~Дата останньої~пролонгацiї кредиту', '.5', 10, 66, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 67, 'G57', 'N', '57~БР групи 891', '.2', 4, 67, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 68, 'G58', 'N', '58~Сума нар.та неотр.доходiв~по сумнiвних кредитах', '.5', 22, 68, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G58)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 69, 'G59', 'N', '59~Реф.~кред.угоди~(унік.номер~в системі)', '.5', 22, 69, 1, 0, 0, 0, '', '#0', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 70, 'G60', 'C', '60~Дата останньої~реструктуризації~кредита', '.5', 10, 70, 1, 0, 0, 0, '', '', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 71, 'G61', 'N', '61~Факт.сума резерву~для відшк.можл.втрат~за позабал.зобов.~(рах. 3690),~грн', '.5', 22, 71, 1, 0, 0, 0, '', '# #00.00', 1, 0, 'sum(INV_BPK.G61)', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 72, 'G62', 'N', '62~Порядок~розрахунку~платежів~1-Ануїтет,~2-Рівними частинами', '.1', 1, 72, 1, 0, 0, 0, '', '#0', 1, 0, '', 0, 0, 0, '', '', 0);
  bars_metabase.add_column(l_tabid, 73, 'G27E', 'N', '27e~Ефективна~% ставка', '.5', 22, 37, 1, 0, 0, 0, '', '#00.0000', 1, 0, '', 0, 0, 0, '', '', 0);

  -- очищаем описание функций на справочник
  bars_metabase.delete_nsifunction(l_tabid);

  -- восстанавливаем ссылки сложных полей других таблиц
  for i in 1..l_extrnval.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_extrnval(i).srccolname);
    if (l_newcolid is not null) then
      bars_metabase.add_extrnval(
        l_extrnval(i).tabid,
        l_extrnval(i).colid,
        l_tabid,
        l_newcolid,
        l_extrnval(i).tab_alias,
        l_extrnval(i).tab_cond,
        l_extrnval(i).src_cond,
        l_extrnval(i).col_dyn_tabname);
    end if;
  end loop;

  -- восстанавливаем ссылки полей для условий фильтра других таблиц
  for i in 1..l_browsetbl.count loop
    l_newcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).addcolname);
    l_varcolid := bars_metabase.get_colid(l_tabid, l_browsetbl(i).varcolname);
    if (l_newcolid is not null and l_varcolid is not null) then
      bars_metabase.add_browsetbl( 
        l_browsetbl(i).hosttabid,
        l_tabid,
        l_browsetbl(i).addtabalias,
        l_browsetbl(i).hostcolid,
        l_newcolid,
        l_varcolid,
        l_browsetbl(i).cond_tag);
    end if;
  end loop;

  -- восстанавливаем ссылки полей других таблиц на нашу вложенную таблицу
  for i in 1..l_filtertbl.count loop
    bars_metabase.add_filtertbl(
      l_filtertbl(i).tabid,
      l_filtertbl(i).colid,
      l_tabid,
      l_filtertbl(i).fltcode,
      l_filtertbl(i).flag_ins,
      l_filtertbl(i).flag_del,
      l_filtertbl(i).flag_upd);
  end loop;

  -- восстанавливаем зависимости между колонками таблицы
  for i in 1..l_dependency.count loop
    bars_metabase.add_dependency(
      l_dependency(i).tabid,
      l_dependency(i).colid,
      l_dependency(i).event ,
      l_dependency(i).depcolid  ,
      l_dependency(i).action_type ,
      l_dependency(i).action_name ,
      l_dependency(i).default_value ,
      l_dependency(i).condition );
  end loop;

end;
/

commit;
