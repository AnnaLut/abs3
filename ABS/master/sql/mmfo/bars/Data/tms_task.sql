declare ID_ INT ;
BEGIN suda; 
--------------------------------------
id_ := TMS_UTL.create_or_replace_task
 (      p_task_code               => 'RKO1', -- унікальний код процедури (довідник TMS_TASK)
        p_task_group_id           => 1 ,  -- контекст банківської дати при виконанні процедури: 1 - фініш, 2 - старт, 3 - не встановлюється контекст дати
        p_sequence_number         => 47,  -- порядковий номер виконання завдання (може дублюватися)
        p_task_name               => 'Нарахування комісії за РКО 3570-6110',   -- назва завдання
        p_task_description        => 'регламентні роботи по закриттю місяця',  -- додатковий текстовий опис завдання
        p_separate_by_branch_mode => 3,  -- режим представлення РУ: 1 - виконувати процедуру на "/", 2 - кожна РУ обробляється по черзі, 3 - всі РУ обробляються паралельно
        p_action_on_failure       => 1,  -- порядок дій у разі виникнення помилки: 1 - продовжити виконання процедур, 2 - зупинити виконання наступних процедур
        p_task_statement          =>
q'[begin if trunc(gl.bd,'MM')<trunc(DAT_NEXT_U(gl.bd,1),'MM') then RKO.ACR(1, gl.BD, NULL); RKO.PAY(1, gl.BD, NULL); end if; end ;]' -- PL/SQL-блок, що виконується для даного завдання
   ) ;
--------------------------------------
id_ := TMS_UTL.create_or_replace_task
 (      p_task_code               => 'RKO2', -- унікальний код процедури (довідник TMS_TASK)
        p_task_group_id           => 1 ,  -- контекст банківської дати при виконанні процедури: 1 - фініш, 2 - старт, 3 - не встановлюється контекст дати
        p_sequence_number         => 48,  -- порядковий номер виконання завдання (може дублюватися)
        p_task_name               => 'Погашення комісії за РКО 2600-3570,3579',   -- назва завдання
        p_task_description        => 'Кожного робочого дня',  -- додатковий текстовий опис завдання
        p_separate_by_branch_mode => 3,  -- режим представлення РУ: 1 - виконувати процедуру на "/", 2 - кожна РУ обробляється по черзі, 3 - всі РУ обробляються паралельно
        p_action_on_failure     => 1,  -- порядок дій у разі виникнення помилки: 1 - продовжити виконання процедур, 2 - зупинити виконання наступних процедур
        p_task_statement          =>
'begin RKO.PAY(2,gl.BD, '' and a.ACC not in (select ACC from RKO_3570)'' ); end ;' -- PL/SQL-блок, що виконується для даного завдання
   ) ;
--------------------------------------
id_ := TMS_UTL.create_or_replace_task
 (      p_task_code               => 'RKO3', -- унікальний код процедури (довідник TMS_TASK)
        p_task_group_id           => 2 ,  -- контекст банківської дати при виконанні процедури: 1 - фініш, 2 - старт, 3 - не встановлюється контекст дати
        p_sequence_number         => 49,  -- порядковий номер виконання завдання (може дублюватися)
        p_task_name               => 'Перенесення заборгованості на прострочку 3570-3579',   -- назва завдання
        p_task_description        => '6 числа кожного місяця',  -- додатковий текстовий опис завдання
        p_separate_by_branch_mode => 3,  -- режим представлення РУ: 1 - виконувати процедуру на "/", 2 - кожна РУ обробляється по черзі, 3 - всі РУ обробляються паралельно
        p_action_on_failure     => 1,  -- порядок дій у разі виникнення помилки: 1 - продовжити виконання процедур, 2 - зупинити виконання наступних процедур
        p_task_statement          =>
'begin
   if to_char(gl.bd,''DD'')>=''06'' and to_char(DAT_NEXT_U(gl.bd,-1),''DD'')<''06'' then
      RKO.PAY(3,gl.BD,NULL);
   end if;
 end ;' -- PL/SQL-блок, що виконується для даного завдання
   ) ;
--------------------------------------  
commit;

--------------------------------------
id_ := TMS_UTL.create_or_replace_task
 (      p_task_code               => 'CCK_UPD_SPARAMS', -- унікальний код процедури (довідник TMS_TASK)
        p_task_group_id           => 1 ,  -- контекст банківської дати при виконанні процедури: 1 - фініш, 2 - старт, 3 - не встановлюється контекст дати
        p_sequence_number         => 100,  -- порядковий номер виконання завдання (може дублюватися)
        p_task_name               => 'Актуализация спецпараметров CCK',   -- назва завдання
        p_task_description        => 'Ежедневная актуализация спецпараметров (R011) дочерних счетов кредита к основному',  -- додатковий текстовий опис завдання
        p_separate_by_branch_mode => 3,  -- режим представлення РУ: 1 - виконувати процедуру на "/", 2 - кожна РУ обробляється по черзі, 3 - всі РУ обробляються паралельно
        p_action_on_failure     => 1,  -- порядок дій у разі виникнення помилки: 1 - продовжити виконання процедур, 2 - зупинити виконання наступних процедур
        p_task_statement          =>
'begin
   p_cck_update_sparams(gl.bd, gl.bd+1);
   commit;
 end ;' -- PL/SQL-блок, що виконується для даного завдання
   ) ;
--------------------------------------  
commit;
-----------------------------------
end;
/