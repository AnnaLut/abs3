@{
    Layout = "~/Views/Shared/_LayoutKendo.cshtml";
    ViewBag.Title = "Технологiчнi рахунки.";
}
@model BarsWeb.Areas.Sep.Models.SepTechAccountsFilterParams

<script src="~/lib/jsZip/jszip.min.js"></script>
<script src="~/Areas/Sep/Scripts/sep.techDocs.js"></script>

<h2>@ViewBag.Title</h2>
<div id="SepTechAccountToolBar1"></div>
<div id="dialogTableViewOptions">
    @Scripts.Render("~/bundles/sep/scripts/allsep")
    <div class="panel panel-default">
        <div class="panel-body">
            <form id="f1" method="post">
                <label id="lbl_CheckboxVO1">
                    <input id="CheckboxVO1" onclick='checkboxV01_handler(this)' type="checkbox" name="ShowFinAtrib" value="on" /> Показати фінансові атрибути
                </label>
                <br />
                <text>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</text>
                @if (string.IsNullOrEmpty(Model.ShowEquivalents))
                {
                    <label>
                        <input id="CheckboxVO3" onclick='chk03_handler(this)' type="checkbox" name="ShowEquivalents" /> Показати еквіваленти
                    </label>
                }
                else
                {
                    <label>
                        <input id="CheckboxVO3" onclick='chk03_handler(this)' checked="checked" type="checkbox" name="ShowEquivalents" /> Показати еквіваленти
                    </label>
                }
                <br />
                <text><input type="checkbox" disabled="disabled" /> Показати %% ставки</text>
                <br />
                <text><input type="checkbox" disabled="disabled" /> Показати інформацію про ліміти</text>
                <br />
                <text><input type="checkbox" disabled="disabled" /> Показати спецпараметри рахунків</text>
                <br />
                <text><input type="checkbox" disabled="disabled" /> Показати пов'язані рахунки</text>
                <br />
                <text><input type="checkbox" disabled="disabled" /> Показати інформацію по блокуванням рахунків</text>
                <br />
                @if (string.IsNullOrEmpty(Model.ShowClosedAcc))
                {
                    <label>
                        <input id="checkboxV04" type="checkbox" name="ShowClosedAcc" onclick='checkboxV04_handler(this)' /> Показувати закриті рахунки
                    </label>
                }
                else
                {
                    <label>
                        <input id="checkboxV04" type="checkbox" checked="checked" name="ShowClosedAcc" onclick='checkboxV04_handler(this)' /> Показувати закриті рахунки
                    </label>
                }
                <br />
                <br />
                <div align="right">
                    <div id="acceptCancelBtnToolbar1"></div>
                </div>
            </form>
        </div>
    </div>
</div>
<div id="dialogCashFlowPeriod">
    <div class="panel panel-default">
        <div class="panel-body">
            <text>З: </text><input id="datepicker1" /> &nbsp;<text>По:</text> <input id="datepicker2" />
        </div>
        <div align="right">
            <div id="dialogCashFlowBtnToolbar1"></div>
        </div>
    </div>
</div>
<div id="dialogHistoryAcc">
    <div class="panel panel-default">
        <div id="HistoryAccToolbar1">
        </div>
        <div id="GridHistoryAcc">
        </div>
    </div>
</div>
<div id="dialogHistoryAccChangeParam">
    <div id="HistoryAccChangeParamToolbar1">
    </div>
    <div class="panel panel-default">
        <div id="GridHistoryAccChangeParam">
        </div>
    </div>
</div>
<div id="dialogCurrencySummary">
    <div class="panel panel-default">
        <div id="GridCurrencySummary">
        </div>
    </div>
</div>
@Html.Partial(Model.PartialVariantString)

@(Html.Kendo().Window()
    .Name("Details")
    .Title("Перегляд рахунку")
    .Resizable()
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(700).Height(570)
    .Content("<span class=\"k-icon k-i-refresh k-loading\" role=\"presentation\"></span> Завантаження...")
    .HtmlAttributes(new { })
    .Actions(actions => actions
            .Refresh()
            .Minimize()
            .Maximize()
            .Close()
    )
    .Events(events => events
    .Refresh("onRefreshDetail")
    .Close("onCloseDetail")
    )
)
<script>
    var firstLoad = true;
    $('#HistoryAccToolbar1').kendoToolBar({
        resizable: false,
        items: [
              { template: "<text>&nbsp;C&nbsp;&nbsp;</text>" },
              { template: "<input type='text' id='datepicker31'></input>" },
              { template: "<text>&nbsp;По&nbsp;&nbsp;</text>" },
              { template: "<input type='text' id='datepicker32'></input>" },
              { template: "<text>&nbsp;&nbsp;&nbsp;</text>" },
              {
                  template: "<button type='button' id='btn_ReloadGridHistoryAcc' onclick='ReloadGridHistoryAcc()' class='k-button' title='Перечитати дані'><i class='pf-icon pf-16 pf-reload_rotate'></i></button>"
              }
        ]
    });

    $('#HistoryAccChangeParamToolbar1').kendoToolBar({
        resizable: false,
        items: [
              { template: "<text>&nbsp;C&nbsp;&nbsp;</text>" },
              { template: "<input type='text' id='datepicker41'></input>" },
              { template: "<text>&nbsp;По&nbsp;&nbsp;</text>" },
              { template: "<input type='text' id='datepicker42'></input>" },
              { template: "<text>&nbsp;&nbsp;&nbsp;</text>" },
              { template: "<input id='HistoryParamsDropDown1'/>" },
              { template: "<input id='HistoryParamsDropDown2'/>" },
              {
                  template: "<button type='button' id='btn_ReloadGrid' onclick='ReloadCurrentGrid1()' class='k-button' title='Перечитати дані'><i class='pf-icon pf-16 pf-reload_rotate'></i></button>"
              }
        ]
    });

    $('#datepicker31').change(function () {
        UpdateGridHistoryAcc();
    });

    $('#datepicker32').change(function () {
        UpdateGridHistoryAcc();
    });

    $('#datepicker41').change(function () {
        UpdateGridHistoryChangeParam();
    });

    $('#datepicker42').change(function () {
        UpdateGridHistoryChangeParam();
    });

    function UpdateGridHistoryAcc()
    {
        var dataGrid1 = GetCurrentGrid();
        var record1 = dataGrid1.dataItem(dataGrid1.select());
        if (record1)
        {
            SetDialohHistoryAccTitle(record1);
        }
        var grid =$("#GridHistoryAcc").data("kendoGrid");
        grid.dataSource.page(1);
        grid.dataSource.read();
    }

    function UpdateGridHistoryChangeParam()
    {
        var grid = $("#GridHistoryAccChangeParam").data("kendoGrid");
        grid.dataSource.page(1);
        grid.dataSource.read();
    }

    $('#datepicker41').change(function () {
        var dataGrid1 = GetCurrentGrid();
        var record1 = dataGrid1.dataItem(dataGrid1.select());
        if (record1)
        {
            SetDialohHistoryAccChangeParamTitle(record1);
        }
        var grid = $("#GridHistoryAccChangeParam").data("kendoGrid");
        grid.dataSource.page(1);
        grid.dataSource.read();
    });

    $('#datepicker42').change(function () {
        var dataGrid1 = GetCurrentGrid();
        var record1 = dataGrid1.dataItem(dataGrid1.select());
        if (record1)
        {
            SetDialohHistoryAccChangeParamTitle(record1);
        }
        var grid = $("#GridHistoryAccChangeParam").data("kendoGrid");
        grid.dataSource.page(1);
        grid.dataSource.read();
    });

    $('#SepTechAccountToolBar1').kendoToolBar({
        resizable: true,
        items: [
             {
                 template: "<button id='btn_tableViewOpt' type='button' class='k-button' onclick='openDialogViewTable()' title='Параметри перегляду'><i class='pf-icon pf-16 pf-view_options'></i></button>"
             },
             { type: "separator" },
             {
                 template: "<button id='btn_AccountDetailsView' type='button' onclick='openAccountDetailsView(this)'  class='k-button'  title='Перегляд / редагування атрибутів рахунку'><i class='pf-icon pf-16 pf-folder_open'></i></button>"
             },
             {
                 template: "<button type='button' id='btn_ReloadGrid' onclick='ReloadCurrentGrid()' class='k-button' title='Перечитати дані'><i class='pf-icon pf-16 pf-reload_rotate'></i></button>"
             },
             { type: "separator" },
             {
                 template: "<button type='button' class='k-button' id='btn_DocAccOtvetSep' title='Документи по рахунку ВІДПОВІДНИЙ СЕП'><i class='pf-icon pf-16 pf-slide-arrow_right'></i></button>"
             },
             {
                 template: "<button type='button' class='k-button' id='btn_DocAccBankInternInit' title='Документи по рахунку ВНУТРІШНІ і ПОЧАТКОВИЙ МІЖБАНК'><i class='pf-icon pf-16 pf-slide-arrow_left'></i></button>"
             },
             {
                 template: "<button type='button' class='k-button' id='btn_CashFlowPeriod' title='Обороти за Період дат'><i class='pf-icon pf-16 pf-tabs-export'></i></button>"
             },
             {
                 template: "<button type='button' class='k-button' id='btn_TurnOverAcc' title='Обороти по рахунку'><i class='pf-icon pf-16 pf-ov_update'></i></button>"
             },
             {
                 template: "<button type='button' class='k-button' id='btn_HistoryAcc' title='Історія рахунку'><i class='pf-icon pf-16 pf-book'></i></button>"
             },
             {
                 template: "<button type='button' class='k-button' id='btn_HistoryAccChangeParam' title='Історія зміни параметрів рахунку'><i class='pf-icon pf-16 pf-address_book-design'></i></button>"
             },
             {
                 template: "<button type='button' class='k-button' id='btn_LinkedAcc' title='Показувати пов&prime;язані рахунки'><i class='pf-icon pf-16 pf-ov_link'></i></button>"
             },
             {
                 template: "<button type='button' class='k-button' id='pbFilter' title='Складний фільтр'><i class='pf-icon pf-16 pf-filter-ok'></i></button>"
             },
             {
                 template: "<button type='button' class='k-button' id='btn_CurrencySummary' title='Підсумки по валютах'><i class='pf-icon pf-16 pf-currency_conversion'></i></button>"
             },
             {
                 type: "button", icon: "pf-icon pf-16 pf-table_column", id: "btn_SortWithoutKR", name: "btn_SortWithoutKR",
                 attributes: { "class": "k-button", "title": "Сортувати рахунку без урахування КР" }, togglable: true
             },
             {
                 template:
                 "<button type='button' class='k-button' id='btn_Customer' onclick='open_CustomerCard()' title='Картка клієнта'><i class='pf-icon pf-16 pf-ov_customer'></i></button>"
             },
             { type: "separator" },
             {
                 template: "<button id='pbDocsProc' type='button' class='k-button' onclick='bars.sepTechDocs.getTechGridProccesingData()' title='Показати подокументний склад процесінгово рахунку'><i class='pf-icon pf-16 pf-accept_doc'></i></button>"
             },
             /*{
                 template: "<button id='pbPercentCalc' type='button' class='k-button' onclick='bars.sepTechDocs.getTechGridAccData()' title='Моделювання нарахованих %'><i class='pf-icon pf-16 pf-percentage'></i></button>",
                 hidden: true
             },*/
             { type: "separator" },
             { template: "<text id='lbl_QtyRecords'></text>" }
        ]
    });

    function onRefreshDetail(e) { }

    function onCloseDetail(e) {
        e.sender.element.context.innerHTML = '<span class="k-icon k-i-refresh k-loading" role="presentation"></span> Завантаження...';
    }

    function dialogTableViewOptionsClose(button) {
        var window = $("#dialogTableViewOptions").data("kendoWindow");
        window.close();
    }

    function dialogTableCashFlowClose(button) {
        var window = $("#dialogCashFlowPeriod").data("kendoWindow");
        window.close();
    }

    // show hide closed acc by checked control val
    $(document).ready(function () {
        if ('@Model.ShowFinAtrib' == 'on') {
            document.getElementById("CheckboxVO1").checked=true;
        }
        debugger;
        window.GridVariantString = '@Model.GridVariantString';
        if (document.getElementById("CheckboxVO1").checked==false)
        {
            var grid = $("#" + GetCurrentSepTechAccountsGrid().id + "").data("kendoGrid");
            GridColumnsHideShow(grid, 4, 10, false);
        }


        var grid = GetCurrentGrid();
        var chk04 = $("#checkboxV04").is(":checked"); // get closed acc val
        if (chk04) {
            grid.showColumn(GetColumnIndexByTitle(grid, "Дата закриття"));
        }
        else {
            grid.hideColumn(GetColumnIndexByTitle(grid, "Дата закриття"));
        }
    });

    function acceptViewTableHandler(button) {
        dialogTableViewOptionsClose();
        var CheckboxVO1 = $("#CheckboxVO1").is(":checked"); // show attrib
        var CheckboxVO3 = $("#CheckboxVO3").is(":checked"); // show equ
        if (CheckboxVO3==false || CheckboxVO3==true) {
            document.forms["f1"].submit();
        }
        if (CheckboxVO3==false && CheckboxVO1 == false) {
            document.getElementById('CheckboxVO1').value = "off";
            document.forms["f1"].submit();

        }
    }

    function checkboxV01_handler(element) {
        chk03 = null;
        var grid = $("#" + GetCurrentSepTechAccountsGrid().id + "").data("kendoGrid");
        GridColumnsHideShow(grid, 4, 10, element.checked);
    }

    var chk03 = null;
    function chk03_handler(element) {
        if (element.checked) {
            document.getElementById("CheckboxVO1").checked=true;
            chk03 = true;
        }
        if (!element.checked) {
            chk03 = false;
        }
    }

    function checkboxV04_handler(element) {
        // Дата закрытия - показывать скрывать
        var grid = GetCurrentGrid();
        var index = GetColumnIndexByTitle(grid, "Дата закриття");
        if (element.checked) {
            grid.showColumn(index);
        }
        if (!element.checked) {
            grid.hideColumn(index);
        }
    }

    function GridColumnsHideShow(grid, columnFirst, columnLast, showHide) {
        for (i = columnFirst; i <= columnLast; i++) {
            if (showHide) {
                grid.showColumn(i);
            } else {
                grid.hideColumn(i);
            }
        }
    }

    function GetCurrentGrid() {
        var grid = $("#" + GetCurrentSepTechAccountsGrid().id + "").data("kendoGrid");
        return grid;
    }

    $("#CheckboxVO1").change(function () {
        if (document.getElementById("CheckboxVO3").checked && !this.checked) {
            document.getElementById("CheckboxVO3").checked = false;
        }
    });

    $("#GridHistoryAcc").kendoGrid({
        columns: [
            {
                field: "ACC",
                hidden: true
            },
            {
                field: "NN",
                title: "-",
                width: 60
            },
            {
                field: "FDAT",
                headerAttributes: { style: "white-space: normal;" },
                title: "Дата руху",
                template: "#=FDAT != null ? kendo.toString(kendo.parseDate(FDAT),'dd.MM.yyyy') : ''#",
                width: 50
            },
            {
                field: "SV",
                title: "Залишок вхiдний",
                headerAttributes: { style: "white-space: normal;" },
                aggregates: ["sum"],
                template: "#=CellPaint(SV)#",
                width: 50
            },
            {
                field: "SVQ",
                headerAttributes: { style: "white-space: normal;" },
                title: "Обороти Дебет",
                template: "#=moneyFormat(SVQ)#",
                width: 50
            },
            {
                field: "OD",
                headerAttributes: { style: "white-space: normal;" },
                title: "Обороти Кредит",
                template: "#=moneyFormat(OD)#",
                width: 50
            },
            {
                field: "ODQ",
                headerAttributes: { style: "white-space: normal;" },
                title: "Залишок вихiдний",
                template: "#=CellPaint(ODQ)#",
                width: 50
            }
        ],
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/sep/SepTechAccounts/GetGridHistoryAccList'),
                    data: GridHistoryAccData
                }
            },
            schema: {
                data: "Data",
                total: "Total",
                errors: "Errors",
                model: {
                    fields: {
                        NN: { type: "string" },
                        FDAT: { type: "date" },
                        ACC: { type: "number" },
                        SV: { type: "number" },
                        SVQ: { type: "number" },
                        OD: { type: "number" },
                        ODQ: { type: "number" }
                    }
                }
            }
        },
        autoBind: false,
        sortable: true,
        resizable: true,
        selectable: "multiple"
    });

    $("#GridHistoryAccChangeParam").kendoGrid({
        columns: [
            {
                field: "PARNAME",
                title: "Параметр",
                width: 50
            },
            {
                field: "VALOLD",
                title: "Застаріле значення",
                width: 50
            },
            {
                field: "VALNEW",
                title: "Нове значення",
                width: 50
            },
            {
                field: "DAT",
                title: "Дата зміни",
                template: "#=DAT != null ? kendo.toString(kendo.parseDate(DAT),'dd.MM.yyyy H:mm:ss') : ''#",
                width: 50
            },
            {
                field: "ISP",
                title: "Внес зміни",
                width: 50
            },
            {
                field: "FIO",
                title: "ФІО користувача",
                width: 50
            }
        ],
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/sep/SepTechAccounts/GetGridHistoryAccChangeParamList'),
                    cache: false,
                    data: HistoryAccChangeParamData
                }
            },
            schema: {
                data: "Data"
            }
           
        },
        autoBind: false,
        selectable: "single",
        scrollable: true
    });

    function HistoryAccChangeParamData() {
        return {
            NACC: nAcc,
            TABID:  $("#HistoryParamsDropDown1").data("kendoDropDownList").value(),
            COLID:  $("#HistoryParamsDropDown2").data("kendoDropDownList").value(),
            dat11:  $("#datepicker41").data("kendoDatePicker").value(),
            dat22:  $("#datepicker42").data("kendoDatePicker").value()
        };
    }
   
    $("#GridCurrencySummary").kendoGrid({
        columns: [
            {
                field: "LCV",
                title: "Валюта",
                width: 50
            },
            {
                field: "ISDF",
                title: "Вхідний залишок ДЕБЕТ",
                width: 50,
                template: "#=CellPaint(ISDF)#",
                headerAttributes: { style: "white-space: normal" }
            },
            {
                field: "ISKF",
                title: "Вхідний залишок КРЕДИТ",
                width: 50,
                template: "#=CellPaint(ISKF)#",
                headerAttributes: { style: "white-space: normal" }
            },
            {
                field: "DOS",
                title: "Обороти Дебет",
                width: 50,
                template: "#=CellPaint(DOS)#",
                headerAttributes: { style: "white-space: normal" }
            },
            {
                field: "KOS",
                title: "Обороти Кредит",
                width: 50,
                template: "#=CellPaint(KOS)#",
                headerAttributes: { style: "white-space: normal" }
            },
            {
                field: "OSTCD",
                title: "Вихідний залишок ДЕБЕТ",
                width: 50,
                template: "#=CellPaint(OSTCD)#",
                headerAttributes: { style: "white-space: normal" }
            },
            {
                field: "OSTCK",
                title: "Вихідний залишок КРЕДИТ",
                width: 50,
                template: "#=CellPaint(OSTCK)#",
                headerAttributes: { style: "white-space: normal" }
            },
            {
                field: "RATQ",
                title: "Середньозважена ставка",
                width: 50,
                template: "#=CellPaint(RATQ)#",
                headerAttributes: { style: "white-space: normal" }
            }
        ],
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/sep/SepTechAccounts/GetGridCurrencySummaryList')
                }
            },
            requestStart: showGridLoader,
            requestEnd: endGridLoader,
            schema: {
                data: "Data"
            }
        },
        autoBind: false,
        selectable: "single",
        scrollable: true
    });

    function showGridLoader(e) {
        debugger;
        if (firstLoad) {
            bars.ui.loader('#GridCurrencySummary', true);
            firstLoad = false;
        }
    }
    function endGridLoader(e) {
        debugger;
        bars.ui.loader('#GridCurrencySummary', false)
    }

    $("#dialogTableViewOptions").kendoWindow({
        actions: ["Close"],
        draggable: true,
        height: "350px",
        visible: false,
        modal: true,
        resizable: false,
        title: "Параметри перегляду",
        width: "520px"
    });

    $("#dialogCashFlowPeriod").kendoWindow({
        actions: ["Close"],
        draggable: true,
        height: "150px",
        visible: false,
        modal: true,
        resizable: false,
        title: "Обороти за період дат",
        width: "520px"
    });

    $("#dialogHistoryAcc").kendoWindow({
        actions: ["Close"],
        draggable: true,
        height: "650px",
        visible: false,
        modal: true,
        resizable: false,
        title: "Історія рахунку №",
        width: "720px"
    });

    $("#dialogHistoryAccChangeParam").kendoWindow({
        actions: ["Close"],
        draggable: true,
        height: "950px",
        visible: false,
        modal: true,
        resizable: false,
        title: "Історія змін параметрів рахунку №",
        width: "950px"
    });

    $("#dialogCurrencySummary").kendoWindow({
        actions: ["Close"],
        draggable: true,
        height: "580px",
        visible: false,
        modal: true,
        resizable: false,
        title: "Таблиця підсумків по валютах",
        width: "820px"
    });

    var DateCashFlowPeriod1 = null;
    var DateCashFlowPeriod2 = null;
    $(document).ready(function () {
        // create DateTimePicker from input HTML element
        $("#datepicker1").kendoDatePicker({
            animation: false,
            value: GetBankDate(),
            format: "dd.MM.yyyy"
        });

        $("#datepicker2").kendoDatePicker({
            animation: false,
            value: GetBankDate(),
            format: "dd.MM.yyyy"
        });

        $("#datepicker31").kendoDatePicker({
            animation: false,
            value: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model.dat11.Value.ToString("dd.MM.yyyy"))),
            format: "dd.MM.yyyy"
        });

        $("#datepicker32").kendoDatePicker({
            animation: false,
            value: GetBankDate(),
            format: "dd.MM.yyyy"
        });

        $("#datepicker41").kendoDatePicker({
            animation: false,
            value: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model.dat11.Value.ToString("dd.MM.yyyy"))),
            format: "dd.MM.yyyy"
        });

        $("#datepicker42").kendoDatePicker({
            animation: false,
            value: GetBankDate(),
            format: "dd.MM.yyyy"
        });

    });

    $("#HistoryParamsDropDown1").kendoDropDownList({
        dataTextField: "SEMANTIC",
        dataValueField: "TABID",
        optionLabel: "Все",
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/sep/SepTechAccounts/GetHistoryParamSelectData')
                }
            },
            schema: {
                data: "Data"
            }
        },
        change: onChangeSelected1
    });

    $("#HistoryParamsDropDown2").kendoDropDownList({
        dataTextField: "SEMANTIC",
        dataValueField: "COLID",
        optionLabel: "Все",
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent
                        ('/sep/SepTechAccounts/GetHistoryParamSelectFromSelect1'),
                    data: GridHistoryParamsDropDown2Data
                }
            },
            schema: {
                data: "Data"
            }
        },
        change: onChangeSelected2
    })


    function GridHistoryParamsDropDown2Data()
    {
        return {
            TABID: $("#HistoryParamsDropDown1").data("kendoDropDownList").value(),
        }
    }

    function onChangeSelected1() {
        $('#GridHistoryAccChangeParam').data('kendoGrid').dataSource.read();
        if ($("#HistoryParamsDropDown1").data("kendoDropDownList").value() > 0) {
            var dropDown2 = $("#HistoryParamsDropDown2").data("kendoDropDownList");
            dropDown2.dataSource.read();
        } else {

        }
    }

    function onChangeSelected2() {
        $('#GridHistoryAccChangeParam').data('kendoGrid').dataSource.read();
    }

    function GetBankDate() {
        var result = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model.bankdate));
        return result;
    }

    function GetCurrentSepTechAccountsGrid() {
        var septechaccountGridv1 = document.getElementById("SepTechAccountsGridV1");
        var septechaccountGridv2 = document.getElementById("SepTechAccountsGridV2");
        var septechaccountGridvQF = document.getElementById("SepTechAccountsGridVQF");
        return septechaccountGridv1 || septechaccountGridv2 || septechaccountGridvQF;
    }

    $('#acceptCancelBtnToolbar1').kendoToolBar({
        resizable: false,
        items: [
             {
                 template: "<button id='acceptViewTable_btn' type='button' class='filter-ok' onclick='acceptViewTableHandler(this)' title='Задіяти'><i class='pf-icon pf-16 pf-filter-ok'></i></button>"
             },
             {
                 template: "<button id='cancelViewTable_btn' type='button' class='filter-remove' onclick='dialogTableViewOptionsClose()' title='Відміна'><i class='pf-icon pf-16 pf-filter-remove'></i></button>"
             }
        ]
    });

    $('#dialogCashFlowBtnToolbar1').kendoToolBar({
        resizable: false,
        items: [
             {
                 template: "<button id='btn_acceptCashFlowBtn' type='button' class='filter-ok'  title='Задіяти'><i class='pf-icon pf-16 pf-filter-ok'></i></button>"
             },
             {
                 template: "<button id='btn_cancelCashFlowBtn' type='button' class='filter-remove' title='Відміна' onclick='dialogTableCashFlowClose()'><i class='pf-icon pf-16 pf-filter-remove'></i></button>"
             }
        ]
    });

    $('#btn_CurrencySummary').click(function () {
        var dialog = $("#dialogCurrencySummary").data("kendoWindow");
        dialog.center().open();

        var grid = $("#GridCurrencySummary").data("kendoGrid");
        grid.dataSource.read();
        grid.refresh();
    });


    $('#btn_DocAccOtvetSep').click(function () {
        var grid = GetCurrentGrid();
        var record = grid.dataItem(grid.select());
        if (record) {
            var nAcc = record.ACC;
            var bankdate = GetBankDate();
            grid.dataSource.read();
            grid.refresh();
            var docUrl = bars.config.urlContent("/sep/SepTechAccounts/GetSepReplyTechDocs?NACC=" + nAcc + "&bankdate=" + bankdate + "");
            window.location = docUrl;
        }
    });

    $('#btn_DocAccBankInternInit').click(function () {
        var grid = GetCurrentGrid();
        var record = grid.dataItem(grid.select());
        if (record) {
            var nAcc = record.ACC;
            var NLS = record.NLS;
            grid.dataSource.read();
            grid.refresh();
            var docUrl = bars.config.urlContent("/sep/SepTechAccounts/GetSepBankInternInitDocs?NACC=" + nAcc + "&NLS='" + NLS + "'");
            window.location = docUrl;
        }
    });

    $('#btn_TurnOverAcc').click(function () {
        var grid = GetCurrentGrid();
        var record = grid.dataItem(grid.select());
        if (record) {
            var acc = record.ACC;
            var bdate = GetBankDate();
            grid.dataSource.read();
            grid.refresh();
            var docUrl = bars.config.urlContent("/customerlist/AccExtract.aspx?type=1&acc=" + acc + "&date=" + bdate + "");
            window.location = docUrl;
        }
    });

    var NACC_GridHistoryAcc = null;
    function GridHistoryAccData() {
        
        return {
            NACC: NACC_GridHistoryAcc,
            dat11: $("#datepicker31").data("kendoDatePicker").value(),
            dat22:  $("#datepicker32").data("kendoDatePicker").value(),
            parameters: getMetFilterString()
        }
    }

    $('#btn_HistoryAcc').click(function () {
        openDialogHistoryAcc();
    });

    function openDialogHistoryAcc() {
        var dialog = $("#dialogHistoryAcc").data("kendoWindow");
        dialog.center().open();
        // Refresh history Acc List:
        var grid = $("#GridHistoryAcc").data("kendoGrid");
        grid.dataSource.read();
    }

    function openDialogAccExtract() {
        var grid = $("#GridHistoryAcc").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        if (selectedItem.FDAT != null && selectedItem.acc != null) {
            window.location.replace("/barsroot/customerlist/accextract.aspx?type=1&acc="
                + selectedItem.acc + "&date=" + (kendo.toString(kendo.parseDate(selectedItem.FDAT), 'dd.MM.yyyy').replace('/', '.')).replace('/', '.'));
        }
    }

    $("#GridHistoryAcc").on("dblclick", " tbody > tr", function () {
        openDialogAccExtract();
    });

    $("#" + GetCurrentSepTechAccountsGrid().id + "").on("dblclick", " tbody > tr", function () {
        openDialogHistoryAcc();
    });

    $('#btn_HistoryAccChangeParam').click(function () {
        var dialog = $("#dialogHistoryAccChangeParam").data("kendoWindow");
        dialog.center().open();
        // Refresh history Acc List:
        $('#GridHistoryAccChangeParam').data('kendoGrid').dataSource.read({ "nAcc": nAcc });

        var grid = $("#GridHistoryAccChangeParam").data("kendoGrid");
        grid.dataSource.read();
        grid.refresh();
    });

    $('#btn_acceptCashFlowBtn').click(function () {
        var datepicker1 = $("#datepicker1").data("kendoDatePicker");
        var datepicker2 = $("#datepicker2").data("kendoDatePicker");
        DateCashFlowPeriod1 = datepicker1.value();
        DateCashFlowPeriod2 = datepicker2.value();
        var grid = GetCurrentGrid();
        grid.dataSource.read();
        grid.refresh();
        dialogTableCashFlowClose(this);
    });

    $('#btn_CashFlowPeriod').click(function () {
        var dialog = $("#dialogCashFlowPeriod").data("kendoWindow");
        dialog.center().open();
    });

    var SortWithoutKR = null;
    $('#btn_SortWithoutKR').click(function () {
        if (SortWithoutKR == false) {
            SortWithoutKR = null;
        }
        if (SortWithoutKR == true) {
            SortWithoutKR = false;
        }
        if (SortWithoutKR == null) {
            SortWithoutKR = true;
        }
        ReloadCurrentGrid();
    });

    //btn_LinkedAcc
    var LinkedAccFlag = false;
    var nAcc;
    $('#btn_LinkedAcc').click(function () {
        LinkedAccFlag = true
        var grid = GetCurrentGrid();
        var record = grid.dataItem(grid.select());
        if (record) {
            nAcc = record.ACC;
            grid.dataSource.read();
            grid.refresh();
        }
        else {
            alert('Номер счета не выбран!');
        }
    });

    function SepTechAccountsGridData() {
        
        return {
            SortWithoutKR: SortWithoutKR,
            DateCashFlowPeriod1: DateCashFlowPeriod1,
            DateCashFlowPeriod2: DateCashFlowPeriod2,
            LinkedAccFlag: LinkedAccFlag,
            nAcc: nAcc,
            parameters: getMetFilterString()
        }
    };

    function SepTechAccountsGridonRowSelected(e) {
        SetDialohHistoryAccTitle(this.dataItem(this.select()));
        SetDialohHistoryAccChangeParamTitle(this.dataItem(this.select()));
        bars.utils.sep.enableButton('btn_AccountDetailsView', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_DocAccOtvetSep', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_DocAccBankInternInit', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_TurnOverAcc', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_HistoryAcc', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_HistoryAccChangeParam', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_LinkedAcc', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_Customer', GetGridSelectRowState());
        bars.utils.sep.enableButton('pbDocsProc', GetGridSelectRowState());
        //bars.utils.sep.enableButton('pbPercentCalc', GetGridSelectRowState());

        var grid = GetCurrentGrid();
        var selectedItem = grid.dataItem(grid.select());
        NACC_GridHistoryAcc = selectedItem.ACC;
        if (GetCurrentSepTechAccountsGrid().id != "SepTechAccountsGridVQF") {
            var ids = grid.select().map(function () {
                return grid.dataItem($(this)).Id
            }).toArray();
            $.cookie('sepTechRows', JSON.stringify(ids));
        }
    }

    // Изменение Title для истории Счета:
    function SetDialohHistoryAccTitle(item) {
        var dialog = $("#dialogHistoryAcc").data("kendoWindow");
        nAcc = item.ACC;  // record acc number
        var d1 = $("#datepicker31").data("kendoDatePicker").value();
        var d2 = $("#datepicker32").data("kendoDatePicker").value();
        dialog.title("Історія рахунку №" + item.NLS + " (" + item.LCV + ") З:" + kendo.toString(kendo.parseDate(d1),'dd.MM.yyyy')  + " По:" +   kendo.toString(kendo.parseDate(d2),'dd.MM.yyyy'));
    }

    // Изменение Title для истории изменения парамтеров Счета:
    function SetDialohHistoryAccChangeParamTitle(item) {
        var dialog = $("#dialogHistoryAccChangeParam").data("kendoWindow");
        var d1 = $("#datepicker41").data("kendoDatePicker").value();
        var d2 = $("#datepicker42").data("kendoDatePicker").value();
        nAcc = item.ACC;     // record acc number
        dialog.title("Історія змін параметрів рахунку №" + item.NLS + " (" + item.LCV + ") З:" + kendo.toString(kendo.parseDate(d1),'dd.MM.yyyy') + " По:" +  kendo.toString(kendo.parseDate(d2),'dd.MM.yyyy'));

    }

    //Просмотр атрибутов счета
    function openAccountDetailsView(e) {
        var grid = GetCurrentGrid();
        var selectedItem = grid.dataItem(grid.select());
        showDetails(selectedItem);
    }

    function showDetails(item) {
        var docUrl = bars.config.urlContent("/viewaccounts/accountform.aspx?acc=" + item.ACC + "&rnk="+item.RNK+"&accessmode=0&type=0");
        window.location = docUrl;
    }

    function openDialogViewTable() {
        var dialog = $("#dialogTableViewOptions").data("kendoWindow");
        dialog.center().open();
    }

    function CellPaintQF(data) {
        data = data / 100;
        if (data == 0) {
            return moneyFormat(data);
        }
        else {
            if (data < 0) {
                return "<font color=\"red\">" + moneyFormat(Math.abs(data)) + "</font>";
            }
            else if (data > 0) {
                return "<font color=\"blue\">" + moneyFormat(data) + "</font>";
            }
        }
    }

    // Set Qty records on a gread to label
    function lbl_QtyRecords_SetValue() {
        var grid = GetCurrentGrid();
        var dataSource = grid.dataSource;
        // document.getElementById('lbl_QtyRecords').innerHTML = 'Счетов всего: ' + dataSource.total().toString();
    }

    function grid_dataBound(e) {
        lbl_QtyRecords_SetValue();
        bars.utils.sep.enableButton('btn_AccountDetailsView', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_DocAccOtvetSep', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_DocAccBankInternInit', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_TurnOverAcc', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_HistoryAcc', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_HistoryAccChangeParam', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_LinkedAcc', GetGridSelectRowState());
        bars.utils.sep.enableButton('btn_Customer', GetGridSelectRowState());
        bars.utils.sep.enableButton('pbDocsProc', GetGridSelectRowState());
        //bars.utils.sep.enableButton('pbPercentCalc', GetGridSelectRowState());

        var grid = this;
        var dataSource = this.dataSource;

        var state = kendo.stringify({
            page: dataSource.page(),
            pageSize: dataSource.pageSize(),
            sort: dataSource.sort(),
            group: dataSource.group(),
            filter: dataSource.filter()
        });

        if (GetCurrentSepTechAccountsGrid().id != "SepTechAccountsGridVQF") {
            $.cookie("sepTechState", state);
            if ($.cookie('sepTechRows')) {
                $.each(JSON.parse($.cookie('sepTechRows')), function () {
                    var item = dataSource.get(this);
                    var row = grid.tbody.find('[data-uid=' + item.uid + ']');
                    row.addClass('k-state-selected');
                })
            }
        }
    }

    function GetGridSelectRowState() {
        var grid = GetCurrentGrid();
        var selection = grid.select();
        return selection.length === 1;
    }

    function ReloadCurrentGrid() {
        var grid = GetCurrentGrid();
        grid.dataSource.page(1);
        grid.dataSource.read();
    }

    function ReloadCurrentGrid1() {
        $('#GridHistoryAccChangeParam').data('kendoGrid').dataSource.read();
        /*   var grid = $('#GridHistoryAccChangeParam').data('kendoGrid').dataSource.read();
           grid.dataSource.page(1);
           grid.dataSource.read();*/
    }

    function ReloadGridHistoryAcc() {
        $('#GridHistoryAcc').data('kendoGrid').dataSource.read();
    }

    function open_CustomerCard() {
        var grid = GetCurrentGrid();
        var record = grid.dataItem(grid.select());
        var docUrl = bars.config.urlContent("/clientregister/registration.aspx?readonly=1&rnk=" + record.RNK + "");
        window.location = docUrl;
    }

    // Раскраска и преобразование данных в формат отображения счетов
    function CellPaint(data) {
        if (data == 0) {
            return moneyFormat(data);
        }
        else {
            if (data < 0) {
                return "<font color=\"red\">" + moneyFormat(Math.abs(data)) + "</font>";

            }
            else if (data > 0) {
                return "<font color=\"blue\">" + moneyFormat(data) + "</font>";
            }
        }
    }

    // Преобразование в формать отображения денег
    function moneyFormat(money) {
        return kendo.toString(money, '###,##0.00').replace(new RegExp(",", 'g'), ' ');
    }

    function PAPCaseHandle(data) {
        switch (data) {
            case "1": return "А"; break;
            case "2": return "П"; break;
            case "3": return "А/П"; break;
            default: break;
        }
    }

    function GetColumnIndexByTitle(grid, title) {
        var columns = grid.columns;
        for (i=0; i<columns.length; i++) {
            if (columns[i].title == title) {
                return i;
            }
        }
        return 0;
    }

    function getMetFilterString(){
        var filterStr = window.metadataFiltersQuery === undefined ? '' : window.metadataFiltersQuery;
        return filterStr;
    };

    function setMetFilterString(filtersString){
        
        window.metadataFiltersQuery = filtersString;
    };

    $("#btn_AccountDetailsView").kendoButton();
    $("#btn_DocAccOtvetSep").kendoButton();
    $("#btn_DocAccBankInternInit").kendoButton();
    $("#btn_TurnOverAcc").kendoButton();
    $("#btn_HistoryAcc").kendoButton();
    $("#btn_HistoryAccChangeParam").kendoButton();
    $("#btn_LinkedAcc").kendoButton();
    $("#btn_Customer").kendoButton();
    $("#pbDocsProc").kendoButton();
    //$("#pbPercentCalc").kendoButton();

    $("#pbFilter").kendoButton({
        click: function() {
            debugger;
            var grString =  window.GridVariantString;
            var tblname , grid;
            if(grString == 'GetSEPTECHACCOUNT_V1')
            tblname = 'SEPTECHACCOUNT_V1';
            if(grString == 'GetSEPTECHACCOUNT_V2')
                tblname = 'SEPTECHACCOUNT_V2';
            if(grString == 'GetSEPTECHACCOUNT_VQF')
                tblname = 'SEPTECHACCOUNT_VQF';
                grid = $("#SepTechAccountsGridV2").data("kendoGrid");
            if(grString == 'GetSEPTECHACCOUNT_VQF')
                grid = $("#SepTechAccountsGridVQF").data("kendoGrid");
            bars.ui.getFiltersByMetaTable(function (response,success) {
                debugger;
                if(!success)
                    return false;
              
                
                if(grString == 'GetSEPTECHACCOUNT_V1' || grString == 'GetSEPTECHACCOUNT_V2')
                    grid = $("#SepTechAccountsGridV2").data("kendoGrid");
                if(grString == 'GetSEPTECHACCOUNT_VQF')
                    grid = $("#SepTechAccountsGridVQF").data("kendoGrid");
                //var grid = $("#SepTechAccountsGridVQF").data("kendoGrid");
                
                var paramObj = {};
                if (response && response.length > 0)
                    paramObj.urlParams = response.join(' and ');

                //localStorage.setItem('paramObj', JSON.stringify(paramObj));
                setMetFilterString(paramObj.urlParams);
                grid.dataSource.read({
                    parameters: paramObj.urlParams
                });

            }, { tableName: tblname });
        }
    });

</script>