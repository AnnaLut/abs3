@using BarsWeb.Models
@using GridMvc.Html
@using Infrastructure.Extensions
@model GridMvc<Documents>

@helper RenderRnk(decimal refDocum)
{
  <a style="border:0;" onclick="viewSelDocum(@refDocum);return false;" href="@Url.Content("~/documents/item/"+refDocum+"/")">
    @refDocum
  </a>
}
@helper RenderNazn(string nazn)
{
  <span title="@nazn">@(nazn.Length < 25 ? nazn : nazn.Substring(0, 25) + "...")</span>
}

@Html.Grid(Model).Named("DocumentsGrid").Columns(columns =>
    {
      columns.Add(o => o.REF).Titled("Реф.")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true)
        .RenderValueAs(o=>RenderRnk(o.REF));
      columns.Add(o => o.USERID).Titled("Вик.")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true);
      columns.Add(o => o.ND).Titled("№ док")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true);
      columns.Add(o => o.NLSA).Titled("Рах-А")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true);
      columns.Add(o => o.S_).Titled("Сума")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true);
      columns.Add(o => o.LCV2).Titled("Вал(В)")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true);
      columns.Add(o => o.MFOB).Titled("МФО(В)")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true);
      columns.Add(o => o.NLSB).Titled("Рах-В")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true);
      columns.Add(o => o.DK).Titled("Д/К")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true);
      columns.Add(o => o.SK).Titled("СКП")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true);
      columns.Add(o => o.DATD).Titled("Дата док.")
        .Format("{0:dd/MM/yyyy}")
        .SetFilterWidgetType(string.Empty, new { format = "dd/mm/yyyy" });
      columns.Add(o => o.NAZN).Titled("Призначення платежу")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true)
        .RenderValueAs(o=>RenderNazn(o.NAZN));
      columns.Add(o => o.SOS).Titled("ОП")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true);
      columns.Add(o => o.TOBO).Titled("Код безб.від.")
        .Encoded(false)
        .Sanitized(false)
        .Filterable(true);
      columns.Add(o => o.TT,true);
    }).WithPaging(10).SetRowCssClasses(o => "docum-css-sos" + o.SOS).Sortable().Filterable().WithMultipleFilters()
