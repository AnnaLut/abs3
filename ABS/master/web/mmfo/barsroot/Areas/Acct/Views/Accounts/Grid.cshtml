@{
    Layout = null;
}
@model string

@*(Html.Kendo().Grid<Areas.Acct.Models.V_TOBO_ACCOUNTS_LITE>()
  .Name("AccountsGrid")
    .Columns(columns =>
    {
      /*columns.Command(i =>
      {
        i.Edit().Text(" ").HtmlAttributes(new { style = "min-width:18px;width:22px;height:22px;" });
        i.Destroy().Text(" ").HtmlAttributes(new { style = "min-width:18px;width:22px;height:22px;" });
        i.Custom(" ").Text("<span class=\"k-icon k-i-search\"></span>")
          .HtmlAttributes(new { style = "min-width:18px;width:22px;height:22px;" }).Click("showDetails");
        //i.Custom("Перегляд").Click("onBtShowDetailsClick");
      }).Width(80).HtmlAttributes(new { style = "min-width:80px" });*/
      columns.Bound(p => p.ACC).Hidden();
      columns.Bound(p => p.NLS).Title("Рахунок")
        .ClientTemplate("<a href=\"\\#\" onclick=\"showDetails(#=ACC#);return false;\" >#=NLS#</a>");
      columns.Bound(p => p.KV).Title("Валюта");
      columns.Bound(p => p.RNK).Title("Клієнт").HtmlAttributes(new { @class = "align-right" });
      columns.Bound(p => p.NMS).Title("Назва").Width(300).HtmlAttributes(new { style = "min-width:300px" });
      columns.Bound(p => p.OST).Title("Вхідний зал.").HtmlAttributes(new { @class = "money" })
      .ClientTemplate("#=moneyFormat(OST/100)#");
      columns.Bound(p => p.DOS).Title("Об. дебет").HtmlAttributes(new { @class = "money" })
      .ClientTemplate("#=moneyFormat(DOS/100)#");
      columns.Bound(p => p.KOS).Title("Об. кредит").HtmlAttributes(new { @class = "money" })
      .ClientTemplate("#=moneyFormat(KOS/100)#");
      columns.Bound(p => p.OSTC).Title("Факт. зал.").HtmlAttributes(new { @class = "money" })
      .ClientTemplate("#=moneyFormat(OSTC/100)#");
      columns.Bound(p => p.OSTB).Title("План. зал.").HtmlAttributes(new { @class = "money" })
      .ClientTemplate("#=moneyFormat(OSTB/100)#");
      columns.Bound(p => p.DAPP).Title("Дата ост. руху").Format("{0:MM/dd/yyyy}");
      columns.Bound(p => p.PAP).Title("Акт/Пас");
      columns.Bound(p => p.TIP).Title("Тип");
    })
    .Pageable(pager => pager
      .Input(true)
      .Numeric(true)
      .Info(false)
      .PreviousNext(true)
      .Refresh(true)
      .PageSizes(true)
    )
    .Sortable()
    .Filterable(filterable => filterable.Extra(false))
    .Selectable()
    .Resizable(resize => resize.Columns(true))
    .DataSource(dataSource => dataSource
        .WebApi()
        //.Ajax()
        .Model(i => i.Id(p => p.ACC))
        .PageSize(10)
        .Read(read => read.Url(Url.Content("~/api/acct/accounts/?branch=" + Url.Encode(Model))))
        //.Read(read => read.Url(Url.Content("~/acct/accounts/GridData/?branch=" + Url.Encode(Model))))
        .Destroy("Delete","Accounts")
        .Update("Update","Accounts"))
)*@
