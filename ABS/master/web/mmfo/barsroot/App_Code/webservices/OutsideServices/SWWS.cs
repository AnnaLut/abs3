//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.7.2046.0.
// 
namespace Bars.WebServices.Profix {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SWWSSoap", Namespace="http://sb.com.ua/webservices/")]
    public partial class SWWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUsersOfPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOfflineTaskListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOfflineReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelOfflineReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionDetailReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProfixReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcComissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayoutRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayoutConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayoutCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCityByCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPointTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormatInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMethodInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecOperationOperationCompleted;
        
        /// <remarks/>
        public SWWS() {
            this.Url = "https://tsws.sb.com.ua:30920/swws/SWWS.asmx";
        }
        
        /// <remarks/>
        public event GetUsersOfPointCompletedEventHandler GetUsersOfPointCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event GetOfflineTaskListCompletedEventHandler GetOfflineTaskListCompleted;
        
        /// <remarks/>
        public event GetOfflineReportCompletedEventHandler GetOfflineReportCompleted;
        
        /// <remarks/>
        public event CancelOfflineReportCompletedEventHandler CancelOfflineReportCompleted;
        
        /// <remarks/>
        public event TransactionDetailReportCompletedEventHandler TransactionDetailReportCompleted;
        
        /// <remarks/>
        public event ProfixReportCompletedEventHandler ProfixReportCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event CalcComissionCompletedEventHandler CalcComissionCompleted;
        
        /// <remarks/>
        public event GetTransferCompletedEventHandler GetTransferCompleted;
        
        /// <remarks/>
        public event SendRequestCompletedEventHandler SendRequestCompleted;
        
        /// <remarks/>
        public event SendConfirmCompletedEventHandler SendConfirmCompleted;
        
        /// <remarks/>
        public event SendCancelCompletedEventHandler SendCancelCompleted;
        
        /// <remarks/>
        public event SendEditCompletedEventHandler SendEditCompleted;
        
        /// <remarks/>
        public event PayoutRequestCompletedEventHandler PayoutRequestCompleted;
        
        /// <remarks/>
        public event PayoutConfirmCompletedEventHandler PayoutConfirmCompleted;
        
        /// <remarks/>
        public event PayoutCancelCompletedEventHandler PayoutCancelCompleted;
        
        /// <remarks/>
        public event ReturnRequestCompletedEventHandler ReturnRequestCompleted;
        
        /// <remarks/>
        public event ReturnConfirmCompletedEventHandler ReturnConfirmCompleted;
        
        /// <remarks/>
        public event ReturnCancelCompletedEventHandler ReturnCancelCompleted;
        
        /// <remarks/>
        public event FindClientCompletedEventHandler FindClientCompleted;
        
        /// <remarks/>
        public event GetCityByCountryCompletedEventHandler GetCityByCountryCompleted;
        
        /// <remarks/>
        public event GetCurrenciesCompletedEventHandler GetCurrenciesCompleted;
        
        /// <remarks/>
        public event GetDocumentTypeListCompletedEventHandler GetDocumentTypeListCompleted;
        
        /// <remarks/>
        public event GetCountriesCompletedEventHandler GetCountriesCompleted;
        
        /// <remarks/>
        public event GetDeliveryOptionsCompletedEventHandler GetDeliveryOptionsCompleted;
        
        /// <remarks/>
        public event GetDirectionsCompletedEventHandler GetDirectionsCompleted;
        
        /// <remarks/>
        public event GetStatesCompletedEventHandler GetStatesCompleted;
        
        /// <remarks/>
        public event GetFeaturesCompletedEventHandler GetFeaturesCompleted;
        
        /// <remarks/>
        public event GetPointsCompletedEventHandler GetPointsCompleted;
        
        /// <remarks/>
        public event GetPointTreeCompletedEventHandler GetPointTreeCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetFormatInfoCompletedEventHandler GetFormatInfoCompleted;
        
        /// <remarks/>
        public event GetMethodInfoCompletedEventHandler GetMethodInfoCompleted;
        
        /// <remarks/>
        public event ExecOperationCompletedEventHandler ExecOperationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetUsersOfPoint", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetUsersOfPoint(RequestValues args) {
            object[] results = this.Invoke("GetUsersOfPoint", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUsersOfPoint(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUsersOfPoint", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetUsersOfPoint(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersOfPointAsync(RequestValues args) {
            this.GetUsersOfPointAsync(args, null);
        }
        
        /// <remarks/>
        public void GetUsersOfPointAsync(RequestValues args, object userState) {
            if ((this.GetUsersOfPointOperationCompleted == null)) {
                this.GetUsersOfPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOfPointOperationCompleted);
            }
            this.InvokeAsync("GetUsersOfPoint", new object[] {
                        args}, this.GetUsersOfPointOperationCompleted, userState);
        }
        
        private void OnGetUsersOfPointOperationCompleted(object arg) {
            if ((this.GetUsersOfPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersOfPointCompleted(this, new GetUsersOfPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/AddUser", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] AddUser(RequestValues args) {
            object[] results = this.Invoke("AddUser", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddUser(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddUser", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndAddUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(RequestValues args) {
            this.AddUserAsync(args, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(RequestValues args, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        args}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/UpdateUser", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] UpdateUser(RequestValues args) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateUser(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateUser", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndUpdateUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(RequestValues args) {
            this.UpdateUserAsync(args, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(RequestValues args, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        args}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/ChangePassword", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangePassword(RequestValues args) {
            this.Invoke("ChangePassword", new object[] {
                        args});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangePassword(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangePassword", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndChangePassword(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(RequestValues args) {
            this.ChangePasswordAsync(args, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(RequestValues args, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        args}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetOfflineTaskList", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetOfflineTaskList(RequestValues args) {
            object[] results = this.Invoke("GetOfflineTaskList", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOfflineTaskList(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOfflineTaskList", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetOfflineTaskList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetOfflineTaskListAsync(RequestValues args) {
            this.GetOfflineTaskListAsync(args, null);
        }
        
        /// <remarks/>
        public void GetOfflineTaskListAsync(RequestValues args, object userState) {
            if ((this.GetOfflineTaskListOperationCompleted == null)) {
                this.GetOfflineTaskListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOfflineTaskListOperationCompleted);
            }
            this.InvokeAsync("GetOfflineTaskList", new object[] {
                        args}, this.GetOfflineTaskListOperationCompleted, userState);
        }
        
        private void OnGetOfflineTaskListOperationCompleted(object arg) {
            if ((this.GetOfflineTaskListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOfflineTaskListCompleted(this, new GetOfflineTaskListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetOfflineReport", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] GetOfflineReport(RequestValues args) {
            object[] results = this.Invoke("GetOfflineReport", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOfflineReport(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOfflineReport", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndGetOfflineReport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOfflineReportAsync(RequestValues args) {
            this.GetOfflineReportAsync(args, null);
        }
        
        /// <remarks/>
        public void GetOfflineReportAsync(RequestValues args, object userState) {
            if ((this.GetOfflineReportOperationCompleted == null)) {
                this.GetOfflineReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOfflineReportOperationCompleted);
            }
            this.InvokeAsync("GetOfflineReport", new object[] {
                        args}, this.GetOfflineReportOperationCompleted, userState);
        }
        
        private void OnGetOfflineReportOperationCompleted(object arg) {
            if ((this.GetOfflineReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOfflineReportCompleted(this, new GetOfflineReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/CancelOfflineReport", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] CancelOfflineReport(RequestValues args) {
            object[] results = this.Invoke("CancelOfflineReport", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelOfflineReport(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelOfflineReport", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndCancelOfflineReport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelOfflineReportAsync(RequestValues args) {
            this.CancelOfflineReportAsync(args, null);
        }
        
        /// <remarks/>
        public void CancelOfflineReportAsync(RequestValues args, object userState) {
            if ((this.CancelOfflineReportOperationCompleted == null)) {
                this.CancelOfflineReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelOfflineReportOperationCompleted);
            }
            this.InvokeAsync("CancelOfflineReport", new object[] {
                        args}, this.CancelOfflineReportOperationCompleted, userState);
        }
        
        private void OnCancelOfflineReportOperationCompleted(object arg) {
            if ((this.CancelOfflineReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelOfflineReportCompleted(this, new CancelOfflineReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/TransactionDetailReport", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] TransactionDetailReport(RequestValues args) {
            object[] results = this.Invoke("TransactionDetailReport", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTransactionDetailReport(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TransactionDetailReport", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndTransactionDetailReport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void TransactionDetailReportAsync(RequestValues args) {
            this.TransactionDetailReportAsync(args, null);
        }
        
        /// <remarks/>
        public void TransactionDetailReportAsync(RequestValues args, object userState) {
            if ((this.TransactionDetailReportOperationCompleted == null)) {
                this.TransactionDetailReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionDetailReportOperationCompleted);
            }
            this.InvokeAsync("TransactionDetailReport", new object[] {
                        args}, this.TransactionDetailReportOperationCompleted, userState);
        }
        
        private void OnTransactionDetailReportOperationCompleted(object arg) {
            if ((this.TransactionDetailReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionDetailReportCompleted(this, new TransactionDetailReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/ProfixReport", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] ProfixReport(RequestValues args) {
            object[] results = this.Invoke("ProfixReport", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProfixReport(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProfixReport", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndProfixReport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void ProfixReportAsync(RequestValues args) {
            this.ProfixReportAsync(args, null);
        }
        
        /// <remarks/>
        public void ProfixReportAsync(RequestValues args, object userState) {
            if ((this.ProfixReportOperationCompleted == null)) {
                this.ProfixReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProfixReportOperationCompleted);
            }
            this.InvokeAsync("ProfixReport", new object[] {
                        args}, this.ProfixReportOperationCompleted, userState);
        }
        
        private void OnProfixReportOperationCompleted(object arg) {
            if ((this.ProfixReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProfixReportCompleted(this, new ProfixReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/Login", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] Login(RequestValues args) {
            object[] results = this.Invoke("Login", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Login", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(RequestValues args) {
            this.LoginAsync(args, null);
        }
        
        /// <remarks/>
        public void LoginAsync(RequestValues args, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        args}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/CalcComission", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] CalcComission(RequestValues args) {
            object[] results = this.Invoke("CalcComission", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalcComission(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CalcComission", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndCalcComission(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void CalcComissionAsync(RequestValues args) {
            this.CalcComissionAsync(args, null);
        }
        
        /// <remarks/>
        public void CalcComissionAsync(RequestValues args, object userState) {
            if ((this.CalcComissionOperationCompleted == null)) {
                this.CalcComissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcComissionOperationCompleted);
            }
            this.InvokeAsync("CalcComission", new object[] {
                        args}, this.CalcComissionOperationCompleted, userState);
        }
        
        private void OnCalcComissionOperationCompleted(object arg) {
            if ((this.CalcComissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcComissionCompleted(this, new CalcComissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetTransfer", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetTransfer(RequestValues args) {
            object[] results = this.Invoke("GetTransfer", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransfer(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransfer", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetTransfer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferAsync(RequestValues args) {
            this.GetTransferAsync(args, null);
        }
        
        /// <remarks/>
        public void GetTransferAsync(RequestValues args, object userState) {
            if ((this.GetTransferOperationCompleted == null)) {
                this.GetTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferOperationCompleted);
            }
            this.InvokeAsync("GetTransfer", new object[] {
                        args}, this.GetTransferOperationCompleted, userState);
        }
        
        private void OnGetTransferOperationCompleted(object arg) {
            if ((this.GetTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferCompleted(this, new GetTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/SendRequest", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] SendRequest(RequestValues args) {
            object[] results = this.Invoke("SendRequest", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendRequest(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendRequest", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndSendRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void SendRequestAsync(RequestValues args) {
            this.SendRequestAsync(args, null);
        }
        
        /// <remarks/>
        public void SendRequestAsync(RequestValues args, object userState) {
            if ((this.SendRequestOperationCompleted == null)) {
                this.SendRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRequestOperationCompleted);
            }
            this.InvokeAsync("SendRequest", new object[] {
                        args}, this.SendRequestOperationCompleted, userState);
        }
        
        private void OnSendRequestOperationCompleted(object arg) {
            if ((this.SendRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRequestCompleted(this, new SendRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/SendConfirm", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] SendConfirm(RequestValues args) {
            object[] results = this.Invoke("SendConfirm", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendConfirm(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendConfirm", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndSendConfirm(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void SendConfirmAsync(RequestValues args) {
            this.SendConfirmAsync(args, null);
        }
        
        /// <remarks/>
        public void SendConfirmAsync(RequestValues args, object userState) {
            if ((this.SendConfirmOperationCompleted == null)) {
                this.SendConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendConfirmOperationCompleted);
            }
            this.InvokeAsync("SendConfirm", new object[] {
                        args}, this.SendConfirmOperationCompleted, userState);
        }
        
        private void OnSendConfirmOperationCompleted(object arg) {
            if ((this.SendConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendConfirmCompleted(this, new SendConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/SendCancel", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] SendCancel(RequestValues args) {
            object[] results = this.Invoke("SendCancel", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendCancel(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendCancel", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndSendCancel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void SendCancelAsync(RequestValues args) {
            this.SendCancelAsync(args, null);
        }
        
        /// <remarks/>
        public void SendCancelAsync(RequestValues args, object userState) {
            if ((this.SendCancelOperationCompleted == null)) {
                this.SendCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCancelOperationCompleted);
            }
            this.InvokeAsync("SendCancel", new object[] {
                        args}, this.SendCancelOperationCompleted, userState);
        }
        
        private void OnSendCancelOperationCompleted(object arg) {
            if ((this.SendCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCancelCompleted(this, new SendCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/SendEdit", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] SendEdit(RequestValues args) {
            object[] results = this.Invoke("SendEdit", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendEdit(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendEdit", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndSendEdit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void SendEditAsync(RequestValues args) {
            this.SendEditAsync(args, null);
        }
        
        /// <remarks/>
        public void SendEditAsync(RequestValues args, object userState) {
            if ((this.SendEditOperationCompleted == null)) {
                this.SendEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEditOperationCompleted);
            }
            this.InvokeAsync("SendEdit", new object[] {
                        args}, this.SendEditOperationCompleted, userState);
        }
        
        private void OnSendEditOperationCompleted(object arg) {
            if ((this.SendEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEditCompleted(this, new SendEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/PayoutRequest", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] PayoutRequest(RequestValues args) {
            object[] results = this.Invoke("PayoutRequest", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPayoutRequest(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PayoutRequest", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndPayoutRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void PayoutRequestAsync(RequestValues args) {
            this.PayoutRequestAsync(args, null);
        }
        
        /// <remarks/>
        public void PayoutRequestAsync(RequestValues args, object userState) {
            if ((this.PayoutRequestOperationCompleted == null)) {
                this.PayoutRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayoutRequestOperationCompleted);
            }
            this.InvokeAsync("PayoutRequest", new object[] {
                        args}, this.PayoutRequestOperationCompleted, userState);
        }
        
        private void OnPayoutRequestOperationCompleted(object arg) {
            if ((this.PayoutRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayoutRequestCompleted(this, new PayoutRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/PayoutConfirm", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] PayoutConfirm(RequestValues args) {
            object[] results = this.Invoke("PayoutConfirm", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPayoutConfirm(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PayoutConfirm", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndPayoutConfirm(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void PayoutConfirmAsync(RequestValues args) {
            this.PayoutConfirmAsync(args, null);
        }
        
        /// <remarks/>
        public void PayoutConfirmAsync(RequestValues args, object userState) {
            if ((this.PayoutConfirmOperationCompleted == null)) {
                this.PayoutConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayoutConfirmOperationCompleted);
            }
            this.InvokeAsync("PayoutConfirm", new object[] {
                        args}, this.PayoutConfirmOperationCompleted, userState);
        }
        
        private void OnPayoutConfirmOperationCompleted(object arg) {
            if ((this.PayoutConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayoutConfirmCompleted(this, new PayoutConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/PayoutCancel", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] PayoutCancel(RequestValues args) {
            object[] results = this.Invoke("PayoutCancel", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPayoutCancel(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PayoutCancel", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndPayoutCancel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void PayoutCancelAsync(RequestValues args) {
            this.PayoutCancelAsync(args, null);
        }
        
        /// <remarks/>
        public void PayoutCancelAsync(RequestValues args, object userState) {
            if ((this.PayoutCancelOperationCompleted == null)) {
                this.PayoutCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayoutCancelOperationCompleted);
            }
            this.InvokeAsync("PayoutCancel", new object[] {
                        args}, this.PayoutCancelOperationCompleted, userState);
        }
        
        private void OnPayoutCancelOperationCompleted(object arg) {
            if ((this.PayoutCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayoutCancelCompleted(this, new PayoutCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/ReturnRequest", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] ReturnRequest(RequestValues args) {
            object[] results = this.Invoke("ReturnRequest", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReturnRequest(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReturnRequest", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndReturnRequest(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void ReturnRequestAsync(RequestValues args) {
            this.ReturnRequestAsync(args, null);
        }
        
        /// <remarks/>
        public void ReturnRequestAsync(RequestValues args, object userState) {
            if ((this.ReturnRequestOperationCompleted == null)) {
                this.ReturnRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnRequestOperationCompleted);
            }
            this.InvokeAsync("ReturnRequest", new object[] {
                        args}, this.ReturnRequestOperationCompleted, userState);
        }
        
        private void OnReturnRequestOperationCompleted(object arg) {
            if ((this.ReturnRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnRequestCompleted(this, new ReturnRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/ReturnConfirm", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] ReturnConfirm(RequestValues args) {
            object[] results = this.Invoke("ReturnConfirm", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReturnConfirm(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReturnConfirm", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndReturnConfirm(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void ReturnConfirmAsync(RequestValues args) {
            this.ReturnConfirmAsync(args, null);
        }
        
        /// <remarks/>
        public void ReturnConfirmAsync(RequestValues args, object userState) {
            if ((this.ReturnConfirmOperationCompleted == null)) {
                this.ReturnConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnConfirmOperationCompleted);
            }
            this.InvokeAsync("ReturnConfirm", new object[] {
                        args}, this.ReturnConfirmOperationCompleted, userState);
        }
        
        private void OnReturnConfirmOperationCompleted(object arg) {
            if ((this.ReturnConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnConfirmCompleted(this, new ReturnConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/ReturnCancel", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Field[] ReturnCancel(RequestValues args) {
            object[] results = this.Invoke("ReturnCancel", new object[] {
                        args});
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReturnCancel(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReturnCancel", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public Field[] EndReturnCancel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Field[])(results[0]));
        }
        
        /// <remarks/>
        public void ReturnCancelAsync(RequestValues args) {
            this.ReturnCancelAsync(args, null);
        }
        
        /// <remarks/>
        public void ReturnCancelAsync(RequestValues args, object userState) {
            if ((this.ReturnCancelOperationCompleted == null)) {
                this.ReturnCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnCancelOperationCompleted);
            }
            this.InvokeAsync("ReturnCancel", new object[] {
                        args}, this.ReturnCancelOperationCompleted, userState);
        }
        
        private void OnReturnCancelOperationCompleted(object arg) {
            if ((this.ReturnCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnCancelCompleted(this, new ReturnCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/FindClient", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse FindClient(RequestValues args) {
            object[] results = this.Invoke("FindClient", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindClient(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindClient", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndFindClient(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void FindClientAsync(RequestValues args) {
            this.FindClientAsync(args, null);
        }
        
        /// <remarks/>
        public void FindClientAsync(RequestValues args, object userState) {
            if ((this.FindClientOperationCompleted == null)) {
                this.FindClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindClientOperationCompleted);
            }
            this.InvokeAsync("FindClient", new object[] {
                        args}, this.FindClientOperationCompleted, userState);
        }
        
        private void OnFindClientOperationCompleted(object arg) {
            if ((this.FindClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindClientCompleted(this, new FindClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetCityByCountry", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetCityByCountry(RequestValues args) {
            object[] results = this.Invoke("GetCityByCountry", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCityByCountry(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCityByCountry", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetCityByCountry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCityByCountryAsync(RequestValues args) {
            this.GetCityByCountryAsync(args, null);
        }
        
        /// <remarks/>
        public void GetCityByCountryAsync(RequestValues args, object userState) {
            if ((this.GetCityByCountryOperationCompleted == null)) {
                this.GetCityByCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCityByCountryOperationCompleted);
            }
            this.InvokeAsync("GetCityByCountry", new object[] {
                        args}, this.GetCityByCountryOperationCompleted, userState);
        }
        
        private void OnGetCityByCountryOperationCompleted(object arg) {
            if ((this.GetCityByCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCityByCountryCompleted(this, new GetCityByCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetCurrencies", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetCurrencies(RequestValues args) {
            object[] results = this.Invoke("GetCurrencies", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCurrencies(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCurrencies", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetCurrencies(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrenciesAsync(RequestValues args) {
            this.GetCurrenciesAsync(args, null);
        }
        
        /// <remarks/>
        public void GetCurrenciesAsync(RequestValues args, object userState) {
            if ((this.GetCurrenciesOperationCompleted == null)) {
                this.GetCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrenciesOperationCompleted);
            }
            this.InvokeAsync("GetCurrencies", new object[] {
                        args}, this.GetCurrenciesOperationCompleted, userState);
        }
        
        private void OnGetCurrenciesOperationCompleted(object arg) {
            if ((this.GetCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrenciesCompleted(this, new GetCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetDocumentTypeList", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetDocumentTypeList(RequestValues args) {
            object[] results = this.Invoke("GetDocumentTypeList", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDocumentTypeList(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDocumentTypeList", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetDocumentTypeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypeListAsync(RequestValues args) {
            this.GetDocumentTypeListAsync(args, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypeListAsync(RequestValues args, object userState) {
            if ((this.GetDocumentTypeListOperationCompleted == null)) {
                this.GetDocumentTypeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypeListOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypeList", new object[] {
                        args}, this.GetDocumentTypeListOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypeListOperationCompleted(object arg) {
            if ((this.GetDocumentTypeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypeListCompleted(this, new GetDocumentTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetCountries", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetCountries(RequestValues args) {
            object[] results = this.Invoke("GetCountries", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCountries(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCountries", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetCountries(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountriesAsync(RequestValues args) {
            this.GetCountriesAsync(args, null);
        }
        
        /// <remarks/>
        public void GetCountriesAsync(RequestValues args, object userState) {
            if ((this.GetCountriesOperationCompleted == null)) {
                this.GetCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountriesOperationCompleted);
            }
            this.InvokeAsync("GetCountries", new object[] {
                        args}, this.GetCountriesOperationCompleted, userState);
        }
        
        private void OnGetCountriesOperationCompleted(object arg) {
            if ((this.GetCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountriesCompleted(this, new GetCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetDeliveryOptions", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetDeliveryOptions(RequestValues args) {
            object[] results = this.Invoke("GetDeliveryOptions", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDeliveryOptions(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDeliveryOptions", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetDeliveryOptions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryOptionsAsync(RequestValues args) {
            this.GetDeliveryOptionsAsync(args, null);
        }
        
        /// <remarks/>
        public void GetDeliveryOptionsAsync(RequestValues args, object userState) {
            if ((this.GetDeliveryOptionsOperationCompleted == null)) {
                this.GetDeliveryOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryOptionsOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryOptions", new object[] {
                        args}, this.GetDeliveryOptionsOperationCompleted, userState);
        }
        
        private void OnGetDeliveryOptionsOperationCompleted(object arg) {
            if ((this.GetDeliveryOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryOptionsCompleted(this, new GetDeliveryOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetDirections", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetDirections(RequestValues args) {
            object[] results = this.Invoke("GetDirections", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDirections(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDirections", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetDirections(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectionsAsync(RequestValues args) {
            this.GetDirectionsAsync(args, null);
        }
        
        /// <remarks/>
        public void GetDirectionsAsync(RequestValues args, object userState) {
            if ((this.GetDirectionsOperationCompleted == null)) {
                this.GetDirectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectionsOperationCompleted);
            }
            this.InvokeAsync("GetDirections", new object[] {
                        args}, this.GetDirectionsOperationCompleted, userState);
        }
        
        private void OnGetDirectionsOperationCompleted(object arg) {
            if ((this.GetDirectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectionsCompleted(this, new GetDirectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetStates", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetStates(RequestValues args) {
            object[] results = this.Invoke("GetStates", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStates(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStates", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetStates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatesAsync(RequestValues args) {
            this.GetStatesAsync(args, null);
        }
        
        /// <remarks/>
        public void GetStatesAsync(RequestValues args, object userState) {
            if ((this.GetStatesOperationCompleted == null)) {
                this.GetStatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatesOperationCompleted);
            }
            this.InvokeAsync("GetStates", new object[] {
                        args}, this.GetStatesOperationCompleted, userState);
        }
        
        private void OnGetStatesOperationCompleted(object arg) {
            if ((this.GetStatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatesCompleted(this, new GetStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetFeatures", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetFeatures(RequestValues args) {
            object[] results = this.Invoke("GetFeatures", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFeatures(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFeatures", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetFeatures(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturesAsync(RequestValues args) {
            this.GetFeaturesAsync(args, null);
        }
        
        /// <remarks/>
        public void GetFeaturesAsync(RequestValues args, object userState) {
            if ((this.GetFeaturesOperationCompleted == null)) {
                this.GetFeaturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturesOperationCompleted);
            }
            this.InvokeAsync("GetFeatures", new object[] {
                        args}, this.GetFeaturesOperationCompleted, userState);
        }
        
        private void OnGetFeaturesOperationCompleted(object arg) {
            if ((this.GetFeaturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturesCompleted(this, new GetFeaturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetPoints", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetPoints(RequestValues args) {
            object[] results = this.Invoke("GetPoints", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPoints(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPoints", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetPoints(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPointsAsync(RequestValues args) {
            this.GetPointsAsync(args, null);
        }
        
        /// <remarks/>
        public void GetPointsAsync(RequestValues args, object userState) {
            if ((this.GetPointsOperationCompleted == null)) {
                this.GetPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPointsOperationCompleted);
            }
            this.InvokeAsync("GetPoints", new object[] {
                        args}, this.GetPointsOperationCompleted, userState);
        }
        
        private void OnGetPointsOperationCompleted(object arg) {
            if ((this.GetPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPointsCompleted(this, new GetPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetPointTree", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse GetPointTree(RequestValues args) {
            object[] results = this.Invoke("GetPointTree", new object[] {
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPointTree(RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPointTree", new object[] {
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndGetPointTree(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPointTreeAsync(RequestValues args) {
            this.GetPointTreeAsync(args, null);
        }
        
        /// <remarks/>
        public void GetPointTreeAsync(RequestValues args, object userState) {
            if ((this.GetPointTreeOperationCompleted == null)) {
                this.GetPointTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPointTreeOperationCompleted);
            }
            this.InvokeAsync("GetPointTree", new object[] {
                        args}, this.GetPointTreeOperationCompleted, userState);
        }
        
        private void OnGetPointTreeOperationCompleted(object arg) {
            if ((this.GetPointTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPointTreeCompleted(this, new GetPointTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/HelloWorld", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HelloWorld", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndHelloWorld(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetFormatInfo", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FormatInfo GetFormatInfo() {
            object[] results = this.Invoke("GetFormatInfo", new object[0]);
            return ((FormatInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFormatInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFormatInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public FormatInfo EndGetFormatInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FormatInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormatInfoAsync() {
            this.GetFormatInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetFormatInfoAsync(object userState) {
            if ((this.GetFormatInfoOperationCompleted == null)) {
                this.GetFormatInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormatInfoOperationCompleted);
            }
            this.InvokeAsync("GetFormatInfo", new object[0], this.GetFormatInfoOperationCompleted, userState);
        }
        
        private void OnGetFormatInfoOperationCompleted(object arg) {
            if ((this.GetFormatInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormatInfoCompleted(this, new GetFormatInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/GetMethodInfo", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MethodInfo GetMethodInfo(string systemId, SWWSMethod method, RequestValues args) {
            object[] results = this.Invoke("GetMethodInfo", new object[] {
                        systemId,
                        method,
                        args});
            return ((MethodInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMethodInfo(string systemId, SWWSMethod method, RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMethodInfo", new object[] {
                        systemId,
                        method,
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public MethodInfo EndGetMethodInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MethodInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetMethodInfoAsync(string systemId, SWWSMethod method, RequestValues args) {
            this.GetMethodInfoAsync(systemId, method, args, null);
        }
        
        /// <remarks/>
        public void GetMethodInfoAsync(string systemId, SWWSMethod method, RequestValues args, object userState) {
            if ((this.GetMethodInfoOperationCompleted == null)) {
                this.GetMethodInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMethodInfoOperationCompleted);
            }
            this.InvokeAsync("GetMethodInfo", new object[] {
                        systemId,
                        method,
                        args}, this.GetMethodInfoOperationCompleted, userState);
        }
        
        private void OnGetMethodInfoOperationCompleted(object arg) {
            if ((this.GetMethodInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMethodInfoCompleted(this, new GetMethodInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sb.com.ua/webservices/ExecOperation", RequestNamespace="http://sb.com.ua/webservices/", ResponseNamespace="http://sb.com.ua/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FindRecordsResponse ExecOperation(SWWSMethod method, RequestValues args) {
            object[] results = this.Invoke("ExecOperation", new object[] {
                        method,
                        args});
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecOperation(SWWSMethod method, RequestValues args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecOperation", new object[] {
                        method,
                        args}, callback, asyncState);
        }
        
        /// <remarks/>
        public FindRecordsResponse EndExecOperation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FindRecordsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExecOperationAsync(SWWSMethod method, RequestValues args) {
            this.ExecOperationAsync(method, args, null);
        }
        
        /// <remarks/>
        public void ExecOperationAsync(SWWSMethod method, RequestValues args, object userState) {
            if ((this.ExecOperationOperationCompleted == null)) {
                this.ExecOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecOperationOperationCompleted);
            }
            this.InvokeAsync("ExecOperation", new object[] {
                        method,
                        args}, this.ExecOperationOperationCompleted, userState);
        }
        
        private void OnExecOperationOperationCompleted(object arg) {
            if ((this.ExecOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecOperationCompleted(this, new ExecOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sb.com.ua/webservices/")]
    public partial class RequestValues {
        
        private string systemIdField;
        
        private string languageField;
        
        private int loginTypeField;
        
        private string pointCodeField;
        
        private string userLoginField;
        
        private string userPasswordField;
        
        private string userHashedPasswordField;
        
        private Field[] argsField;
        
        private string versionField;
        
        private string ticketField;
        
        private string encryptedDataField;
        
        /// <remarks/>
        public string SystemId {
            get {
                return this.systemIdField;
            }
            set {
                this.systemIdField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public int LoginType {
            get {
                return this.loginTypeField;
            }
            set {
                this.loginTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PointCode {
            get {
                return this.pointCodeField;
            }
            set {
                this.pointCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserLogin {
            get {
                return this.userLoginField;
            }
            set {
                this.userLoginField = value;
            }
        }
        
        /// <remarks/>
        public string UserPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string UserHashedPassword {
            get {
                return this.userHashedPasswordField;
            }
            set {
                this.userHashedPasswordField = value;
            }
        }
        
        /// <remarks/>
        public Field[] Args {
            get {
                return this.argsField;
            }
            set {
                this.argsField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Ticket {
            get {
                return this.ticketField;
            }
            set {
                this.ticketField = value;
            }
        }
        
        /// <remarks/>
        public string EncryptedData {
            get {
                return this.encryptedDataField;
            }
            set {
                this.encryptedDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sb.com.ua/webservices/")]
    public partial class Field {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sb.com.ua/webservices/")]
    public partial class EnumeratedValuesInfo {
        
        private string enumeratedValueField;
        
        private string enumeratedLabelField;
        
        /// <remarks/>
        public string EnumeratedValue {
            get {
                return this.enumeratedValueField;
            }
            set {
                this.enumeratedValueField = value;
            }
        }
        
        /// <remarks/>
        public string EnumeratedLabel {
            get {
                return this.enumeratedLabelField;
            }
            set {
                this.enumeratedLabelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sb.com.ua/webservices/")]
    public partial class FieldInfo {
        
        private string nameField;
        
        private string captionField;
        
        private FieldType typeField;
        
        private int maxLengthField;
        
        private bool enumeratedField;
        
        private EnumeratedValuesInfo[] enumeratedValuesField;
        
        private bool isRequiredField;
        
        private string maskField;
        
        private string commentField;
        
        private string exampleField;
        
        private string groupField;
        
        private string orderField;
        
        private string addInfoField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        public FieldType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int MaxLength {
            get {
                return this.maxLengthField;
            }
            set {
                this.maxLengthField = value;
            }
        }
        
        /// <remarks/>
        public bool Enumerated {
            get {
                return this.enumeratedField;
            }
            set {
                this.enumeratedField = value;
            }
        }
        
        /// <remarks/>
        public EnumeratedValuesInfo[] EnumeratedValues {
            get {
                return this.enumeratedValuesField;
            }
            set {
                this.enumeratedValuesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRequired {
            get {
                return this.isRequiredField;
            }
            set {
                this.isRequiredField = value;
            }
        }
        
        /// <remarks/>
        public string Mask {
            get {
                return this.maskField;
            }
            set {
                this.maskField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string Example {
            get {
                return this.exampleField;
            }
            set {
                this.exampleField = value;
            }
        }
        
        /// <remarks/>
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public string Order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public string AddInfo {
            get {
                return this.addInfoField;
            }
            set {
                this.addInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sb.com.ua/webservices/")]
    public enum FieldType {
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Integer,
        
        /// <remarks/>
        CurrencyAmount,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        CountryCode,
        
        /// <remarks/>
        CurrencyCode,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sb.com.ua/webservices/")]
    public partial class MethodInfo {
        
        private string descriptionField;
        
        private FieldInfo[] requestFieldsField;
        
        private FieldInfo[] responseFieldsField;
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public FieldInfo[] RequestFields {
            get {
                return this.requestFieldsField;
            }
            set {
                this.requestFieldsField = value;
            }
        }
        
        /// <remarks/>
        public FieldInfo[] ResponseFields {
            get {
                return this.responseFieldsField;
            }
            set {
                this.responseFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sb.com.ua/webservices/")]
    public partial class FormatInfo {
        
        private string decimalSeparatorField;
        
        private string dateTimePatternField;
        
        /// <remarks/>
        public string DecimalSeparator {
            get {
                return this.decimalSeparatorField;
            }
            set {
                this.decimalSeparatorField = value;
            }
        }
        
        /// <remarks/>
        public string DateTimePattern {
            get {
                return this.dateTimePatternField;
            }
            set {
                this.dateTimePatternField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sb.com.ua/webservices/")]
    public partial class FindRecordsResponse {
        
        private Field[][] foundRecordsField;
        
        private bool resultTruncatedField;
        
        private string ticketField;
        
        private string encryptedDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfField")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public Field[][] FoundRecords {
            get {
                return this.foundRecordsField;
            }
            set {
                this.foundRecordsField = value;
            }
        }
        
        /// <remarks/>
        public bool ResultTruncated {
            get {
                return this.resultTruncatedField;
            }
            set {
                this.resultTruncatedField = value;
            }
        }
        
        /// <remarks/>
        public string Ticket {
            get {
                return this.ticketField;
            }
            set {
                this.ticketField = value;
            }
        }
        
        /// <remarks/>
        public string EncryptedData {
            get {
                return this.encryptedDataField;
            }
            set {
                this.encryptedDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sb.com.ua/webservices/")]
    public enum SWWSMethod {
        
        /// <remarks/>
        HelloWorld,
        
        /// <remarks/>
        GetTransfer,
        
        /// <remarks/>
        GetTransferState,
        
        /// <remarks/>
        CalcComission,
        
        /// <remarks/>
        SendRequest,
        
        /// <remarks/>
        SendConfirm,
        
        /// <remarks/>
        SendCancel,
        
        /// <remarks/>
        SendEdit,
        
        /// <remarks/>
        SendEditCancel,
        
        /// <remarks/>
        SendEditConfirm,
        
        /// <remarks/>
        CancelRequest,
        
        /// <remarks/>
        CancelReject,
        
        /// <remarks/>
        CancelConfirm,
        
        /// <remarks/>
        ReturnRequest,
        
        /// <remarks/>
        ReturnConfirm,
        
        /// <remarks/>
        ReturnCancel,
        
        /// <remarks/>
        PayoutRequest,
        
        /// <remarks/>
        PayoutConfirm,
        
        /// <remarks/>
        PayoutCancel,
        
        /// <remarks/>
        GetCityByCountry,
        
        /// <remarks/>
        GetCurrencies,
        
        /// <remarks/>
        GetDocumentTypeList,
        
        /// <remarks/>
        GetCountries,
        
        /// <remarks/>
        GetDeliveryOptions,
        
        /// <remarks/>
        GetFeatures,
        
        /// <remarks/>
        GetDirections,
        
        /// <remarks/>
        GetStates,
        
        /// <remarks/>
        GetPoints,
        
        /// <remarks/>
        GetPointTree,
        
        /// <remarks/>
        GetUsersOfPoint,
        
        /// <remarks/>
        AddUser,
        
        /// <remarks/>
        UpdateUser,
        
        /// <remarks/>
        ChangePassword,
        
        /// <remarks/>
        GetOfflineTaskList,
        
        /// <remarks/>
        GetOfflineReport,
        
        /// <remarks/>
        CancelOfflineReport,
        
        /// <remarks/>
        TransactionDetailReport,
        
        /// <remarks/>
        ExecOperation,
        
        /// <remarks/>
        DirectSaveRegistration,
        
        /// <remarks/>
        GetReceiverRegistrationInfo,
        
        /// <remarks/>
        GetCRNByNames,
        
        /// <remarks/>
        GetClientTransfers,
        
        /// <remarks/>
        BlackListCancel,
        
        /// <remarks/>
        BlackListConfirm,
        
        /// <remarks/>
        Block,
        
        /// <remarks/>
        Unblock,
        
        /// <remarks/>
        ReturnBlocked,
        
        /// <remarks/>
        ReturnWithFeeRequest,
        
        /// <remarks/>
        CheckCash2Card,
        
        /// <remarks/>
        ForcePayout,
        
        /// <remarks/>
        GetUserLoyaltyInfo,
        
        /// <remarks/>
        LoyaltyLoginUser,
        
        /// <remarks/>
        LoyaltyGetActionCondition,
        
        /// <remarks/>
        LoyaltyGetLoyaOperation,
        
        /// <remarks/>
        LoyaltyGetLoyaOutOperation,
        
        /// <remarks/>
        LoyaltyGetLoyaTemplate,
        
        /// <remarks/>
        LoyaltyCreateLoyaOutOperation,
        
        /// <remarks/>
        LoyaltyRegisterUser,
        
        /// <remarks/>
        LoyaltyUpdateUser,
        
        /// <remarks/>
        LoyaltyChangePassword,
        
        /// <remarks/>
        LoyaltyJoinUser,
        
        /// <remarks/>
        LoyaltyLostPassword,
        
        /// <remarks/>
        GetPanEligibilityForm,
        
        /// <remarks/>
        GetCardInfo,
        
        /// <remarks/>
        RegisterDeviceRequest,
        
        /// <remarks/>
        RegisterDeviceConfirm,
        
        /// <remarks/>
        AuthenticateRequest,
        
        /// <remarks/>
        SendNotice,
        
        /// <remarks/>
        GetNotices,
        
        /// <remarks/>
        GetPointsForBankDeposit,
        
        /// <remarks/>
        AddPoint,
        
        /// <remarks/>
        DecryptTicketFromUrl,
        
        /// <remarks/>
        GetPayoutCurrencies,
        
        /// <remarks/>
        GetPurposes,
        
        /// <remarks/>
        TransactionABSDetailReport,
        
        /// <remarks/>
        TransferAutoCancel,
        
        /// <remarks/>
        ProfixReport,
        
        /// <remarks/>
        Login,
        
        /// <remarks/>
        FindClient,
        
        /// <remarks/>
        ClearingReport,
        
        /// <remarks/>
        GetRates,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetUsersOfPointCompletedEventHandler(object sender, GetUsersOfPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersOfPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersOfPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetOfflineTaskListCompletedEventHandler(object sender, GetOfflineTaskListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOfflineTaskListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOfflineTaskListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetOfflineReportCompletedEventHandler(object sender, GetOfflineReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOfflineReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOfflineReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void CancelOfflineReportCompletedEventHandler(object sender, CancelOfflineReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelOfflineReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelOfflineReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void TransactionDetailReportCompletedEventHandler(object sender, TransactionDetailReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionDetailReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionDetailReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void ProfixReportCompletedEventHandler(object sender, ProfixReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProfixReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProfixReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void CalcComissionCompletedEventHandler(object sender, CalcComissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcComissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcComissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetTransferCompletedEventHandler(object sender, GetTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void SendRequestCompletedEventHandler(object sender, SendRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void SendConfirmCompletedEventHandler(object sender, SendConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void SendCancelCompletedEventHandler(object sender, SendCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void SendEditCompletedEventHandler(object sender, SendEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void PayoutRequestCompletedEventHandler(object sender, PayoutRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayoutRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayoutRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void PayoutConfirmCompletedEventHandler(object sender, PayoutConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayoutConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayoutConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void PayoutCancelCompletedEventHandler(object sender, PayoutCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayoutCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayoutCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void ReturnRequestCompletedEventHandler(object sender, ReturnRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void ReturnConfirmCompletedEventHandler(object sender, ReturnConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void ReturnCancelCompletedEventHandler(object sender, ReturnCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Field[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Field[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void FindClientCompletedEventHandler(object sender, FindClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetCityByCountryCompletedEventHandler(object sender, GetCityByCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCityByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCityByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetCurrenciesCompletedEventHandler(object sender, GetCurrenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetDocumentTypeListCompletedEventHandler(object sender, GetDocumentTypeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetCountriesCompletedEventHandler(object sender, GetCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetDeliveryOptionsCompletedEventHandler(object sender, GetDeliveryOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetDirectionsCompletedEventHandler(object sender, GetDirectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetStatesCompletedEventHandler(object sender, GetStatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetFeaturesCompletedEventHandler(object sender, GetFeaturesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetPointsCompletedEventHandler(object sender, GetPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetPointTreeCompletedEventHandler(object sender, GetPointTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPointTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPointTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetFormatInfoCompletedEventHandler(object sender, GetFormatInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormatInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormatInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FormatInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FormatInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void GetMethodInfoCompletedEventHandler(object sender, GetMethodInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMethodInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMethodInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MethodInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MethodInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    public delegate void ExecOperationCompletedEventHandler(object sender, ExecOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FindRecordsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FindRecordsResponse)(this.results[0]));
            }
        }
    }
}
