/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace clientregister
{
    public sealed class VCustRelationDataRecord : BbRecord
    {
        public VCustRelationDataRecord(): base()
        {
            fillFields();
        }
        public VCustRelationDataRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VCustRelationDataRecord(BbDataSource Parent, OracleDecimal RowScn, Decimal? RNK, Decimal? REL_INTEXT, Decimal? REL_RNK, Decimal? REL_ID, String DATASET_ID, Decimal? VAGA1, Decimal? VAGA2, Decimal? TYPE_ID, String TYPE_NAME, String POSITION, string POSITION_R, String FIRST_NAME, String MIDDLE_NAME, String LAST_NAME, Decimal? DOCUMENT_TYPE_ID, String DOCUMENT_TYPE_NAME, String DOCUMENT, String TRUST_REGNUM, DateTime? TRUST_REGDAT, DateTime? BDATE_SIMPLE, DateTime? EDATE_SIMPLE, DateTime? BDATE_VAGA, DateTime? EDATE_VAGA, DateTime? BDATE_TRUSTEE, DateTime? EDATE_TRUSTEE, String NOTARY_NAME, String NOTARY_REGION, Decimal? SIGN_PRIVS, Decimal? SIGN_ID, Byte[] SIGN_DATA, String NAME_R)
            : this(Parent)
        {
            this.RNK = RNK;
            this.REL_INTEXT = REL_INTEXT;
            this.REL_RNK = REL_RNK;
            this.REL_ID = REL_ID;
            this.DATASET_ID = DATASET_ID;
            this.VAGA1 = VAGA1;
            this.VAGA2 = VAGA2;
            this.TYPE_ID = TYPE_ID;
            this.TYPE_NAME = TYPE_NAME;
            this.POSITION = POSITION;
            this.POSITION_R = POSITION_R;
            this.FIRST_NAME = FIRST_NAME;
            this.MIDDLE_NAME = MIDDLE_NAME;
            this.LAST_NAME = LAST_NAME;
            this.DOCUMENT_TYPE_ID = DOCUMENT_TYPE_ID;
            this.DOCUMENT_TYPE_NAME = DOCUMENT_TYPE_NAME;
            this.DOCUMENT = DOCUMENT;
            this.TRUST_REGNUM = TRUST_REGNUM;
            this.TRUST_REGDAT = TRUST_REGDAT;
            this.BDATE_SIMPLE = BDATE_SIMPLE;
            this.EDATE_SIMPLE = EDATE_SIMPLE;
            this.BDATE_VAGA = BDATE_VAGA;
            this.EDATE_VAGA = EDATE_VAGA;
            this.BDATE_TRUSTEE = BDATE_TRUSTEE;
            this.EDATE_TRUSTEE = EDATE_TRUSTEE;
            this.NOTARY_NAME = NOTARY_NAME;
            this.NOTARY_REGION = NOTARY_REGION;
            this.SIGN_PRIVS = SIGN_PRIVS;
            this.SIGN_ID = SIGN_ID;
            this.SIGN_DATA = SIGN_DATA;
            this.NAME_R = NAME_R;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("RNK", OracleDbType.Decimal, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "РНК клиента"));
            Fields.Add( new BbField("REL_INTEXT", OracleDbType.Decimal, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Тип связанного лица (1 - клиент банка, 0 - НЕ клиент банка)"));
            Fields.Add( new BbField("REL_RNK", OracleDbType.Decimal, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Код связанного лица в таблице источнике (rel_intext=1 - customer.rnk; rel_intext=0 - customer_extern.id)"));
            Fields.Add( new BbField("REL_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Идентификатор типа связи"));
            Fields.Add( new BbField("DATASET_ID", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", ""));
            Fields.Add( new BbField("VAGA1", OracleDbType.Decimal, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Удельный вес прямого участия в уставном фонде"));
            Fields.Add( new BbField("VAGA2", OracleDbType.Decimal, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Удельный вес опосредствованного участия в уставном фонде"));
            Fields.Add( new BbField("TYPE_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Идентификатор типа довереного лица"));
            Fields.Add( new BbField("TYPE_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Наименование типа довереного лица"));
            Fields.Add( new BbField("POSITION", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Должность"));
            Fields.Add( new BbField("POSITION_R", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Должность в родительском падеже"));
            Fields.Add( new BbField("FIRST_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "ФИО Имя/Наименование"));
            Fields.Add( new BbField("MIDDLE_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "ФИО Отчество"));
            Fields.Add( new BbField("LAST_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "ФИО Фамилия"));
            Fields.Add( new BbField("DOCUMENT_TYPE_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Идентификатор типа документа, на основании которого ФЛ является довереным лицом"));
            Fields.Add( new BbField("DOCUMENT_TYPE_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Наименование типа документа, на основании которого ФЛ является довереным лицом"));
            Fields.Add( new BbField("DOCUMENT", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Документ доверенности"));
            Fields.Add( new BbField("TRUST_REGNUM", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Номер регистрации доверенности"));
            Fields.Add( new BbField("TRUST_REGDAT", OracleDbType.Date, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Дата регистрации доверенности"));
            Fields.Add( new BbField("BDATE_SIMPLE", OracleDbType.Date, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Дата начала действия полномочий"));
            Fields.Add( new BbField("EDATE_SIMPLE", OracleDbType.Date, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Дата окончания действия полномочий"));
            Fields.Add( new BbField("BDATE_VAGA", OracleDbType.Date, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Дата начала действия полномочий"));
            Fields.Add( new BbField("EDATE_VAGA", OracleDbType.Date, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Дата окончания действия полномочий"));
            Fields.Add( new BbField("BDATE_TRUSTEE", OracleDbType.Date, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Дата начала действия доверенности"));
            Fields.Add( new BbField("EDATE_TRUSTEE", OracleDbType.Date, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Дата окончания действия доверенности"));
            Fields.Add( new BbField("NOTARY_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "ФИО нотариуса"));
            Fields.Add( new BbField("NOTARY_REGION", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Нотариальный округ"));
            Fields.Add( new BbField("SIGN_PRIVS", OracleDbType.Decimal, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Есть ли у доверенного лица право подписи (0/1)"));
            Fields.Add( new BbField("SIGN_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Идентификатор графического представления подписи доверенного лица"));
            Fields.Add( new BbField("SIGN_DATA", OracleDbType.Blob, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "Данные графического представления подписи доверенного лица"));
            Fields.Add( new BbField("NAME_R", OracleDbType.Varchar2, true, false, false, false, false, "V_CUST_RELATION_DATA", ObjectTypes.View, "Данные связи клиента (Представление)", "ФИО доверенного лица в родительном падеже"));        
        }
        public Decimal? RNK { get { return (Decimal?)FindField("RNK").Value; } set {SetField("RNK", value);} }
        public Decimal? REL_INTEXT { get { return (Decimal?)FindField("REL_INTEXT").Value; } set {SetField("REL_INTEXT", value);} }
        public Decimal? REL_RNK { get { return (Decimal?)FindField("REL_RNK").Value; } set {SetField("REL_RNK", value);} }
        public Decimal? REL_ID { get { return (Decimal?)FindField("REL_ID").Value; } set {SetField("REL_ID", value);} }
        public String DATASET_ID { get { return (String)FindField("DATASET_ID").Value; } set {SetField("DATASET_ID", value);} }
        public Decimal? VAGA1 { get { return (Decimal?)FindField("VAGA1").Value; } set {SetField("VAGA1", value);} }
        public Decimal? VAGA2 { get { return (Decimal?)FindField("VAGA2").Value; } set {SetField("VAGA2", value);} }
        public Decimal? TYPE_ID { get { return (Decimal?)FindField("TYPE_ID").Value; } set {SetField("TYPE_ID", value);} }
        public String TYPE_NAME { get { return (String)FindField("TYPE_NAME").Value; } set {SetField("TYPE_NAME", value);} }
        public String POSITION { get { return (String)FindField("POSITION").Value; } set {SetField("POSITION", value);} }
        public string POSITION_R { get { return (String)FindField("POSITION_R").Value; } set {SetField("POSITION_R", value);} }
        public String FIRST_NAME { get { return (String)FindField("FIRST_NAME").Value; } set {SetField("FIRST_NAME", value);} }
        public String MIDDLE_NAME { get { return (String)FindField("MIDDLE_NAME").Value; } set {SetField("MIDDLE_NAME", value);} }
        public String LAST_NAME { get { return (String)FindField("LAST_NAME").Value; } set {SetField("LAST_NAME", value);} }
        public Decimal? DOCUMENT_TYPE_ID { get { return (Decimal?)FindField("DOCUMENT_TYPE_ID").Value; } set {SetField("DOCUMENT_TYPE_ID", value);} }
        public String DOCUMENT_TYPE_NAME { get { return (String)FindField("DOCUMENT_TYPE_NAME").Value; } set {SetField("DOCUMENT_TYPE_NAME", value);} }
        public String DOCUMENT { get { return (String)FindField("DOCUMENT").Value; } set {SetField("DOCUMENT", value);} }
        public String TRUST_REGNUM { get { return (String)FindField("TRUST_REGNUM").Value; } set {SetField("TRUST_REGNUM", value);} }
        public DateTime? TRUST_REGDAT { get { return (DateTime?)FindField("TRUST_REGDAT").Value; } set {SetField("TRUST_REGDAT", value);} }
        public DateTime? BDATE_SIMPLE { get { return (DateTime?)FindField("BDATE_SIMPLE").Value; } set {SetField("BDATE_SIMPLE", value);} }
        public DateTime? EDATE_SIMPLE { get { return (DateTime?)FindField("EDATE_SIMPLE").Value; } set {SetField("EDATE_SIMPLE", value);} }
        public DateTime? BDATE_VAGA { get { return (DateTime?)FindField("BDATE_VAGA").Value; } set {SetField("BDATE_VAGA", value);} }
        public DateTime? EDATE_VAGA { get { return (DateTime?)FindField("EDATE_VAGA").Value; } set {SetField("EDATE_VAGA", value);} }
        public DateTime? BDATE_TRUSTEE { get { return (DateTime?)FindField("BDATE_TRUSTEE").Value; } set {SetField("BDATE_TRUSTEE", value);} }
        public DateTime? EDATE_TRUSTEE { get { return (DateTime?)FindField("EDATE_TRUSTEE").Value; } set {SetField("EDATE_TRUSTEE", value);} }
        public String NOTARY_NAME { get { return (String)FindField("NOTARY_NAME").Value; } set {SetField("NOTARY_NAME", value);} }
        public String NOTARY_REGION { get { return (String)FindField("NOTARY_REGION").Value; } set {SetField("NOTARY_REGION", value);} }
        public Decimal? SIGN_PRIVS { get { return (Decimal?)FindField("SIGN_PRIVS").Value; } set {SetField("SIGN_PRIVS", value);} }
        public Decimal? SIGN_ID { get { return (Decimal?)FindField("SIGN_ID").Value; } set {SetField("SIGN_ID", value);} }
        public Byte[] SIGN_DATA { get { return (Byte[])FindField("SIGN_DATA").Value; } set {SetField("SIGN_DATA", value);} }
        public String NAME_R { get { return (String)FindField("NAME_R").Value; } set {SetField("NAME_R", value);} }
    }

    public sealed class VCustRelationDataFilters : BbFilters
    {
        public VCustRelationDataFilters(BbDataSource Parent) : base (Parent)
        {
            RNK = new BBDecimalFilter(this, "RNK");
            REL_INTEXT = new BBDecimalFilter(this, "REL_INTEXT");
            REL_RNK = new BBDecimalFilter(this, "REL_RNK");
            REL_ID = new BBDecimalFilter(this, "REL_ID");
            DATASET_ID = new BBVarchar2Filter(this, "DATASET_ID");
            VAGA1 = new BBDecimalFilter(this, "VAGA1");
            VAGA2 = new BBDecimalFilter(this, "VAGA2");
            TYPE_ID = new BBDecimalFilter(this, "TYPE_ID");
            TYPE_NAME = new BBVarchar2Filter(this, "TYPE_NAME");
            POSITION = new BBVarchar2Filter(this, "POSITION");
            POSITION_R = new BBVarchar2Filter(this, "POSITION_R");
            FIRST_NAME = new BBVarchar2Filter(this, "FIRST_NAME");
            MIDDLE_NAME = new BBVarchar2Filter(this, "MIDDLE_NAME");
            LAST_NAME = new BBVarchar2Filter(this, "LAST_NAME");
            DOCUMENT_TYPE_ID = new BBDecimalFilter(this, "DOCUMENT_TYPE_ID");
            DOCUMENT_TYPE_NAME = new BBVarchar2Filter(this, "DOCUMENT_TYPE_NAME");
            DOCUMENT = new BBVarchar2Filter(this, "DOCUMENT");
            TRUST_REGNUM = new BBVarchar2Filter(this, "TRUST_REGNUM");
            TRUST_REGDAT = new BBDateFilter(this, "TRUST_REGDAT");
            BDATE_SIMPLE = new BBDateFilter(this, "BDATE_SIMPLE");
            EDATE_SIMPLE = new BBDateFilter(this, "EDATE_SIMPLE");
            BDATE_VAGA = new BBDateFilter(this, "BDATE_VAGA");
            EDATE_VAGA = new BBDateFilter(this, "EDATE_VAGA");
            BDATE_TRUSTEE = new BBDateFilter(this, "BDATE_TRUSTEE");
            EDATE_TRUSTEE = new BBDateFilter(this, "EDATE_TRUSTEE");
            NOTARY_NAME = new BBVarchar2Filter(this, "NOTARY_NAME");
            NOTARY_REGION = new BBVarchar2Filter(this, "NOTARY_REGION");
            SIGN_PRIVS = new BBDecimalFilter(this, "SIGN_PRIVS");
            SIGN_ID = new BBDecimalFilter(this, "SIGN_ID");
            NAME_R = new BBVarchar2Filter(this, "NAME_R");
        }
        public BBDecimalFilter RNK;
        public BBDecimalFilter REL_INTEXT;
        public BBDecimalFilter REL_RNK;
        public BBDecimalFilter REL_ID;
        public BBVarchar2Filter DATASET_ID;
        public BBDecimalFilter VAGA1;
        public BBDecimalFilter VAGA2;
        public BBDecimalFilter TYPE_ID;
        public BBVarchar2Filter TYPE_NAME;
        public BBVarchar2Filter POSITION;
        public BBVarchar2Filter POSITION_R;
        public BBVarchar2Filter FIRST_NAME;
        public BBVarchar2Filter MIDDLE_NAME;
        public BBVarchar2Filter LAST_NAME;
        public BBDecimalFilter DOCUMENT_TYPE_ID;
        public BBVarchar2Filter DOCUMENT_TYPE_NAME;
        public BBVarchar2Filter DOCUMENT;
        public BBVarchar2Filter TRUST_REGNUM;
        public BBDateFilter TRUST_REGDAT;
        public BBDateFilter BDATE_SIMPLE;
        public BBDateFilter EDATE_SIMPLE;
        public BBDateFilter BDATE_VAGA;
        public BBDateFilter EDATE_VAGA;
        public BBDateFilter BDATE_TRUSTEE;
        public BBDateFilter EDATE_TRUSTEE;
        public BBVarchar2Filter NOTARY_NAME;
        public BBVarchar2Filter NOTARY_REGION;
        public BBDecimalFilter SIGN_PRIVS;
        public BBDecimalFilter SIGN_ID;
        public BBVarchar2Filter NAME_R;
    }

    public partial class VCustRelationData : BbTable<VCustRelationDataRecord, VCustRelationDataFilters>
    {
        public VCustRelationData() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VCustRelationData(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VCustRelationDataRecord> Select(VCustRelationDataRecord Item)
        {
            List<VCustRelationDataRecord> res = new List<VCustRelationDataRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VCustRelationDataRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (Decimal?)null : Convert.ToDecimal(rdr[1]), 
                        rdr.IsDBNull(2) ?  (Decimal?)null : Convert.ToDecimal(rdr[2]), 
                        rdr.IsDBNull(3) ?  (Decimal?)null : Convert.ToDecimal(rdr[3]), 
                        rdr.IsDBNull(4) ?  (Decimal?)null : Convert.ToDecimal(rdr[4]), 
                        rdr.IsDBNull(5) ?  (String)null : Convert.ToString(rdr[5]), 
                        rdr.IsDBNull(6) ?  (Decimal?)null : Convert.ToDecimal(string.Format("{0:G29}", rdr[6])), 
                        rdr.IsDBNull(7) ?  (Decimal?)null : Convert.ToDecimal(string.Format("{0:G29}", rdr[7])), 
                        rdr.IsDBNull(8) ?  (Decimal?)null : Convert.ToDecimal(rdr[8]), 
                        rdr.IsDBNull(9) ?  (String)null : Convert.ToString(rdr[9]), 
                        rdr.IsDBNull(10) ?  (String)null : Convert.ToString(rdr[10]), 
                        rdr.IsDBNull(11) ?  (String)null : Convert.ToString(rdr[11]),
                        rdr.IsDBNull(12) ?  (String)null : Convert.ToString(rdr[12]), 
                        rdr.IsDBNull(13) ?  (String)null : Convert.ToString(rdr[13]), 
                        rdr.IsDBNull(14) ?  (String)null : Convert.ToString(rdr[14]), 
                        rdr.IsDBNull(15) ?  (Decimal?)null : Convert.ToDecimal(rdr[15]), 
                        rdr.IsDBNull(16) ?  (String)null : Convert.ToString(rdr[16]), 
                        rdr.IsDBNull(17) ?  (String)null : Convert.ToString(rdr[17]), 
                        rdr.IsDBNull(18) ?  (String)null : Convert.ToString(rdr[18]), 
                        rdr.IsDBNull(19) ?  (DateTime?)null : Convert.ToDateTime(rdr[19]), 
                        rdr.IsDBNull(20) ?  (DateTime?)null : Convert.ToDateTime(rdr[20]), 
                        rdr.IsDBNull(21) ?  (DateTime?)null : Convert.ToDateTime(rdr[21]), 
                        rdr.IsDBNull(22) ?  (DateTime?)null : Convert.ToDateTime(rdr[22]), 
                        rdr.IsDBNull(23) ?  (DateTime?)null : Convert.ToDateTime(rdr[23]), 
                        rdr.IsDBNull(24) ?  (DateTime?)null : Convert.ToDateTime(rdr[24]), 
                        rdr.IsDBNull(25) ?  (DateTime?)null : Convert.ToDateTime(rdr[25]), 
                        rdr.IsDBNull(26) ?  (String)null : Convert.ToString(rdr[26]), 
                        rdr.IsDBNull(27) ?  (String)null : Convert.ToString(rdr[27]), 
                        rdr.IsDBNull(28) ?  (Decimal?)null : Convert.ToDecimal(rdr[28]), 
                        rdr.IsDBNull(29) ?  (Decimal?)null : Convert.ToDecimal(rdr[29]), 
                        rdr.IsDBNull(30) ?  (Byte[])null : (Byte[])rdr[30], 
                        rdr.IsDBNull(31) ?  (String)null : Convert.ToString(rdr[31]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}