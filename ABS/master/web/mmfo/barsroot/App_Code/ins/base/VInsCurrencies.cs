/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace Bars.Ins
{
    public sealed class VInsCurrenciesRecord : BbRecord
    {
        public VInsCurrenciesRecord(): base()
        {
            fillFields();
        }
        public VInsCurrenciesRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VInsCurrenciesRecord(BbDataSource Parent, OracleDecimal RowScn, Decimal? KV, String LCV, String NAME, String DESCR)
            : this(Parent)
        {
            this.KV = KV;
            this.LCV = LCV;
            this.NAME = NAME;
            this.DESCR = DESCR;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("KV", OracleDbType.Decimal, false, false, false, false, false, "V_INS_CURRENCIES", ObjectTypes.View, "Список валют для страховок (Представлення)", "Ідентифікатор"));
            Fields.Add( new BbField("LCV", OracleDbType.Char, false, false, false, false, false, "V_INS_CURRENCIES", ObjectTypes.View, "Список валют для страховок (Представлення)", "Код"));
            Fields.Add( new BbField("NAME", OracleDbType.Varchar2, false, false, false, false, false, "V_INS_CURRENCIES", ObjectTypes.View, "Список валют для страховок (Представлення)", "Найменування"));
            Fields.Add( new BbField("DESCR", OracleDbType.Varchar2, true, false, false, false, false, "V_INS_CURRENCIES", ObjectTypes.View, "Список валют для страховок (Представлення)", "Опис"));        
        }
        public Decimal? KV { get { return (Decimal?)FindField("KV").Value; } set {SetField("KV", value);} }
        public String LCV { get { return (String)FindField("LCV").Value; } set {SetField("LCV", value);} }
        public String NAME { get { return (String)FindField("NAME").Value; } set {SetField("NAME", value);} }
        public String DESCR { get { return (String)FindField("DESCR").Value; } set {SetField("DESCR", value);} }
    }

    public sealed class VInsCurrenciesFilters : BbFilters
    {
        public VInsCurrenciesFilters(BbDataSource Parent) : base (Parent)
        {
            KV = new BBDecimalFilter(this, "KV");
            LCV = new BBCharFilter(this, "LCV");
            NAME = new BBVarchar2Filter(this, "NAME");
            DESCR = new BBVarchar2Filter(this, "DESCR");
        }
        public BBDecimalFilter KV;
        public BBCharFilter LCV;
        public BBVarchar2Filter NAME;
        public BBVarchar2Filter DESCR;
    }

    public partial class VInsCurrencies : BbTable<VInsCurrenciesRecord, VInsCurrenciesFilters>
    {
        public VInsCurrencies() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VInsCurrencies(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VInsCurrenciesRecord> Select(VInsCurrenciesRecord Item)
        {
            List<VInsCurrenciesRecord> res = new List<VInsCurrenciesRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VInsCurrenciesRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (Decimal?)null : Convert.ToDecimal(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (String)null : Convert.ToString(rdr[4]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}