/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace Bars.Ins
{
    public sealed class InsFiltersRecord : BbRecord
    {
        public InsFiltersRecord(): base()
        {
            fillFields();
        }
        public InsFiltersRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public InsFiltersRecord(BbDataSource Parent, OracleDecimal RowScn, String ID, String NAME, String STMT, String PARAMS, String COLS2HIDE)
            : this(Parent)
        {
            this.ID = ID;
            this.NAME = NAME;
            this.STMT = STMT;
            this.PARAMS = PARAMS;
            this.COLS2HIDE = COLS2HIDE;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("ID", OracleDbType.Varchar2, false, true, false, false, false, "INS_FILTERS", ObjectTypes.Table, "Графік платежів по страховим договорам", "Ідентифікатор"));
            Fields.Add( new BbField("NAME", OracleDbType.Varchar2, false, false, false, false, false, "INS_FILTERS", ObjectTypes.Table, "Графік платежів по страховим договорам", "Найменування"));
            Fields.Add( new BbField("STMT", OracleDbType.Varchar2, false, false, false, false, false, "INS_FILTERS", ObjectTypes.Table, "Графік платежів по страховим договорам", "sql вираз (без слова where), змінні вказуються у вигляді :<імя>"));
            Fields.Add( new BbField("PARAMS", OracleDbType.Varchar2, true, false, false, false, false, "INS_FILTERS", ObjectTypes.Table, "Графік платежів по страховим договорам", "Перелік змінних, імя змінної в url та їх тип (<імя>:<імя в url>:<тип S|N|D>;...)"));
            Fields.Add( new BbField("COLS2HIDE", OracleDbType.Varchar2, true, false, false, false, false, "INS_FILTERS", ObjectTypes.Table, "Графік платежів по страховим договорам", "Перелік колонок які треба сховати через ; (імя колонки береться з SortExpression)"));        
        }
        public String ID { get { return (String)FindField("ID").Value; } set {SetField("ID", value);} }
        public String NAME { get { return (String)FindField("NAME").Value; } set {SetField("NAME", value);} }
        public String STMT { get { return (String)FindField("STMT").Value; } set {SetField("STMT", value);} }
        public String PARAMS { get { return (String)FindField("PARAMS").Value; } set {SetField("PARAMS", value);} }
        public String COLS2HIDE { get { return (String)FindField("COLS2HIDE").Value; } set {SetField("COLS2HIDE", value);} }
    }

    public sealed class InsFiltersFilters : BbFilters
    {
        public InsFiltersFilters(BbDataSource Parent) : base (Parent)
        {
            ID = new BBVarchar2Filter(this, "ID");
            NAME = new BBVarchar2Filter(this, "NAME");
            STMT = new BBVarchar2Filter(this, "STMT");
            PARAMS = new BBVarchar2Filter(this, "PARAMS");
            COLS2HIDE = new BBVarchar2Filter(this, "COLS2HIDE");
        }
        public BBVarchar2Filter ID;
        public BBVarchar2Filter NAME;
        public BBVarchar2Filter STMT;
        public BBVarchar2Filter PARAMS;
        public BBVarchar2Filter COLS2HIDE;
    }

    public partial class InsFilters : BbTable<InsFiltersRecord, InsFiltersFilters>
    {
        public InsFilters() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public InsFilters(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<InsFiltersRecord> Select(InsFiltersRecord Item)
        {
            List<InsFiltersRecord> res = new List<InsFiltersRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new InsFiltersRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (String)null : Convert.ToString(rdr[4]), 
                        rdr.IsDBNull(5) ?  (String)null : Convert.ToString(rdr[5]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}