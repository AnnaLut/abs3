/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace credit
{
    public sealed class OurBranchRecord : BbRecord
    {
        public OurBranchRecord(): base()
        {
            fillFields();
        }
        public OurBranchRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public OurBranchRecord(BbDataSource Parent, OracleDecimal RowScn, String BRANCH, String NAME, String B040, String DESCRIPTION)
            : this(Parent)
        {
            this.BRANCH = BRANCH;
            this.NAME = NAME;
            this.B040 = B040;
            this.DESCRIPTION = DESCRIPTION;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("BRANCH", OracleDbType.Varchar2, false, false, false, false, false, "OUR_BRANCH", ObjectTypes.View, "Наша ветка подразделений банка", "Код отделения"));
            Fields.Add( new BbField("NAME", OracleDbType.Varchar2, false, false, false, false, false, "OUR_BRANCH", ObjectTypes.View, "Наша ветка подразделений банка", "Полное название отделения"));
            Fields.Add( new BbField("B040", OracleDbType.Varchar2, true, false, false, false, false, "OUR_BRANCH", ObjectTypes.View, "Наша ветка подразделений банка", "В040"));
            Fields.Add( new BbField("DESCRIPTION", OracleDbType.Varchar2, true, false, false, false, false, "OUR_BRANCH", ObjectTypes.View, "Наша ветка подразделений банка", "Краткое название отделения"));        
        }
        public String BRANCH { get { return (String)FindField("BRANCH").Value; } set {SetField("BRANCH", value);} }
        public String NAME { get { return (String)FindField("NAME").Value; } set {SetField("NAME", value);} }
        public String B040 { get { return (String)FindField("B040").Value; } set {SetField("B040", value);} }
        public String DESCRIPTION { get { return (String)FindField("DESCRIPTION").Value; } set {SetField("DESCRIPTION", value);} }
    }

    public sealed class OurBranchFilters : BbFilters
    {
        public OurBranchFilters(BbDataSource Parent) : base (Parent)
        {
            BRANCH = new BBVarchar2Filter(this, "BRANCH");
            NAME = new BBVarchar2Filter(this, "NAME");
            B040 = new BBVarchar2Filter(this, "B040");
            DESCRIPTION = new BBVarchar2Filter(this, "DESCRIPTION");
        }
        public BBVarchar2Filter BRANCH;
        public BBVarchar2Filter NAME;
        public BBVarchar2Filter B040;
        public BBVarchar2Filter DESCRIPTION;
    }

    public partial class OurBranch : BbTable<OurBranchRecord, OurBranchFilters>
    {
        public OurBranch() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public OurBranch(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<OurBranchRecord> Select(OurBranchRecord Item)
        {
            List<OurBranchRecord> res = new List<OurBranchRecord>();
                        OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new OurBranchRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (String)null : Convert.ToString(rdr[4]))
                    );
                }
            }
                        finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}