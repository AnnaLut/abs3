/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace credit
{
    public sealed class WcsCreditdataBaseRecord : BbRecord
    {
        public WcsCreditdataBaseRecord(): base()
        {
            fillFields();
        }
        public WcsCreditdataBaseRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public WcsCreditdataBaseRecord(BbDataSource Parent, OracleDecimal RowScn, String ID, String NAME, String TYPE_ID, Decimal? ORD)
            : this(Parent)
        {
            this.ID = ID;
            this.NAME = NAME;
            this.TYPE_ID = TYPE_ID;
            this.ORD = ORD;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("ID", OracleDbType.Varchar2, false, true, false, false, false, "WCS_CREDITDATA_BASE", ObjectTypes.Table, "Базовые параметры данных кредита", "Идентификатор"));
            Fields.Add( new BbField("NAME", OracleDbType.Varchar2, false, false, false, false, false, "WCS_CREDITDATA_BASE", ObjectTypes.Table, "Базовые параметры данных кредита", "Наименование"));
            Fields.Add( new BbField("TYPE_ID", OracleDbType.Varchar2, false, false, false, false, false, "WCS_CREDITDATA_BASE", ObjectTypes.Table, "Базовые параметры данных кредита", "Тип"));
            Fields.Add( new BbField("ORD", OracleDbType.Decimal, false, false, false, false, false, "WCS_CREDITDATA_BASE", ObjectTypes.Table, "Базовые параметры данных кредита", "Порядок отображения"));        
        }
        public String ID { get { return (String)FindField("ID").Value; } set {SetField("ID", value);} }
        public String NAME { get { return (String)FindField("NAME").Value; } set {SetField("NAME", value);} }
        public String TYPE_ID { get { return (String)FindField("TYPE_ID").Value; } set {SetField("TYPE_ID", value);} }
        public Decimal? ORD { get { return (Decimal?)FindField("ORD").Value; } set {SetField("ORD", value);} }
    }

    public sealed class WcsCreditdataBaseFilters : BbFilters
    {
        public WcsCreditdataBaseFilters(BbDataSource Parent) : base (Parent)
        {
            ID = new BBVarchar2Filter(this, "ID");
            NAME = new BBVarchar2Filter(this, "NAME");
            TYPE_ID = new BBVarchar2Filter(this, "TYPE_ID");
            ORD = new BBDecimalFilter(this, "ORD");
        }
        public BBVarchar2Filter ID;
        public BBVarchar2Filter NAME;
        public BBVarchar2Filter TYPE_ID;
        public BBDecimalFilter ORD;
    }

    public partial class WcsCreditdataBase : BbTable<WcsCreditdataBaseRecord, WcsCreditdataBaseFilters>
    {
        public WcsCreditdataBase() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public WcsCreditdataBase(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<WcsCreditdataBaseRecord> Select(WcsCreditdataBaseRecord Item)
        {
            List<WcsCreditdataBaseRecord> res = new List<WcsCreditdataBaseRecord>();
                        OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new WcsCreditdataBaseRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (Decimal?)null : Convert.ToDecimal(rdr[4]))
                    );
                }
            }
                        finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}