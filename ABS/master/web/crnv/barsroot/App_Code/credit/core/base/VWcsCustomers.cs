/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace credit
{
    public sealed class VWcsCustomersRecord : BbRecord
    {
        public VWcsCustomersRecord(): base()
        {
            fillFields();
        }
        public VWcsCustomersRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VWcsCustomersRecord(BbDataSource Parent, OracleDecimal RowScn, Decimal? RNK, String OKPO, String NMK, DateTime? DATE_ON)
            : this(Parent)
        {
            this.RNK = RNK;
            this.OKPO = OKPO;
            this.NMK = NMK;
            this.DATE_ON = DATE_ON;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("RNK", OracleDbType.Decimal, false, false, false, false, false, "V_WCS_CUSTOMERS", ObjectTypes.View, "Контрагенты банка (Представление)", "РНК"));
            Fields.Add( new BbField("OKPO", OracleDbType.Varchar2, true, false, false, false, false, "V_WCS_CUSTOMERS", ObjectTypes.View, "Контрагенты банка (Представление)", "ИНН"));
            Fields.Add( new BbField("NMK", OracleDbType.Varchar2, true, false, false, false, false, "V_WCS_CUSTOMERS", ObjectTypes.View, "Контрагенты банка (Представление)", "Наименование"));
            Fields.Add( new BbField("DATE_ON", OracleDbType.Date, false, false, false, false, false, "V_WCS_CUSTOMERS", ObjectTypes.View, "Контрагенты банка (Представление)", "Дата открытия"));        
        }
        public Decimal? RNK { get { return (Decimal?)FindField("RNK").Value; } set {SetField("RNK", value);} }
        public String OKPO { get { return (String)FindField("OKPO").Value; } set {SetField("OKPO", value);} }
        public String NMK { get { return (String)FindField("NMK").Value; } set {SetField("NMK", value);} }
        public DateTime? DATE_ON { get { return (DateTime?)FindField("DATE_ON").Value; } set {SetField("DATE_ON", value);} }
    }

    public sealed class VWcsCustomersFilters : BbFilters
    {
        public VWcsCustomersFilters(BbDataSource Parent) : base (Parent)
        {
            RNK = new BBDecimalFilter(this, "RNK");
            OKPO = new BBVarchar2Filter(this, "OKPO");
            NMK = new BBVarchar2Filter(this, "NMK");
            DATE_ON = new BBDateFilter(this, "DATE_ON");
        }
        public BBDecimalFilter RNK;
        public BBVarchar2Filter OKPO;
        public BBVarchar2Filter NMK;
        public BBDateFilter DATE_ON;
    }

    public partial class VWcsCustomers : BbTable<VWcsCustomersRecord, VWcsCustomersFilters>
    {
        public VWcsCustomers() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VWcsCustomers(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VWcsCustomersRecord> Select(VWcsCustomersRecord Item)
        {
            List<VWcsCustomersRecord> res = new List<VWcsCustomersRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VWcsCustomersRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (Decimal?)null : Convert.ToDecimal(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (DateTime?)null : Convert.ToDateTime(rdr[4]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}