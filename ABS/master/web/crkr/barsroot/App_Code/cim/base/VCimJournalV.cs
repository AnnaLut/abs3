/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace cim
{
    public sealed class VCimJournalVRecord : BbRecord
    {
        public VCimJournalVRecord(): base()
        {
            fillFields();
        }
        public VCimJournalVRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VCimJournalVRecord(BbDataSource Parent, OracleDecimal RowScn, String BRANCH, Decimal? JOURNAL_NUM, Decimal? NUM, DateTime? CREATE_DATE, Decimal? RNK, String OKPO, String NMK, Decimal? BENEF_ID, String BENEF_NAME, Decimal? COUNTRY_ID, String COUNTRY_NAME, Decimal? CONTR_ID, String CONTR_NUM, DateTime? CONTR_DATE, DateTime? CONTROL_DATE, String COMMENTS, String MODIFY_DATE, DateTime? DELETE_DATE, Decimal? X_S, Decimal? DIRECT, Decimal? VMD_TYPE, String VMD_TYPE_NAME, Decimal? BOUND_ID, Decimal? VMD_ID, DateTime? ALLOW_DATE, Decimal? KV_V, Decimal? S_V, String VMD_NUM, DateTime? FILE_DATE, String FILE_NAME)
            : this(Parent)
        {
            this.BRANCH = BRANCH;
            this.JOURNAL_NUM = JOURNAL_NUM;
            this.NUM = NUM;
            this.CREATE_DATE = CREATE_DATE;
            this.RNK = RNK;
            this.OKPO = OKPO;
            this.NMK = NMK;
            this.BENEF_ID = BENEF_ID;
            this.BENEF_NAME = BENEF_NAME;
            this.COUNTRY_ID = COUNTRY_ID;
            this.COUNTRY_NAME = COUNTRY_NAME;
            this.CONTR_ID = CONTR_ID;
            this.CONTR_NUM = CONTR_NUM;
            this.CONTR_DATE = CONTR_DATE;
            this.CONTROL_DATE = CONTROL_DATE;
            this.COMMENTS = COMMENTS;
            this.MODIFY_DATE = MODIFY_DATE;
            this.DELETE_DATE = DELETE_DATE;
            this.X_S = X_S;
            this.DIRECT = DIRECT;
            this.VMD_TYPE = VMD_TYPE;
            this.VMD_TYPE_NAME = VMD_TYPE_NAME;
            this.BOUND_ID = BOUND_ID;
            this.VMD_ID = VMD_ID;
            this.ALLOW_DATE = ALLOW_DATE;
            this.KV_V = KV_V;
            this.S_V = S_V;
            this.VMD_NUM = VMD_NUM;
            this.FILE_DATE = FILE_DATE;
            this.FILE_NAME = FILE_NAME;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("BRANCH", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Код установи"));
            Fields.Add( new BbField("JOURNAL_NUM", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Номер журналу"));
            Fields.Add( new BbField("NUM", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Номер запису"));
            Fields.Add( new BbField("CREATE_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Дата реєстрації"));
            Fields.Add( new BbField("RNK", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "РНК клієнта (резидента)"));
            Fields.Add( new BbField("OKPO", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "ОКПО клієнта"));
            Fields.Add( new BbField("NMK", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Назва клієнта"));
            Fields.Add( new BbField("BENEF_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "id нерезидента"));
            Fields.Add( new BbField("BENEF_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Назва нерезидента"));
            Fields.Add( new BbField("COUNTRY_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "id країни"));
            Fields.Add( new BbField("COUNTRY_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Назва країни"));
            Fields.Add( new BbField("CONTR_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Id контракту"));
            Fields.Add( new BbField("CONTR_NUM", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Номер контракту"));
            Fields.Add( new BbField("CONTR_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Дата контракту"));
            Fields.Add( new BbField("CONTROL_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Контрольний строк"));
            Fields.Add( new BbField("COMMENTS", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Примітка"));
            Fields.Add( new BbField("MODIFY_DATE", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Дата модифікації"));
            Fields.Add( new BbField("DELETE_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Дата видалення"));
            Fields.Add( new BbField("X_S", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Cума вторинних докуентів у валюті ВМД"));
            Fields.Add( new BbField("DIRECT", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Напрям"));
            Fields.Add( new BbField("VMD_TYPE", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "id типу ВМД"));
            Fields.Add( new BbField("VMD_TYPE_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Тип ВМД"));
            Fields.Add( new BbField("BOUND_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Id прив`язки"));
            Fields.Add( new BbField("VMD_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Id ВМД"));
            Fields.Add( new BbField("ALLOW_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Дата дозволу"));
            Fields.Add( new BbField("KV_V", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Код валюти"));
            Fields.Add( new BbField("S_V", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Сума у валюті"));
            Fields.Add( new BbField("VMD_NUM", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Номер ВМД"));
            Fields.Add( new BbField("FILE_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Дата файлу реєстру"));
            Fields.Add( new BbField("FILE_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_V", ObjectTypes.View, "ЖУРНАЛ ВМД", "Ім`я файлу (номер) реєстру"));        
        }
        public String BRANCH { get { return (String)FindField("BRANCH").Value; } set {SetField("BRANCH", value);} }
        public Decimal? JOURNAL_NUM { get { return (Decimal?)FindField("JOURNAL_NUM").Value; } set {SetField("JOURNAL_NUM", value);} }
        public Decimal? NUM { get { return (Decimal?)FindField("NUM").Value; } set {SetField("NUM", value);} }
        public DateTime? CREATE_DATE { get { return (DateTime?)FindField("CREATE_DATE").Value; } set {SetField("CREATE_DATE", value);} }
        public Decimal? RNK { get { return (Decimal?)FindField("RNK").Value; } set {SetField("RNK", value);} }
        public String OKPO { get { return (String)FindField("OKPO").Value; } set {SetField("OKPO", value);} }
        public String NMK { get { return (String)FindField("NMK").Value; } set {SetField("NMK", value);} }
        public Decimal? BENEF_ID { get { return (Decimal?)FindField("BENEF_ID").Value; } set {SetField("BENEF_ID", value);} }
        public String BENEF_NAME { get { return (String)FindField("BENEF_NAME").Value; } set {SetField("BENEF_NAME", value);} }
        public Decimal? COUNTRY_ID { get { return (Decimal?)FindField("COUNTRY_ID").Value; } set {SetField("COUNTRY_ID", value);} }
        public String COUNTRY_NAME { get { return (String)FindField("COUNTRY_NAME").Value; } set {SetField("COUNTRY_NAME", value);} }
        public Decimal? CONTR_ID { get { return (Decimal?)FindField("CONTR_ID").Value; } set {SetField("CONTR_ID", value);} }
        public String CONTR_NUM { get { return (String)FindField("CONTR_NUM").Value; } set {SetField("CONTR_NUM", value);} }
        public DateTime? CONTR_DATE { get { return (DateTime?)FindField("CONTR_DATE").Value; } set {SetField("CONTR_DATE", value);} }
        public DateTime? CONTROL_DATE { get { return (DateTime?)FindField("CONTROL_DATE").Value; } set {SetField("CONTROL_DATE", value);} }
        public String COMMENTS { get { return (String)FindField("COMMENTS").Value; } set {SetField("COMMENTS", value);} }
        public String MODIFY_DATE { get { return (String)FindField("MODIFY_DATE").Value; } set {SetField("MODIFY_DATE", value);} }
        public DateTime? DELETE_DATE { get { return (DateTime?)FindField("DELETE_DATE").Value; } set {SetField("DELETE_DATE", value);} }
        public Decimal? X_S { get { return (Decimal?)FindField("X_S").Value; } set {SetField("X_S", value);} }
        public Decimal? DIRECT { get { return (Decimal?)FindField("DIRECT").Value; } set {SetField("DIRECT", value);} }
        public Decimal? VMD_TYPE { get { return (Decimal?)FindField("VMD_TYPE").Value; } set {SetField("VMD_TYPE", value);} }
        public String VMD_TYPE_NAME { get { return (String)FindField("VMD_TYPE_NAME").Value; } set {SetField("VMD_TYPE_NAME", value);} }
        public Decimal? BOUND_ID { get { return (Decimal?)FindField("BOUND_ID").Value; } set {SetField("BOUND_ID", value);} }
        public Decimal? VMD_ID { get { return (Decimal?)FindField("VMD_ID").Value; } set {SetField("VMD_ID", value);} }
        public DateTime? ALLOW_DATE { get { return (DateTime?)FindField("ALLOW_DATE").Value; } set {SetField("ALLOW_DATE", value);} }
        public Decimal? KV_V { get { return (Decimal?)FindField("KV_V").Value; } set {SetField("KV_V", value);} }
        public Decimal? S_V { get { return (Decimal?)FindField("S_V").Value; } set {SetField("S_V", value);} }
        public String VMD_NUM { get { return (String)FindField("VMD_NUM").Value; } set {SetField("VMD_NUM", value);} }
        public DateTime? FILE_DATE { get { return (DateTime?)FindField("FILE_DATE").Value; } set {SetField("FILE_DATE", value);} }
        public String FILE_NAME { get { return (String)FindField("FILE_NAME").Value; } set {SetField("FILE_NAME", value);} }
    }

    public sealed class VCimJournalVFilters : BbFilters
    {
        public VCimJournalVFilters(BbDataSource Parent) : base (Parent)
        {
            BRANCH = new BBVarchar2Filter(this, "BRANCH");
            JOURNAL_NUM = new BBDecimalFilter(this, "JOURNAL_NUM");
            NUM = new BBDecimalFilter(this, "NUM");
            CREATE_DATE = new BBDateFilter(this, "CREATE_DATE");
            RNK = new BBDecimalFilter(this, "RNK");
            OKPO = new BBVarchar2Filter(this, "OKPO");
            NMK = new BBVarchar2Filter(this, "NMK");
            BENEF_ID = new BBDecimalFilter(this, "BENEF_ID");
            BENEF_NAME = new BBVarchar2Filter(this, "BENEF_NAME");
            COUNTRY_ID = new BBDecimalFilter(this, "COUNTRY_ID");
            COUNTRY_NAME = new BBVarchar2Filter(this, "COUNTRY_NAME");
            CONTR_ID = new BBDecimalFilter(this, "CONTR_ID");
            CONTR_NUM = new BBVarchar2Filter(this, "CONTR_NUM");
            CONTR_DATE = new BBDateFilter(this, "CONTR_DATE");
            CONTROL_DATE = new BBDateFilter(this, "CONTROL_DATE");
            COMMENTS = new BBVarchar2Filter(this, "COMMENTS");
            MODIFY_DATE = new BBVarchar2Filter(this, "MODIFY_DATE");
            DELETE_DATE = new BBDateFilter(this, "DELETE_DATE");
            X_S = new BBDecimalFilter(this, "X_S");
            DIRECT = new BBDecimalFilter(this, "DIRECT");
            VMD_TYPE = new BBDecimalFilter(this, "VMD_TYPE");
            VMD_TYPE_NAME = new BBVarchar2Filter(this, "VMD_TYPE_NAME");
            BOUND_ID = new BBDecimalFilter(this, "BOUND_ID");
            VMD_ID = new BBDecimalFilter(this, "VMD_ID");
            ALLOW_DATE = new BBDateFilter(this, "ALLOW_DATE");
            KV_V = new BBDecimalFilter(this, "KV_V");
            S_V = new BBDecimalFilter(this, "S_V");
            VMD_NUM = new BBVarchar2Filter(this, "VMD_NUM");
            FILE_DATE = new BBDateFilter(this, "FILE_DATE");
            FILE_NAME = new BBVarchar2Filter(this, "FILE_NAME");
        }
        public BBVarchar2Filter BRANCH;
        public BBDecimalFilter JOURNAL_NUM;
        public BBDecimalFilter NUM;
        public BBDateFilter CREATE_DATE;
        public BBDecimalFilter RNK;
        public BBVarchar2Filter OKPO;
        public BBVarchar2Filter NMK;
        public BBDecimalFilter BENEF_ID;
        public BBVarchar2Filter BENEF_NAME;
        public BBDecimalFilter COUNTRY_ID;
        public BBVarchar2Filter COUNTRY_NAME;
        public BBDecimalFilter CONTR_ID;
        public BBVarchar2Filter CONTR_NUM;
        public BBDateFilter CONTR_DATE;
        public BBDateFilter CONTROL_DATE;
        public BBVarchar2Filter COMMENTS;
        public BBVarchar2Filter MODIFY_DATE;
        public BBDateFilter DELETE_DATE;
        public BBDecimalFilter X_S;
        public BBDecimalFilter DIRECT;
        public BBDecimalFilter VMD_TYPE;
        public BBVarchar2Filter VMD_TYPE_NAME;
        public BBDecimalFilter BOUND_ID;
        public BBDecimalFilter VMD_ID;
        public BBDateFilter ALLOW_DATE;
        public BBDecimalFilter KV_V;
        public BBDecimalFilter S_V;
        public BBVarchar2Filter VMD_NUM;
        public BBDateFilter FILE_DATE;
        public BBVarchar2Filter FILE_NAME;
    }

    public partial class VCimJournalV : BbTable<VCimJournalVRecord, VCimJournalVFilters>
    {
        public VCimJournalV() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VCimJournalV(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VCimJournalVRecord> Select(VCimJournalVRecord Item)
        {
            List<VCimJournalVRecord> res = new List<VCimJournalVRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VCimJournalVRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (Decimal?)null : Convert.ToDecimal(rdr[2]), 
                        rdr.IsDBNull(3) ?  (Decimal?)null : Convert.ToDecimal(rdr[3]), 
                        rdr.IsDBNull(4) ?  (DateTime?)null : Convert.ToDateTime(rdr[4]), 
                        rdr.IsDBNull(5) ?  (Decimal?)null : Convert.ToDecimal(rdr[5]), 
                        rdr.IsDBNull(6) ?  (String)null : Convert.ToString(rdr[6]), 
                        rdr.IsDBNull(7) ?  (String)null : Convert.ToString(rdr[7]), 
                        rdr.IsDBNull(8) ?  (Decimal?)null : Convert.ToDecimal(rdr[8]), 
                        rdr.IsDBNull(9) ?  (String)null : Convert.ToString(rdr[9]), 
                        rdr.IsDBNull(10) ?  (Decimal?)null : Convert.ToDecimal(rdr[10]), 
                        rdr.IsDBNull(11) ?  (String)null : Convert.ToString(rdr[11]), 
                        rdr.IsDBNull(12) ?  (Decimal?)null : Convert.ToDecimal(rdr[12]), 
                        rdr.IsDBNull(13) ?  (String)null : Convert.ToString(rdr[13]), 
                        rdr.IsDBNull(14) ?  (DateTime?)null : Convert.ToDateTime(rdr[14]), 
                        rdr.IsDBNull(15) ?  (DateTime?)null : Convert.ToDateTime(rdr[15]), 
                        rdr.IsDBNull(16) ?  (String)null : Convert.ToString(rdr[16]), 
                        rdr.IsDBNull(17) ?  (String)null : Convert.ToString(rdr[17]), 
                        rdr.IsDBNull(18) ?  (DateTime?)null : Convert.ToDateTime(rdr[18]), 
                        rdr.IsDBNull(19) ?  (Decimal?)null : Convert.ToDecimal(rdr[19]), 
                        rdr.IsDBNull(20) ?  (Decimal?)null : Convert.ToDecimal(rdr[20]), 
                        rdr.IsDBNull(21) ?  (Decimal?)null : Convert.ToDecimal(rdr[21]), 
                        rdr.IsDBNull(22) ?  (String)null : Convert.ToString(rdr[22]), 
                        rdr.IsDBNull(23) ?  (Decimal?)null : Convert.ToDecimal(rdr[23]), 
                        rdr.IsDBNull(24) ?  (Decimal?)null : Convert.ToDecimal(rdr[24]), 
                        rdr.IsDBNull(25) ?  (DateTime?)null : Convert.ToDateTime(rdr[25]), 
                        rdr.IsDBNull(26) ?  (Decimal?)null : Convert.ToDecimal(rdr[26]), 
                        rdr.IsDBNull(27) ?  (Decimal?)null : Convert.ToDecimal(rdr[27]), 
                        rdr.IsDBNull(28) ?  (String)null : Convert.ToString(rdr[28]), 
                        rdr.IsDBNull(29) ?  (DateTime?)null : Convert.ToDateTime(rdr[29]), 
                        rdr.IsDBNull(30) ?  (String)null : Convert.ToString(rdr[30]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}