/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace Bars.CRKR
{
    public sealed class VCompenParamsDataRecord : BbRecord
    {
        public VCompenParamsDataRecord(): base()
        {
            fillFields();
        }
        public VCompenParamsDataRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VCompenParamsDataRecord(BbDataSource Parent, OracleDecimal RowScn, Decimal? ID, String PAR, String VAL, String DISCRIPTION, Decimal? TYPE, String TYPE_DISCR, String KF, String BRANCH, DateTime? DATE_FROM, DateTime? DATE_TO, String ENABLE_DATES, Decimal? IS_ENABLE, DateTime? BD)
            : this(Parent)
        {
            this.ID = ID;
            this.PAR = PAR;
            this.VAL = VAL;
            this.DISCRIPTION = DISCRIPTION;
            this.TYPE = TYPE;
            this.TYPE_DISCR = TYPE_DISCR;
            this.KF = KF;
            this.BRANCH = BRANCH;
            this.DATE_FROM = DATE_FROM;
            this.DATE_TO = DATE_TO;
            this.ENABLE_DATES = ENABLE_DATES;
            this.IS_ENABLE = IS_ENABLE;
            this.BD = BD;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("ID", OracleDbType.Decimal, false, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("PAR", OracleDbType.Varchar2, false, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("VAL", OracleDbType.Varchar2, true, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("DISCRIPTION", OracleDbType.Varchar2, true, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("TYPE", OracleDbType.Decimal, true, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("TYPE_DISCR", OracleDbType.Varchar2, true, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("KF", OracleDbType.Varchar2, true, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("BRANCH", OracleDbType.Varchar2, true, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("DATE_FROM", OracleDbType.Date, true, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("DATE_TO", OracleDbType.Date, true, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("ENABLE_DATES", OracleDbType.Varchar2, true, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("IS_ENABLE", OracleDbType.Decimal, true, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("BD", OracleDbType.Date, true, false, false, false, false, "V_COMPEN_PARAMS_DATA", ObjectTypes.View, "", ""));        
        }
        public Decimal? ID { get { return (Decimal?)FindField("ID").Value; } set {SetField("ID", value);} }
        public String PAR { get { return (String)FindField("PAR").Value; } set {SetField("PAR", value);} }
        public String VAL { get { return (String)FindField("VAL").Value; } set {SetField("VAL", value);} }
        public String DISCRIPTION { get { return (String)FindField("DISCRIPTION").Value; } set {SetField("DISCRIPTION", value);} }
        public Decimal? TYPE { get { return (Decimal?)FindField("TYPE").Value; } set {SetField("TYPE", value);} }
        public String TYPE_DISCR { get { return (String)FindField("TYPE_DISCR").Value; } set {SetField("TYPE_DISCR", value);} }
        public String KF { get { return (String)FindField("KF").Value; } set {SetField("KF", value);} }
        public String BRANCH { get { return (String)FindField("BRANCH").Value; } set {SetField("BRANCH", value);} }
        public DateTime? DATE_FROM { get { return (DateTime?)FindField("DATE_FROM").Value; } set {SetField("DATE_FROM", value);} }
        public DateTime? DATE_TO { get { return (DateTime?)FindField("DATE_TO").Value; } set {SetField("DATE_TO", value);} }
        public String ENABLE_DATES { get { return (String)FindField("ENABLE_DATES").Value; } set {SetField("ENABLE_DATES", value);} }
        public Decimal? IS_ENABLE { get { return (Decimal?)FindField("IS_ENABLE").Value; } set {SetField("IS_ENABLE", value);} }
        public DateTime? BD { get { return (DateTime?)FindField("BD").Value; } set {SetField("BD", value);} }
    }

    public sealed class VCompenParamsDataFilters : BbFilters
    {
        public VCompenParamsDataFilters(BbDataSource Parent) : base (Parent)
        {
            ID = new BBDecimalFilter(this, "ID");
            PAR = new BBVarchar2Filter(this, "PAR");
            VAL = new BBVarchar2Filter(this, "VAL");
            DISCRIPTION = new BBVarchar2Filter(this, "DISCRIPTION");
            TYPE = new BBDecimalFilter(this, "TYPE");
            TYPE_DISCR = new BBVarchar2Filter(this, "TYPE_DISCR");
            KF = new BBVarchar2Filter(this, "KF");
            BRANCH = new BBVarchar2Filter(this, "BRANCH");
            DATE_FROM = new BBDateFilter(this, "DATE_FROM");
            DATE_TO = new BBDateFilter(this, "DATE_TO");
            ENABLE_DATES = new BBVarchar2Filter(this, "ENABLE_DATES");
            IS_ENABLE = new BBDecimalFilter(this, "IS_ENABLE");
            BD = new BBDateFilter(this, "BD");
        }
        public BBDecimalFilter ID;
        public BBVarchar2Filter PAR;
        public BBVarchar2Filter VAL;
        public BBVarchar2Filter DISCRIPTION;
        public BBDecimalFilter TYPE;
        public BBVarchar2Filter TYPE_DISCR;
        public BBVarchar2Filter KF;
        public BBVarchar2Filter BRANCH;
        public BBDateFilter DATE_FROM;
        public BBDateFilter DATE_TO;
        public BBVarchar2Filter ENABLE_DATES;
        public BBDecimalFilter IS_ENABLE;
        public BBDateFilter BD;
    }

    public partial class VCompenParamsData : BbTable<VCompenParamsDataRecord, VCompenParamsDataFilters>
    {
        public VCompenParamsData() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VCompenParamsData(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VCompenParamsDataRecord> Select(VCompenParamsDataRecord Item)
        {
            List<VCompenParamsDataRecord> res = new List<VCompenParamsDataRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VCompenParamsDataRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (Decimal?)null : Convert.ToDecimal(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (String)null : Convert.ToString(rdr[4]), 
                        rdr.IsDBNull(5) ?  (Decimal?)null : Convert.ToDecimal(rdr[5]), 
                        rdr.IsDBNull(6) ?  (String)null : Convert.ToString(rdr[6]), 
                        rdr.IsDBNull(7) ?  (String)null : Convert.ToString(rdr[7]), 
                        rdr.IsDBNull(8) ?  (String)null : Convert.ToString(rdr[8]), 
                        rdr.IsDBNull(9) ?  (DateTime?)null : Convert.ToDateTime(rdr[9]), 
                        rdr.IsDBNull(10) ?  (DateTime?)null : Convert.ToDateTime(rdr[10]), 
                        rdr.IsDBNull(11) ?  (String)null : Convert.ToString(rdr[11]), 
                        rdr.IsDBNull(12) ?  (Decimal?)null : Convert.ToDecimal(rdr[12]), 
                        rdr.IsDBNull(13) ?  (DateTime?)null : Convert.ToDateTime(rdr[13]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}