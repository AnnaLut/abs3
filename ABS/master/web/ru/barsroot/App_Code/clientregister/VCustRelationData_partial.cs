/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace clientregister
{
    public partial class VCustRelationData
    {
        public List<VCustRelationDataRecord> SelectCustRelationData(Decimal? RNK, Decimal? REL_INTEXT, Decimal? REL_RNK, Decimal? REL_ID)
        {
            this.Filter.RNK.Equal(RNK);
            this.Filter.REL_INTEXT.Equal(REL_INTEXT);
            this.Filter.REL_RNK.Equal(REL_RNK);
            this.Filter.REL_ID.Equal(REL_ID);

            return Select();
        }
        public new void Update(VCustRelationDataRecord Item)
        {
            Kl kl = new Kl(this.Connection);

            // определяем даты в зависимости от типа данных
            DateTime? BDATE;
            DateTime? EDATE;

            switch (Item.DATASET_ID)
            {
                case "SIMPLE":
                    BDATE = Item.BDATE_SIMPLE;
                    EDATE = Item.EDATE_SIMPLE;
                    break;
                case "VAGA":
                    BDATE = Item.BDATE_VAGA;
                    EDATE = Item.EDATE_VAGA;
                    break;
                case "TRUSTEE":
                    BDATE = Item.BDATE_TRUSTEE;
                    EDATE = Item.EDATE_TRUSTEE;
                    break;
                default:
                    BDATE = (DateTime?)null;
                    EDATE = (DateTime?)null;
                    break;
            }

            kl.SETCUSTOMERREL(Item.RNK, Item.REL_ID, Item.REL_RNK, Item.REL_INTEXT, Item.VAGA1, Item.VAGA2, Item.TYPE_ID, Item.POSITION, Item.POSITION_R, Item.FIRST_NAME, Item.MIDDLE_NAME, Item.LAST_NAME, Item.DOCUMENT_TYPE_ID, Item.DOCUMENT, Item.TRUST_REGNUM, Item.TRUST_REGDAT, BDATE, EDATE, Item.NOTARY_NAME, Item.NOTARY_REGION, Item.SIGN_PRIVS, Item.SIGN_ID, Item.NAME_R);
        }
        public new void Insert(VCustRelationDataRecord Item)
        {
            Kl kl = new Kl(this.Connection);

            // удаляем тип связаности - Пусто
            kl.DELCUSTOMERREL(Item.RNK, -1, Item.REL_RNK, Item.REL_INTEXT);

            // добавляем настоящий
            // определяем даты в зависимости от типа данных
            DateTime? BDATE = (DateTime?)null;
            DateTime? EDATE = (DateTime?)null;

            if (Item.BDATE_SIMPLE.HasValue)
            {
                // "SIMPLE"
                BDATE = Item.BDATE_SIMPLE;
                EDATE = Item.EDATE_SIMPLE;
            }
            else if (Item.BDATE_VAGA.HasValue)
            {
                // "VAGA":
                BDATE = Item.BDATE_VAGA;
                EDATE = Item.EDATE_VAGA;
            }
            else if (Item.BDATE_TRUSTEE.HasValue)
            {
                // "TRUSTEE":
                BDATE = Item.BDATE_TRUSTEE;
                EDATE = Item.EDATE_TRUSTEE;
            }

            kl.SETCUSTOMERREL(Item.RNK, Item.REL_ID, Item.REL_RNK, Item.REL_INTEXT, Item.VAGA1, Item.VAGA2, Item.TYPE_ID, Item.POSITION, Item.POSITION_R, Item.FIRST_NAME, Item.MIDDLE_NAME, Item.LAST_NAME, Item.DOCUMENT_TYPE_ID, Item.DOCUMENT, Item.TRUST_REGNUM, Item.TRUST_REGDAT, BDATE, EDATE, Item.NOTARY_NAME, Item.NOTARY_REGION, Item.SIGN_PRIVS, Item.SIGN_ID, Item.NAME_R);

            defaultWebService df = new defaultWebService();

            df.CheckRelationCustomer(Item.NAME_R, Item.RNK, Item.REL_RNK, Item.REL_INTEXT, Item.REL_ID);
        }
        public new void Delete(VCustRelationDataRecord Item)
        {
            Kl kl = new Kl(this.Connection);
            kl.DELCUSTOMERREL(Item.RNK, Item.REL_ID, Item.REL_RNK, Item.REL_INTEXT);

            // если удаляется последняя связь то оставляем пустую
            Decimal? RELCUST_RNK = (Item.REL_INTEXT == 0 ? (Decimal?)null : Item.REL_RNK);
            Decimal? RELEXT_ID = (Item.REL_INTEXT == 0 ? Item.REL_RNK : (Decimal?)null);
            Int32 Cnt = (new VCustRelationTypes(this.Connection)).SelectCustRelationTypes(Item.RNK, Item.REL_INTEXT, RELCUST_RNK, RELEXT_ID).Count;

            if (Cnt == 0)
            {
                // тип связаности - Пусто
                Decimal? RELID = -1;
                kl.SETCUSTOMERREL(Item.RNK, RELID, Item.REL_RNK, Item.REL_INTEXT, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
            }
        }
    }
}