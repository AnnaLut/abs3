/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace Bars.ObjLayer.CbiRep
{
    public sealed class VCbirepRepfolderslistRecord : BbRecord
    {
        public VCbirepRepfolderslistRecord(): base()
        {
            fillFields();
        }
        public VCbirepRepfolderslistRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VCbirepRepfolderslistRecord(BbDataSource Parent, OracleDecimal RowScn, String CODEAPP, Decimal? FOLDER_ID, String FOLDER_TYPE, String FOLDER_NAME)
            : this(Parent)
        {
            this.CODEAPP = CODEAPP;
            this.FOLDER_ID = FOLDER_ID;
            this.FOLDER_TYPE = FOLDER_TYPE;
            this.FOLDER_NAME = FOLDER_NAME;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("CODEAPP", OracleDbType.Char, false, false, false, false, false, "V_CBIREP_REPFOLDERSLIST", ObjectTypes.View, "Доступные пользователю папки отчетов по армам", ""));
            Fields.Add( new BbField("FOLDER_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CBIREP_REPFOLDERSLIST", ObjectTypes.View, "Доступные пользователю папки отчетов по армам", "Ид папки"));
            Fields.Add( new BbField("FOLDER_TYPE", OracleDbType.Varchar2, false, false, false, false, false, "V_CBIREP_REPFOLDERSLIST", ObjectTypes.View, "Доступные пользователю папки отчетов по армам", "Тип папки"));
            Fields.Add( new BbField("FOLDER_NAME", OracleDbType.Varchar2, false, false, false, false, false, "V_CBIREP_REPFOLDERSLIST", ObjectTypes.View, "Доступные пользователю папки отчетов по армам", "Наименование папки"));        
        }
        public String CODEAPP { get { return (String)FindField("CODEAPP").Value; } set {SetField("CODEAPP", value);} }
        public Decimal? FOLDER_ID { get { return (Decimal?)FindField("FOLDER_ID").Value; } set {SetField("FOLDER_ID", value);} }
        public String FOLDER_TYPE { get { return (String)FindField("FOLDER_TYPE").Value; } set {SetField("FOLDER_TYPE", value);} }
        public String FOLDER_NAME { get { return (String)FindField("FOLDER_NAME").Value; } set {SetField("FOLDER_NAME", value);} }
    }

    public sealed class VCbirepRepfolderslistFilters : BbFilters
    {
        public VCbirepRepfolderslistFilters(BbDataSource Parent) : base (Parent)
        {
            CODEAPP = new BBCharFilter(this, "CODEAPP");
            FOLDER_ID = new BBDecimalFilter(this, "FOLDER_ID");
            FOLDER_TYPE = new BBVarchar2Filter(this, "FOLDER_TYPE");
            FOLDER_NAME = new BBVarchar2Filter(this, "FOLDER_NAME");
        }
        public BBCharFilter CODEAPP;
        public BBDecimalFilter FOLDER_ID;
        public BBVarchar2Filter FOLDER_TYPE;
        public BBVarchar2Filter FOLDER_NAME;
    }

    public partial class VCbirepRepfolderslist : BbTable<VCbirepRepfolderslistRecord, VCbirepRepfolderslistFilters>
    {
        public VCbirepRepfolderslist() : base(new BbConnection())
        {
        }
        public VCbirepRepfolderslist(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VCbirepRepfolderslistRecord> Select(VCbirepRepfolderslistRecord Item)
        {
            List<VCbirepRepfolderslistRecord> res = new List<VCbirepRepfolderslistRecord>();
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                OracleDataReader rdr = ExecuteReader(Item);
                try
                {
                    while (rdr.Read())
                    {
                        res.Add(new VCbirepRepfolderslistRecord(
                            this,
                            rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                            rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (Decimal?)null : Convert.ToDecimal(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (String)null : Convert.ToString(rdr[4]))
                        );
                    }
                }
                finally
                {
                    rdr.Close();
                    rdr.Dispose();
                }
            }
            finally
            {
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
        public List<VCbirepRepfolderslistRecord> Select(String SortExpression)
        {
            // сортировка
            if (!String.IsNullOrEmpty(SortExpression))
                this.Filter.OrderStatement.Add(SortExpression);
                
            return Select();            
        }
    }
}