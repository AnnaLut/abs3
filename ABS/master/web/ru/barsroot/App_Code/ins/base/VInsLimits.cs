/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace Bars.Ins
{
    public sealed class VInsLimitsRecord : BbRecord
    {
        public VInsLimitsRecord(): base()
        {
            fillFields();
        }
        public VInsLimitsRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VInsLimitsRecord(BbDataSource Parent, OracleDecimal RowScn, String LIMIT_ID, String NAME, Decimal? SUM_VALUE, Decimal? PERC_VALUE)
            : this(Parent)
        {
            this.LIMIT_ID = LIMIT_ID;
            this.NAME = NAME;
            this.SUM_VALUE = SUM_VALUE;
            this.PERC_VALUE = PERC_VALUE;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("LIMIT_ID", OracleDbType.Varchar2, false, false, false, false, false, "V_INS_LIMITS", ObjectTypes.View, "Ліміти по договорах страхування (Представлення)", "Ідентифікатор"));
            Fields.Add( new BbField("NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_INS_LIMITS", ObjectTypes.View, "Ліміти по договорах страхування (Представлення)", "Найменування"));
            Fields.Add( new BbField("SUM_VALUE", OracleDbType.Decimal, true, false, false, false, false, "V_INS_LIMITS", ObjectTypes.View, "Ліміти по договорах страхування (Представлення)", "Cума"));
            Fields.Add( new BbField("PERC_VALUE", OracleDbType.Decimal, true, false, false, false, false, "V_INS_LIMITS", ObjectTypes.View, "Ліміти по договорах страхування (Представлення)", "Процент"));        
        }
        public String LIMIT_ID { get { return (String)FindField("LIMIT_ID").Value; } set {SetField("LIMIT_ID", value);} }
        public String NAME { get { return (String)FindField("NAME").Value; } set {SetField("NAME", value);} }
        public Decimal? SUM_VALUE { get { return (Decimal?)FindField("SUM_VALUE").Value; } set {SetField("SUM_VALUE", value);} }
        public Decimal? PERC_VALUE { get { return (Decimal?)FindField("PERC_VALUE").Value; } set {SetField("PERC_VALUE", value);} }
    }

    public sealed class VInsLimitsFilters : BbFilters
    {
        public VInsLimitsFilters(BbDataSource Parent) : base (Parent)
        {
            LIMIT_ID = new BBVarchar2Filter(this, "LIMIT_ID");
            NAME = new BBVarchar2Filter(this, "NAME");
            SUM_VALUE = new BBDecimalFilter(this, "SUM_VALUE");
            PERC_VALUE = new BBDecimalFilter(this, "PERC_VALUE");
        }
        public BBVarchar2Filter LIMIT_ID;
        public BBVarchar2Filter NAME;
        public BBDecimalFilter SUM_VALUE;
        public BBDecimalFilter PERC_VALUE;
    }

    public partial class VInsLimits : BbTable<VInsLimitsRecord, VInsLimitsFilters>
    {
        public VInsLimits() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VInsLimits(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VInsLimitsRecord> Select(VInsLimitsRecord Item)
        {
            List<VInsLimitsRecord> res = new List<VInsLimitsRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VInsLimitsRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (Decimal?)null : Convert.ToDecimal(rdr[3]), 
                        rdr.IsDBNull(4) ?  (Decimal?)null : Convert.ToDecimal(rdr[4]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}