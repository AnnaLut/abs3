/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace credit
{
    public sealed class VWcsSubproductInsurancesRecord : BbRecord
    {
        public VWcsSubproductInsurancesRecord(): base()
        {
            fillFields();
        }
        public VWcsSubproductInsurancesRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VWcsSubproductInsurancesRecord(BbDataSource Parent, OracleDecimal RowScn, String SUBPRODUCT_ID, String INSURANCE_ID, String INSURANCE_NAME, Decimal? IS_REQUIRED, Decimal? ORD, String WS_ID)
            : this(Parent)
        {
            this.SUBPRODUCT_ID = SUBPRODUCT_ID;
            this.INSURANCE_ID = INSURANCE_ID;
            this.INSURANCE_NAME = INSURANCE_NAME;
            this.IS_REQUIRED = IS_REQUIRED;
            this.ORD = ORD;
            this.WS_ID = WS_ID;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("SUBPRODUCT_ID", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SUBPRODUCT_INSURANCES", ObjectTypes.View, "Страховки клиента субпродукта (Представление)", "Идентификатор субродукта"));
            Fields.Add( new BbField("INSURANCE_ID", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SUBPRODUCT_INSURANCES", ObjectTypes.View, "Страховки клиента субпродукта (Представление)", "Идентификатор типа страховки"));
            Fields.Add( new BbField("INSURANCE_NAME", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SUBPRODUCT_INSURANCES", ObjectTypes.View, "Страховки клиента субпродукта (Представление)", "Наименование типа страховки"));
            Fields.Add( new BbField("IS_REQUIRED", OracleDbType.Decimal, true, false, false, false, false, "V_WCS_SUBPRODUCT_INSURANCES", ObjectTypes.View, "Страховки клиента субпродукта (Представление)", "Обязательна ли для заполнения"));
            Fields.Add( new BbField("ORD", OracleDbType.Decimal, true, false, false, false, false, "V_WCS_SUBPRODUCT_INSURANCES", ObjectTypes.View, "Страховки клиента субпродукта (Представление)", "Порядок"));
            Fields.Add( new BbField("WS_ID", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SUBPRODUCT_INSURANCES", ObjectTypes.View, "Страховки клиента субпродукта (Представление)", "Идентификатор рабочего пространства"));        
        }
        public String SUBPRODUCT_ID { get { return (String)FindField("SUBPRODUCT_ID").Value; } set {SetField("SUBPRODUCT_ID", value);} }
        public String INSURANCE_ID { get { return (String)FindField("INSURANCE_ID").Value; } set {SetField("INSURANCE_ID", value);} }
        public String INSURANCE_NAME { get { return (String)FindField("INSURANCE_NAME").Value; } set {SetField("INSURANCE_NAME", value);} }
        public Decimal? IS_REQUIRED { get { return (Decimal?)FindField("IS_REQUIRED").Value; } set {SetField("IS_REQUIRED", value);} }
        public Decimal? ORD { get { return (Decimal?)FindField("ORD").Value; } set {SetField("ORD", value);} }
        public String WS_ID { get { return (String)FindField("WS_ID").Value; } set {SetField("WS_ID", value);} }
    }

    public sealed class VWcsSubproductInsurancesFilters : BbFilters
    {
        public VWcsSubproductInsurancesFilters(BbDataSource Parent) : base (Parent)
        {
            SUBPRODUCT_ID = new BBVarchar2Filter(this, "SUBPRODUCT_ID");
            INSURANCE_ID = new BBVarchar2Filter(this, "INSURANCE_ID");
            INSURANCE_NAME = new BBVarchar2Filter(this, "INSURANCE_NAME");
            IS_REQUIRED = new BBDecimalFilter(this, "IS_REQUIRED");
            ORD = new BBDecimalFilter(this, "ORD");
            WS_ID = new BBVarchar2Filter(this, "WS_ID");
        }
        public BBVarchar2Filter SUBPRODUCT_ID;
        public BBVarchar2Filter INSURANCE_ID;
        public BBVarchar2Filter INSURANCE_NAME;
        public BBDecimalFilter IS_REQUIRED;
        public BBDecimalFilter ORD;
        public BBVarchar2Filter WS_ID;
    }

    public partial class VWcsSubproductInsurances : BbTable<VWcsSubproductInsurancesRecord, VWcsSubproductInsurancesFilters>
    {
        public VWcsSubproductInsurances() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VWcsSubproductInsurances(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VWcsSubproductInsurancesRecord> Select(VWcsSubproductInsurancesRecord Item)
        {
            List<VWcsSubproductInsurancesRecord> res = new List<VWcsSubproductInsurancesRecord>();
                        OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VWcsSubproductInsurancesRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (Decimal?)null : Convert.ToDecimal(rdr[4]), 
                        rdr.IsDBNull(5) ?  (Decimal?)null : Convert.ToDecimal(rdr[5]), 
                        rdr.IsDBNull(6) ?  (String)null : Convert.ToString(rdr[6]))
                    );
                }
            }
                        finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}