/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace ibank.core
{
    public sealed class XmlImpdocswRecord : BbRecord
    {
        public XmlImpdocswRecord(): base()
        {
            fillFields();
        }
        public XmlImpdocswRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public XmlImpdocswRecord(BbDataSource Parent, OracleDecimal RowScn, Decimal? IMPREF, String TAG, String VALUE)
            : this(Parent)
        {
            this.IMPREF = IMPREF;
            this.TAG = TAG;
            this.VALUE = VALUE;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("IMPREF", OracleDbType.Decimal, true, false, false, false, false, "XML_IMPDOCSW", ObjectTypes.Table, "„®Ї аҐЄўЁ§Ёвл Ё¬Ї®авЁа®ў ­­ле ¤®Єг¬Ґ­в®ў", ""));
            Fields.Add( new BbField("TAG", OracleDbType.Varchar2, true, false, false, false, false, "XML_IMPDOCSW", ObjectTypes.Table, "„®Ї аҐЄўЁ§Ёвл Ё¬Ї®авЁа®ў ­­ле ¤®Єг¬Ґ­в®ў", ""));
            Fields.Add( new BbField("VALUE", OracleDbType.Varchar2, true, false, false, false, false, "XML_IMPDOCSW", ObjectTypes.Table, "„®Ї аҐЄўЁ§Ёвл Ё¬Ї®авЁа®ў ­­ле ¤®Єг¬Ґ­в®ў", ""));        
        }
        public Decimal? IMPREF { get { return (Decimal?)FindField("IMPREF").Value; } set {SetField("IMPREF", value);} }
        public String TAG { get { return (String)FindField("TAG").Value; } set {SetField("TAG", value);} }
        public String VALUE { get { return (String)FindField("VALUE").Value; } set {SetField("VALUE", value);} }
    }

    public sealed class XmlImpdocswFilters : BbFilters
    {
        public XmlImpdocswFilters(BbDataSource Parent) : base (Parent)
        {
            IMPREF = new BBDecimalFilter(this, "IMPREF");
            TAG = new BBVarchar2Filter(this, "TAG");
            VALUE = new BBVarchar2Filter(this, "VALUE");
        }
        public BBDecimalFilter IMPREF;
        public BBVarchar2Filter TAG;
        public BBVarchar2Filter VALUE;
    }

    public partial class XmlImpdocsw : BbTable<XmlImpdocswRecord, XmlImpdocswFilters>
    {
        public XmlImpdocsw() : base(new BbConnection())
        {
            base.Connection.RoleName = "OPER000";
        }
        public XmlImpdocsw(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<XmlImpdocswRecord> Select(XmlImpdocswRecord Item)
        {
            List<XmlImpdocswRecord> res = new List<XmlImpdocswRecord>();
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                OracleDataReader rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new XmlImpdocswRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (Decimal?)null : Convert.ToDecimal(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]))
                    );
                }
                rdr.Close();
                rdr.Dispose();
            }
            finally
            {
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
        public List<XmlImpdocswRecord> Select(String SortExpression)
        {
            XmlImpdocswRecord rec = new XmlImpdocswRecord();

            return Select(SortExpression);            
        }
    }
}