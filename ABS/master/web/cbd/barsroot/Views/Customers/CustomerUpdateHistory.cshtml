@inherits System.Web.Mvc.WebViewPage<int>
@using System.Web.Mvc.Html
@using System.Web.Mvc
@{
    Layout = null;
}
<script type="text/javascript">
    var dateStartCustHist = '';
    var dateEndCustHist = '';
    var pageNumCustHist = 1;
    var sortCustHist = '';
    var sortDirCustHist = '';

    $(document).ready(function () {
        $('#tableCustUpdHist').jungGridView({
            updateTableUrl: '/barsroot/customers/CustomerUpdateHistoryLoad/',
            userUpdateParamFunc: updateParamCustHist,
            viewTfoot: true,
            buttonToUpdateId:'btSubmitFilterUpdHist'
        });
        //$('#btSubmitFilterUpdHist').jungGridView('button', {updateTableId:'tableCustUpdHist' ,updateTableUrl: '/barsroot/customers/CustomerUpdateHistoryLoad/', userUpdateParamFunc: updateParamCustHist, viewTfoot:true });
        
        $('#filterCustHistDateStart, #filterCustHistDateEnd').datepicker({
            changeMonth: true,
            changeYear: true,
            showButtonPanel: true,
            firstDay: 1,
            dateFormat: 'dd/mm/yy',
            onClose: function (selectedDate) {
               try {
                    $(this).removeClass('error');
                    var dates = $('#filterCustHistDateStart, #filterCustHistDateEnd');
                    var option = this.id == 'filterCustHistDateStart' ? 'minDate' : 'maxDate',
                    instance = $(this).data('datepicker'),
                    date = $.datepicker.parseDate(
                    instance.settings.dateFormat ||
                    $.datepicker._defaults.dateFormat,
                    selectedDate, instance.settings);
                    dates.not(this).datepicker('option', option, date);
                }
                catch (e) { var t = e; $(this).addClass('error'); }
            }
        }).mask('99/99/9999');

        $('input:submit, input:button, button').button();

    });
    function updateParamCustHist(type, pageNum) {
        if (type == 'start') {
            dateStartCustHist = $('#filterCustHistDateStart').val();
            dateEndCustHist = $('#filterCustHistDateEnd').val();
            pageNumCustHist = 1;
            /*sort = 'RNK';
            sortDir = 'DESC';*/
        }
        var param = {
            id: '@Model',
            dStart: dateStartCustHist,
            dEnd: dateEndCustHist
            //pageNum: pageNumCustHist,
            //pageSize: $('#rowNumber').val() == undefined ? 10 : $('#rowNumber').val()
        };
        return param;

    }
</script>

<fieldset>
    <legend>Основний фільтр</legend>
    <div class="mainFilter" id="mainFilter">
        <div>
            Період з:
                    <input class="edit centered" id="filterCustHistDateStart" type="text" value="@DateTime.Now.AddMonths(-1).ToShortDateString()"/>
            по:
                    <input class="edit centered" id="filterCustHistDateEnd" type="text" value="@DateTime.Now.ToShortDateString()"/>
        </div>
    </div>
</fieldset>
<div style="margin:5px 0 0 0;text-align:right;">
    <input id="btSubmitFilterUpdHist" type="button" value="Переглянути" style="float:right;margin:0 0 5px 0;" />
</div>
@BarsWeb.HtmlHelpers.HtmlHelpers.CreateTable(capTableBtn: new string[,] {/*{"rfr",""},{"xls","exportToExel();"},{"prn","printSelectDocum();"}*/},
                                columnName: new string[,] { { "Параметр", "" }, { "Старе значення", "" }, { "Нове значення", "" }, { "Дата зміни", "" }, { "Вніс зміни", "" }, { "ПІБ користувача", "" }},
                                preTableDivId:"tableCustUpdHist",
                                tableContent: Html.Action("CustomerUpdateHistoryLoad", new { id=Model,dStart=(DateTime.Now.AddMonths(-1)).ToShortDateString(),dEnd=(DateTime.Now.ToShortDateString()),pageSize=10}).ToString())