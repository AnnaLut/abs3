@{
  //Layout = "~/Views/Shared/_LayoutExt.cshtml";
}
<style type="text/css">
  .field-margin {
    margin-left: 10%;
    margin-top: 10px;
  }
</style>
<link href="~/Content/Themes/ModernUI/css/jqPlot/jquery.jqplot.min.css" rel="stylesheet" />
<link href="~/Content/Themes/ModernUI/css/jqPlot/examples.min.css" rel="stylesheet" />
<link href="~/Content/Themes/ModernUI/css/jqPlot/syntaxhighlighter/styles/shThemeDefault.min.css" rel="stylesheet" />
<link href="~/Content/Themes/ModernUI/css/jqPlot/syntaxhighlighter/styles/shThemejqPlot.min.css" rel="stylesheet" />

<script src="~/Scripts/jquery/jqPlot/jquery.jqplot.min.js"></script>
<script src="~/Content/Themes/ModernUI/css/jqPlot/syntaxhighlighter/scripts/shCore.min.js"></script>
<script src="~/Content/Themes/ModernUI/css/jqPlot/syntaxhighlighter/scripts/shBrushJScript.min.js"></script>
<script src="~/Content/Themes/ModernUI/css/jqPlot/syntaxhighlighter/scripts/shBrushXml.min.js"></script>

<script src="~/Scripts/jquery/jqPlot/plugins/jqplot.barRenderer.min.js"></script>
<script src="~/Scripts/jquery/jqPlot/plugins/jqplot.categoryAxisRenderer.min.js"></script>
<script src="~/Scripts/jquery/jqPlot/plugins/jqplot.pointLabels.min.js"></script>

<script src="~/Scripts/jquery/jqPlot/excanvas.min.js"></script>
<script>
  //var plot2;
  $(document).ready(function() {
    bindChart(data);
  });
  var data = [{ "FUNC_ID": 1662, "STAFF_ID": 20094, "HITS": 52, "LAST_HIT": "\/Date(1401747099000)\/", "NAME": "Адмiнiстрування дошки об`яв(нове оголошення)", "PERC": 47.27 },
    { "FUNC_ID": 1579, "STAFF_ID": 20094, "HITS": 58, "LAST_HIT": "\/Date(1401775340000)\/", "NAME": "Статистика", "PERC": 52.73 }];

  function bindChartData(data) {
    var result = [];
    $(data).each(function() {
      result.push([this['HITS'], this['NAME']]);
    });
    return [result];
  }

  function bindChart(chartData) {
    // For horizontal bar charts, x an y values must will be "flipped"
    // from their vertical bar counterpart.
    var plot2 = $('<div>');
    plot2.attr('id','plot2').appendTo($('#userStatisticChart'));
    $.jqplot('plot2',
      bindChartData(chartData), {
        seriesDefaults: {
          renderer: $.jqplot.BarRenderer,
          // Show point labels to the right ('e'ast) of each bar.
          // edgeTolerance of -15 allows labels flow outside the grid
          // up to 15 pixels.  If they flow out more than that, they 
          // will be hidden.
          pointLabels: { show: true, location: 'e', edgeTolerance: -15 },
          // Rotate the bar shadow as if bar is lit from top right.
          shadowAngle: 135,
          // Here's where we tell the chart it is oriented horizontally.
          rendererOptions: {
            barDirection: 'horizontal'
          }
        },
        axes: {
          yaxis: {
            renderer: $.jqplot.CategoryAxisRenderer
          }
        }
      });
  }
  function testData(dat1,dat2) {
    return [{ "FUNC_ID": 1662, "STAFF_ID": 20094, "HITS": dat1, "LAST_HIT": "\/Date(1401747099000)\/", "NAME": "Адмiнiстрування дошки об`яв(нове оголошення)", "PERC": 47.27 },
      { "FUNC_ID": 1579, "STAFF_ID": 20094, "HITS": dat2, "LAST_HIT": "\/Date(1401775340000)\/", "NAME": "Статистика", "PERC": 52.73 }];
  }
  function test() {
    $('#userStatisticChart').html('');
    var test1 = parseInt(Math.random() * 100, 10);
    var test2 = parseInt(Math.random() * 100, 10);
    bindChart(testData(test1,test2));

    $('#test1').val(test1);
    $('#test2').val(test2);
  }
</script>
<button onclick="test();">test</button>
<div id="userStatisticChart" style="width: 100%;height:400px;"></div>
<input id="test1" type="text" value="" />
<input id="test2" type="text" value="" />
<div>
  @*<script>
  Ext.define('User', {
    extend: 'Ext.data.Model',

    idProperty: 'WEBUSER',

    fields: [{
      name: 'WEBUSER',
      type: 'string'
    }, {
      name: 'DBUSER',
      type: 'string'
    }, {
      name: 'ATEMPS',
      type: 'string'
    }, {
      name: 'CHGDATE',
      type: 'date'
    }, {
      name: 'COMM',
      type: 'string'
    }, {
      name: 'BLOCKED',
      type: 'bool'
    }]
  });

  var storeUsers = Ext.create('Ext.data.Store', {
    model: 'User',
    autoLoad: true,
    pageSize: 10,
    proxy: {
      type: 'ajax',
      url: '/barsroot/statistics/userslist/',
      reader: {
        type: 'json',
        root: 'users'
      }
    }
  });

  var gridUsers = Ext.create('Ext.grid.Panel', {
    title: 'Користувачі',
    selType: 'rowmodel',
    region: 'north',
    height: 310,
    //width: 600,
    store: storeUsers,
    //margin: 10,
    listeners: {
      itemclick: function (dv, record, item, index, e) {
        //var selectedRecord = gridUsers.getSelectionModel().getSelection()[0];
        //var row = gridUsers.store.indexOf(selectedRecord);
        var date = dateField.rawValue;
        loadStorageTopHits(record.raw.USERID, date);

      }
    },
    dockedItems: [{
      xtype: 'pagingtoolbar',
      store: storeUsers,
      dock: 'bottom',
      displayInfo: true,
      beforePageText: 'Сторінка',
      afterPageText: 'из {0}',
      displayMsg: 'Користувачі {0} - {1} из {2}'
    }],
    plugins: [{
      ptype: 'rowediting',
      clicksToEdit: 2
    }],
    columns: [{
      xtype: 'rownumberer',
      width: 40
    }, {
      header: 'Користувач ВЕБ',
      dataIndex: 'WEBUSER',
      xtype: 'templatecolumn',
      flex: 1,
      tpl: '<b>{WEBUSER}</b>',
      editor: {
        xtype: 'textfield',
        allowBlank: false
      }
    }, {
      header: 'Користувач БД',
      dataIndex: 'DBUSER',
      editor: {
        xtype: 'textfield',
        allowBlank: false
      }
    }, {
      header: 'Дата створення',
      dataIndex: 'CHGDATE',
      xtype: 'datecolumn',
      format: 'd/m/Y',
      flex: 1,
      editor: {
        xtype: 'datefield',
        allowBlank: false
      }
    }, {
      header: 'Коментар',
      dataIndex: 'COMM',
      flex: 1,
      editor: {
        xtype: 'textfield',
        allowBlank: false
      }
    }, {
      header: 'Стан',
      dataIndex: 'BLOCKED',
      flex: 1,
      editor: {
        xtype: 'checkbox',
        allowBlank: false
      }
    }, {
      xtype: 'actioncolumn',
      width: 40,
      items: [{
        icon: '/common/images/default/16/delete2.png',
        handler: function (grid, rowIndex, colIndex) {
          storeUsers.removeAt(rowIndex);
        }
      }]
    }]//,
    //renderTo: Ext.getBody()
  });

  Ext.onReady(function () {
    gridUsers.addListener('rowselect', function (sm, rowIdx, r) {
      alert('test');
    });
  });


  /*window.generateData = function (n, floor) {
    var data = [],
        p = (Math.random() * 11) + 1,
        i;

    floor = (!floor && floor !== 0) ? 20 : floor;

    for (i = 0; i < (n || 12) ; i++) {
      data.push({
        name: Ext.Date.monthNames[i % 12],
        data1: Math.floor(Math.max((Math.random() * 100), floor)),
        data2: Math.floor(Math.max((Math.random() * 100), floor)),
        data3: Math.floor(Math.max((Math.random() * 100), floor)),
        data4: Math.floor(Math.max((Math.random() * 100), floor)),
        data5: Math.floor(Math.max((Math.random() * 100), floor)),
        data6: Math.floor(Math.max((Math.random() * 100), floor)),
        data7: Math.floor(Math.max((Math.random() * 100), floor)),
        data8: Math.floor(Math.max((Math.random() * 100), floor)),
        data9: Math.floor(Math.max((Math.random() * 100), floor))
      });
    }
    return data;
  };*/
  Ext.define('TOP_HITS', {
    extend: 'Ext.data.Model',
    fields: [
      { name: 'PERC', type: 'float' },
      { name: 'NAME', type: 'string' },
      { name: 'HITS', type: 'float' }
    ]
  });

  /*var store = Ext.create('Ext.data.Store', {
    model: 'TOP_HITS',
    autoLoad: true,
    proxy: {
      type: 'ajax',
      url: '/barsroot/statistics/tophitsdata/',
      reader: {
        type: 'json'
      }
    }
  });*/


  function loadStorageTopHits(id, date) {
    //panelChart.remove(0,true);
    //panelChart.removeAll();
    //panelChart.doLayout();

    var maskPanelChart = new Ext.LoadMask(panelChart, { msg: "Завантаження" });
    maskPanelChart.show();
    store.removeAll();
    panelChart.doLayout();
    //store.loadData([{ "FUNC_ID": 0, "STAFF_ID": 0, "HITS": 0, "LAST_HIT": "\/Date(1387900725000)\/", "NAME": "", "PERC": 0 }], true);
    Ext.Ajax.request({
      url: '/barsroot/statistics/tophitsdata/?id=' + id + '&date=' + date,
      async: false,
      failure: function () { alert('Error'); },
      success: function (response) {
        store.loadData(Ext.decode(response.responseText), false);
        panelChart.doLayout();
        maskPanelChart.destroy();
      }
    });
  }

  var store = Ext.create('Ext.data.Store', {
    model: 'TOP_HITS',
    // autoLoad: true,
    proxy: {
      type: 'ajax',
      url: '/barsroot/statistics/tophitsdata/',
      reader: {
        type: 'json'
      }
    }
  });

  var dateField = Ext.create('Ext.form.field.Date', {
    fieldLabel: 'Виберіть дату',
    format: 'd/m/Y',
    name: 'chartDate',
    //renderTo: Ext.getBody(),
    value: new Date()

  });

  Ext.require('Ext.chart.*');
  Ext.require(['Ext.layout.container.Fit', 'Ext.window.MessageBox']);

  var donut = false;
  var chart = Ext.create('Ext.chart.Chart', {
    xtype: 'chart',
    animate: true,
    store: store,
    shadow: true,
    legend: {
      position: 'left'
    },
    insetPadding: 10,
    theme: 'Base:gradients',
    series: [{
      type: 'pie',
      field: 'PERC',
      showInLegend: true,
      donut: donut,
      tips: {
        trackMouse: true,
        width: 150,
        height: 50,
        renderer: function (storeItem, item) {
          this.setTitle(storeItem.get('NAME') + ': ' + storeItem.get('HITS') + '(' + storeItem.get('PERC') + '%)');
        }
      },
      highlight: {
        segment: {
          margin: 20
        }
      },
      label: {
        field: 'NAME',
        display: 'rotate',
        contrast: true,
        font: '12px Arial'
      }
    }]
  });


  var panelChart = Ext.create('widget.panel', {
    width: 800,
    height: 600,
    autoScroll: true,
    //collapsible: true,
    title: 'Semester Trends',
    //renderTo: Ext.getBody(),
    layout: 'fit',
    region: 'center',
    //кнопки в заголовку панелі
    /*tools:[{
      type:'plus',
      tooltip: 'Add project',
      // hidden:true,
      handler: function(event, toolEl, panel){
        // Add logic
      }
    }],*/
    tbar: [{
      text: 'Зберегти графік',
      iconCls: 'x-tbar-save',
      handler: function () {
        Ext.MessageBox.confirm('Confirm Download', 'Would you like to download the chart as an image?', function (choice) {
          if (choice == 'yes') {
            Ext.draw.engine.ImageExporter({ defaultUrl: '/barsroot/webservices/convertsvg/' });
            chart.save({
              type: 'image/png'
            });
          }
        });
      }
    }, {
      text: 'Перечитати дані',
      iconCls: 'x-tbar-loading',
      handler: function () {
        var selectedRecord = gridUsers.getSelectionModel().getSelection();
        var row = gridUsers.store.indexOf(selectedRecord);
        var date = dateField.rawValue;
        if (selectedRecord.length > 0) {
          loadStorageTopHits(selectedRecord[0].raw.USERID, date);
        } else {
          Ext.MessageBox.show({
            title: 'Попередження',
            msg: 'Виберіть користувача для перегляду статистики.',
            buttons: Ext.MessageBox.OK,
            icon: Ext.MessageBox.WARNING,     // иконка мб {ERROR,INFO,QUESTION,WARNING}
            width: 300,                       // есть еще minWidth
            closable: false                   // признак наличия икнки закрытия окна
          });

        }
      }
    }, {
      enableToggle: true,
      pressed: false,
      text: 'Donut',
      toggleHandler: function (btn, pressed) {
        chart.series.first().donut = pressed ? 35 : false;
        chart.refresh();
      }
    }, {
      text: 'remove 0',
      handler: function () {
        chart.store.removeAll();

      }
    }, '-', dateField],
    items: chart
  });


  var panelStatisticUsers = Ext.create('Ext.Panel', {
    width: '100%',
    height: 800,
    //padding: 5,
    layout: 'border',
    border: false,
    items: [panelChart, gridUsers/*{
      xtype: 'panel',
      title: 'Центральная панель',
      html: 'Центральная панель',
      region: 'center',
      margin: '5 5 5 5'
     },{
        xtype: 'panel',
        title: 'Верхняя панель',
        html: 'Верхняя панель',
        region: 'north',
        height: 80
      }, {
        xtype: 'panel',
        title: 'Нижняя панель',
        html: 'Нижняя панель',
        region: 'south',
        height: 80
      }, {
        xtype: 'panel',
        title: 'Левая панель',
        html: 'Левая панель',
        region: 'west',
        width: 100
      }, {
        xtype: 'panel',
        title: 'Правая панель',
        html: 'Правая панель',
        region: 'east',
        width: 120
      }*/]//,
    //renderTo: Ext.getBody()
    //renderTo: viewport
  });

  Ext.onReady(function () {
    Ext.create('Ext.panel.Panel', {
      //new Ext.Viewport({
      renderTo: Ext.getBody(),
      //width: 300,
      //height: 800,
      padding: 5,
      border: false,
      //title: 'Основной контейнер',
      layout: 'fit',
      //layout: 'border',
      items: [panelStatisticUsers]
    });
  });

  </script>*@

</div>


