@{
    Layout = "~/Views/Shared/_LayoutKendo.cshtml";
    ViewBag.Title = "Приєднання клієнта до ДКБО";
}

<style>
    #content {
    }

    #spinner {
        background: url('/barsroot/Content/spinners/ajax-loader.gif');
        width: 31px;
        height: 31px;
        display: none;
    }

    #fieldlist {
        margin: 0;
        padding: 0;
    }

        #fieldlist li {
            list-style: none;
            padding-bottom: .7em;
            text-align: left;
        }

        #fieldlist label {
            display: block;
            padding-bottom: .3em;
            font-weight: bold;
            text-transform: uppercase;
            font-size: 12px;
            color: #444;
        }

        #fieldlist li.status {
            text-align: center;
        }

        #fieldlist li .k-widget:not(.k-tooltip),
        #fieldlist li .k-textbox {
            margin: 0 5px 5px 0;
        }

    .confirm {
        padding-top: 1em;
    }

    .valid {
        color: green;
    }

    .invalid {
        color: red;
    }

    #fieldlist li input[type="checkbox"] {
        margin: 0 5px 0 0;
    }

    span.k-widget.k-tooltip-validation {
        display;
        inline-block;
        width: 160px;
        text-align: left;
        border: 0;
        padding: 0;
        margin: 0;
        background: none;
        box-shadow: none;
        color: red;
    }

    .k-tooltip-validation .k-warning {
        display: none;
    }
</style>

<form id="formContent" class="k-content">
    <h2>@ViewBag.Title</h2>
    <div id="spinner"></div>
    @using (@Html.BeginForm("Get_W4_DKBO_WEB_Grid", "checkdkbo", null))
    {
        <div id="searchPannel" class="panel panel-default">
            <div class="panel-heading">Пошук</div>
            <div class="panel-body">
                <div class="col-md-2">
                    <div class="form-group-sm">
                        <label class="control-label" for="form-group-input">ПІБ Клієнта:</label>
                        <input type="text" name="ПІБ Клієнта" class="form-control" id="txtClientName" style="max-width:250px;">
                    </div>
                    <br />
                    <div class="form-group-sm">
                        <label class="control-label" for="txbClientInn">Ідентифікаційний код: </label>
                        <input type="text" class="form-control" id="txbClientInn"
                               name="iдентифікаційний код" placeholder="XXXXXXXXXX" style="width:130px;">
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group-sm">
                        <label class="control-label" for="input-group">Серія та номер документа:</label>
                        <div class="input-group input-group-sm" style="max-width:250px;">
                            <span class="input-group-addon">Серія</span>
                            <input id="txbSeria" type="text" name="Серія" class="form-control" placeholder="XX">
                            <span class="input-group-addon">Номер</span>
                            <input id="txbNumber" name="Номер" type="text" class="form-control" placeholder="XXXXXX">
                        </div>
                    </div>
                    <br />
                    <div class="form-group">
                        <label class="control-label" for="txbDateBirth">Дата народження Клієнта: </label>
                        <div class="input-group" style="max-width:250px;">
                            <input id="txbDateBirth" type="text" class="form-control"
                                   name="дату народження" placeholder="дд.мм.рррр">
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group-sm">
                        <label class="control-label" for="txbCustomerRNK">РНК Клієнта:</label>
                        <input type="text" class="form-control" id="txbCustomerRNK" style="max-width:140px;" placeholder="XXXXXXXXXX">
                    </div>
                    <br />
                    <div class="form-group">
                        <label class="control-label" for="btn_ReloadGrid"></label>
                        <button class="btn btn-default" type='submit' id='btn_ReloadGrid'
                                title='Перечитати дані' @*onClick ="btnReloadGridClick();"*@>
                            <i class='fa fa-search'></i> &nbsp; Пошук
                        </button>
                        <button class="btn btn-primary" type='submit' id='btn_CreateDkbo'
                                title='Вопросы' @*onClick ="runQuestionsWizard();"*@>
                            &nbsp; Створити ДКБО
                        </button>
                        <span id="popupNotification"></span>
                    </div>
                </div>
            </div>
            <div class="panel-footer" id="pnlFooter" style="display:none">
                <div class="alert alert-danger" role="alert" id="pnlFooterAlert">
                    @*<p id="pnlFooterText">Наступні поля є обов'язковими для заповнення:</p>*@
                    <ul id="ulPnlFooterAlert"></ul>
                </div>
            </div>
        </div>
    }
    @* W4_DKBO_GRID *@
    <div id="grid"></div>
</form>

<div id="wndQueWizard" ng-controller="bpkCtrl">
    <div id="toolbar" style="position:fixed; z-index:100; right:20px; float:right;"></div>
    <br />
    <br />
    <br />
    <div id="pnlQueWizard" class="panel panel-default" style="height:auto;">
        <div class="panel-body">
            <ul class="list-group">
                <li class="list-group-item" ng-repeat="item in data track by $index">
                    <p class="list-group-item-text">{{item.QUEST_NAME}}</p>
                    <span>
                            <content-item item="item"></content-item>
                    </span>
                </li>
            </ul>
        </div>
    </div>
</div>

<script>
    document.getElementById('btn_ReloadGrid').onclick = btnReloadGridClick;
    document.getElementById('btn_CreateDkbo').onclick = runQuestionsWizard;

    $("#toolbar").kendoToolBar({
        resizable: false,
        items: [
            {
                template: "<button type='submit' onclick='createDkbo();' class='btn btn-sm btn-primary'> " +
                           "<i class='fa fa-save'></i> &nbsp; Зберегти" +
                           "</button>"
            },
            { type: "separator" },
            {
                template: "<button type='submit' onclick='printDkbo();' class='btn btn-sm btn-default'> " +
                           "<i class='fa fa-print'></i> &nbsp; Друк" +
                           "</button>"
            }
        ]
    });


    function printDkbo() {
        window.location.href = '@Url.Action("Print", "Checkdkbo", null, this.Request.Url.Scheme)'
    };

    function createDkbo() {
        var postdata = {
            selectedcards: selectedCardAcc,
            answerList: answers,
            selectedRNK: selectedRNK
        };
        var savingUrl = '@Url.Action("CreateDkbo", "Checkdkbo", null, this.Request.Url.Scheme)';
        $.ajax({
            url: savingUrl,
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify(postdata),
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                //alert(result);
            }
        });
        $('#grid').data('kendoGrid').dataSource.read();
    }

    var app = angular.module(globalSettings.modulesAreas,['ngSanitize', 'kendo.directives']);

    var textInputTemplate =
        '<input id="{{item.QUEST_CODE}}" type="text" class="form-control" style="width:300px; height:18px;"' +
        'ng-blur="myfunction(this)" >';
    // 'ng-model="textEntered" ng-change="handleTextEntered()">';

    var selectInputTemplate =
          '<select id="{{item.QUEST_CODE}}"' +
          'ng-model="selectedValue" ng-change="handleSelectChange({{item.QUEST_CODE}})"' +
          'ng-options="i.LIST_ITEM_NAME for i in listItems"' +
          'class="form-control" style="width:200px; height:18px;" >' +
          //'<option value="" ng-if="false"></option>' + // hide !
           '<option value="" ng-if="false">Обрати значення</option>' +
         // '<option ng-repeat="item in listItems" value="{{item.LIST_ITEM_CODE}}">{{item.LIST_ITEM_NAME}}</option>' +
          '</select>';

    var numericTemplate =
       '<input class="form-control" id="{{item.QUEST_CODE}}"' +
       'ng-blur="myfunction(this)"' +
       ' type="number" style="width:120px; height:18px;"/>';

    var dateTemplate =
       '<input class="form-control" id="{{item.QUEST_CODE}}"' +
       'ng-blur="myfunction(this)" style="width:100px; height:18px;"/>';

    var questionUrl = '@Url.Action("Get_W4_DKBO_QUESTION", "Checkdkbo", null, this.Request.Url.Scheme)'
    var vListItemsUrl = '@Url.Action("Get_V_LIST_ITEMS", "Checkdkbo", null, this.Request.Url.Scheme)'
    var checked = [];
    var checkedIds = {};
    var selectedCardAcc = [];
    var selectedRNK = [];
    var answers = [];

    function writeAnswers(obj) {
      //  var QUEST_VALUE = obj.value;
      //  var QUEST_CODE = obj.id;
        var item = new Object();
        item['QUEST_CODE'] = obj.id;
        item['QUEST_VALUE'] = obj.value;

        answers.push(item);
    };

    app.controller('bpkCtrl', function ($scope, $http) {
        $http.get(questionUrl)
             .success(function (data) {
                 $scope.data = data;
             })
            .error(function (error) {
                $scope.data.error = error;
            });
    });

    app.directive('contentItem', function ($compile, $http) {
        var getTemplate = function (content) {
           // console.log(content);
            var template = '';
            switch (content.QUEST_TYPE) {
                case 'STRING':
                    template = textInputTemplate;
                    break;
                case 'LIST':
                    template = selectInputTemplate;
                    break;
                case 'NUMBER':
                    template = numericTemplate;
                case 'DATE':
                    template = dateTemplate;
            }
            return template;
        }
        var linker = function (scope, element, attrs) {
            if (scope.item.LIST_CODE != null) {
                $http.get(vListItemsUrl + "?list_code='" + scope.item.LIST_CODE + "'")
                  .success(function (data) {
                      scope.listItems = data;
                    //  console.dir(scope.listItems);
                  })
                 .error(function (error) {
                     $scope.listItems.error = error;
                 });
            }
            // select input handler:
            scope.handleSelectChange = function (element) {
               // console.log(scope.selectedValue);
                writeAnswers(scope.selectedValue);
            }
            // text input handler
            scope.myfunction = function (msg, $event) {
                var el = event.target
              //  console.log(el);
                writeAnswers(el);
            }
            element.html(getTemplate(scope.item));
            $compile(element.contents())(scope);
        };
        return {
            restrict: 'E',
            link: linker,
            scope: {
                item: '='
            }
        };
    });

    $("#wndQueWizard").kendoWindow({
        actions: ["Close"],
        draggable: true,
        height: "750px",
        visible: false,
        modal: true,
        resizable: true,
        title: "Опитувальник",
        width: "820px"
    });

    function runQuestionsWizard() {
        if (selectedCardAcc.length === 0) {
            var popupNotification = $("#popupNotification")
                           .kendoNotification()
                           .data("kendoNotification");
            popupNotification.show("Необхiдно обрати рахунки для створення ДКБО!", "info");
        }
        if (selectedCardAcc.length > 0) {
            $('#wndQueWizard').data("kendoWindow").center().open();
        }
    }

    function btnReloadGridClick() {
        if (validateRequiredElements()) {
            $('#grid').data('kendoGrid').dataSource.read();
        }
    }

    var validateRequiredElements = function () {
        $("#pnlFooter").hide();
        $("#ulPnlFooterAlert").empty();
        if ($("#txbCustomerRNK").val() !== '') {
            return true;
        }
        if ($("#txbClientInn").val() !== '') {
            return true;
        }
        if ($("#txtClientName").val() === '') {
            $("#pnlFooter").show();
            $("#ulPnlFooterAlert").append($("<li>").text($('#txtClientName').attr("name")));
            return false;
        }
        if ($("#txbSeria").val() === '') {
            $("#pnlFooter").show();
            $("#ulPnlFooterAlert").append($("<li>").text($('#txbSeria').attr("name")));
            return false;
        }
        if ($("#txbNumber").val() === '') {
            $("#pnlFooter").show();
            $("#ulPnlFooterAlert").append($("<li>").text($('#txbNumber').attr("name")));
            return false;
        }
        if ($("#txbDateBirth").val() === '') {
            $("#pnlFooter").show();
            $("#ulPnlFooterAlert").append($("<li>").text($('#txbDateBirth').attr("name")));
            return false;
        }
        return true;
    }

    $("#txbClientInn").kendoMaskedTextBox({
        mask: "9999999999"
    });

    // create DatePicker from input Date Birth element
    $("#txbDateBirth").kendoDatePicker({
        // display month and year in the input
        format: "dd.MM.yyyy"
    });

    function EnableEagerValidation() {
        var itemsNeedingValidation = $('*[data-val="true"]');
        itemsNeedingValidation.each(function () {
            $(this).blur(function () { $(this).closest("formContent").valid(); });
        });
    }

    function isnull(a, b) {
        b = b || '';
        return a || b;
    }
    // GRID
    $(document).ready(function () {
        $("#grid").kendoGrid({
            //define dataBound event handler
            dataBound: onDataBound,
            columns: [
                {
                    title: "",
                    field: "CHECK_DKBO",
                    width: "20px",
                    template: "<input type='checkbox' class='checkbox' />",
                },
                {
                    field: "DKBO_CONTRACT_ID",
                    title: "№ договору ДКБО",
                    width: "90px",
                    headerAttributes: { style: "white-space: normal;" }
                },
                {
                    field: "CARD_ACC",
                    title: "Картковий рахунок",
                    headerAttributes: { style: "white-space: normal;" },
                    width: "130px"
                },
                {
                    field: "CURRENCY",
                    title: "Валюта",
                    headerAttributes: { style: "white-space: normal;" },
                    width: "70px"
                },
                {
                    field: "DKBO_DATE_FROM",
                    title: "Дата приеднання до ДКБО",
                    headerAttributes: { style: "white-space: normal;" },
                    template: "<div style='text-align:left;'>#=  isnull(kendo.toString(kendo.parseDate(DKBO_DATE_FROM, 'yyyy-MM-dd'), 'MM.dd.yyyy'), '') #</div>",
                    width: "100px"
                },
                {
                    field: "DKBO_DATE_TO",
                    title: "Дата розiрвання ДКБО",
                    headerAttributes: { style: "white-space: normal;" },
                    template: "<div style='text-align:left;'>#= isnull(kendo.toString(kendo.parseDate(DKBO_DATE_TO, 'yyyy-MM-dd'), 'MM.dd.yyyy'), '') #</div>",
                    width: "100px"
                },
                {
                    field: "CUSTOMER_NAME",
                    title: "ПIБ (Назва) Клиента",
                    attributes: { "class": "text-center" },
                    headerAttributes: { style: "white-space: normal;" },
                    width: "150px",
                    align: "left"
                },
                {
                    field: "CUSTOMER_ID",
                    hidden: true
                }
            ],
            dataSource: {
                type: "aspnetmvc-ajax",
                serverPaging: true,
                serverSorting: true,
                serverFiltering: true,
                pageSize: 10,
                transport: {
                    read: {
                        dataType: 'json',
                        url: bars.config.urlContent('/bpkw4/checkdkbo/Get_W4_DKBO_WEB_Grid'),
                        data: BpkGridData
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors",
                    model: {
                        fields: {
                            DKBO_CONTRACT_ID: { type: "string" },
                            BRANCH: { type: "string" },
                            CARD_ACC: { type: "string" },
                            CURRENCY: { type: "string" },
                            OB_22: { type: "string" },
                            SUBPRODUCT: { type: "string" },
                            CARD_TYPE: { type: "string" },
                            CARD_DATE_FROM: { type: "string" },
                            CARD_DATE_TO: { type: "string" },
                            DKBO_DATE_FROM: { type: "string" },
                            DKBO_DATE_TO: { type: "string" },
                            CUSTOMER_ID: { type: "string" },
                            CUSTOMER_ZKPO: { type: "string" },
                            CUSTOMER_NAME: { type: "string" }
                        }
                    }
                }
            },
            sortable: true,
            filterable: false,
            resizable: true,
            autoBind: false,
            selectable: "multiple",
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            }
            //,
            //change: SepTechAccountsGridonRowSelected,
            //dataBound: grid_dataBound
        });

        function BpkGridData() {
            return {
                CUSTOMER_NAME: $("#txtClientName").val(),
                CUSTOMER_ZKPO: $('#txbClientInn').val(),
                PASS_SERIAL: $('#txbSeria').val(),
                PASS_NUMBER: $('#txbNumber').val(),
                CUSTOMER_BDAY: $('#txbDateBirth').val(),
                CUSTOMER_ID: $('#txbCustomerRNK').val()
            }
        };

        var grid = $("#grid").data("kendoGrid");
        //bind click event to the checkbox
        grid.table.on("click", ".checkbox", selectRow);
        // console.dir(grid);

        $("#showSelection").bind("click", function () {
            for (var i in checkedIds) {
                if (checkedIds[i]) {
                    checked.push(i);
                }
            }
            alert(checked);
        });


        //on click of the checkbox:
        function selectRow() {
            var checked = this.checked,
            row = $(this).closest("tr"),
            grid = $("#grid").data("kendoGrid"),
            dataItem = grid.dataItem(row);
            checkedIds[dataItem.CARD_ACC] = checked;
            if (checked) {
                selectedCardAcc.push(dataItem.CARD_ACC);
                selectedRNK.push(dataItem.CUSTOMER_ID);
                //-select the row
                row.addClass("k-state-selected");
            } else {
                var index = selectedCardAcc.indexOf(dataItem.CARD_ACC);
                selectedCardAcc.splice(index, 1);
                //-remove selection
                row.removeClass("k-state-selected");
            }
           // console.dir(selectedCardAcc);
        }

        //on dataBound event restore previous selected rows:
        function onDataBound(e) {
            var view = this.dataSource.view();
            for (var i = 0; i < view.length; i++) {
                if (checkedIds[view[i].id]) {
                    this.tbody.find("tr[data-uid='" + view[i].uid + "']")
                    .addClass("k-state-selected")
                    .find(".checkbox")
                    .attr("checked", "checked");
                }
            }
        }
    });
</script>
