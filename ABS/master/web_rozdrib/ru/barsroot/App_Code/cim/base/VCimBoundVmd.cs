/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace cim
{
    public sealed class VCimBoundVmdRecord : BbRecord
    {
        public VCimBoundVmdRecord(): base()
        {
            fillFields();
        }
        public VCimBoundVmdRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VCimBoundVmdRecord(BbDataSource Parent, OracleDecimal RowScn, Decimal? BOUND_ID, Decimal? CONTR_ID, Decimal? VMD_ID, Decimal? DIRECT, Decimal? TYPE_ID, String DOC_TYPE, String NUM, DateTime? DOC_DATE, DateTime? ALLOW_DATE, Decimal? VT, Decimal? S_VT, Decimal? RATE_VK, Decimal? S_VK, DateTime? FILE_DATE, String FILE_NAME, String CONTRACT_NUM, DateTime? CONTRACT_DATE, Decimal? S_PL_VK, Decimal? Z_VT, Decimal? Z_VK, Decimal? S_PL_AFTER_VK, DateTime? CONTROL_DATE, Decimal? OVERDUE, String COMMENTS, DateTime? CREATE_DATE, DateTime? MODIFY_DATE, Decimal? BORG_REASON)
            : this(Parent)
        {
            this.BOUND_ID = BOUND_ID;
            this.CONTR_ID = CONTR_ID;
            this.VMD_ID = VMD_ID;
            this.DIRECT = DIRECT;
            this.TYPE_ID = TYPE_ID;
            this.DOC_TYPE = DOC_TYPE;
            this.NUM = NUM;
            this.DOC_DATE = DOC_DATE;
            this.ALLOW_DATE = ALLOW_DATE;
            this.VT = VT;
            this.S_VT = S_VT;
            this.RATE_VK = RATE_VK;
            this.S_VK = S_VK;
            this.FILE_DATE = FILE_DATE;
            this.FILE_NAME = FILE_NAME;
            this.CONTRACT_NUM = CONTRACT_NUM;
            this.CONTRACT_DATE = CONTRACT_DATE;
            this.S_PL_VK = S_PL_VK;
            this.Z_VT = Z_VT;
            this.Z_VK = Z_VK;
            this.S_PL_AFTER_VK = S_PL_AFTER_VK;
            this.CONTROL_DATE = CONTROL_DATE;
            this.OVERDUE = OVERDUE;
            this.COMMENTS = COMMENTS;
            this.CREATE_DATE = CREATE_DATE;
            this.MODIFY_DATE = MODIFY_DATE;
            this.BORG_REASON = BORG_REASON;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("BOUND_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Id прив`язки"));
            Fields.Add( new BbField("CONTR_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Внутрішній код контракту"));
            Fields.Add( new BbField("VMD_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "id ВМД"));
            Fields.Add( new BbField("DIRECT", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Напрямок ВМД (0-вхідні, 1-вихідні)"));
            Fields.Add( new BbField("TYPE_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "id типу документу"));
            Fields.Add( new BbField("DOC_TYPE", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Тип документу"));
            Fields.Add( new BbField("NUM", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Номер документу"));
            Fields.Add( new BbField("DOC_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Дата паперового носія"));
            Fields.Add( new BbField("ALLOW_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Дата дозволу"));
            Fields.Add( new BbField("VT", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Валюта товару"));
            Fields.Add( new BbField("S_VT", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Сума у валюті товару"));
            Fields.Add( new BbField("RATE_VK", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Курс валюти контракту відносно валюти товару s_vk/s_vt"));
            Fields.Add( new BbField("S_VK", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Сума у валюті контракту"));
            Fields.Add( new BbField("FILE_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Дата реєстру"));
            Fields.Add( new BbField("FILE_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "№ реєстру"));
            Fields.Add( new BbField("CONTRACT_NUM", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "№ контракту (з МД)"));
            Fields.Add( new BbField("CONTRACT_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Дата конттракту (з МД)"));
            Fields.Add( new BbField("S_PL_VK", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Сума пов`язаних платежів"));
            Fields.Add( new BbField("Z_VT", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Заборгованість по платежах у валюті товару"));
            Fields.Add( new BbField("Z_VK", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Заборгованість по платежах у валюті контракту"));
            Fields.Add( new BbField("S_PL_AFTER_VK", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Сума пов`язаних платежів після контрольного дня (експ"));
            Fields.Add( new BbField("CONTROL_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Дата контрольного дня (експ)"));
            Fields.Add( new BbField("OVERDUE", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Кількість днів прострочки"));
            Fields.Add( new BbField("COMMENTS", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Примітка"));
            Fields.Add( new BbField("CREATE_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Дата створення"));
            Fields.Add( new BbField("MODIFY_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Дата модифікації"));
            Fields.Add( new BbField("BORG_REASON", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_BOUND_VMD", ObjectTypes.View, "Прив`язані ВМД", "Причина заборгованості"));        
        }
        public Decimal? BOUND_ID { get { return (Decimal?)FindField("BOUND_ID").Value; } set {SetField("BOUND_ID", value);} }
        public Decimal? CONTR_ID { get { return (Decimal?)FindField("CONTR_ID").Value; } set {SetField("CONTR_ID", value);} }
        public Decimal? VMD_ID { get { return (Decimal?)FindField("VMD_ID").Value; } set {SetField("VMD_ID", value);} }
        public Decimal? DIRECT { get { return (Decimal?)FindField("DIRECT").Value; } set {SetField("DIRECT", value);} }
        public Decimal? TYPE_ID { get { return (Decimal?)FindField("TYPE_ID").Value; } set {SetField("TYPE_ID", value);} }
        public String DOC_TYPE { get { return (String)FindField("DOC_TYPE").Value; } set {SetField("DOC_TYPE", value);} }
        public String NUM { get { return (String)FindField("NUM").Value; } set {SetField("NUM", value);} }
        public DateTime? DOC_DATE { get { return (DateTime?)FindField("DOC_DATE").Value; } set {SetField("DOC_DATE", value);} }
        public DateTime? ALLOW_DATE { get { return (DateTime?)FindField("ALLOW_DATE").Value; } set {SetField("ALLOW_DATE", value);} }
        public Decimal? VT { get { return (Decimal?)FindField("VT").Value; } set {SetField("VT", value);} }
        public Decimal? S_VT { get { return (Decimal?)FindField("S_VT").Value; } set {SetField("S_VT", value);} }
        public Decimal? RATE_VK { get { return (Decimal?)FindField("RATE_VK").Value; } set {SetField("RATE_VK", value);} }
        public Decimal? S_VK { get { return (Decimal?)FindField("S_VK").Value; } set {SetField("S_VK", value);} }
        public DateTime? FILE_DATE { get { return (DateTime?)FindField("FILE_DATE").Value; } set {SetField("FILE_DATE", value);} }
        public String FILE_NAME { get { return (String)FindField("FILE_NAME").Value; } set {SetField("FILE_NAME", value);} }
        public String CONTRACT_NUM { get { return (String)FindField("CONTRACT_NUM").Value; } set {SetField("CONTRACT_NUM", value);} }
        public DateTime? CONTRACT_DATE { get { return (DateTime?)FindField("CONTRACT_DATE").Value; } set {SetField("CONTRACT_DATE", value);} }
        public Decimal? S_PL_VK { get { return (Decimal?)FindField("S_PL_VK").Value; } set {SetField("S_PL_VK", value);} }
        public Decimal? Z_VT { get { return (Decimal?)FindField("Z_VT").Value; } set {SetField("Z_VT", value);} }
        public Decimal? Z_VK { get { return (Decimal?)FindField("Z_VK").Value; } set {SetField("Z_VK", value);} }
        public Decimal? S_PL_AFTER_VK { get { return (Decimal?)FindField("S_PL_AFTER_VK").Value; } set {SetField("S_PL_AFTER_VK", value);} }
        public DateTime? CONTROL_DATE { get { return (DateTime?)FindField("CONTROL_DATE").Value; } set {SetField("CONTROL_DATE", value);} }
        public Decimal? OVERDUE { get { return (Decimal?)FindField("OVERDUE").Value; } set {SetField("OVERDUE", value);} }
        public String COMMENTS { get { return (String)FindField("COMMENTS").Value; } set {SetField("COMMENTS", value);} }
        public DateTime? CREATE_DATE { get { return (DateTime?)FindField("CREATE_DATE").Value; } set {SetField("CREATE_DATE", value);} }
        public DateTime? MODIFY_DATE { get { return (DateTime?)FindField("MODIFY_DATE").Value; } set {SetField("MODIFY_DATE", value);} }
        public Decimal? BORG_REASON { get { return (Decimal?)FindField("BORG_REASON").Value; } set {SetField("BORG_REASON", value);} }
    }

    public sealed class VCimBoundVmdFilters : BbFilters
    {
        public VCimBoundVmdFilters(BbDataSource Parent) : base (Parent)
        {
            BOUND_ID = new BBDecimalFilter(this, "BOUND_ID");
            CONTR_ID = new BBDecimalFilter(this, "CONTR_ID");
            VMD_ID = new BBDecimalFilter(this, "VMD_ID");
            DIRECT = new BBDecimalFilter(this, "DIRECT");
            TYPE_ID = new BBDecimalFilter(this, "TYPE_ID");
            DOC_TYPE = new BBVarchar2Filter(this, "DOC_TYPE");
            NUM = new BBVarchar2Filter(this, "NUM");
            DOC_DATE = new BBDateFilter(this, "DOC_DATE");
            ALLOW_DATE = new BBDateFilter(this, "ALLOW_DATE");
            VT = new BBDecimalFilter(this, "VT");
            S_VT = new BBDecimalFilter(this, "S_VT");
            RATE_VK = new BBDecimalFilter(this, "RATE_VK");
            S_VK = new BBDecimalFilter(this, "S_VK");
            FILE_DATE = new BBDateFilter(this, "FILE_DATE");
            FILE_NAME = new BBVarchar2Filter(this, "FILE_NAME");
            CONTRACT_NUM = new BBVarchar2Filter(this, "CONTRACT_NUM");
            CONTRACT_DATE = new BBDateFilter(this, "CONTRACT_DATE");
            S_PL_VK = new BBDecimalFilter(this, "S_PL_VK");
            Z_VT = new BBDecimalFilter(this, "Z_VT");
            Z_VK = new BBDecimalFilter(this, "Z_VK");
            S_PL_AFTER_VK = new BBDecimalFilter(this, "S_PL_AFTER_VK");
            CONTROL_DATE = new BBDateFilter(this, "CONTROL_DATE");
            OVERDUE = new BBDecimalFilter(this, "OVERDUE");
            COMMENTS = new BBVarchar2Filter(this, "COMMENTS");
            CREATE_DATE = new BBDateFilter(this, "CREATE_DATE");
            MODIFY_DATE = new BBDateFilter(this, "MODIFY_DATE");
            BORG_REASON = new BBDecimalFilter(this, "BORG_REASON");
        }
        public BBDecimalFilter BOUND_ID;
        public BBDecimalFilter CONTR_ID;
        public BBDecimalFilter VMD_ID;
        public BBDecimalFilter DIRECT;
        public BBDecimalFilter TYPE_ID;
        public BBVarchar2Filter DOC_TYPE;
        public BBVarchar2Filter NUM;
        public BBDateFilter DOC_DATE;
        public BBDateFilter ALLOW_DATE;
        public BBDecimalFilter VT;
        public BBDecimalFilter S_VT;
        public BBDecimalFilter RATE_VK;
        public BBDecimalFilter S_VK;
        public BBDateFilter FILE_DATE;
        public BBVarchar2Filter FILE_NAME;
        public BBVarchar2Filter CONTRACT_NUM;
        public BBDateFilter CONTRACT_DATE;
        public BBDecimalFilter S_PL_VK;
        public BBDecimalFilter Z_VT;
        public BBDecimalFilter Z_VK;
        public BBDecimalFilter S_PL_AFTER_VK;
        public BBDateFilter CONTROL_DATE;
        public BBDecimalFilter OVERDUE;
        public BBVarchar2Filter COMMENTS;
        public BBDateFilter CREATE_DATE;
        public BBDateFilter MODIFY_DATE;
        public BBDecimalFilter BORG_REASON;
    }

    public partial class VCimBoundVmd : BbTable<VCimBoundVmdRecord, VCimBoundVmdFilters>
    {
        public VCimBoundVmd() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VCimBoundVmd(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VCimBoundVmdRecord> Select(VCimBoundVmdRecord Item)
        {
            List<VCimBoundVmdRecord> res = new List<VCimBoundVmdRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VCimBoundVmdRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (Decimal?)null : Convert.ToDecimal(rdr[1]), 
                        rdr.IsDBNull(2) ?  (Decimal?)null : Convert.ToDecimal(rdr[2]), 
                        rdr.IsDBNull(3) ?  (Decimal?)null : Convert.ToDecimal(rdr[3]), 
                        rdr.IsDBNull(4) ?  (Decimal?)null : Convert.ToDecimal(rdr[4]), 
                        rdr.IsDBNull(5) ?  (Decimal?)null : Convert.ToDecimal(rdr[5]), 
                        rdr.IsDBNull(6) ?  (String)null : Convert.ToString(rdr[6]), 
                        rdr.IsDBNull(7) ?  (String)null : Convert.ToString(rdr[7]), 
                        rdr.IsDBNull(8) ?  (DateTime?)null : Convert.ToDateTime(rdr[8]), 
                        rdr.IsDBNull(9) ?  (DateTime?)null : Convert.ToDateTime(rdr[9]), 
                        rdr.IsDBNull(10) ?  (Decimal?)null : Convert.ToDecimal(rdr[10]), 
                        rdr.IsDBNull(11) ?  (Decimal?)null : Convert.ToDecimal(rdr[11]), 
                        rdr.IsDBNull(12) ?  (Decimal?)null : Convert.ToDecimal(rdr[12]), 
                        rdr.IsDBNull(13) ?  (Decimal?)null : Convert.ToDecimal(rdr[13]), 
                        rdr.IsDBNull(14) ?  (DateTime?)null : Convert.ToDateTime(rdr[14]), 
                        rdr.IsDBNull(15) ?  (String)null : Convert.ToString(rdr[15]), 
                        rdr.IsDBNull(16) ?  (String)null : Convert.ToString(rdr[16]), 
                        rdr.IsDBNull(17) ?  (DateTime?)null : Convert.ToDateTime(rdr[17]), 
                        rdr.IsDBNull(18) ?  (Decimal?)null : Convert.ToDecimal(rdr[18]), 
                        rdr.IsDBNull(19) ?  (Decimal?)null : Convert.ToDecimal(rdr[19]), 
                        rdr.IsDBNull(20) ?  (Decimal?)null : Convert.ToDecimal(rdr[20]), 
                        rdr.IsDBNull(21) ?  (Decimal?)null : Convert.ToDecimal(rdr[21]), 
                        rdr.IsDBNull(22) ?  (DateTime?)null : Convert.ToDateTime(rdr[22]), 
                        rdr.IsDBNull(23) ?  (Decimal?)null : Convert.ToDecimal(rdr[23]), 
                        rdr.IsDBNull(24) ?  (String)null : Convert.ToString(rdr[24]), 
                        rdr.IsDBNull(25) ?  (DateTime?)null : Convert.ToDateTime(rdr[25]), 
                        rdr.IsDBNull(26) ?  (DateTime?)null : Convert.ToDateTime(rdr[26]), 
                        rdr.IsDBNull(27) ?  (Decimal?)null : Convert.ToDecimal(rdr[27]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}