<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Msg_BylOplachen" xml:space="preserve">
    <value>был оплачен</value>
  </data>
  <data name="Msg_DataDbf" xml:space="preserve">
    <value>Данные для dbf-файла:</value>
  </data>
  <data name="Msg_DateNotValid" xml:space="preserve">
    <value>Дата валютирования документа отличается от банковской на больше чем  10 дней.</value>
  </data>
  <data name="Msg_Dokument" xml:space="preserve">
    <value>Документ</value>
  </data>
  <data name="Msg_DolgnoImetTipC" xml:space="preserve">
    <value>должно иметь тип 'C'</value>
  </data>
  <data name="Msg_DolgnoImetTipD" xml:space="preserve">
    <value>должно иметь тип 'D'</value>
  </data>
  <data name="Msg_DolgnoImetTipN" xml:space="preserve">
    <value>должно иметь тип 'N'</value>
  </data>
  <data name="Msg_Fail" xml:space="preserve">
    <value>Файл</value>
  </data>
  <data name="Msg_FailSodergitDokumentNaSumu0" xml:space="preserve">
    <value>Файл содержит документ на сумму 0</value>
  </data>
  <data name="Msg_FailUspechnoOplachen" xml:space="preserve">
    <value>Файл успешно оплачен.</value>
  </data>
  <data name="Msg_ImeetNeizvesnyiTip" xml:space="preserve">
    <value>Имеет неизвесный тип</value>
  </data>
  <data name="Msg_NedopustimyiBalansovyiSchet" xml:space="preserve">
    <value>Недопустимый балансовый счет</value>
  </data>
  <data name="Msg_NedostupenDliaDebeta" xml:space="preserve">
    <value>недоступен для Дебета</value>
  </data>
  <data name="Msg_NedostupenDliaKredita" xml:space="preserve">
    <value>недоступен для Кредита</value>
  </data>
  <data name="Msg_NedostupenZakhyt" xml:space="preserve">
    <value>недоступен (закрыт)</value>
  </data>
  <data name="Msg_NeobhodimoVybratFailTipaODD" xml:space="preserve">
    <value>Необходимо выбрать файл типа ODD.dbf, убедитесь, что он не занят другим приложением!</value>
  </data>
  <data name="Msg_NeOplachen" xml:space="preserve">
    <value>не оплачен</value>
  </data>
  <data name="Msg_NeSovpadaetSDefoltZnacheniami" xml:space="preserve">
    <value>не совпадает с дефолтными значениями</value>
  </data>
  <data name="Msg_NevernyiSchetA" xml:space="preserve">
    <value>Неверный Счет-А</value>
  </data>
  <data name="Msg_NevernyiSchetB" xml:space="preserve">
    <value>Неверный Счет-Б</value>
  </data>
  <data name="Msg_NoData" xml:space="preserve">
    <value>Нет данных за указаную дату</value>
  </data>
  <data name="Msg_OchibkaMfo" xml:space="preserve">
    <value>Ошибка МФО</value>
  </data>
  <data name="Msg_OchibkaVRekviziteNaznachenie" xml:space="preserve">
    <value>Ошибка в реквезите НАЗНАЧЕНИЕ</value>
  </data>
  <data name="Msg_OchibkaVRekvizitePlatelschik" xml:space="preserve">
    <value>Ошибка в реквезите ПЛАТЕЛЬЩИК</value>
  </data>
  <data name="Msg_OchibkaVRekvizitePolochatel" xml:space="preserve">
    <value>Ошибка в реквезите ПОЛУЧАТЕЛ</value>
  </data>
  <data name="Msg_Ochibki" xml:space="preserve">
    <value>Ошибки!</value>
  </data>
  <data name="Msg_OchibkiVOkpoA" xml:space="preserve">
    <value>Ошибки в ОКРО А</value>
  </data>
  <data name="Msg_OchibkiVOkpoB" xml:space="preserve">
    <value>Ошибки в ОКРО Б</value>
  </data>
  <data name="Msg_OshibkaPodpisi" xml:space="preserve">
    <value>Ошибка подписи</value>
  </data>
  <data name="Msg_Schet" xml:space="preserve">
    <value>Счет</value>
  </data>
  <data name="Msg_VIshodnomFaileNeNaidenoPole" xml:space="preserve">
    <value>В исходном файле не найдено поле</value>
  </data>
  <data name="Msg_VIshodnomFailePole" xml:space="preserve">
    <value>В исходном файле поле</value>
  </data>
  <data name="Vipiska1" xml:space="preserve">
    <value>Заключительная выписка из л/с клиента</value>
  </data>
</root>