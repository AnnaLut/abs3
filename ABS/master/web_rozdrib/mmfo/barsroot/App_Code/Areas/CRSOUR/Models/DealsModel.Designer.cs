//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Areas.CRSOUR.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DealsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DealsEntities object using the connection string found in the 'DealsEntities' section of the application configuration file.
        /// </summary>
        public DealsEntities() : base("name=DealsEntities", "DealsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DealsEntities object.
        /// </summary>
        public DealsEntities(string connectionString) : base(connectionString, "DealsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DealsEntities object.
        /// </summary>
        public DealsEntities(EntityConnection connection) : base(connection, "DealsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CDB_CHANGE_AMOUNT_CLAIM> V_CDB_CHANGE_AMOUNT_CLAIM
        {
            get
            {
                if ((_V_CDB_CHANGE_AMOUNT_CLAIM == null))
                {
                    _V_CDB_CHANGE_AMOUNT_CLAIM = base.CreateObjectSet<V_CDB_CHANGE_AMOUNT_CLAIM>("V_CDB_CHANGE_AMOUNT_CLAIM");
                }
                return _V_CDB_CHANGE_AMOUNT_CLAIM;
            }
        }
        private ObjectSet<V_CDB_CHANGE_AMOUNT_CLAIM> _V_CDB_CHANGE_AMOUNT_CLAIM;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CDB_CLAIM_TRACK> V_CDB_CLAIM_TRACK
        {
            get
            {
                if ((_V_CDB_CLAIM_TRACK == null))
                {
                    _V_CDB_CLAIM_TRACK = base.CreateObjectSet<V_CDB_CLAIM_TRACK>("V_CDB_CLAIM_TRACK");
                }
                return _V_CDB_CLAIM_TRACK;
            }
        }
        private ObjectSet<V_CDB_CLAIM_TRACK> _V_CDB_CLAIM_TRACK;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CDB_CLOSE_DEAL_CLAIM> V_CDB_CLOSE_DEAL_CLAIM
        {
            get
            {
                if ((_V_CDB_CLOSE_DEAL_CLAIM == null))
                {
                    _V_CDB_CLOSE_DEAL_CLAIM = base.CreateObjectSet<V_CDB_CLOSE_DEAL_CLAIM>("V_CDB_CLOSE_DEAL_CLAIM");
                }
                return _V_CDB_CLOSE_DEAL_CLAIM;
            }
        }
        private ObjectSet<V_CDB_CLOSE_DEAL_CLAIM> _V_CDB_CLOSE_DEAL_CLAIM;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CDB_DEAL_INTEREST_RATE> V_CDB_DEAL_INTEREST_RATE
        {
            get
            {
                if ((_V_CDB_DEAL_INTEREST_RATE == null))
                {
                    _V_CDB_DEAL_INTEREST_RATE = base.CreateObjectSet<V_CDB_DEAL_INTEREST_RATE>("V_CDB_DEAL_INTEREST_RATE");
                }
                return _V_CDB_DEAL_INTEREST_RATE;
            }
        }
        private ObjectSet<V_CDB_DEAL_INTEREST_RATE> _V_CDB_DEAL_INTEREST_RATE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CDB_NEW_DEAL_CLAIM> V_CDB_NEW_DEAL_CLAIM
        {
            get
            {
                if ((_V_CDB_NEW_DEAL_CLAIM == null))
                {
                    _V_CDB_NEW_DEAL_CLAIM = base.CreateObjectSet<V_CDB_NEW_DEAL_CLAIM>("V_CDB_NEW_DEAL_CLAIM");
                }
                return _V_CDB_NEW_DEAL_CLAIM;
            }
        }
        private ObjectSet<V_CDB_NEW_DEAL_CLAIM> _V_CDB_NEW_DEAL_CLAIM;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CDB_OPERATION> V_CDB_OPERATION
        {
            get
            {
                if ((_V_CDB_OPERATION == null))
                {
                    _V_CDB_OPERATION = base.CreateObjectSet<V_CDB_OPERATION>("V_CDB_OPERATION");
                }
                return _V_CDB_OPERATION;
            }
        }
        private ObjectSet<V_CDB_OPERATION> _V_CDB_OPERATION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CDB_SET_EXPIRY_DATE_CLAIM> V_CDB_SET_EXPIRY_DATE_CLAIM
        {
            get
            {
                if ((_V_CDB_SET_EXPIRY_DATE_CLAIM == null))
                {
                    _V_CDB_SET_EXPIRY_DATE_CLAIM = base.CreateObjectSet<V_CDB_SET_EXPIRY_DATE_CLAIM>("V_CDB_SET_EXPIRY_DATE_CLAIM");
                }
                return _V_CDB_SET_EXPIRY_DATE_CLAIM;
            }
        }
        private ObjectSet<V_CDB_SET_EXPIRY_DATE_CLAIM> _V_CDB_SET_EXPIRY_DATE_CLAIM;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CDB_SET_INT_RATE_CLAIM> V_CDB_SET_INT_RATE_CLAIM
        {
            get
            {
                if ((_V_CDB_SET_INT_RATE_CLAIM == null))
                {
                    _V_CDB_SET_INT_RATE_CLAIM = base.CreateObjectSet<V_CDB_SET_INT_RATE_CLAIM>("V_CDB_SET_INT_RATE_CLAIM");
                }
                return _V_CDB_SET_INT_RATE_CLAIM;
            }
        }
        private ObjectSet<V_CDB_SET_INT_RATE_CLAIM> _V_CDB_SET_INT_RATE_CLAIM;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CDB_TRANSACTION_TRACK> V_CDB_TRANSACTION_TRACK
        {
            get
            {
                if ((_V_CDB_TRANSACTION_TRACK == null))
                {
                    _V_CDB_TRANSACTION_TRACK = base.CreateObjectSet<V_CDB_TRANSACTION_TRACK>("V_CDB_TRANSACTION_TRACK");
                }
                return _V_CDB_TRANSACTION_TRACK;
            }
        }
        private ObjectSet<V_CDB_TRANSACTION_TRACK> _V_CDB_TRANSACTION_TRACK;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CDB_BARS_TRANSACTION> V_CDB_BARS_TRANSACTION
        {
            get
            {
                if ((_V_CDB_BARS_TRANSACTION == null))
                {
                    _V_CDB_BARS_TRANSACTION = base.CreateObjectSet<V_CDB_BARS_TRANSACTION>("V_CDB_BARS_TRANSACTION");
                }
                return _V_CDB_BARS_TRANSACTION;
            }
        }
        private ObjectSet<V_CDB_BARS_TRANSACTION> _V_CDB_BARS_TRANSACTION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CDB_CLAIM_DATA_TO_ACCEPT> V_CDB_CLAIM_DATA_TO_ACCEPT
        {
            get
            {
                if ((_V_CDB_CLAIM_DATA_TO_ACCEPT == null))
                {
                    _V_CDB_CLAIM_DATA_TO_ACCEPT = base.CreateObjectSet<V_CDB_CLAIM_DATA_TO_ACCEPT>("V_CDB_CLAIM_DATA_TO_ACCEPT");
                }
                return _V_CDB_CLAIM_DATA_TO_ACCEPT;
            }
        }
        private ObjectSet<V_CDB_CLAIM_DATA_TO_ACCEPT> _V_CDB_CLAIM_DATA_TO_ACCEPT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_CDB_CLAIM> V_CDB_CLAIM
        {
            get
            {
                if ((_V_CDB_CLAIM == null))
                {
                    _V_CDB_CLAIM = base.CreateObjectSet<V_CDB_CLAIM>("V_CDB_CLAIM");
                }
                return _V_CDB_CLAIM;
            }
        }
        private ObjectSet<V_CDB_CLAIM> _V_CDB_CLAIM;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CDB_CHANGE_AMOUNT_CLAIM EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CDB_CHANGE_AMOUNT_CLAIM(V_CDB_CHANGE_AMOUNT_CLAIM v_CDB_CHANGE_AMOUNT_CLAIM)
        {
            base.AddObject("V_CDB_CHANGE_AMOUNT_CLAIM", v_CDB_CHANGE_AMOUNT_CLAIM);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CDB_CLAIM_TRACK EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CDB_CLAIM_TRACK(V_CDB_CLAIM_TRACK v_CDB_CLAIM_TRACK)
        {
            base.AddObject("V_CDB_CLAIM_TRACK", v_CDB_CLAIM_TRACK);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CDB_CLOSE_DEAL_CLAIM EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CDB_CLOSE_DEAL_CLAIM(V_CDB_CLOSE_DEAL_CLAIM v_CDB_CLOSE_DEAL_CLAIM)
        {
            base.AddObject("V_CDB_CLOSE_DEAL_CLAIM", v_CDB_CLOSE_DEAL_CLAIM);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CDB_DEAL_INTEREST_RATE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CDB_DEAL_INTEREST_RATE(V_CDB_DEAL_INTEREST_RATE v_CDB_DEAL_INTEREST_RATE)
        {
            base.AddObject("V_CDB_DEAL_INTEREST_RATE", v_CDB_DEAL_INTEREST_RATE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CDB_NEW_DEAL_CLAIM EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CDB_NEW_DEAL_CLAIM(V_CDB_NEW_DEAL_CLAIM v_CDB_NEW_DEAL_CLAIM)
        {
            base.AddObject("V_CDB_NEW_DEAL_CLAIM", v_CDB_NEW_DEAL_CLAIM);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CDB_OPERATION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CDB_OPERATION(V_CDB_OPERATION v_CDB_OPERATION)
        {
            base.AddObject("V_CDB_OPERATION", v_CDB_OPERATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CDB_SET_EXPIRY_DATE_CLAIM EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CDB_SET_EXPIRY_DATE_CLAIM(V_CDB_SET_EXPIRY_DATE_CLAIM v_CDB_SET_EXPIRY_DATE_CLAIM)
        {
            base.AddObject("V_CDB_SET_EXPIRY_DATE_CLAIM", v_CDB_SET_EXPIRY_DATE_CLAIM);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CDB_SET_INT_RATE_CLAIM EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CDB_SET_INT_RATE_CLAIM(V_CDB_SET_INT_RATE_CLAIM v_CDB_SET_INT_RATE_CLAIM)
        {
            base.AddObject("V_CDB_SET_INT_RATE_CLAIM", v_CDB_SET_INT_RATE_CLAIM);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CDB_TRANSACTION_TRACK EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CDB_TRANSACTION_TRACK(V_CDB_TRANSACTION_TRACK v_CDB_TRANSACTION_TRACK)
        {
            base.AddObject("V_CDB_TRANSACTION_TRACK", v_CDB_TRANSACTION_TRACK);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CDB_BARS_TRANSACTION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CDB_BARS_TRANSACTION(V_CDB_BARS_TRANSACTION v_CDB_BARS_TRANSACTION)
        {
            base.AddObject("V_CDB_BARS_TRANSACTION", v_CDB_BARS_TRANSACTION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CDB_CLAIM_DATA_TO_ACCEPT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CDB_CLAIM_DATA_TO_ACCEPT(V_CDB_CLAIM_DATA_TO_ACCEPT v_CDB_CLAIM_DATA_TO_ACCEPT)
        {
            base.AddObject("V_CDB_CLAIM_DATA_TO_ACCEPT", v_CDB_CLAIM_DATA_TO_ACCEPT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_CDB_CLAIM EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_CDB_CLAIM(V_CDB_CLAIM v_CDB_CLAIM)
        {
            base.AddObject("V_CDB_CLAIM", v_CDB_CLAIM);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Areas.CRSOUR.Models", Name="V_CDB_BARS_TRANSACTION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CDB_BARS_TRANSACTION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CDB_BARS_TRANSACTION object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="oBJECT_ID">Initial value of the OBJECT_ID property.</param>
        /// <param name="tRANSACTION_TYPE_ID">Initial value of the TRANSACTION_TYPE_ID property.</param>
        /// <param name="tRANSACTION_STATE_ID">Initial value of the TRANSACTION_STATE_ID property.</param>
        /// <param name="fAIL_COUNTER">Initial value of the FAIL_COUNTER property.</param>
        public static V_CDB_BARS_TRANSACTION CreateV_CDB_BARS_TRANSACTION(global::System.Int64 id, global::System.Int64 oBJECT_ID, global::System.Int32 tRANSACTION_TYPE_ID, global::System.Int32 tRANSACTION_STATE_ID, global::System.Int32 fAIL_COUNTER)
        {
            V_CDB_BARS_TRANSACTION v_CDB_BARS_TRANSACTION = new V_CDB_BARS_TRANSACTION();
            v_CDB_BARS_TRANSACTION.ID = id;
            v_CDB_BARS_TRANSACTION.OBJECT_ID = oBJECT_ID;
            v_CDB_BARS_TRANSACTION.TRANSACTION_TYPE_ID = tRANSACTION_TYPE_ID;
            v_CDB_BARS_TRANSACTION.TRANSACTION_STATE_ID = tRANSACTION_STATE_ID;
            v_CDB_BARS_TRANSACTION.FAIL_COUNTER = fAIL_COUNTER;
            return v_CDB_BARS_TRANSACTION;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BRANCH_ID
        {
            get
            {
                return _BRANCH_ID;
            }
            set
            {
                OnBRANCH_IDChanging(value);
                ReportPropertyChanging("BRANCH_ID");
                _BRANCH_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BRANCH_ID");
                OnBRANCH_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _BRANCH_ID;
        partial void OnBRANCH_IDChanging(Nullable<global::System.Int32> value);
        partial void OnBRANCH_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OBJECT_ID
        {
            get
            {
                return _OBJECT_ID;
            }
            set
            {
                if (_OBJECT_ID != value)
                {
                    OnOBJECT_IDChanging(value);
                    ReportPropertyChanging("OBJECT_ID");
                    _OBJECT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OBJECT_ID");
                    OnOBJECT_IDChanged();
                }
            }
        }
        private global::System.Int64 _OBJECT_ID;
        partial void OnOBJECT_IDChanging(global::System.Int64 value);
        partial void OnOBJECT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OPERATION_ID
        {
            get
            {
                return _OPERATION_ID;
            }
            set
            {
                OnOPERATION_IDChanging(value);
                ReportPropertyChanging("OPERATION_ID");
                _OPERATION_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OPERATION_ID");
                OnOPERATION_IDChanged();
            }
        }
        private Nullable<global::System.Int64> _OPERATION_ID;
        partial void OnOPERATION_IDChanging(Nullable<global::System.Int64> value);
        partial void OnOPERATION_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CLAIM_ID
        {
            get
            {
                return _CLAIM_ID;
            }
            set
            {
                OnCLAIM_IDChanging(value);
                ReportPropertyChanging("CLAIM_ID");
                _CLAIM_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLAIM_ID");
                OnCLAIM_IDChanged();
            }
        }
        private Nullable<global::System.Int64> _CLAIM_ID;
        partial void OnCLAIM_IDChanging(Nullable<global::System.Int64> value);
        partial void OnCLAIM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MFO
        {
            get
            {
                return _MFO;
            }
            set
            {
                OnMFOChanging(value);
                ReportPropertyChanging("MFO");
                _MFO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MFO");
                OnMFOChanged();
            }
        }
        private global::System.String _MFO;
        partial void OnMFOChanging(global::System.String value);
        partial void OnMFOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OBJECT
        {
            get
            {
                return _OBJECT;
            }
            set
            {
                OnOBJECTChanging(value);
                ReportPropertyChanging("OBJECT");
                _OBJECT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OBJECT");
                OnOBJECTChanged();
            }
        }
        private global::System.String _OBJECT;
        partial void OnOBJECTChanging(global::System.String value);
        partial void OnOBJECTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CLAIM_TYPE_ID
        {
            get
            {
                return _CLAIM_TYPE_ID;
            }
            set
            {
                OnCLAIM_TYPE_IDChanging(value);
                ReportPropertyChanging("CLAIM_TYPE_ID");
                _CLAIM_TYPE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLAIM_TYPE_ID");
                OnCLAIM_TYPE_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _CLAIM_TYPE_ID;
        partial void OnCLAIM_TYPE_IDChanging(Nullable<global::System.Int32> value);
        partial void OnCLAIM_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CLAIM_TYPE
        {
            get
            {
                return _CLAIM_TYPE;
            }
            set
            {
                OnCLAIM_TYPEChanging(value);
                ReportPropertyChanging("CLAIM_TYPE");
                _CLAIM_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CLAIM_TYPE");
                OnCLAIM_TYPEChanged();
            }
        }
        private global::System.String _CLAIM_TYPE;
        partial void OnCLAIM_TYPEChanging(global::System.String value);
        partial void OnCLAIM_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OPERATION_TYPE_ID
        {
            get
            {
                return _OPERATION_TYPE_ID;
            }
            set
            {
                OnOPERATION_TYPE_IDChanging(value);
                ReportPropertyChanging("OPERATION_TYPE_ID");
                _OPERATION_TYPE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OPERATION_TYPE_ID");
                OnOPERATION_TYPE_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _OPERATION_TYPE_ID;
        partial void OnOPERATION_TYPE_IDChanging(Nullable<global::System.Int32> value);
        partial void OnOPERATION_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OPERATION_TYPE
        {
            get
            {
                return _OPERATION_TYPE;
            }
            set
            {
                OnOPERATION_TYPEChanging(value);
                ReportPropertyChanging("OPERATION_TYPE");
                _OPERATION_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OPERATION_TYPE");
                OnOPERATION_TYPEChanged();
            }
        }
        private global::System.String _OPERATION_TYPE;
        partial void OnOPERATION_TYPEChanging(global::System.String value);
        partial void OnOPERATION_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TRANSACTION_TYPE_ID
        {
            get
            {
                return _TRANSACTION_TYPE_ID;
            }
            set
            {
                if (_TRANSACTION_TYPE_ID != value)
                {
                    OnTRANSACTION_TYPE_IDChanging(value);
                    ReportPropertyChanging("TRANSACTION_TYPE_ID");
                    _TRANSACTION_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TRANSACTION_TYPE_ID");
                    OnTRANSACTION_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _TRANSACTION_TYPE_ID;
        partial void OnTRANSACTION_TYPE_IDChanging(global::System.Int32 value);
        partial void OnTRANSACTION_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TRANSACTION_TYPE
        {
            get
            {
                return _TRANSACTION_TYPE;
            }
            set
            {
                OnTRANSACTION_TYPEChanging(value);
                ReportPropertyChanging("TRANSACTION_TYPE");
                _TRANSACTION_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TRANSACTION_TYPE");
                OnTRANSACTION_TYPEChanged();
            }
        }
        private global::System.String _TRANSACTION_TYPE;
        partial void OnTRANSACTION_TYPEChanging(global::System.String value);
        partial void OnTRANSACTION_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PRIORITY_GROUP
        {
            get
            {
                return _PRIORITY_GROUP;
            }
            set
            {
                OnPRIORITY_GROUPChanging(value);
                ReportPropertyChanging("PRIORITY_GROUP");
                _PRIORITY_GROUP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRIORITY_GROUP");
                OnPRIORITY_GROUPChanged();
            }
        }
        private Nullable<global::System.Int32> _PRIORITY_GROUP;
        partial void OnPRIORITY_GROUPChanging(Nullable<global::System.Int32> value);
        partial void OnPRIORITY_GROUPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TRANSACTION_STATE_ID
        {
            get
            {
                return _TRANSACTION_STATE_ID;
            }
            set
            {
                if (_TRANSACTION_STATE_ID != value)
                {
                    OnTRANSACTION_STATE_IDChanging(value);
                    ReportPropertyChanging("TRANSACTION_STATE_ID");
                    _TRANSACTION_STATE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TRANSACTION_STATE_ID");
                    OnTRANSACTION_STATE_IDChanged();
                }
            }
        }
        private global::System.Int32 _TRANSACTION_STATE_ID;
        partial void OnTRANSACTION_STATE_IDChanging(global::System.Int32 value);
        partial void OnTRANSACTION_STATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TRANSACTION_STATE
        {
            get
            {
                return _TRANSACTION_STATE;
            }
            set
            {
                OnTRANSACTION_STATEChanging(value);
                ReportPropertyChanging("TRANSACTION_STATE");
                _TRANSACTION_STATE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TRANSACTION_STATE");
                OnTRANSACTION_STATEChanged();
            }
        }
        private global::System.String _TRANSACTION_STATE;
        partial void OnTRANSACTION_STATEChanging(global::System.String value);
        partial void OnTRANSACTION_STATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FAIL_COUNTER
        {
            get
            {
                return _FAIL_COUNTER;
            }
            set
            {
                if (_FAIL_COUNTER != value)
                {
                    OnFAIL_COUNTERChanging(value);
                    ReportPropertyChanging("FAIL_COUNTER");
                    _FAIL_COUNTER = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FAIL_COUNTER");
                    OnFAIL_COUNTERChanged();
                }
            }
        }
        private global::System.Int32 _FAIL_COUNTER;
        partial void OnFAIL_COUNTERChanging(global::System.Int32 value);
        partial void OnFAIL_COUNTERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LAST_TRACKING_MESSAGE
        {
            get
            {
                return _LAST_TRACKING_MESSAGE;
            }
            set
            {
                OnLAST_TRACKING_MESSAGEChanging(value);
                ReportPropertyChanging("LAST_TRACKING_MESSAGE");
                _LAST_TRACKING_MESSAGE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LAST_TRACKING_MESSAGE");
                OnLAST_TRACKING_MESSAGEChanged();
            }
        }
        private global::System.String _LAST_TRACKING_MESSAGE;
        partial void OnLAST_TRACKING_MESSAGEChanging(global::System.String value);
        partial void OnLAST_TRACKING_MESSAGEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Areas.CRSOUR.Models", Name="V_CDB_CHANGE_AMOUNT_CLAIM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CDB_CHANGE_AMOUNT_CLAIM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CDB_CHANGE_AMOUNT_CLAIM object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sYS_TIME">Initial value of the SYS_TIME property.</param>
        /// <param name="cLAIM_STATE_ID">Initial value of the CLAIM_STATE_ID property.</param>
        public static V_CDB_CHANGE_AMOUNT_CLAIM CreateV_CDB_CHANGE_AMOUNT_CLAIM(global::System.Int32 id, global::System.DateTime sYS_TIME, global::System.Int16 cLAIM_STATE_ID)
        {
            V_CDB_CHANGE_AMOUNT_CLAIM v_CDB_CHANGE_AMOUNT_CLAIM = new V_CDB_CHANGE_AMOUNT_CLAIM();
            v_CDB_CHANGE_AMOUNT_CLAIM.ID = id;
            v_CDB_CHANGE_AMOUNT_CLAIM.SYS_TIME = sYS_TIME;
            v_CDB_CHANGE_AMOUNT_CLAIM.CLAIM_STATE_ID = cLAIM_STATE_ID;
            return v_CDB_CHANGE_AMOUNT_CLAIM;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DEAL_NUMBER
        {
            get
            {
                return _DEAL_NUMBER;
            }
            set
            {
                OnDEAL_NUMBERChanging(value);
                ReportPropertyChanging("DEAL_NUMBER");
                _DEAL_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DEAL_NUMBER");
                OnDEAL_NUMBERChanged();
            }
        }
        private global::System.String _DEAL_NUMBER;
        partial void OnDEAL_NUMBERChanging(global::System.String value);
        partial void OnDEAL_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NEW_DEAL_AMOUNT
        {
            get
            {
                return _NEW_DEAL_AMOUNT;
            }
            set
            {
                OnNEW_DEAL_AMOUNTChanging(value);
                ReportPropertyChanging("NEW_DEAL_AMOUNT");
                _NEW_DEAL_AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NEW_DEAL_AMOUNT");
                OnNEW_DEAL_AMOUNTChanged();
            }
        }
        private Nullable<global::System.Decimal> _NEW_DEAL_AMOUNT;
        partial void OnNEW_DEAL_AMOUNTChanging(Nullable<global::System.Decimal> value);
        partial void OnNEW_DEAL_AMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ALLEGRO_COMMENT
        {
            get
            {
                return _ALLEGRO_COMMENT;
            }
            set
            {
                OnALLEGRO_COMMENTChanging(value);
                ReportPropertyChanging("ALLEGRO_COMMENT");
                _ALLEGRO_COMMENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ALLEGRO_COMMENT");
                OnALLEGRO_COMMENTChanged();
            }
        }
        private global::System.String _ALLEGRO_COMMENT;
        partial void OnALLEGRO_COMMENTChanging(global::System.String value);
        partial void OnALLEGRO_COMMENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ALLEGRO_CLAIM_ID
        {
            get
            {
                return _ALLEGRO_CLAIM_ID;
            }
            set
            {
                OnALLEGRO_CLAIM_IDChanging(value);
                ReportPropertyChanging("ALLEGRO_CLAIM_ID");
                _ALLEGRO_CLAIM_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ALLEGRO_CLAIM_ID");
                OnALLEGRO_CLAIM_IDChanged();
            }
        }
        private global::System.String _ALLEGRO_CLAIM_ID;
        partial void OnALLEGRO_CLAIM_IDChanging(global::System.String value);
        partial void OnALLEGRO_CLAIM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SYS_TIME
        {
            get
            {
                return _SYS_TIME;
            }
            set
            {
                if (_SYS_TIME != value)
                {
                    OnSYS_TIMEChanging(value);
                    ReportPropertyChanging("SYS_TIME");
                    _SYS_TIME = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SYS_TIME");
                    OnSYS_TIMEChanged();
                }
            }
        }
        private global::System.DateTime _SYS_TIME;
        partial void OnSYS_TIMEChanging(global::System.DateTime value);
        partial void OnSYS_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CLAIM_STATE_ID
        {
            get
            {
                return _CLAIM_STATE_ID;
            }
            set
            {
                if (_CLAIM_STATE_ID != value)
                {
                    OnCLAIM_STATE_IDChanging(value);
                    ReportPropertyChanging("CLAIM_STATE_ID");
                    _CLAIM_STATE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLAIM_STATE_ID");
                    OnCLAIM_STATE_IDChanged();
                }
            }
        }
        private global::System.Int16 _CLAIM_STATE_ID;
        partial void OnCLAIM_STATE_IDChanging(global::System.Int16 value);
        partial void OnCLAIM_STATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CLAIM_STATE
        {
            get
            {
                return _CLAIM_STATE;
            }
            set
            {
                OnCLAIM_STATEChanging(value);
                ReportPropertyChanging("CLAIM_STATE");
                _CLAIM_STATE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CLAIM_STATE");
                OnCLAIM_STATEChanged();
            }
        }
        private global::System.String _CLAIM_STATE;
        partial void OnCLAIM_STATEChanging(global::System.String value);
        partial void OnCLAIM_STATEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Areas.CRSOUR.Models", Name="V_CDB_CLAIM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CDB_CLAIM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CDB_CLAIM object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="cLAIM_TYPE_ID">Initial value of the CLAIM_TYPE_ID property.</param>
        /// <param name="cLAIM_STATE_ID">Initial value of the CLAIM_STATE_ID property.</param>
        /// <param name="sYS_TIME">Initial value of the SYS_TIME property.</param>
        public static V_CDB_CLAIM CreateV_CDB_CLAIM(global::System.Int64 id, global::System.Int32 cLAIM_TYPE_ID, global::System.Int32 cLAIM_STATE_ID, global::System.DateTime sYS_TIME)
        {
            V_CDB_CLAIM v_CDB_CLAIM = new V_CDB_CLAIM();
            v_CDB_CLAIM.ID = id;
            v_CDB_CLAIM.CLAIM_TYPE_ID = cLAIM_TYPE_ID;
            v_CDB_CLAIM.CLAIM_STATE_ID = cLAIM_STATE_ID;
            v_CDB_CLAIM.SYS_TIME = sYS_TIME;
            return v_CDB_CLAIM;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REGION_MFO
        {
            get
            {
                return _REGION_MFO;
            }
            set
            {
                OnREGION_MFOChanging(value);
                ReportPropertyChanging("REGION_MFO");
                _REGION_MFO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("REGION_MFO");
                OnREGION_MFOChanged();
            }
        }
        private global::System.String _REGION_MFO;
        partial void OnREGION_MFOChanging(global::System.String value);
        partial void OnREGION_MFOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DEAL_NUMBER
        {
            get
            {
                return _DEAL_NUMBER;
            }
            set
            {
                OnDEAL_NUMBERChanging(value);
                ReportPropertyChanging("DEAL_NUMBER");
                _DEAL_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DEAL_NUMBER");
                OnDEAL_NUMBERChanged();
            }
        }
        private global::System.String _DEAL_NUMBER;
        partial void OnDEAL_NUMBERChanging(global::System.String value);
        partial void OnDEAL_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLAIM_TYPE_ID
        {
            get
            {
                return _CLAIM_TYPE_ID;
            }
            set
            {
                if (_CLAIM_TYPE_ID != value)
                {
                    OnCLAIM_TYPE_IDChanging(value);
                    ReportPropertyChanging("CLAIM_TYPE_ID");
                    _CLAIM_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLAIM_TYPE_ID");
                    OnCLAIM_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _CLAIM_TYPE_ID;
        partial void OnCLAIM_TYPE_IDChanging(global::System.Int32 value);
        partial void OnCLAIM_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CLAIM_TYPE
        {
            get
            {
                return _CLAIM_TYPE;
            }
            set
            {
                OnCLAIM_TYPEChanging(value);
                ReportPropertyChanging("CLAIM_TYPE");
                _CLAIM_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CLAIM_TYPE");
                OnCLAIM_TYPEChanged();
            }
        }
        private global::System.String _CLAIM_TYPE;
        partial void OnCLAIM_TYPEChanging(global::System.String value);
        partial void OnCLAIM_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLAIM_STATE_ID
        {
            get
            {
                return _CLAIM_STATE_ID;
            }
            set
            {
                if (_CLAIM_STATE_ID != value)
                {
                    OnCLAIM_STATE_IDChanging(value);
                    ReportPropertyChanging("CLAIM_STATE_ID");
                    _CLAIM_STATE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLAIM_STATE_ID");
                    OnCLAIM_STATE_IDChanged();
                }
            }
        }
        private global::System.Int32 _CLAIM_STATE_ID;
        partial void OnCLAIM_STATE_IDChanging(global::System.Int32 value);
        partial void OnCLAIM_STATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CLAIM_STATE
        {
            get
            {
                return _CLAIM_STATE;
            }
            set
            {
                OnCLAIM_STATEChanging(value);
                ReportPropertyChanging("CLAIM_STATE");
                _CLAIM_STATE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CLAIM_STATE");
                OnCLAIM_STATEChanged();
            }
        }
        private global::System.String _CLAIM_STATE;
        partial void OnCLAIM_STATEChanging(global::System.String value);
        partial void OnCLAIM_STATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ALLEGRO_CLAIM_ID
        {
            get
            {
                return _ALLEGRO_CLAIM_ID;
            }
            set
            {
                OnALLEGRO_CLAIM_IDChanging(value);
                ReportPropertyChanging("ALLEGRO_CLAIM_ID");
                _ALLEGRO_CLAIM_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ALLEGRO_CLAIM_ID");
                OnALLEGRO_CLAIM_IDChanged();
            }
        }
        private global::System.String _ALLEGRO_CLAIM_ID;
        partial void OnALLEGRO_CLAIM_IDChanging(global::System.String value);
        partial void OnALLEGRO_CLAIM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LAST_TRACKING_MESSAGE
        {
            get
            {
                return _LAST_TRACKING_MESSAGE;
            }
            set
            {
                OnLAST_TRACKING_MESSAGEChanging(value);
                ReportPropertyChanging("LAST_TRACKING_MESSAGE");
                _LAST_TRACKING_MESSAGE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LAST_TRACKING_MESSAGE");
                OnLAST_TRACKING_MESSAGEChanged();
            }
        }
        private global::System.String _LAST_TRACKING_MESSAGE;
        partial void OnLAST_TRACKING_MESSAGEChanging(global::System.String value);
        partial void OnLAST_TRACKING_MESSAGEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SYS_TIME
        {
            get
            {
                return _SYS_TIME;
            }
            set
            {
                if (_SYS_TIME != value)
                {
                    OnSYS_TIMEChanging(value);
                    ReportPropertyChanging("SYS_TIME");
                    _SYS_TIME = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SYS_TIME");
                    OnSYS_TIMEChanged();
                }
            }
        }
        private global::System.DateTime _SYS_TIME;
        partial void OnSYS_TIMEChanging(global::System.DateTime value);
        partial void OnSYS_TIMEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Areas.CRSOUR.Models", Name="V_CDB_CLAIM_DATA_TO_ACCEPT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CDB_CLAIM_DATA_TO_ACCEPT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CDB_CLAIM_DATA_TO_ACCEPT object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="cLAIM_TYPE_ID">Initial value of the CLAIM_TYPE_ID property.</param>
        public static V_CDB_CLAIM_DATA_TO_ACCEPT CreateV_CDB_CLAIM_DATA_TO_ACCEPT(global::System.Int64 id, global::System.Int32 cLAIM_TYPE_ID)
        {
            V_CDB_CLAIM_DATA_TO_ACCEPT v_CDB_CLAIM_DATA_TO_ACCEPT = new V_CDB_CLAIM_DATA_TO_ACCEPT();
            v_CDB_CLAIM_DATA_TO_ACCEPT.ID = id;
            v_CDB_CLAIM_DATA_TO_ACCEPT.CLAIM_TYPE_ID = cLAIM_TYPE_ID;
            return v_CDB_CLAIM_DATA_TO_ACCEPT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLAIM_TYPE_ID
        {
            get
            {
                return _CLAIM_TYPE_ID;
            }
            set
            {
                if (_CLAIM_TYPE_ID != value)
                {
                    OnCLAIM_TYPE_IDChanging(value);
                    ReportPropertyChanging("CLAIM_TYPE_ID");
                    _CLAIM_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLAIM_TYPE_ID");
                    OnCLAIM_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int32 _CLAIM_TYPE_ID;
        partial void OnCLAIM_TYPE_IDChanging(global::System.Int32 value);
        partial void OnCLAIM_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CLAIM_TYPE
        {
            get
            {
                return _CLAIM_TYPE;
            }
            set
            {
                OnCLAIM_TYPEChanging(value);
                ReportPropertyChanging("CLAIM_TYPE");
                _CLAIM_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CLAIM_TYPE");
                OnCLAIM_TYPEChanged();
            }
        }
        private global::System.String _CLAIM_TYPE;
        partial void OnCLAIM_TYPEChanging(global::System.String value);
        partial void OnCLAIM_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CLAIM_ID
        {
            get
            {
                return _CLAIM_ID;
            }
            set
            {
                OnCLAIM_IDChanging(value);
                ReportPropertyChanging("CLAIM_ID");
                _CLAIM_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLAIM_ID");
                OnCLAIM_IDChanged();
            }
        }
        private Nullable<global::System.Int64> _CLAIM_ID;
        partial void OnCLAIM_IDChanging(Nullable<global::System.Int64> value);
        partial void OnCLAIM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DEAL_NUMBER
        {
            get
            {
                return _DEAL_NUMBER;
            }
            set
            {
                OnDEAL_NUMBERChanging(value);
                ReportPropertyChanging("DEAL_NUMBER");
                _DEAL_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DEAL_NUMBER");
                OnDEAL_NUMBERChanged();
            }
        }
        private global::System.String _DEAL_NUMBER;
        partial void OnDEAL_NUMBERChanging(global::System.String value);
        partial void OnDEAL_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LENDER_CODE
        {
            get
            {
                return _LENDER_CODE;
            }
            set
            {
                OnLENDER_CODEChanging(value);
                ReportPropertyChanging("LENDER_CODE");
                _LENDER_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LENDER_CODE");
                OnLENDER_CODEChanged();
            }
        }
        private global::System.String _LENDER_CODE;
        partial void OnLENDER_CODEChanging(global::System.String value);
        partial void OnLENDER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BORROWER_CODE
        {
            get
            {
                return _BORROWER_CODE;
            }
            set
            {
                OnBORROWER_CODEChanging(value);
                ReportPropertyChanging("BORROWER_CODE");
                _BORROWER_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BORROWER_CODE");
                OnBORROWER_CODEChanged();
            }
        }
        private global::System.String _BORROWER_CODE;
        partial void OnBORROWER_CODEChanging(global::System.String value);
        partial void OnBORROWER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> START_DATE
        {
            get
            {
                return _START_DATE;
            }
            set
            {
                OnSTART_DATEChanging(value);
                ReportPropertyChanging("START_DATE");
                _START_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("START_DATE");
                OnSTART_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _START_DATE;
        partial void OnSTART_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnSTART_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> END_DATE
        {
            get
            {
                return _END_DATE;
            }
            set
            {
                OnEND_DATEChanging(value);
                ReportPropertyChanging("END_DATE");
                _END_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("END_DATE");
                OnEND_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _END_DATE;
        partial void OnEND_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnEND_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private Nullable<global::System.Decimal> _AMOUNT;
        partial void OnAMOUNTChanging(Nullable<global::System.Decimal> value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CURRENCY_ID
        {
            get
            {
                return _CURRENCY_ID;
            }
            set
            {
                OnCURRENCY_IDChanging(value);
                ReportPropertyChanging("CURRENCY_ID");
                _CURRENCY_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CURRENCY_ID");
                OnCURRENCY_IDChanged();
            }
        }
        private global::System.String _CURRENCY_ID;
        partial void OnCURRENCY_IDChanging(global::System.String value);
        partial void OnCURRENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> INTEREST_RATE_DATE
        {
            get
            {
                return _INTEREST_RATE_DATE;
            }
            set
            {
                OnINTEREST_RATE_DATEChanging(value);
                ReportPropertyChanging("INTEREST_RATE_DATE");
                _INTEREST_RATE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INTEREST_RATE_DATE");
                OnINTEREST_RATE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _INTEREST_RATE_DATE;
        partial void OnINTEREST_RATE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnINTEREST_RATE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> INTEREST_RATE
        {
            get
            {
                return _INTEREST_RATE;
            }
            set
            {
                OnINTEREST_RATEChanging(value);
                ReportPropertyChanging("INTEREST_RATE");
                _INTEREST_RATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INTEREST_RATE");
                OnINTEREST_RATEChanged();
            }
        }
        private Nullable<global::System.Decimal> _INTEREST_RATE;
        partial void OnINTEREST_RATEChanging(Nullable<global::System.Decimal> value);
        partial void OnINTEREST_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> END_DATE_FLAG
        {
            get
            {
                return _END_DATE_FLAG;
            }
            set
            {
                OnEND_DATE_FLAGChanging(value);
                ReportPropertyChanging("END_DATE_FLAG");
                _END_DATE_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("END_DATE_FLAG");
                OnEND_DATE_FLAGChanged();
            }
        }
        private Nullable<global::System.Decimal> _END_DATE_FLAG;
        partial void OnEND_DATE_FLAGChanging(Nullable<global::System.Decimal> value);
        partial void OnEND_DATE_FLAGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AMOUNT_FLAG
        {
            get
            {
                return _AMOUNT_FLAG;
            }
            set
            {
                OnAMOUNT_FLAGChanging(value);
                ReportPropertyChanging("AMOUNT_FLAG");
                _AMOUNT_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT_FLAG");
                OnAMOUNT_FLAGChanged();
            }
        }
        private Nullable<global::System.Decimal> _AMOUNT_FLAG;
        partial void OnAMOUNT_FLAGChanging(Nullable<global::System.Decimal> value);
        partial void OnAMOUNT_FLAGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> INTEREST_DATE_FLAG
        {
            get
            {
                return _INTEREST_DATE_FLAG;
            }
            set
            {
                OnINTEREST_DATE_FLAGChanging(value);
                ReportPropertyChanging("INTEREST_DATE_FLAG");
                _INTEREST_DATE_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INTEREST_DATE_FLAG");
                OnINTEREST_DATE_FLAGChanged();
            }
        }
        private Nullable<global::System.Decimal> _INTEREST_DATE_FLAG;
        partial void OnINTEREST_DATE_FLAGChanging(Nullable<global::System.Decimal> value);
        partial void OnINTEREST_DATE_FLAGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> INTEREST_RATE_FLAG
        {
            get
            {
                return _INTEREST_RATE_FLAG;
            }
            set
            {
                OnINTEREST_RATE_FLAGChanging(value);
                ReportPropertyChanging("INTEREST_RATE_FLAG");
                _INTEREST_RATE_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INTEREST_RATE_FLAG");
                OnINTEREST_RATE_FLAGChanged();
            }
        }
        private Nullable<global::System.Decimal> _INTEREST_RATE_FLAG;
        partial void OnINTEREST_RATE_FLAGChanging(Nullable<global::System.Decimal> value);
        partial void OnINTEREST_RATE_FLAGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String COMMENT_TEXT
        {
            get
            {
                return _COMMENT_TEXT;
            }
            set
            {
                OnCOMMENT_TEXTChanging(value);
                ReportPropertyChanging("COMMENT_TEXT");
                _COMMENT_TEXT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("COMMENT_TEXT");
                OnCOMMENT_TEXTChanged();
            }
        }
        private global::System.String _COMMENT_TEXT;
        partial void OnCOMMENT_TEXTChanging(global::System.String value);
        partial void OnCOMMENT_TEXTChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Areas.CRSOUR.Models", Name="V_CDB_CLAIM_TRACK")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CDB_CLAIM_TRACK : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CDB_CLAIM_TRACK object.
        /// </summary>
        /// <param name="cLAIM_ID">Initial value of the CLAIM_ID property.</param>
        /// <param name="cLAIM_STATE_ID">Initial value of the CLAIM_STATE_ID property.</param>
        /// <param name="sYS_TIME">Initial value of the SYS_TIME property.</param>
        public static V_CDB_CLAIM_TRACK CreateV_CDB_CLAIM_TRACK(global::System.Int32 cLAIM_ID, global::System.Int16 cLAIM_STATE_ID, global::System.DateTime sYS_TIME)
        {
            V_CDB_CLAIM_TRACK v_CDB_CLAIM_TRACK = new V_CDB_CLAIM_TRACK();
            v_CDB_CLAIM_TRACK.CLAIM_ID = cLAIM_ID;
            v_CDB_CLAIM_TRACK.CLAIM_STATE_ID = cLAIM_STATE_ID;
            v_CDB_CLAIM_TRACK.SYS_TIME = sYS_TIME;
            return v_CDB_CLAIM_TRACK;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLAIM_ID
        {
            get
            {
                return _CLAIM_ID;
            }
            set
            {
                if (_CLAIM_ID != value)
                {
                    OnCLAIM_IDChanging(value);
                    ReportPropertyChanging("CLAIM_ID");
                    _CLAIM_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLAIM_ID");
                    OnCLAIM_IDChanged();
                }
            }
        }
        private global::System.Int32 _CLAIM_ID;
        partial void OnCLAIM_IDChanging(global::System.Int32 value);
        partial void OnCLAIM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CLAIM_STATE_ID
        {
            get
            {
                return _CLAIM_STATE_ID;
            }
            set
            {
                if (_CLAIM_STATE_ID != value)
                {
                    OnCLAIM_STATE_IDChanging(value);
                    ReportPropertyChanging("CLAIM_STATE_ID");
                    _CLAIM_STATE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLAIM_STATE_ID");
                    OnCLAIM_STATE_IDChanged();
                }
            }
        }
        private global::System.Int16 _CLAIM_STATE_ID;
        partial void OnCLAIM_STATE_IDChanging(global::System.Int16 value);
        partial void OnCLAIM_STATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CLAIM_STATE
        {
            get
            {
                return _CLAIM_STATE;
            }
            set
            {
                OnCLAIM_STATEChanging(value);
                ReportPropertyChanging("CLAIM_STATE");
                _CLAIM_STATE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CLAIM_STATE");
                OnCLAIM_STATEChanged();
            }
        }
        private global::System.String _CLAIM_STATE;
        partial void OnCLAIM_STATEChanging(global::System.String value);
        partial void OnCLAIM_STATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SYS_TIME
        {
            get
            {
                return _SYS_TIME;
            }
            set
            {
                if (_SYS_TIME != value)
                {
                    OnSYS_TIMEChanging(value);
                    ReportPropertyChanging("SYS_TIME");
                    _SYS_TIME = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SYS_TIME");
                    OnSYS_TIMEChanged();
                }
            }
        }
        private global::System.DateTime _SYS_TIME;
        partial void OnSYS_TIMEChanging(global::System.DateTime value);
        partial void OnSYS_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TRACKING_COMMENT
        {
            get
            {
                return _TRACKING_COMMENT;
            }
            set
            {
                OnTRACKING_COMMENTChanging(value);
                ReportPropertyChanging("TRACKING_COMMENT");
                _TRACKING_COMMENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TRACKING_COMMENT");
                OnTRACKING_COMMENTChanged();
            }
        }
        private global::System.String _TRACKING_COMMENT;
        partial void OnTRACKING_COMMENTChanging(global::System.String value);
        partial void OnTRACKING_COMMENTChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Areas.CRSOUR.Models", Name="V_CDB_CLOSE_DEAL_CLAIM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CDB_CLOSE_DEAL_CLAIM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CDB_CLOSE_DEAL_CLAIM object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sYS_TIME">Initial value of the SYS_TIME property.</param>
        /// <param name="cLAIM_STATE_ID">Initial value of the CLAIM_STATE_ID property.</param>
        public static V_CDB_CLOSE_DEAL_CLAIM CreateV_CDB_CLOSE_DEAL_CLAIM(global::System.Int32 id, global::System.DateTime sYS_TIME, global::System.Int16 cLAIM_STATE_ID)
        {
            V_CDB_CLOSE_DEAL_CLAIM v_CDB_CLOSE_DEAL_CLAIM = new V_CDB_CLOSE_DEAL_CLAIM();
            v_CDB_CLOSE_DEAL_CLAIM.ID = id;
            v_CDB_CLOSE_DEAL_CLAIM.SYS_TIME = sYS_TIME;
            v_CDB_CLOSE_DEAL_CLAIM.CLAIM_STATE_ID = cLAIM_STATE_ID;
            return v_CDB_CLOSE_DEAL_CLAIM;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DEAL_NUMBER
        {
            get
            {
                return _DEAL_NUMBER;
            }
            set
            {
                OnDEAL_NUMBERChanging(value);
                ReportPropertyChanging("DEAL_NUMBER");
                _DEAL_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DEAL_NUMBER");
                OnDEAL_NUMBERChanged();
            }
        }
        private global::System.String _DEAL_NUMBER;
        partial void OnDEAL_NUMBERChanging(global::System.String value);
        partial void OnDEAL_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CLOSE_DATE
        {
            get
            {
                return _CLOSE_DATE;
            }
            set
            {
                OnCLOSE_DATEChanging(value);
                ReportPropertyChanging("CLOSE_DATE");
                _CLOSE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLOSE_DATE");
                OnCLOSE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _CLOSE_DATE;
        partial void OnCLOSE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnCLOSE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ALLEGRO_COMMENT
        {
            get
            {
                return _ALLEGRO_COMMENT;
            }
            set
            {
                OnALLEGRO_COMMENTChanging(value);
                ReportPropertyChanging("ALLEGRO_COMMENT");
                _ALLEGRO_COMMENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ALLEGRO_COMMENT");
                OnALLEGRO_COMMENTChanged();
            }
        }
        private global::System.String _ALLEGRO_COMMENT;
        partial void OnALLEGRO_COMMENTChanging(global::System.String value);
        partial void OnALLEGRO_COMMENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ALLEGRO_CLAIM_ID
        {
            get
            {
                return _ALLEGRO_CLAIM_ID;
            }
            set
            {
                OnALLEGRO_CLAIM_IDChanging(value);
                ReportPropertyChanging("ALLEGRO_CLAIM_ID");
                _ALLEGRO_CLAIM_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ALLEGRO_CLAIM_ID");
                OnALLEGRO_CLAIM_IDChanged();
            }
        }
        private global::System.String _ALLEGRO_CLAIM_ID;
        partial void OnALLEGRO_CLAIM_IDChanging(global::System.String value);
        partial void OnALLEGRO_CLAIM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SYS_TIME
        {
            get
            {
                return _SYS_TIME;
            }
            set
            {
                if (_SYS_TIME != value)
                {
                    OnSYS_TIMEChanging(value);
                    ReportPropertyChanging("SYS_TIME");
                    _SYS_TIME = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SYS_TIME");
                    OnSYS_TIMEChanged();
                }
            }
        }
        private global::System.DateTime _SYS_TIME;
        partial void OnSYS_TIMEChanging(global::System.DateTime value);
        partial void OnSYS_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CLAIM_STATE_ID
        {
            get
            {
                return _CLAIM_STATE_ID;
            }
            set
            {
                if (_CLAIM_STATE_ID != value)
                {
                    OnCLAIM_STATE_IDChanging(value);
                    ReportPropertyChanging("CLAIM_STATE_ID");
                    _CLAIM_STATE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLAIM_STATE_ID");
                    OnCLAIM_STATE_IDChanged();
                }
            }
        }
        private global::System.Int16 _CLAIM_STATE_ID;
        partial void OnCLAIM_STATE_IDChanging(global::System.Int16 value);
        partial void OnCLAIM_STATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CLAIM_STATE
        {
            get
            {
                return _CLAIM_STATE;
            }
            set
            {
                OnCLAIM_STATEChanging(value);
                ReportPropertyChanging("CLAIM_STATE");
                _CLAIM_STATE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CLAIM_STATE");
                OnCLAIM_STATEChanged();
            }
        }
        private global::System.String _CLAIM_STATE;
        partial void OnCLAIM_STATEChanging(global::System.String value);
        partial void OnCLAIM_STATEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Areas.CRSOUR.Models", Name="V_CDB_DEAL_INTEREST_RATE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CDB_DEAL_INTEREST_RATE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CDB_DEAL_INTEREST_RATE object.
        /// </summary>
        /// <param name="dEAL_ID">Initial value of the DEAL_ID property.</param>
        /// <param name="dEAL_NUMBER">Initial value of the DEAL_NUMBER property.</param>
        /// <param name="rATE_KIND_ID">Initial value of the RATE_KIND_ID property.</param>
        /// <param name="sTART_DATE">Initial value of the START_DATE property.</param>
        public static V_CDB_DEAL_INTEREST_RATE CreateV_CDB_DEAL_INTEREST_RATE(global::System.Int32 dEAL_ID, global::System.String dEAL_NUMBER, global::System.Int16 rATE_KIND_ID, global::System.DateTime sTART_DATE)
        {
            V_CDB_DEAL_INTEREST_RATE v_CDB_DEAL_INTEREST_RATE = new V_CDB_DEAL_INTEREST_RATE();
            v_CDB_DEAL_INTEREST_RATE.DEAL_ID = dEAL_ID;
            v_CDB_DEAL_INTEREST_RATE.DEAL_NUMBER = dEAL_NUMBER;
            v_CDB_DEAL_INTEREST_RATE.RATE_KIND_ID = rATE_KIND_ID;
            v_CDB_DEAL_INTEREST_RATE.START_DATE = sTART_DATE;
            return v_CDB_DEAL_INTEREST_RATE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DEAL_ID
        {
            get
            {
                return _DEAL_ID;
            }
            set
            {
                if (_DEAL_ID != value)
                {
                    OnDEAL_IDChanging(value);
                    ReportPropertyChanging("DEAL_ID");
                    _DEAL_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DEAL_ID");
                    OnDEAL_IDChanged();
                }
            }
        }
        private global::System.Int32 _DEAL_ID;
        partial void OnDEAL_IDChanging(global::System.Int32 value);
        partial void OnDEAL_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DEAL_NUMBER
        {
            get
            {
                return _DEAL_NUMBER;
            }
            set
            {
                if (_DEAL_NUMBER != value)
                {
                    OnDEAL_NUMBERChanging(value);
                    ReportPropertyChanging("DEAL_NUMBER");
                    _DEAL_NUMBER = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DEAL_NUMBER");
                    OnDEAL_NUMBERChanged();
                }
            }
        }
        private global::System.String _DEAL_NUMBER;
        partial void OnDEAL_NUMBERChanging(global::System.String value);
        partial void OnDEAL_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 RATE_KIND_ID
        {
            get
            {
                return _RATE_KIND_ID;
            }
            set
            {
                if (_RATE_KIND_ID != value)
                {
                    OnRATE_KIND_IDChanging(value);
                    ReportPropertyChanging("RATE_KIND_ID");
                    _RATE_KIND_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RATE_KIND_ID");
                    OnRATE_KIND_IDChanged();
                }
            }
        }
        private global::System.Int16 _RATE_KIND_ID;
        partial void OnRATE_KIND_IDChanging(global::System.Int16 value);
        partial void OnRATE_KIND_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RATE_KIND
        {
            get
            {
                return _RATE_KIND;
            }
            set
            {
                OnRATE_KINDChanging(value);
                ReportPropertyChanging("RATE_KIND");
                _RATE_KIND = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RATE_KIND");
                OnRATE_KINDChanged();
            }
        }
        private global::System.String _RATE_KIND;
        partial void OnRATE_KINDChanging(global::System.String value);
        partial void OnRATE_KINDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime START_DATE
        {
            get
            {
                return _START_DATE;
            }
            set
            {
                if (_START_DATE != value)
                {
                    OnSTART_DATEChanging(value);
                    ReportPropertyChanging("START_DATE");
                    _START_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("START_DATE");
                    OnSTART_DATEChanged();
                }
            }
        }
        private global::System.DateTime _START_DATE;
        partial void OnSTART_DATEChanging(global::System.DateTime value);
        partial void OnSTART_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> INTEREST_RATE
        {
            get
            {
                return _INTEREST_RATE;
            }
            set
            {
                OnINTEREST_RATEChanging(value);
                ReportPropertyChanging("INTEREST_RATE");
                _INTEREST_RATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INTEREST_RATE");
                OnINTEREST_RATEChanged();
            }
        }
        private Nullable<global::System.Decimal> _INTEREST_RATE;
        partial void OnINTEREST_RATEChanging(Nullable<global::System.Decimal> value);
        partial void OnINTEREST_RATEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Areas.CRSOUR.Models", Name="V_CDB_NEW_DEAL_CLAIM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CDB_NEW_DEAL_CLAIM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CDB_NEW_DEAL_CLAIM object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sYS_TIME">Initial value of the SYS_TIME property.</param>
        /// <param name="cLAIM_STATE_ID">Initial value of the CLAIM_STATE_ID property.</param>
        public static V_CDB_NEW_DEAL_CLAIM CreateV_CDB_NEW_DEAL_CLAIM(global::System.Int32 id, global::System.DateTime sYS_TIME, global::System.Int16 cLAIM_STATE_ID)
        {
            V_CDB_NEW_DEAL_CLAIM v_CDB_NEW_DEAL_CLAIM = new V_CDB_NEW_DEAL_CLAIM();
            v_CDB_NEW_DEAL_CLAIM.ID = id;
            v_CDB_NEW_DEAL_CLAIM.SYS_TIME = sYS_TIME;
            v_CDB_NEW_DEAL_CLAIM.CLAIM_STATE_ID = cLAIM_STATE_ID;
            return v_CDB_NEW_DEAL_CLAIM;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DEAL_NUMBER
        {
            get
            {
                return _DEAL_NUMBER;
            }
            set
            {
                OnDEAL_NUMBERChanging(value);
                ReportPropertyChanging("DEAL_NUMBER");
                _DEAL_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DEAL_NUMBER");
                OnDEAL_NUMBERChanged();
            }
        }
        private global::System.String _DEAL_NUMBER;
        partial void OnDEAL_NUMBERChanging(global::System.String value);
        partial void OnDEAL_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OPEN_DATE
        {
            get
            {
                return _OPEN_DATE;
            }
            set
            {
                OnOPEN_DATEChanging(value);
                ReportPropertyChanging("OPEN_DATE");
                _OPEN_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OPEN_DATE");
                OnOPEN_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _OPEN_DATE;
        partial void OnOPEN_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnOPEN_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EXPIRY_DATE
        {
            get
            {
                return _EXPIRY_DATE;
            }
            set
            {
                OnEXPIRY_DATEChanging(value);
                ReportPropertyChanging("EXPIRY_DATE");
                _EXPIRY_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EXPIRY_DATE");
                OnEXPIRY_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _EXPIRY_DATE;
        partial void OnEXPIRY_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnEXPIRY_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LENDER_CODE
        {
            get
            {
                return _LENDER_CODE;
            }
            set
            {
                OnLENDER_CODEChanging(value);
                ReportPropertyChanging("LENDER_CODE");
                _LENDER_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LENDER_CODE");
                OnLENDER_CODEChanged();
            }
        }
        private global::System.String _LENDER_CODE;
        partial void OnLENDER_CODEChanging(global::System.String value);
        partial void OnLENDER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LENDER_NAME
        {
            get
            {
                return _LENDER_NAME;
            }
            set
            {
                OnLENDER_NAMEChanging(value);
                ReportPropertyChanging("LENDER_NAME");
                _LENDER_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LENDER_NAME");
                OnLENDER_NAMEChanged();
            }
        }
        private global::System.String _LENDER_NAME;
        partial void OnLENDER_NAMEChanging(global::System.String value);
        partial void OnLENDER_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BORROWER_CODE
        {
            get
            {
                return _BORROWER_CODE;
            }
            set
            {
                OnBORROWER_CODEChanging(value);
                ReportPropertyChanging("BORROWER_CODE");
                _BORROWER_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BORROWER_CODE");
                OnBORROWER_CODEChanged();
            }
        }
        private global::System.String _BORROWER_CODE;
        partial void OnBORROWER_CODEChanging(global::System.String value);
        partial void OnBORROWER_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BORROWER_NAME
        {
            get
            {
                return _BORROWER_NAME;
            }
            set
            {
                OnBORROWER_NAMEChanging(value);
                ReportPropertyChanging("BORROWER_NAME");
                _BORROWER_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BORROWER_NAME");
                OnBORROWER_NAMEChanged();
            }
        }
        private global::System.String _BORROWER_NAME;
        partial void OnBORROWER_NAMEChanging(global::System.String value);
        partial void OnBORROWER_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private Nullable<global::System.Decimal> _AMOUNT;
        partial void OnAMOUNTChanging(Nullable<global::System.Decimal> value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CURRENCY_ID
        {
            get
            {
                return _CURRENCY_ID;
            }
            set
            {
                OnCURRENCY_IDChanging(value);
                ReportPropertyChanging("CURRENCY_ID");
                _CURRENCY_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CURRENCY_ID");
                OnCURRENCY_IDChanged();
            }
        }
        private Nullable<global::System.Int16> _CURRENCY_ID;
        partial void OnCURRENCY_IDChanging(Nullable<global::System.Int16> value);
        partial void OnCURRENCY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> INTEREST_RATE
        {
            get
            {
                return _INTEREST_RATE;
            }
            set
            {
                OnINTEREST_RATEChanging(value);
                ReportPropertyChanging("INTEREST_RATE");
                _INTEREST_RATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INTEREST_RATE");
                OnINTEREST_RATEChanged();
            }
        }
        private Nullable<global::System.Decimal> _INTEREST_RATE;
        partial void OnINTEREST_RATEChanging(Nullable<global::System.Decimal> value);
        partial void OnINTEREST_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> INTEREST_CALENDAR_ID
        {
            get
            {
                return _INTEREST_CALENDAR_ID;
            }
            set
            {
                OnINTEREST_CALENDAR_IDChanging(value);
                ReportPropertyChanging("INTEREST_CALENDAR_ID");
                _INTEREST_CALENDAR_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INTEREST_CALENDAR_ID");
                OnINTEREST_CALENDAR_IDChanged();
            }
        }
        private Nullable<global::System.Int16> _INTEREST_CALENDAR_ID;
        partial void OnINTEREST_CALENDAR_IDChanging(Nullable<global::System.Int16> value);
        partial void OnINTEREST_CALENDAR_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INTEREST_CALENDAR
        {
            get
            {
                return _INTEREST_CALENDAR;
            }
            set
            {
                OnINTEREST_CALENDARChanging(value);
                ReportPropertyChanging("INTEREST_CALENDAR");
                _INTEREST_CALENDAR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INTEREST_CALENDAR");
                OnINTEREST_CALENDARChanged();
            }
        }
        private global::System.String _INTEREST_CALENDAR;
        partial void OnINTEREST_CALENDARChanging(global::System.String value);
        partial void OnINTEREST_CALENDARChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ALLEGRO_COMMENT
        {
            get
            {
                return _ALLEGRO_COMMENT;
            }
            set
            {
                OnALLEGRO_COMMENTChanging(value);
                ReportPropertyChanging("ALLEGRO_COMMENT");
                _ALLEGRO_COMMENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ALLEGRO_COMMENT");
                OnALLEGRO_COMMENTChanged();
            }
        }
        private global::System.String _ALLEGRO_COMMENT;
        partial void OnALLEGRO_COMMENTChanging(global::System.String value);
        partial void OnALLEGRO_COMMENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ALLEGRO_CLAIM_ID
        {
            get
            {
                return _ALLEGRO_CLAIM_ID;
            }
            set
            {
                OnALLEGRO_CLAIM_IDChanging(value);
                ReportPropertyChanging("ALLEGRO_CLAIM_ID");
                _ALLEGRO_CLAIM_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ALLEGRO_CLAIM_ID");
                OnALLEGRO_CLAIM_IDChanged();
            }
        }
        private global::System.String _ALLEGRO_CLAIM_ID;
        partial void OnALLEGRO_CLAIM_IDChanging(global::System.String value);
        partial void OnALLEGRO_CLAIM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SYS_TIME
        {
            get
            {
                return _SYS_TIME;
            }
            set
            {
                if (_SYS_TIME != value)
                {
                    OnSYS_TIMEChanging(value);
                    ReportPropertyChanging("SYS_TIME");
                    _SYS_TIME = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SYS_TIME");
                    OnSYS_TIMEChanged();
                }
            }
        }
        private global::System.DateTime _SYS_TIME;
        partial void OnSYS_TIMEChanging(global::System.DateTime value);
        partial void OnSYS_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CLAIM_STATE_ID
        {
            get
            {
                return _CLAIM_STATE_ID;
            }
            set
            {
                if (_CLAIM_STATE_ID != value)
                {
                    OnCLAIM_STATE_IDChanging(value);
                    ReportPropertyChanging("CLAIM_STATE_ID");
                    _CLAIM_STATE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLAIM_STATE_ID");
                    OnCLAIM_STATE_IDChanged();
                }
            }
        }
        private global::System.Int16 _CLAIM_STATE_ID;
        partial void OnCLAIM_STATE_IDChanging(global::System.Int16 value);
        partial void OnCLAIM_STATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CLAIM_STATE
        {
            get
            {
                return _CLAIM_STATE;
            }
            set
            {
                OnCLAIM_STATEChanging(value);
                ReportPropertyChanging("CLAIM_STATE");
                _CLAIM_STATE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CLAIM_STATE");
                OnCLAIM_STATEChanged();
            }
        }
        private global::System.String _CLAIM_STATE;
        partial void OnCLAIM_STATEChanging(global::System.String value);
        partial void OnCLAIM_STATEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Areas.CRSOUR.Models", Name="V_CDB_OPERATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CDB_OPERATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CDB_OPERATION object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="dEAL_ID">Initial value of the DEAL_ID property.</param>
        /// <param name="dEAL_NUMBER">Initial value of the DEAL_NUMBER property.</param>
        /// <param name="oPERATION_TYPE_ID">Initial value of the OPERATION_TYPE_ID property.</param>
        /// <param name="sYS_TIME">Initial value of the SYS_TIME property.</param>
        /// <param name="oPERATION_STATE_ID">Initial value of the OPERATION_STATE_ID property.</param>
        public static V_CDB_OPERATION CreateV_CDB_OPERATION(global::System.Int32 id, global::System.Int32 dEAL_ID, global::System.String dEAL_NUMBER, global::System.Int16 oPERATION_TYPE_ID, global::System.DateTime sYS_TIME, global::System.Int16 oPERATION_STATE_ID)
        {
            V_CDB_OPERATION v_CDB_OPERATION = new V_CDB_OPERATION();
            v_CDB_OPERATION.ID = id;
            v_CDB_OPERATION.DEAL_ID = dEAL_ID;
            v_CDB_OPERATION.DEAL_NUMBER = dEAL_NUMBER;
            v_CDB_OPERATION.OPERATION_TYPE_ID = oPERATION_TYPE_ID;
            v_CDB_OPERATION.SYS_TIME = sYS_TIME;
            v_CDB_OPERATION.OPERATION_STATE_ID = oPERATION_STATE_ID;
            return v_CDB_OPERATION;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DEAL_ID
        {
            get
            {
                return _DEAL_ID;
            }
            set
            {
                if (_DEAL_ID != value)
                {
                    OnDEAL_IDChanging(value);
                    ReportPropertyChanging("DEAL_ID");
                    _DEAL_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DEAL_ID");
                    OnDEAL_IDChanged();
                }
            }
        }
        private global::System.Int32 _DEAL_ID;
        partial void OnDEAL_IDChanging(global::System.Int32 value);
        partial void OnDEAL_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CLAIM_ID
        {
            get
            {
                return _CLAIM_ID;
            }
            set
            {
                OnCLAIM_IDChanging(value);
                ReportPropertyChanging("CLAIM_ID");
                _CLAIM_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CLAIM_ID");
                OnCLAIM_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _CLAIM_ID;
        partial void OnCLAIM_IDChanging(Nullable<global::System.Int32> value);
        partial void OnCLAIM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DEAL_NUMBER
        {
            get
            {
                return _DEAL_NUMBER;
            }
            set
            {
                if (_DEAL_NUMBER != value)
                {
                    OnDEAL_NUMBERChanging(value);
                    ReportPropertyChanging("DEAL_NUMBER");
                    _DEAL_NUMBER = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DEAL_NUMBER");
                    OnDEAL_NUMBERChanged();
                }
            }
        }
        private global::System.String _DEAL_NUMBER;
        partial void OnDEAL_NUMBERChanging(global::System.String value);
        partial void OnDEAL_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OPERATION_TYPE_ID
        {
            get
            {
                return _OPERATION_TYPE_ID;
            }
            set
            {
                if (_OPERATION_TYPE_ID != value)
                {
                    OnOPERATION_TYPE_IDChanging(value);
                    ReportPropertyChanging("OPERATION_TYPE_ID");
                    _OPERATION_TYPE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OPERATION_TYPE_ID");
                    OnOPERATION_TYPE_IDChanged();
                }
            }
        }
        private global::System.Int16 _OPERATION_TYPE_ID;
        partial void OnOPERATION_TYPE_IDChanging(global::System.Int16 value);
        partial void OnOPERATION_TYPE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OPERATION_TYPE
        {
            get
            {
                return _OPERATION_TYPE;
            }
            set
            {
                OnOPERATION_TYPEChanging(value);
                ReportPropertyChanging("OPERATION_TYPE");
                _OPERATION_TYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OPERATION_TYPE");
                OnOPERATION_TYPEChanged();
            }
        }
        private global::System.String _OPERATION_TYPE;
        partial void OnOPERATION_TYPEChanging(global::System.String value);
        partial void OnOPERATION_TYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SYS_TIME
        {
            get
            {
                return _SYS_TIME;
            }
            set
            {
                if (_SYS_TIME != value)
                {
                    OnSYS_TIMEChanging(value);
                    ReportPropertyChanging("SYS_TIME");
                    _SYS_TIME = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SYS_TIME");
                    OnSYS_TIMEChanged();
                }
            }
        }
        private global::System.DateTime _SYS_TIME;
        partial void OnSYS_TIMEChanging(global::System.DateTime value);
        partial void OnSYS_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OPERATION_STATE_ID
        {
            get
            {
                return _OPERATION_STATE_ID;
            }
            set
            {
                if (_OPERATION_STATE_ID != value)
                {
                    OnOPERATION_STATE_IDChanging(value);
                    ReportPropertyChanging("OPERATION_STATE_ID");
                    _OPERATION_STATE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OPERATION_STATE_ID");
                    OnOPERATION_STATE_IDChanged();
                }
            }
        }
        private global::System.Int16 _OPERATION_STATE_ID;
        partial void OnOPERATION_STATE_IDChanging(global::System.Int16 value);
        partial void OnOPERATION_STATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OPERATION_STATE
        {
            get
            {
                return _OPERATION_STATE;
            }
            set
            {
                OnOPERATION_STATEChanging(value);
                ReportPropertyChanging("OPERATION_STATE");
                _OPERATION_STATE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OPERATION_STATE");
                OnOPERATION_STATEChanged();
            }
        }
        private global::System.String _OPERATION_STATE;
        partial void OnOPERATION_STATEChanging(global::System.String value);
        partial void OnOPERATION_STATEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Areas.CRSOUR.Models", Name="V_CDB_SET_EXPIRY_DATE_CLAIM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CDB_SET_EXPIRY_DATE_CLAIM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CDB_SET_EXPIRY_DATE_CLAIM object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sYS_TIME">Initial value of the SYS_TIME property.</param>
        /// <param name="cLAIM_STATE_ID">Initial value of the CLAIM_STATE_ID property.</param>
        public static V_CDB_SET_EXPIRY_DATE_CLAIM CreateV_CDB_SET_EXPIRY_DATE_CLAIM(global::System.Int32 id, global::System.DateTime sYS_TIME, global::System.Int16 cLAIM_STATE_ID)
        {
            V_CDB_SET_EXPIRY_DATE_CLAIM v_CDB_SET_EXPIRY_DATE_CLAIM = new V_CDB_SET_EXPIRY_DATE_CLAIM();
            v_CDB_SET_EXPIRY_DATE_CLAIM.ID = id;
            v_CDB_SET_EXPIRY_DATE_CLAIM.SYS_TIME = sYS_TIME;
            v_CDB_SET_EXPIRY_DATE_CLAIM.CLAIM_STATE_ID = cLAIM_STATE_ID;
            return v_CDB_SET_EXPIRY_DATE_CLAIM;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DEAL_NUMBER
        {
            get
            {
                return _DEAL_NUMBER;
            }
            set
            {
                OnDEAL_NUMBERChanging(value);
                ReportPropertyChanging("DEAL_NUMBER");
                _DEAL_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DEAL_NUMBER");
                OnDEAL_NUMBERChanged();
            }
        }
        private global::System.String _DEAL_NUMBER;
        partial void OnDEAL_NUMBERChanging(global::System.String value);
        partial void OnDEAL_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EXPIRY_DATE
        {
            get
            {
                return _EXPIRY_DATE;
            }
            set
            {
                OnEXPIRY_DATEChanging(value);
                ReportPropertyChanging("EXPIRY_DATE");
                _EXPIRY_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EXPIRY_DATE");
                OnEXPIRY_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _EXPIRY_DATE;
        partial void OnEXPIRY_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnEXPIRY_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ALLEGRO_COMMENT
        {
            get
            {
                return _ALLEGRO_COMMENT;
            }
            set
            {
                OnALLEGRO_COMMENTChanging(value);
                ReportPropertyChanging("ALLEGRO_COMMENT");
                _ALLEGRO_COMMENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ALLEGRO_COMMENT");
                OnALLEGRO_COMMENTChanged();
            }
        }
        private global::System.String _ALLEGRO_COMMENT;
        partial void OnALLEGRO_COMMENTChanging(global::System.String value);
        partial void OnALLEGRO_COMMENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ALLEGRO_CLAIM_ID
        {
            get
            {
                return _ALLEGRO_CLAIM_ID;
            }
            set
            {
                OnALLEGRO_CLAIM_IDChanging(value);
                ReportPropertyChanging("ALLEGRO_CLAIM_ID");
                _ALLEGRO_CLAIM_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ALLEGRO_CLAIM_ID");
                OnALLEGRO_CLAIM_IDChanged();
            }
        }
        private global::System.String _ALLEGRO_CLAIM_ID;
        partial void OnALLEGRO_CLAIM_IDChanging(global::System.String value);
        partial void OnALLEGRO_CLAIM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SYS_TIME
        {
            get
            {
                return _SYS_TIME;
            }
            set
            {
                if (_SYS_TIME != value)
                {
                    OnSYS_TIMEChanging(value);
                    ReportPropertyChanging("SYS_TIME");
                    _SYS_TIME = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SYS_TIME");
                    OnSYS_TIMEChanged();
                }
            }
        }
        private global::System.DateTime _SYS_TIME;
        partial void OnSYS_TIMEChanging(global::System.DateTime value);
        partial void OnSYS_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CLAIM_STATE_ID
        {
            get
            {
                return _CLAIM_STATE_ID;
            }
            set
            {
                if (_CLAIM_STATE_ID != value)
                {
                    OnCLAIM_STATE_IDChanging(value);
                    ReportPropertyChanging("CLAIM_STATE_ID");
                    _CLAIM_STATE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLAIM_STATE_ID");
                    OnCLAIM_STATE_IDChanged();
                }
            }
        }
        private global::System.Int16 _CLAIM_STATE_ID;
        partial void OnCLAIM_STATE_IDChanging(global::System.Int16 value);
        partial void OnCLAIM_STATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CLAIM_STATE
        {
            get
            {
                return _CLAIM_STATE;
            }
            set
            {
                OnCLAIM_STATEChanging(value);
                ReportPropertyChanging("CLAIM_STATE");
                _CLAIM_STATE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CLAIM_STATE");
                OnCLAIM_STATEChanged();
            }
        }
        private global::System.String _CLAIM_STATE;
        partial void OnCLAIM_STATEChanging(global::System.String value);
        partial void OnCLAIM_STATEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Areas.CRSOUR.Models", Name="V_CDB_SET_INT_RATE_CLAIM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CDB_SET_INT_RATE_CLAIM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CDB_SET_INT_RATE_CLAIM object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="sYS_TIME">Initial value of the SYS_TIME property.</param>
        /// <param name="cLAIM_STATE_ID">Initial value of the CLAIM_STATE_ID property.</param>
        public static V_CDB_SET_INT_RATE_CLAIM CreateV_CDB_SET_INT_RATE_CLAIM(global::System.Int32 id, global::System.DateTime sYS_TIME, global::System.Int16 cLAIM_STATE_ID)
        {
            V_CDB_SET_INT_RATE_CLAIM v_CDB_SET_INT_RATE_CLAIM = new V_CDB_SET_INT_RATE_CLAIM();
            v_CDB_SET_INT_RATE_CLAIM.ID = id;
            v_CDB_SET_INT_RATE_CLAIM.SYS_TIME = sYS_TIME;
            v_CDB_SET_INT_RATE_CLAIM.CLAIM_STATE_ID = cLAIM_STATE_ID;
            return v_CDB_SET_INT_RATE_CLAIM;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DEAL_NUMBER
        {
            get
            {
                return _DEAL_NUMBER;
            }
            set
            {
                OnDEAL_NUMBERChanging(value);
                ReportPropertyChanging("DEAL_NUMBER");
                _DEAL_NUMBER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DEAL_NUMBER");
                OnDEAL_NUMBERChanged();
            }
        }
        private global::System.String _DEAL_NUMBER;
        partial void OnDEAL_NUMBERChanging(global::System.String value);
        partial void OnDEAL_NUMBERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> INTEREST_RATE_DATE
        {
            get
            {
                return _INTEREST_RATE_DATE;
            }
            set
            {
                OnINTEREST_RATE_DATEChanging(value);
                ReportPropertyChanging("INTEREST_RATE_DATE");
                _INTEREST_RATE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INTEREST_RATE_DATE");
                OnINTEREST_RATE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _INTEREST_RATE_DATE;
        partial void OnINTEREST_RATE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnINTEREST_RATE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> INTEREST_RATE
        {
            get
            {
                return _INTEREST_RATE;
            }
            set
            {
                OnINTEREST_RATEChanging(value);
                ReportPropertyChanging("INTEREST_RATE");
                _INTEREST_RATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INTEREST_RATE");
                OnINTEREST_RATEChanged();
            }
        }
        private Nullable<global::System.Decimal> _INTEREST_RATE;
        partial void OnINTEREST_RATEChanging(Nullable<global::System.Decimal> value);
        partial void OnINTEREST_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ALLEGRO_COMMENT
        {
            get
            {
                return _ALLEGRO_COMMENT;
            }
            set
            {
                OnALLEGRO_COMMENTChanging(value);
                ReportPropertyChanging("ALLEGRO_COMMENT");
                _ALLEGRO_COMMENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ALLEGRO_COMMENT");
                OnALLEGRO_COMMENTChanged();
            }
        }
        private global::System.String _ALLEGRO_COMMENT;
        partial void OnALLEGRO_COMMENTChanging(global::System.String value);
        partial void OnALLEGRO_COMMENTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ALLEGRO_CLAIM_ID
        {
            get
            {
                return _ALLEGRO_CLAIM_ID;
            }
            set
            {
                OnALLEGRO_CLAIM_IDChanging(value);
                ReportPropertyChanging("ALLEGRO_CLAIM_ID");
                _ALLEGRO_CLAIM_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ALLEGRO_CLAIM_ID");
                OnALLEGRO_CLAIM_IDChanged();
            }
        }
        private global::System.String _ALLEGRO_CLAIM_ID;
        partial void OnALLEGRO_CLAIM_IDChanging(global::System.String value);
        partial void OnALLEGRO_CLAIM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SYS_TIME
        {
            get
            {
                return _SYS_TIME;
            }
            set
            {
                if (_SYS_TIME != value)
                {
                    OnSYS_TIMEChanging(value);
                    ReportPropertyChanging("SYS_TIME");
                    _SYS_TIME = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SYS_TIME");
                    OnSYS_TIMEChanged();
                }
            }
        }
        private global::System.DateTime _SYS_TIME;
        partial void OnSYS_TIMEChanging(global::System.DateTime value);
        partial void OnSYS_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CLAIM_STATE_ID
        {
            get
            {
                return _CLAIM_STATE_ID;
            }
            set
            {
                if (_CLAIM_STATE_ID != value)
                {
                    OnCLAIM_STATE_IDChanging(value);
                    ReportPropertyChanging("CLAIM_STATE_ID");
                    _CLAIM_STATE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLAIM_STATE_ID");
                    OnCLAIM_STATE_IDChanged();
                }
            }
        }
        private global::System.Int16 _CLAIM_STATE_ID;
        partial void OnCLAIM_STATE_IDChanging(global::System.Int16 value);
        partial void OnCLAIM_STATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CLAIM_STATE
        {
            get
            {
                return _CLAIM_STATE;
            }
            set
            {
                OnCLAIM_STATEChanging(value);
                ReportPropertyChanging("CLAIM_STATE");
                _CLAIM_STATE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CLAIM_STATE");
                OnCLAIM_STATEChanged();
            }
        }
        private global::System.String _CLAIM_STATE;
        partial void OnCLAIM_STATEChanging(global::System.String value);
        partial void OnCLAIM_STATEChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Areas.CRSOUR.Models", Name="V_CDB_TRANSACTION_TRACK")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_CDB_TRANSACTION_TRACK : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_CDB_TRANSACTION_TRACK object.
        /// </summary>
        /// <param name="tRANSACTION_ID">Initial value of the TRANSACTION_ID property.</param>
        /// <param name="tRANSACTION_STATE_ID">Initial value of the TRANSACTION_STATE_ID property.</param>
        public static V_CDB_TRANSACTION_TRACK CreateV_CDB_TRANSACTION_TRACK(global::System.Int32 tRANSACTION_ID, global::System.Int16 tRANSACTION_STATE_ID)
        {
            V_CDB_TRANSACTION_TRACK v_CDB_TRANSACTION_TRACK = new V_CDB_TRANSACTION_TRACK();
            v_CDB_TRANSACTION_TRACK.TRANSACTION_ID = tRANSACTION_ID;
            v_CDB_TRANSACTION_TRACK.TRANSACTION_STATE_ID = tRANSACTION_STATE_ID;
            return v_CDB_TRANSACTION_TRACK;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TRANSACTION_ID
        {
            get
            {
                return _TRANSACTION_ID;
            }
            set
            {
                if (_TRANSACTION_ID != value)
                {
                    OnTRANSACTION_IDChanging(value);
                    ReportPropertyChanging("TRANSACTION_ID");
                    _TRANSACTION_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TRANSACTION_ID");
                    OnTRANSACTION_IDChanged();
                }
            }
        }
        private global::System.Int32 _TRANSACTION_ID;
        partial void OnTRANSACTION_IDChanging(global::System.Int32 value);
        partial void OnTRANSACTION_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 TRANSACTION_STATE_ID
        {
            get
            {
                return _TRANSACTION_STATE_ID;
            }
            set
            {
                if (_TRANSACTION_STATE_ID != value)
                {
                    OnTRANSACTION_STATE_IDChanging(value);
                    ReportPropertyChanging("TRANSACTION_STATE_ID");
                    _TRANSACTION_STATE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TRANSACTION_STATE_ID");
                    OnTRANSACTION_STATE_IDChanged();
                }
            }
        }
        private global::System.Int16 _TRANSACTION_STATE_ID;
        partial void OnTRANSACTION_STATE_IDChanging(global::System.Int16 value);
        partial void OnTRANSACTION_STATE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CLAIM_STATE
        {
            get
            {
                return _CLAIM_STATE;
            }
            set
            {
                OnCLAIM_STATEChanging(value);
                ReportPropertyChanging("CLAIM_STATE");
                _CLAIM_STATE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CLAIM_STATE");
                OnCLAIM_STATEChanged();
            }
        }
        private global::System.String _CLAIM_STATE;
        partial void OnCLAIM_STATEChanging(global::System.String value);
        partial void OnCLAIM_STATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SYS_TIME
        {
            get
            {
                return _SYS_TIME;
            }
            set
            {
                OnSYS_TIMEChanging(value);
                ReportPropertyChanging("SYS_TIME");
                _SYS_TIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SYS_TIME");
                OnSYS_TIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _SYS_TIME;
        partial void OnSYS_TIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnSYS_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TRACKING_COMMENT
        {
            get
            {
                return _TRACKING_COMMENT;
            }
            set
            {
                OnTRACKING_COMMENTChanging(value);
                ReportPropertyChanging("TRACKING_COMMENT");
                _TRACKING_COMMENT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TRACKING_COMMENT");
                OnTRACKING_COMMENTChanged();
            }
        }
        private global::System.String _TRACKING_COMMENT;
        partial void OnTRACKING_COMMENTChanging(global::System.String value);
        partial void OnTRACKING_COMMENTChanged();

        #endregion

    
    }

    #endregion

    
}
