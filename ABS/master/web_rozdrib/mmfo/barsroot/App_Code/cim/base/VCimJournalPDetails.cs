/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace cim
{
    public sealed class VCimJournalPDetailsRecord : BbRecord
    {
        public VCimJournalPDetailsRecord(): base()
        {
            fillFields();
        }
        public VCimJournalPDetailsRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VCimJournalPDetailsRecord(BbDataSource Parent, OracleDecimal RowScn, Decimal? BOUND_ID, Decimal? PAYMENT_TYPE, Decimal? VMD_ID, Decimal? VMD_TYPE, String VMD_TYPE_NAME, String VMD_NUM, DateTime? FILE_DATE, String FILE_NAME, DateTime? ALLOW_DATE, Decimal? KV, Decimal? S_V, Decimal? S_G, String COMMENTS, DateTime? DELETE_DATE)
            : this(Parent)
        {
            this.BOUND_ID = BOUND_ID;
            this.PAYMENT_TYPE = PAYMENT_TYPE;
            this.VMD_ID = VMD_ID;
            this.VMD_TYPE = VMD_TYPE;
            this.VMD_TYPE_NAME = VMD_TYPE_NAME;
            this.VMD_NUM = VMD_NUM;
            this.FILE_DATE = FILE_DATE;
            this.FILE_NAME = FILE_NAME;
            this.ALLOW_DATE = ALLOW_DATE;
            this.KV = KV;
            this.S_V = S_V;
            this.S_G = S_G;
            this.COMMENTS = COMMENTS;
            this.DELETE_DATE = DELETE_DATE;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("BOUND_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Id прив`язки"));
            Fields.Add( new BbField("PAYMENT_TYPE", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Тип платежу"));
            Fields.Add( new BbField("VMD_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "id ВМД"));
            Fields.Add( new BbField("VMD_TYPE", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Тип ВМД"));
            Fields.Add( new BbField("VMD_TYPE_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Назва типу ВМД"));
            Fields.Add( new BbField("VMD_NUM", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Номер ВМД"));
            Fields.Add( new BbField("FILE_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Дата файлу реєстру"));
            Fields.Add( new BbField("FILE_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Ім`я файлу (номер) реєстру"));
            Fields.Add( new BbField("ALLOW_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Дата дозволу"));
            Fields.Add( new BbField("KV", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Код валюти товару"));
            Fields.Add( new BbField("S_V", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Сума у валюті"));
            Fields.Add( new BbField("S_G", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Сума у гривні"));
            Fields.Add( new BbField("COMMENTS", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Примітка"));
            Fields.Add( new BbField("DELETE_DATE", OracleDbType.Date, true, false, false, false, false, "V_CIM_JOURNAL_P_DETAILS", ObjectTypes.View, "ДОДАТКОВІ СТРІЧКИ ЖУРНАЛУ ПЛАТЕЖІВ", "Дата видалення"));        
        }
        public Decimal? BOUND_ID { get { return (Decimal?)FindField("BOUND_ID").Value; } set {SetField("BOUND_ID", value);} }
        public Decimal? PAYMENT_TYPE { get { return (Decimal?)FindField("PAYMENT_TYPE").Value; } set {SetField("PAYMENT_TYPE", value);} }
        public Decimal? VMD_ID { get { return (Decimal?)FindField("VMD_ID").Value; } set {SetField("VMD_ID", value);} }
        public Decimal? VMD_TYPE { get { return (Decimal?)FindField("VMD_TYPE").Value; } set {SetField("VMD_TYPE", value);} }
        public String VMD_TYPE_NAME { get { return (String)FindField("VMD_TYPE_NAME").Value; } set {SetField("VMD_TYPE_NAME", value);} }
        public String VMD_NUM { get { return (String)FindField("VMD_NUM").Value; } set {SetField("VMD_NUM", value);} }
        public DateTime? FILE_DATE { get { return (DateTime?)FindField("FILE_DATE").Value; } set {SetField("FILE_DATE", value);} }
        public String FILE_NAME { get { return (String)FindField("FILE_NAME").Value; } set {SetField("FILE_NAME", value);} }
        public DateTime? ALLOW_DATE { get { return (DateTime?)FindField("ALLOW_DATE").Value; } set {SetField("ALLOW_DATE", value);} }
        public Decimal? KV { get { return (Decimal?)FindField("KV").Value; } set {SetField("KV", value);} }
        public Decimal? S_V { get { return (Decimal?)FindField("S_V").Value; } set {SetField("S_V", value);} }
        public Decimal? S_G { get { return (Decimal?)FindField("S_G").Value; } set {SetField("S_G", value);} }
        public String COMMENTS { get { return (String)FindField("COMMENTS").Value; } set {SetField("COMMENTS", value);} }
        public DateTime? DELETE_DATE { get { return (DateTime?)FindField("DELETE_DATE").Value; } set {SetField("DELETE_DATE", value);} }
    }

    public sealed class VCimJournalPDetailsFilters : BbFilters
    {
        public VCimJournalPDetailsFilters(BbDataSource Parent) : base (Parent)
        {
            BOUND_ID = new BBDecimalFilter(this, "BOUND_ID");
            PAYMENT_TYPE = new BBDecimalFilter(this, "PAYMENT_TYPE");
            VMD_ID = new BBDecimalFilter(this, "VMD_ID");
            VMD_TYPE = new BBDecimalFilter(this, "VMD_TYPE");
            VMD_TYPE_NAME = new BBVarchar2Filter(this, "VMD_TYPE_NAME");
            VMD_NUM = new BBVarchar2Filter(this, "VMD_NUM");
            FILE_DATE = new BBDateFilter(this, "FILE_DATE");
            FILE_NAME = new BBVarchar2Filter(this, "FILE_NAME");
            ALLOW_DATE = new BBDateFilter(this, "ALLOW_DATE");
            KV = new BBDecimalFilter(this, "KV");
            S_V = new BBDecimalFilter(this, "S_V");
            S_G = new BBDecimalFilter(this, "S_G");
            COMMENTS = new BBVarchar2Filter(this, "COMMENTS");
            DELETE_DATE = new BBDateFilter(this, "DELETE_DATE");
        }
        public BBDecimalFilter BOUND_ID;
        public BBDecimalFilter PAYMENT_TYPE;
        public BBDecimalFilter VMD_ID;
        public BBDecimalFilter VMD_TYPE;
        public BBVarchar2Filter VMD_TYPE_NAME;
        public BBVarchar2Filter VMD_NUM;
        public BBDateFilter FILE_DATE;
        public BBVarchar2Filter FILE_NAME;
        public BBDateFilter ALLOW_DATE;
        public BBDecimalFilter KV;
        public BBDecimalFilter S_V;
        public BBDecimalFilter S_G;
        public BBVarchar2Filter COMMENTS;
        public BBDateFilter DELETE_DATE;
    }

    public partial class VCimJournalPDetails : BbTable<VCimJournalPDetailsRecord, VCimJournalPDetailsFilters>
    {
        public VCimJournalPDetails() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VCimJournalPDetails(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VCimJournalPDetailsRecord> Select(VCimJournalPDetailsRecord Item)
        {
            List<VCimJournalPDetailsRecord> res = new List<VCimJournalPDetailsRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VCimJournalPDetailsRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (Decimal?)null : Convert.ToDecimal(rdr[1]), 
                        rdr.IsDBNull(2) ?  (Decimal?)null : Convert.ToDecimal(rdr[2]), 
                        rdr.IsDBNull(3) ?  (Decimal?)null : Convert.ToDecimal(rdr[3]), 
                        rdr.IsDBNull(4) ?  (Decimal?)null : Convert.ToDecimal(rdr[4]), 
                        rdr.IsDBNull(5) ?  (String)null : Convert.ToString(rdr[5]), 
                        rdr.IsDBNull(6) ?  (String)null : Convert.ToString(rdr[6]), 
                        rdr.IsDBNull(7) ?  (DateTime?)null : Convert.ToDateTime(rdr[7]), 
                        rdr.IsDBNull(8) ?  (String)null : Convert.ToString(rdr[8]), 
                        rdr.IsDBNull(9) ?  (DateTime?)null : Convert.ToDateTime(rdr[9]), 
                        rdr.IsDBNull(10) ?  (Decimal?)null : Convert.ToDecimal(rdr[10]), 
                        rdr.IsDBNull(11) ?  (Decimal?)null : Convert.ToDecimal(rdr[11]), 
                        rdr.IsDBNull(12) ?  (Decimal?)null : Convert.ToDecimal(rdr[12]), 
                        rdr.IsDBNull(13) ?  (String)null : Convert.ToString(rdr[13]), 
                        rdr.IsDBNull(14) ?  (DateTime?)null : Convert.ToDateTime(rdr[14]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}