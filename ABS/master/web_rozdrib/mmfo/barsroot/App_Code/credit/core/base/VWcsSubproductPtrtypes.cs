/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace credit
{
    public sealed class VWcsSubproductPtrtypesRecord : BbRecord
    {
        public VWcsSubproductPtrtypesRecord(): base()
        {
            fillFields();
        }
        public VWcsSubproductPtrtypesRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VWcsSubproductPtrtypesRecord(BbDataSource Parent, OracleDecimal RowScn, String SUBPRODUCT_ID, String PTR_TYPE_ID, String PTR_TYPE_NAME)
            : this(Parent)
        {
            this.SUBPRODUCT_ID = SUBPRODUCT_ID;
            this.PTR_TYPE_ID = PTR_TYPE_ID;
            this.PTR_TYPE_NAME = PTR_TYPE_NAME;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("SUBPRODUCT_ID", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SUBPRODUCT_PTRTYPES", ObjectTypes.View, "Привязка типов торговцев партнеров к суб-продукту (Представление)", "Идентификатор субродукта"));
            Fields.Add( new BbField("PTR_TYPE_ID", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SUBPRODUCT_PTRTYPES", ObjectTypes.View, "Привязка типов торговцев партнеров к суб-продукту (Представление)", "Идентификатор типа торговца партнера"));
            Fields.Add( new BbField("PTR_TYPE_NAME", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SUBPRODUCT_PTRTYPES", ObjectTypes.View, "Привязка типов торговцев партнеров к суб-продукту (Представление)", "Наименование типа торговца партнера"));        
        }
        public String SUBPRODUCT_ID { get { return (String)FindField("SUBPRODUCT_ID").Value; } set {SetField("SUBPRODUCT_ID", value);} }
        public String PTR_TYPE_ID { get { return (String)FindField("PTR_TYPE_ID").Value; } set {SetField("PTR_TYPE_ID", value);} }
        public String PTR_TYPE_NAME { get { return (String)FindField("PTR_TYPE_NAME").Value; } set {SetField("PTR_TYPE_NAME", value);} }
    }

    public sealed class VWcsSubproductPtrtypesFilters : BbFilters
    {
        public VWcsSubproductPtrtypesFilters(BbDataSource Parent) : base (Parent)
        {
            SUBPRODUCT_ID = new BBVarchar2Filter(this, "SUBPRODUCT_ID");
            PTR_TYPE_ID = new BBVarchar2Filter(this, "PTR_TYPE_ID");
            PTR_TYPE_NAME = new BBVarchar2Filter(this, "PTR_TYPE_NAME");
        }
        public BBVarchar2Filter SUBPRODUCT_ID;
        public BBVarchar2Filter PTR_TYPE_ID;
        public BBVarchar2Filter PTR_TYPE_NAME;
    }

    public partial class VWcsSubproductPtrtypes : BbTable<VWcsSubproductPtrtypesRecord, VWcsSubproductPtrtypesFilters>
    {
        public VWcsSubproductPtrtypes() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VWcsSubproductPtrtypes(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VWcsSubproductPtrtypesRecord> Select(VWcsSubproductPtrtypesRecord Item)
        {
            List<VWcsSubproductPtrtypesRecord> res = new List<VWcsSubproductPtrtypesRecord>();
                        OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VWcsSubproductPtrtypesRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]))
                    );
                }
            }
                        finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}