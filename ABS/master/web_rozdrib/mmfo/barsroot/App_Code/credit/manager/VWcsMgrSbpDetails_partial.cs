/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace credit
{
    public partial class VWcsMgrSbpDetails
    {
        public List<VWcsMgrSbpDetailsRecord> SelectMgrSbpDetails(String PRODUCT_ID)
        {
            this.Filter.PRODUCT_ID.Equal(PRODUCT_ID);
            return Select();
        }
        public List<VWcsMgrSbpDetailsRecord> FindMgrSbpDetails(String PRODUCT_ID, Decimal? PropertyCost, Decimal? CreditSum, Decimal? OwnFunds, Decimal? CreditTerm, String CreditCurrency, String GARANTEE_ID)
        {
            // продукт
            if (!String.IsNullOrEmpty(PRODUCT_ID))
                this.Filter.PRODUCT_ID.Equal(PRODUCT_ID);

            Decimal? propertyCost = PropertyCost;
            Decimal? creditSum = CreditSum;
            Decimal? ownFunds = OwnFunds;

            // заполнен только один параметр
            if (propertyCost.HasValue && !creditSum.HasValue && !ownFunds.HasValue)
            {
                creditSum = propertyCost;
                ownFunds = 0;
            }
            if (!propertyCost.HasValue && creditSum.HasValue && !ownFunds.HasValue)
            {
                propertyCost = creditSum;
                ownFunds = 0;
            }

            // заполнено два параметра
            if (propertyCost.HasValue && creditSum.HasValue && !ownFunds.HasValue)
            {
                ownFunds = propertyCost - creditSum;
            }
            if (propertyCost.HasValue && !creditSum.HasValue && ownFunds.HasValue)
            {
                creditSum = propertyCost - ownFunds;
            }
            if (!propertyCost.HasValue && creditSum.HasValue && ownFunds.HasValue)
            {
                propertyCost = creditSum + ownFunds;
            }

            // стоимость имущества
            if (propertyCost.HasValue && creditSum.HasValue && ownFunds.HasValue)
            {

                Decimal SumInitial = ownFunds.Value / propertyCost.Value * 100;

                this.Filter.SUM_INITIAL_MIN.LessEqual(SumInitial);
                this.Filter.SUM_INITIAL_MAX.GreaterEqual(SumInitial);

                this.Filter.SUM_MIN.LessEqual(creditSum);
                this.Filter.SUM_MAX.GreaterEqual(creditSum);
            }

            // срок
            if (CreditTerm.HasValue)
            {
                this.Filter.TERM_MIN.LessEqual(CreditTerm);
                this.Filter.TERM_MAX.GreaterEqual(CreditTerm);
            }

            // валюта
            if (!String.IsNullOrEmpty(CreditCurrency))
                this.Filter.CURRENCY.LikeBoth(CreditCurrency);

            // обеспечение
            if (!String.IsNullOrEmpty(GARANTEE_ID))
            {
                String GARANTEE_NAME = (new VWcsGarantees()).SelectGarantee(GARANTEE_ID)[0].GARANTEE_NAME;
                this.Filter.GARANTEES.LikeBoth(GARANTEE_NAME);
            }

            return Select();
        }
    }
}