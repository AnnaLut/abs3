//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.5448
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="PVBKI-Passport-Web-ServiceSoap", Namespace="https://service.pvbki.com/passport")]
public partial class PVBKIPassportWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback DescriptionOperationCompleted;
    
    private AdaptiveTuningHeader adaptiveTuningField;
    
    private InnerAuthHeader innerAuthenticationField;
    
    private OuterAuthHeader outerAuthenticationField;
    
    private BackErrorHeader backErrorField;
    
    private ResultEscortHeader backResultField;
    
    private System.Threading.SendOrPostCallback TouchOperationCompleted;
    
    private InvokeEscortHeader passInvokeField;
    
    private System.Threading.SendOrPostCallback TestRequestToMVDOperationCompleted;
    
    private System.Threading.SendOrPostCallback RequestToMVDOperationCompleted;
    
    private System.Threading.SendOrPostCallback FreshMVDNotifyOperationCompleted;
    
    /// <remarks/>
    public PVBKIPassportWebService() {
        this.Url = "https://service.pvbki.com:4443/passport-service/default.asmx";
    }
    
    public AdaptiveTuningHeader AdaptiveTuning {
        get {
            return this.adaptiveTuningField;
        }
        set {
            this.adaptiveTuningField = value;
        }
    }
    
    public InnerAuthHeader InnerAuthentication {
        get {
            return this.innerAuthenticationField;
        }
        set {
            this.innerAuthenticationField = value;
        }
    }
    
    public OuterAuthHeader OuterAuthentication {
        get {
            return this.outerAuthenticationField;
        }
        set {
            this.outerAuthenticationField = value;
        }
    }
    
    public BackErrorHeader BackError {
        get {
            return this.backErrorField;
        }
        set {
            this.backErrorField = value;
        }
    }
    
    public ResultEscortHeader BackResult {
        get {
            return this.backResultField;
        }
        set {
            this.backResultField = value;
        }
    }
    
    public InvokeEscortHeader PassInvoke {
        get {
            return this.passInvokeField;
        }
        set {
            this.passInvokeField = value;
        }
    }
    
    /// <remarks/>
    public event DescriptionCompletedEventHandler DescriptionCompleted;
    
    /// <remarks/>
    public event TouchCompletedEventHandler TouchCompleted;
    
    /// <remarks/>
    public event TestRequestToMVDCompletedEventHandler TestRequestToMVDCompleted;
    
    /// <remarks/>
    public event RequestToMVDCompletedEventHandler RequestToMVDCompleted;
    
    /// <remarks/>
    public event FreshMVDNotifyCompletedEventHandler FreshMVDNotifyCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/passport/SimpleAuthLess", RequestElementName="SimpleAuthLess", RequestNamespace="https://service.pvbki.com/passport", ResponseElementName="SimpleAuthLessResponse", ResponseNamespace="https://service.pvbki.com/passport", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("SimpleAuthLessResult")]
    public string Description() {
        object[] results = this.Invoke("Description", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDescription(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Description", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndDescription(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void DescriptionAsync() {
        this.DescriptionAsync(null);
    }
    
    /// <remarks/>
    public void DescriptionAsync(object userState) {
        if ((this.DescriptionOperationCompleted == null)) {
            this.DescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDescriptionOperationCompleted);
        }
        this.InvokeAsync("Description", new object[0], this.DescriptionOperationCompleted, userState);
    }
    
    private void OnDescriptionOperationCompleted(object arg) {
        if ((this.DescriptionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DescriptionCompleted(this, new DescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("BackResult", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
    [System.Web.Services.Protocols.SoapHeaderAttribute("AdaptiveTuning", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
    [System.Web.Services.Protocols.SoapHeaderAttribute("OuterAuthentication")]
    [System.Web.Services.Protocols.SoapHeaderAttribute("BackError", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
    [System.Web.Services.Protocols.SoapHeaderAttribute("InnerAuthentication")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/passport/TouchAuthOnly", RequestElementName="TouchAuthOnly", RequestNamespace="https://service.pvbki.com/passport", ResponseElementName="TouchAuthOnlyResponse", ResponseNamespace="https://service.pvbki.com/passport", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void Touch() {
        this.Invoke("Touch", new object[0]);
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTouch(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Touch", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public void EndTouch(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void TouchAsync() {
        this.TouchAsync(null);
    }
    
    /// <remarks/>
    public void TouchAsync(object userState) {
        if ((this.TouchOperationCompleted == null)) {
            this.TouchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTouchOperationCompleted);
        }
        this.InvokeAsync("Touch", new object[0], this.TouchOperationCompleted, userState);
    }
    
    private void OnTouchOperationCompleted(object arg) {
        if ((this.TouchCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TouchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("PassInvoke")]
    [System.Web.Services.Protocols.SoapHeaderAttribute("BackResult", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
    [System.Web.Services.Protocols.SoapHeaderAttribute("AdaptiveTuning", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
    [System.Web.Services.Protocols.SoapHeaderAttribute("OuterAuthentication")]
    [System.Web.Services.Protocols.SoapHeaderAttribute("BackError", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
    [System.Web.Services.Protocols.SoapHeaderAttribute("InnerAuthentication")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/passport/MVD-Request-TestOnly", RequestElementName="MVD-Request-TestOnly", RequestNamespace="https://service.pvbki.com/passport", ResponseElementName="MVD-Request-TestOnlyResponse", ResponseNamespace="https://service.pvbki.com/passport", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("MVD-Request-TestOnlyResult", DataType="hexBinary")]
    public byte[] TestRequestToMVD([System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary")] byte[] request) {
        object[] results = this.Invoke("TestRequestToMVD", new object[] {
                    request});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTestRequestToMVD(byte[] request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TestRequestToMVD", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EndTestRequestToMVD(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void TestRequestToMVDAsync(byte[] request) {
        this.TestRequestToMVDAsync(request, null);
    }
    
    /// <remarks/>
    public void TestRequestToMVDAsync(byte[] request, object userState) {
        if ((this.TestRequestToMVDOperationCompleted == null)) {
            this.TestRequestToMVDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestRequestToMVDOperationCompleted);
        }
        this.InvokeAsync("TestRequestToMVD", new object[] {
                    request}, this.TestRequestToMVDOperationCompleted, userState);
    }
    
    private void OnTestRequestToMVDOperationCompleted(object arg) {
        if ((this.TestRequestToMVDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TestRequestToMVDCompleted(this, new TestRequestToMVDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("PassInvoke")]
    [System.Web.Services.Protocols.SoapHeaderAttribute("BackResult", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
    [System.Web.Services.Protocols.SoapHeaderAttribute("AdaptiveTuning", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
    [System.Web.Services.Protocols.SoapHeaderAttribute("OuterAuthentication")]
    [System.Web.Services.Protocols.SoapHeaderAttribute("BackError", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
    [System.Web.Services.Protocols.SoapHeaderAttribute("InnerAuthentication")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/passport/MVD-Request", RequestElementName="MVD-Request", RequestNamespace="https://service.pvbki.com/passport", ResponseElementName="MVD-RequestResponse", ResponseNamespace="https://service.pvbki.com/passport", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("MVD-RequestResult", DataType="hexBinary")]
    public byte[] RequestToMVD([System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary")] byte[] request) {
        object[] results = this.Invoke("RequestToMVD", new object[] {
                    request});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRequestToMVD(byte[] request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RequestToMVD", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EndRequestToMVD(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void RequestToMVDAsync(byte[] request) {
        this.RequestToMVDAsync(request, null);
    }
    
    /// <remarks/>
    public void RequestToMVDAsync(byte[] request, object userState) {
        if ((this.RequestToMVDOperationCompleted == null)) {
            this.RequestToMVDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestToMVDOperationCompleted);
        }
        this.InvokeAsync("RequestToMVD", new object[] {
                    request}, this.RequestToMVDOperationCompleted, userState);
    }
    
    private void OnRequestToMVDOperationCompleted(object arg) {
        if ((this.RequestToMVDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RequestToMVDCompleted(this, new RequestToMVDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("BackResult", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
    [System.Web.Services.Protocols.SoapHeaderAttribute("AdaptiveTuning", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
    [System.Web.Services.Protocols.SoapHeaderAttribute("OuterAuthentication")]
    [System.Web.Services.Protocols.SoapHeaderAttribute("BackError", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
    [System.Web.Services.Protocols.SoapHeaderAttribute("InnerAuthentication")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/passport/MVD-Notify", RequestElementName="MVD-Notify", RequestNamespace="https://service.pvbki.com/passport", ResponseElementName="MVD-NotifyResponse", ResponseNamespace="https://service.pvbki.com/passport", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("MVD-NotifyResult", DataType="hexBinary")]
    public byte[] FreshMVDNotify(int parcel) {
        object[] results = this.Invoke("FreshMVDNotify", new object[] {
                    parcel});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginFreshMVDNotify(int parcel, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("FreshMVDNotify", new object[] {
                    parcel}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EndFreshMVDNotify(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void FreshMVDNotifyAsync(int parcel) {
        this.FreshMVDNotifyAsync(parcel, null);
    }
    
    /// <remarks/>
    public void FreshMVDNotifyAsync(int parcel, object userState) {
        if ((this.FreshMVDNotifyOperationCompleted == null)) {
            this.FreshMVDNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFreshMVDNotifyOperationCompleted);
        }
        this.InvokeAsync("FreshMVDNotify", new object[] {
                    parcel}, this.FreshMVDNotifyOperationCompleted, userState);
    }
    
    private void OnFreshMVDNotifyOperationCompleted(object arg) {
        if ((this.FreshMVDNotifyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FreshMVDNotifyCompleted(this, new FreshMVDNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="https://service.pvbki.com/passport")]
[System.Xml.Serialization.XmlRootAttribute("PassInvoke", Namespace="https://service.pvbki.com/passport", IsNullable=false)]
public partial class InvokeEscortHeader : System.Web.Services.Protocols.SoapHeader {
    
    private uint passedField;
    
    private uint maxErrorsField;
    
    private System.Xml.XmlAttribute[] anyAttrField;
    
    /// <remarks/>
    public uint Passed {
        get {
            return this.passedField;
        }
        set {
            this.passedField = value;
        }
    }
    
    /// <remarks/>
    public uint MaxErrors {
        get {
            return this.maxErrorsField;
        }
        set {
            this.maxErrorsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public System.Xml.XmlAttribute[] AnyAttr {
        get {
            return this.anyAttrField;
        }
        set {
            this.anyAttrField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="https://service.pvbki.com/passport")]
[System.Xml.Serialization.XmlRootAttribute("BackResult", Namespace="https://service.pvbki.com/passport", IsNullable=false)]
public partial class ResultEscortHeader : System.Web.Services.Protocols.SoapHeader {
    
    private int identityField;
    
    private uint recognizedField;
    
    private uint acceptedField;
    
    private uint rejectedField;
    
    private int resultField;
    
    private ulong statusCodeField;
    
    private string simpleField;
    
    private System.Xml.XmlNode complexField;
    
    private System.Xml.XmlAttribute[] anyAttrField;
    
    /// <remarks/>
    public int Identity {
        get {
            return this.identityField;
        }
        set {
            this.identityField = value;
        }
    }
    
    /// <remarks/>
    public uint Recognized {
        get {
            return this.recognizedField;
        }
        set {
            this.recognizedField = value;
        }
    }
    
    /// <remarks/>
    public uint Accepted {
        get {
            return this.acceptedField;
        }
        set {
            this.acceptedField = value;
        }
    }
    
    /// <remarks/>
    public uint Rejected {
        get {
            return this.rejectedField;
        }
        set {
            this.rejectedField = value;
        }
    }
    
    /// <remarks/>
    public int Result {
        get {
            return this.resultField;
        }
        set {
            this.resultField = value;
        }
    }
    
    /// <remarks/>
    public ulong StatusCode {
        get {
            return this.statusCodeField;
        }
        set {
            this.statusCodeField = value;
        }
    }
    
    /// <remarks/>
    public string Simple {
        get {
            return this.simpleField;
        }
        set {
            this.simpleField = value;
        }
    }
    
    /// <remarks/>
    public System.Xml.XmlNode Complex {
        get {
            return this.complexField;
        }
        set {
            this.complexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public System.Xml.XmlAttribute[] AnyAttr {
        get {
            return this.anyAttrField;
        }
        set {
            this.anyAttrField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="https://service.pvbki.com/passport")]
[System.Xml.Serialization.XmlRootAttribute("AdaptiveTuning", Namespace="https://service.pvbki.com/passport", IsNullable=false)]
public partial class AdaptiveTuningHeader : System.Web.Services.Protocols.SoapHeader {
    
    private int cultureField;
    
    private string oSInfoField;
    
    private string runtimeVersionField;
    
    private string ipAddressField;
    
    private SoapProtocolVersion soapVersionField;
    
    private string userAgentField;
    
    private long requestSizeField;
    
    private System.Xml.XmlAttribute[] anyAttrField;
    
    /// <remarks/>
    public int Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    public string OSInfo {
        get {
            return this.oSInfoField;
        }
        set {
            this.oSInfoField = value;
        }
    }
    
    /// <remarks/>
    public string RuntimeVersion {
        get {
            return this.runtimeVersionField;
        }
        set {
            this.runtimeVersionField = value;
        }
    }
    
    /// <remarks/>
    public string IpAddress {
        get {
            return this.ipAddressField;
        }
        set {
            this.ipAddressField = value;
        }
    }
    
    /// <remarks/>
    public SoapProtocolVersion SoapVersion {
        get {
            return this.soapVersionField;
        }
        set {
            this.soapVersionField = value;
        }
    }
    
    /// <remarks/>
    public string UserAgent {
        get {
            return this.userAgentField;
        }
        set {
            this.userAgentField = value;
        }
    }
    
    /// <remarks/>
    public long RequestSize {
        get {
            return this.requestSizeField;
        }
        set {
            this.requestSizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public System.Xml.XmlAttribute[] AnyAttr {
        get {
            return this.anyAttrField;
        }
        set {
            this.anyAttrField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="https://service.pvbki.com/passport")]
public enum SoapProtocolVersion {
    
    /// <remarks/>
    Default,
    
    /// <remarks/>
    Soap11,
    
    /// <remarks/>
    Soap12,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="https://service.pvbki.com/passport")]
[System.Xml.Serialization.XmlRootAttribute("OuterAuthentication", Namespace="https://service.pvbki.com/passport", IsNullable=false)]
public partial class OuterAuthHeader : System.Web.Services.Protocols.SoapHeader {
    
    private string nameField;
    
    private byte[] credentialField;
    
    private System.Xml.XmlAttribute[] anyAttrField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary")]
    public byte[] Credential {
        get {
            return this.credentialField;
        }
        set {
            this.credentialField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public System.Xml.XmlAttribute[] AnyAttr {
        get {
            return this.anyAttrField;
        }
        set {
            this.anyAttrField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="https://service.pvbki.com/passport")]
[System.Xml.Serialization.XmlRootAttribute("BackError", Namespace="https://service.pvbki.com/passport", IsNullable=false)]
public partial class BackErrorHeader : System.Web.Services.Protocols.SoapHeader {
    
    private long faultCodeField;
    
    private string faultTypeField;
    
    private string faultMessageField;
    
    private System.Xml.XmlAttribute[] anyAttrField;
    
    /// <remarks/>
    public long FaultCode {
        get {
            return this.faultCodeField;
        }
        set {
            this.faultCodeField = value;
        }
    }
    
    /// <remarks/>
    public string FaultType {
        get {
            return this.faultTypeField;
        }
        set {
            this.faultTypeField = value;
        }
    }
    
    /// <remarks/>
    public string FaultMessage {
        get {
            return this.faultMessageField;
        }
        set {
            this.faultMessageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public System.Xml.XmlAttribute[] AnyAttr {
        get {
            return this.anyAttrField;
        }
        set {
            this.anyAttrField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="https://service.pvbki.com/passport")]
[System.Xml.Serialization.XmlRootAttribute("InnerAuthentication", Namespace="https://service.pvbki.com/passport", IsNullable=false)]
public partial class InnerAuthHeader : System.Web.Services.Protocols.SoapHeader {
    
    private int abonentField;
    
    private string userNameField;
    
    private string passwordField;
    
    private System.Xml.XmlAttribute[] anyAttrField;
    
    /// <remarks/>
    public int Abonent {
        get {
            return this.abonentField;
        }
        set {
            this.abonentField = value;
        }
    }
    
    /// <remarks/>
    public string UserName {
        get {
            return this.userNameField;
        }
        set {
            this.userNameField = value;
        }
    }
    
    /// <remarks/>
    public string Password {
        get {
            return this.passwordField;
        }
        set {
            this.passwordField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public System.Xml.XmlAttribute[] AnyAttr {
        get {
            return this.anyAttrField;
        }
        set {
            this.anyAttrField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void DescriptionCompletedEventHandler(object sender, DescriptionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void TouchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void TestRequestToMVDCompletedEventHandler(object sender, TestRequestToMVDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TestRequestToMVDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TestRequestToMVDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void RequestToMVDCompletedEventHandler(object sender, RequestToMVDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RequestToMVDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RequestToMVDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void FreshMVDNotifyCompletedEventHandler(object sender, FreshMVDNotifyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FreshMVDNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal FreshMVDNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}
