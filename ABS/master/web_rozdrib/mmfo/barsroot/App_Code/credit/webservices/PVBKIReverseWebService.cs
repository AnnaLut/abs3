//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.5485
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
namespace PVBKIReservService {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PVBKI-Reverse-Web-ServiceSoap", Namespace="https://service.pvbki.com/reverse")]
    public partial class PVBKIReverseWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DescriptionOperationCompleted;
        
        private AuthCredentialHeader authenticationCredentialField;
        
        private AuthIdentityHeader authenticationIdentityField;
        
        private BackErrorHeader backErrorField;
        
        private InvokeTuningHeader invokeReflectionField;
        
        private System.Threading.SendOrPostCallback TouchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback DictionaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback TranslationOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback SummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FCBankStatementOperationCompleted;
        
        /// <remarks/>
        public PVBKIReverseWebService() {
            this.Url = "https://test.pvbki.com/reverse-service/Default.asmx";
        }
        
        public AuthCredentialHeader AuthenticationCredential {
            get {
                return this.authenticationCredentialField;
            }
            set {
                this.authenticationCredentialField = value;
            }
        }
        
        public AuthIdentityHeader AuthenticationIdentity {
            get {
                return this.authenticationIdentityField;
            }
            set {
                this.authenticationIdentityField = value;
            }
        }
        
        public BackErrorHeader BackError {
            get {
                return this.backErrorField;
            }
            set {
                this.backErrorField = value;
            }
        }
        
        public InvokeTuningHeader InvokeReflection {
            get {
                return this.invokeReflectionField;
            }
            set {
                this.invokeReflectionField = value;
            }
        }
        
        /// <remarks/>
        public event DescriptionCompletedEventHandler DescriptionCompleted;
        
        /// <remarks/>
        public event TouchCompletedEventHandler TouchCompleted;
        
        /// <remarks/>
        public event SchemaCompletedEventHandler SchemaCompleted;
        
        /// <remarks/>
        public event DictionaryCompletedEventHandler DictionaryCompleted;
        
        /// <remarks/>
        public event TranslationCompletedEventHandler TranslationCompleted;
        
        /// <remarks/>
        public event StatementCompletedEventHandler StatementCompleted;
        
        /// <remarks/>
        public event SummaryCompletedEventHandler SummaryCompleted;
        
        /// <remarks/>
        public event FCBankStatementCompletedEventHandler FCBankStatementCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/reverse/SimpleAuthLess", RequestElementName="SimpleAuthLess", RequestNamespace="https://service.pvbki.com/reverse", ResponseElementName="SimpleAuthLessResponse", ResponseNamespace="https://service.pvbki.com/reverse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SimpleAuthLessResult")]
        public string Description() {
            object[] results = this.Invoke("Description", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDescription(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Description", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDescription(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DescriptionAsync() {
            this.DescriptionAsync(null);
        }
        
        /// <remarks/>
        public void DescriptionAsync(object userState) {
            if ((this.DescriptionOperationCompleted == null)) {
                this.DescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDescriptionOperationCompleted);
            }
            this.InvokeAsync("Description", new object[0], this.DescriptionOperationCompleted, userState);
        }
        
        private void OnDescriptionOperationCompleted(object arg) {
            if ((this.DescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DescriptionCompleted(this, new DescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("InvokeReflection", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationIdentity")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationCredential")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BackError", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/reverse/TouchAuthOnly", RequestElementName="TouchAuthOnly", RequestNamespace="https://service.pvbki.com/reverse", ResponseElementName="TouchAuthOnlyResponse", ResponseNamespace="https://service.pvbki.com/reverse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Touch() {
            this.Invoke("Touch", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTouch(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Touch", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndTouch(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void TouchAsync() {
            this.TouchAsync(null);
        }
        
        /// <remarks/>
        public void TouchAsync(object userState) {
            if ((this.TouchOperationCompleted == null)) {
                this.TouchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTouchOperationCompleted);
            }
            this.InvokeAsync("Touch", new object[0], this.TouchOperationCompleted, userState);
        }
        
        private void OnTouchOperationCompleted(object arg) {
            if ((this.TouchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TouchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("InvokeReflection", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationIdentity")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationCredential")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BackError", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/reverse/Schema-Definition", RequestElementName="Schema-Definition", RequestNamespace="https://service.pvbki.com/reverse", ResponseElementName="Schema-DefinitionResponse", ResponseNamespace="https://service.pvbki.com/reverse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Schema-DefinitionResult", DataType="hexBinary")]
        public byte[] Schema(string ReportName, string SchemaName) {
            object[] results = this.Invoke("Schema", new object[] {
                        ReportName,
                        SchemaName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSchema(string ReportName, string SchemaName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Schema", new object[] {
                        ReportName,
                        SchemaName}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndSchema(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void SchemaAsync(string ReportName, string SchemaName) {
            this.SchemaAsync(ReportName, SchemaName, null);
        }
        
        /// <remarks/>
        public void SchemaAsync(string ReportName, string SchemaName, object userState) {
            if ((this.SchemaOperationCompleted == null)) {
                this.SchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSchemaOperationCompleted);
            }
            this.InvokeAsync("Schema", new object[] {
                        ReportName,
                        SchemaName}, this.SchemaOperationCompleted, userState);
        }
        
        private void OnSchemaOperationCompleted(object arg) {
            if ((this.SchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SchemaCompleted(this, new SchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("InvokeReflection", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationIdentity")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationCredential")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BackError", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/reverse/Report-Vocabulary", RequestElementName="Report-Vocabulary", RequestNamespace="https://service.pvbki.com/reverse", ResponseElementName="Report-VocabularyResponse", ResponseNamespace="https://service.pvbki.com/reverse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Report-VocabularyResult", DataType="hexBinary")]
        public byte[] Dictionary(string ReportName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DAV) {
            object[] results = this.Invoke("Dictionary", new object[] {
                        ReportName,
                        DAV});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDictionary(string ReportName, string DAV, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Dictionary", new object[] {
                        ReportName,
                        DAV}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndDictionary(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DictionaryAsync(string ReportName, string DAV) {
            this.DictionaryAsync(ReportName, DAV, null);
        }
        
        /// <remarks/>
        public void DictionaryAsync(string ReportName, string DAV, object userState) {
            if ((this.DictionaryOperationCompleted == null)) {
                this.DictionaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDictionaryOperationCompleted);
            }
            this.InvokeAsync("Dictionary", new object[] {
                        ReportName,
                        DAV}, this.DictionaryOperationCompleted, userState);
        }
        
        private void OnDictionaryOperationCompleted(object arg) {
            if ((this.DictionaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DictionaryCompleted(this, new DictionaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("InvokeReflection", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationIdentity")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationCredential")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BackError", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/reverse/Report-Translation", RequestElementName="Report-Translation", RequestNamespace="https://service.pvbki.com/reverse", ResponseElementName="Report-TranslationResponse", ResponseNamespace="https://service.pvbki.com/reverse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Report-TranslationResult", DataType="hexBinary")]
        public byte[] Translation(string ReportName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TableName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string FieldName) {
            object[] results = this.Invoke("Translation", new object[] {
                        ReportName,
                        TableName,
                        FieldName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTranslation(string ReportName, string TableName, string FieldName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Translation", new object[] {
                        ReportName,
                        TableName,
                        FieldName}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndTranslation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void TranslationAsync(string ReportName, string TableName, string FieldName) {
            this.TranslationAsync(ReportName, TableName, FieldName, null);
        }
        
        /// <remarks/>
        public void TranslationAsync(string ReportName, string TableName, string FieldName, object userState) {
            if ((this.TranslationOperationCompleted == null)) {
                this.TranslationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTranslationOperationCompleted);
            }
            this.InvokeAsync("Translation", new object[] {
                        ReportName,
                        TableName,
                        FieldName}, this.TranslationOperationCompleted, userState);
        }
        
        private void OnTranslationOperationCompleted(object arg) {
            if ((this.TranslationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TranslationCompleted(this, new TranslationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("InvokeReflection", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationIdentity")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationCredential")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BackError", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/reverse/Report-Statement", RequestElementName="Report-Statement", RequestNamespace="https://service.pvbki.com/reverse", ResponseElementName="Report-StatementResponse", ResponseNamespace="https://service.pvbki.com/reverse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Report-StatementResult", DataType="hexBinary")]
        public byte[] Statement(string forID) {
            object[] results = this.Invoke("Statement", new object[] {
                        forID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStatement(string forID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Statement", new object[] {
                        forID}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndStatement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void StatementAsync(string forID) {
            this.StatementAsync(forID, null);
        }
        
        /// <remarks/>
        public void StatementAsync(string forID, object userState) {
            if ((this.StatementOperationCompleted == null)) {
                this.StatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatementOperationCompleted);
            }
            this.InvokeAsync("Statement", new object[] {
                        forID}, this.StatementOperationCompleted, userState);
        }
        
        private void OnStatementOperationCompleted(object arg) {
            if ((this.StatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatementCompleted(this, new StatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("InvokeReflection", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationIdentity")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationCredential")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BackError", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/reverse/Report-Summary", RequestElementName="Report-Summary", RequestNamespace="https://service.pvbki.com/reverse", ResponseElementName="Report-SummaryResponse", ResponseNamespace="https://service.pvbki.com/reverse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Report-SummaryResult", DataType="hexBinary")]
        public byte[] Summary(string forID) {
            object[] results = this.Invoke("Summary", new object[] {
                        forID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSummary(string forID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Summary", new object[] {
                        forID}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndSummary(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void SummaryAsync(string forID) {
            this.SummaryAsync(forID, null);
        }
        
        /// <remarks/>
        public void SummaryAsync(string forID, object userState) {
            if ((this.SummaryOperationCompleted == null)) {
                this.SummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSummaryOperationCompleted);
            }
            this.InvokeAsync("Summary", new object[] {
                        forID}, this.SummaryOperationCompleted, userState);
        }
        
        private void OnSummaryOperationCompleted(object arg) {
            if ((this.SummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SummaryCompleted(this, new SummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("InvokeReflection", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationIdentity")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationCredential")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("BackError", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://service.pvbki.com/reverse/Zeport-Statement-FCPDF", RequestElementName="Zeport-Statement-FCPDF", RequestNamespace="https://service.pvbki.com/reverse", ResponseElementName="Zeport-Statement-FCPDFResponse", ResponseNamespace="https://service.pvbki.com/reverse", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Zeport-Statement-FCPDFResult", DataType="hexBinary")]
        public byte[] FCBankStatement(string forID) {
            object[] results = this.Invoke("FCBankStatement", new object[] {
                        forID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFCBankStatement(string forID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FCBankStatement", new object[] {
                        forID}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndFCBankStatement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FCBankStatementAsync(string forID) {
            this.FCBankStatementAsync(forID, null);
        }
        
        /// <remarks/>
        public void FCBankStatementAsync(string forID, object userState) {
            if ((this.FCBankStatementOperationCompleted == null)) {
                this.FCBankStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFCBankStatementOperationCompleted);
            }
            this.InvokeAsync("FCBankStatement", new object[] {
                        forID}, this.FCBankStatementOperationCompleted, userState);
        }
        
        private void OnFCBankStatementOperationCompleted(object arg) {
            if ((this.FCBankStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FCBankStatementCompleted(this, new FCBankStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://service.pvbki.com/reverse")]
    [System.Xml.Serialization.XmlRootAttribute("InvokeReflection", Namespace="https://service.pvbki.com/reverse", IsNullable=false)]
    public partial class InvokeTuningHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userAgentField;
        
        private string ipAddressField;
        
        private string hostNameField;
        
        private string requestTypeField;
        
        private string requestContentTypeField;
        
        private string requestUrlField;
        
        private string requestCPField;
        
        private int contentLengthField;
        
        private int requestSizeField;
        
        private long streamLengthField;
        
        private uint executionTimeField;
        
        private bool isSecureConnectionField;
        
        private SoapProtocolVersion soapVersionField;
        
        private string responseHeaderCPField;
        
        private string responseContentCPField;
        
        private string responseCharsetField;
        
        private string responseStatusField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserAgent {
            get {
                return this.userAgentField;
            }
            set {
                this.userAgentField = value;
            }
        }
        
        /// <remarks/>
        public string IpAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        public string HostName {
            get {
                return this.hostNameField;
            }
            set {
                this.hostNameField = value;
            }
        }
        
        /// <remarks/>
        public string RequestType {
            get {
                return this.requestTypeField;
            }
            set {
                this.requestTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RequestContentType {
            get {
                return this.requestContentTypeField;
            }
            set {
                this.requestContentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RequestUrl {
            get {
                return this.requestUrlField;
            }
            set {
                this.requestUrlField = value;
            }
        }
        
        /// <remarks/>
        public string RequestCP {
            get {
                return this.requestCPField;
            }
            set {
                this.requestCPField = value;
            }
        }
        
        /// <remarks/>
        public int ContentLength {
            get {
                return this.contentLengthField;
            }
            set {
                this.contentLengthField = value;
            }
        }
        
        /// <remarks/>
        public int RequestSize {
            get {
                return this.requestSizeField;
            }
            set {
                this.requestSizeField = value;
            }
        }
        
        /// <remarks/>
        public long StreamLength {
            get {
                return this.streamLengthField;
            }
            set {
                this.streamLengthField = value;
            }
        }
        
        /// <remarks/>
        public uint ExecutionTime {
            get {
                return this.executionTimeField;
            }
            set {
                this.executionTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSecureConnection {
            get {
                return this.isSecureConnectionField;
            }
            set {
                this.isSecureConnectionField = value;
            }
        }
        
        /// <remarks/>
        public SoapProtocolVersion SoapVersion {
            get {
                return this.soapVersionField;
            }
            set {
                this.soapVersionField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseHeaderCP {
            get {
                return this.responseHeaderCPField;
            }
            set {
                this.responseHeaderCPField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseContentCP {
            get {
                return this.responseContentCPField;
            }
            set {
                this.responseContentCPField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseCharset {
            get {
                return this.responseCharsetField;
            }
            set {
                this.responseCharsetField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseStatus {
            get {
                return this.responseStatusField;
            }
            set {
                this.responseStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://service.pvbki.com/reverse")]
    public enum SoapProtocolVersion {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Soap11,
        
        /// <remarks/>
        Soap12,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://service.pvbki.com/reverse")]
    [System.Xml.Serialization.XmlRootAttribute("AuthenticationIdentity", Namespace="https://service.pvbki.com/reverse", IsNullable=false)]
    public partial class AuthIdentityHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string nameField;
        
        private byte[] keyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary")]
        public byte[] Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://service.pvbki.com/reverse")]
    [System.Xml.Serialization.XmlRootAttribute("AuthenticationCredential", Namespace="https://service.pvbki.com/reverse", IsNullable=false)]
    public partial class AuthCredentialHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://service.pvbki.com/reverse")]
    [System.Xml.Serialization.XmlRootAttribute("BackError", Namespace="https://service.pvbki.com/reverse", IsNullable=false)]
    public partial class BackErrorHeader : System.Web.Services.Protocols.SoapHeader {
        
        private long faultCodeField;
        
        private string faultMessageField;
        
        private string faultTypeField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public long FaultCode {
            get {
                return this.faultCodeField;
            }
            set {
                this.faultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FaultMessage {
            get {
                return this.faultMessageField;
            }
            set {
                this.faultMessageField = value;
            }
        }
        
        /// <remarks/>
        public string FaultType {
            get {
                return this.faultTypeField;
            }
            set {
                this.faultTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DescriptionCompletedEventHandler(object sender, DescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void TouchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SchemaCompletedEventHandler(object sender, SchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DictionaryCompletedEventHandler(object sender, DictionaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void TranslationCompletedEventHandler(object sender, TranslationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TranslationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TranslationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void StatementCompletedEventHandler(object sender, StatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SummaryCompletedEventHandler(object sender, SummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void FCBankStatementCompletedEventHandler(object sender, FCBankStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FCBankStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FCBankStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}
