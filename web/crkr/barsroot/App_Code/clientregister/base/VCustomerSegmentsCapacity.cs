/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace clientregister
{
    public sealed class VCustomerSegmentsCapacityRecord : BbRecord
    {
        public VCustomerSegmentsCapacityRecord(): base()
        {
            fillFields();
        }
        public VCustomerSegmentsCapacityRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VCustomerSegmentsCapacityRecord(BbDataSource Parent, OracleDecimal RowScn, Decimal? RNK, Decimal? PRODUCT_AMOUNT, 
             Decimal? DEPOSIT_AMMOUNT, Decimal? CREDITS_AMMOUNT,  Decimal? CARDCREDITS_AMMOUNT, Decimal? GARANT_CREDITS_AMMOUNT, 
             Decimal? ENERGYCREDITS_AMMOUNT, Decimal? CARDS_AMMOUNT, Decimal? ACCOUNTS_AMMOUNT, Decimal? TRANSFERS_AMMOUNT)
            : this(Parent)
        {
            this.RNK = RNK;
            this.PRODUCT_AMOUNT = PRODUCT_AMOUNT;
            this.DEPOSIT_AMMOUNT = DEPOSIT_AMMOUNT;
            this.CREDITS_AMMOUNT = CREDITS_AMMOUNT;
            this.CARDCREDITS_AMMOUNT = CARDCREDITS_AMMOUNT;
            this.GARANT_CREDITS_AMMOUNT = GARANT_CREDITS_AMMOUNT;
            this.ENERGYCREDITS_AMMOUNT = ENERGYCREDITS_AMMOUNT;
            this.CARDS_AMMOUNT = CARDS_AMMOUNT;
            this.ACCOUNTS_AMMOUNT = ACCOUNTS_AMMOUNT;
            this.TRANSFERS_AMMOUNT = TRANSFERS_AMMOUNT;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("RNK", OracleDbType.Decimal, false, false, false, false, false, "V_CUSTOMER_SEGMENTS_CAPACITY", ObjectTypes.View, "", ""));
            Fields.Add(new BbField("PRODUCT_AMOUNT", OracleDbType.Decimal, true, false, false, false, false, "V_CUSTOMER_SEGMENTS_CAPACITY", ObjectTypes.View, "", ""));
            Fields.Add(new BbField("DEPOSIT_AMMOUNT", OracleDbType.Decimal, true, false, false, false, false, "V_CUSTOMER_SEGMENTS_CAPACITY", ObjectTypes.View, "", ""));
            Fields.Add(new BbField("CREDITS_AMMOUNT", OracleDbType.Decimal, true, false, false, false, false, "V_CUSTOMER_SEGMENTS_CAPACITY", ObjectTypes.View, "", ""));
            Fields.Add(new BbField("CARDCREDITS_AMMOUNT", OracleDbType.Decimal, true, false, false, false, false, "V_CUSTOMER_SEGMENTS_CAPACITY", ObjectTypes.View, "", ""));
            Fields.Add(new BbField("GARANT_CREDITS_AMMOUNT", OracleDbType.Decimal, true, false, false, false, false, "V_CUSTOMER_SEGMENTS_CAPACITY", ObjectTypes.View, "", ""));
            Fields.Add(new BbField("ENERGYCREDITS_AMMOUNT", OracleDbType.Decimal, true, false, false, false, false, "V_CUSTOMER_SEGMENTS_CAPACITY", ObjectTypes.View, "", ""));
            Fields.Add(new BbField("CARDS_AMMOUNT", OracleDbType.Decimal, true, false, false, false, false, "V_CUSTOMER_SEGMENTS_CAPACITY", ObjectTypes.View, "", ""));
            Fields.Add(new BbField("ACCOUNTS_AMMOUNT", OracleDbType.Decimal, true, false, false, false, false, "V_CUSTOMER_SEGMENTS_CAPACITY", ObjectTypes.View, "", ""));
            Fields.Add(new BbField("TRANSFERS_AMMOUNT", OracleDbType.Decimal, true, false, false, false, false, "V_CUSTOMER_SEGMENTS_CAPACITY", ObjectTypes.View, "", ""));
        }
        public Decimal? RNK { get { return (Decimal?)FindField("RNK").Value; } set {SetField("RNK", value);} }
        public Decimal? PRODUCT_AMOUNT { get { return (Decimal?)FindField("PRODUCT_AMOUNT").Value; } set {SetField("PRODUCT_AMOUNT", value);} }
        public Decimal? DEPOSIT_AMMOUNT { get { return (Decimal?)FindField("DEPOSIT_AMMOUNT").Value; } set {SetField("DEPOSIT_AMMOUNT", value);} }
        public Decimal? CREDITS_AMMOUNT { get { return (Decimal?)FindField("CREDITS_AMMOUNT").Value; } set { SetField("CREDITS_AMMOUNT", value); } }
        public Decimal? CARDCREDITS_AMMOUNT { get { return (Decimal?)FindField("CARDCREDITS_AMMOUNT").Value; } set { SetField("CARDCREDITS_AMMOUNT", value); } }
        public Decimal? GARANT_CREDITS_AMMOUNT { get { return (Decimal?)FindField("GARANT_CREDITS_AMMOUNT").Value; } set { SetField("GARANT_CREDITS_AMMOUNT", value); } }
        public Decimal? ENERGYCREDITS_AMMOUNT { get { return (Decimal?)FindField("ENERGYCREDITS_AMMOUNT").Value; } set { SetField("ENERGYCREDITS_AMMOUNT", value); } }
        public Decimal? CARDS_AMMOUNT { get { return (Decimal?)FindField("CARDS_AMMOUNT").Value; } set { SetField("CARDS_AMMOUNT", value); } }
        public Decimal? ACCOUNTS_AMMOUNT { get { return (Decimal?)FindField("ACCOUNTS_AMMOUNT").Value; } set { SetField("ACCOUNTS_AMMOUNT", value); } }
        public Decimal? TRANSFERS_AMMOUNT { get { return (Decimal?)FindField("TRANSFERS_AMMOUNT").Value; } set { SetField("TRANSFERS_AMMOUNT", value); } }
    }

    public sealed class VCustomerSegmentsCapacityFilters : BbFilters
    {
        public VCustomerSegmentsCapacityFilters(BbDataSource Parent) : base (Parent)
        {
            RNK = new BBDecimalFilter(this, "RNK");
            PRODUCT_AMOUNT = new BBDecimalFilter(this, "PRODUCT_AMOUNT");
            DEPOSIT_AMMOUNT = new BBDecimalFilter(this, "DEPOSIT_AMMOUNT");
            CREDITS_AMMOUNT = new BBDecimalFilter(this, "CREDITS_AMMOUNT");
            CARDCREDITS_AMMOUNT = new BBDecimalFilter(this, "CARDCREDITS_AMMOUNT");
            GARANT_CREDITS_AMMOUNT = new BBDecimalFilter(this, "GARANT_CREDITS_AMMOUNT");
            ENERGYCREDITS_AMMOUNT = new BBDecimalFilter(this, "ENERGYCREDITS_AMMOUNT");
            CARDS_AMMOUNT = new BBDecimalFilter(this, "CARDS_AMMOUNT");
            ACCOUNTS_AMMOUNT = new BBDecimalFilter(this, "ACCOUNTS_AMMOUNT");
            TRANSFERS_AMMOUNT = new BBDecimalFilter(this, "TRANSFERS_AMMOUNT");
        }
        public BBDecimalFilter RNK;
        public BBDecimalFilter PRODUCT_AMOUNT;
        public BBDecimalFilter DEPOSIT_AMMOUNT;
        public BBDecimalFilter CREDITS_AMMOUNT;
        public BBDecimalFilter CARDCREDITS_AMMOUNT;
        public BBDecimalFilter GARANT_CREDITS_AMMOUNT;
        public BBDecimalFilter ENERGYCREDITS_AMMOUNT;
        public BBDecimalFilter CARDS_AMMOUNT;
        public BBDecimalFilter ACCOUNTS_AMMOUNT;
        public BBDecimalFilter TRANSFERS_AMMOUNT;
    }

    public partial class VCustomerSegmentsCapacity : BbTable<VCustomerSegmentsCapacityRecord, VCustomerSegmentsCapacityFilters>
    {
        public VCustomerSegmentsCapacity() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VCustomerSegmentsCapacity(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VCustomerSegmentsCapacityRecord> Select(VCustomerSegmentsCapacityRecord Item)
        {
            List<VCustomerSegmentsCapacityRecord> res = new List<VCustomerSegmentsCapacityRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VCustomerSegmentsCapacityRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (Decimal?)null : Convert.ToDecimal(rdr[1]), 
                        rdr.IsDBNull(2) ?  (Decimal?)null : Convert.ToDecimal(rdr[2]), 
                        rdr.IsDBNull(3) ?  (Decimal?)null : Convert.ToDecimal(rdr[3]),
                        rdr.IsDBNull(4) ? (Decimal?)null : Convert.ToDecimal(rdr[4]),
                        rdr.IsDBNull(5) ? (Decimal?)null : Convert.ToDecimal(rdr[5]),
                        rdr.IsDBNull(6) ? (Decimal?)null : Convert.ToDecimal(rdr[6]),
                        rdr.IsDBNull(7) ? (Decimal?)null : Convert.ToDecimal(rdr[7]),
                        rdr.IsDBNull(8) ? (Decimal?)null : Convert.ToDecimal(rdr[8]),
                        rdr.IsDBNull(9) ? (Decimal?)null : Convert.ToDecimal(rdr[9]),
                        rdr.IsDBNull(10) ? (Decimal?)null : Convert.ToDecimal(rdr[10])
                        )
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}