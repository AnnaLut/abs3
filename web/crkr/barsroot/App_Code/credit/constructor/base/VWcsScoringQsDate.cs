/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace credit
{
    public sealed class VWcsScoringQsDateRecord : BbRecord
    {
        public VWcsScoringQsDateRecord(): base()
        {
            fillFields();
        }
        public VWcsScoringQsDateRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VWcsScoringQsDateRecord(BbDataSource Parent, OracleDecimal RowScn, String SCORING_ID, String QUESTION_ID, Decimal? ORD, DateTime? MIN_VAL, String MIN_SIGN, String MIN_SIGN_SIGN, DateTime? MAX_VAL, String MAX_SIGN, String MAX_SIGN_SIGN, Decimal? SCORE)
            : this(Parent)
        {
            this.SCORING_ID = SCORING_ID;
            this.QUESTION_ID = QUESTION_ID;
            this.ORD = ORD;
            this.MIN_VAL = MIN_VAL;
            this.MIN_SIGN = MIN_SIGN;
            this.MIN_SIGN_SIGN = MIN_SIGN_SIGN;
            this.MAX_VAL = MAX_VAL;
            this.MAX_SIGN = MAX_SIGN;
            this.MAX_SIGN_SIGN = MAX_SIGN_SIGN;
            this.SCORE = SCORE;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("SCORING_ID", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SCORING_QS_DATE", ObjectTypes.View, "Вопрос карты скоринга (бальность по вопросам типа NUMB) (Представление)", "Идентификатор карты скоринга"));
            Fields.Add( new BbField("QUESTION_ID", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SCORING_QS_DATE", ObjectTypes.View, "Вопрос карты скоринга (бальность по вопросам типа NUMB) (Представление)", "Идентификатор вопроса"));
            Fields.Add( new BbField("ORD", OracleDbType.Decimal, false, false, false, false, false, "V_WCS_SCORING_QS_DATE", ObjectTypes.View, "Вопрос карты скоринга (бальность по вопросам типа NUMB) (Представление)", "Номер отрезка"));
            Fields.Add( new BbField("MIN_VAL", OracleDbType.Date, false, false, false, false, false, "V_WCS_SCORING_QS_DATE", ObjectTypes.View, "Вопрос карты скоринга (бальность по вопросам типа NUMB) (Представление)", "Мин. значение отрезка"));
            Fields.Add( new BbField("MIN_SIGN", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SCORING_QS_DATE", ObjectTypes.View, "Вопрос карты скоринга (бальность по вопросам типа NUMB) (Представление)", "Знак мин. значения отрезка"));
            Fields.Add( new BbField("MIN_SIGN_SIGN", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SCORING_QS_DATE", ObjectTypes.View, "Вопрос карты скоринга (бальность по вопросам типа NUMB) (Представление)", "Знак мин. значения отрезка (символ)"));
            Fields.Add( new BbField("MAX_VAL", OracleDbType.Date, false, false, false, false, false, "V_WCS_SCORING_QS_DATE", ObjectTypes.View, "Вопрос карты скоринга (бальность по вопросам типа NUMB) (Представление)", "Макс. значение отрезка"));
            Fields.Add( new BbField("MAX_SIGN", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SCORING_QS_DATE", ObjectTypes.View, "Вопрос карты скоринга (бальность по вопросам типа NUMB) (Представление)", "Знак макс. значения отрезка"));
            Fields.Add( new BbField("MAX_SIGN_SIGN", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SCORING_QS_DATE", ObjectTypes.View, "Вопрос карты скоринга (бальность по вопросам типа NUMB) (Представление)", "Знак макс. значения отрезка (символ)"));
            Fields.Add( new BbField("SCORE", OracleDbType.Decimal, false, false, false, false, false, "V_WCS_SCORING_QS_DATE", ObjectTypes.View, "Вопрос карты скоринга (бальность по вопросам типа NUMB) (Представление)", "Баллы"));        
        }
        public String SCORING_ID { get { return (String)FindField("SCORING_ID").Value; } set {SetField("SCORING_ID", value);} }
        public String QUESTION_ID { get { return (String)FindField("QUESTION_ID").Value; } set {SetField("QUESTION_ID", value);} }
        public Decimal? ORD { get { return (Decimal?)FindField("ORD").Value; } set {SetField("ORD", value);} }
        public DateTime? MIN_VAL { get { return (DateTime?)FindField("MIN_VAL").Value; } set {SetField("MIN_VAL", value);} }
        public String MIN_SIGN { get { return (String)FindField("MIN_SIGN").Value; } set {SetField("MIN_SIGN", value);} }
        public String MIN_SIGN_SIGN { get { return (String)FindField("MIN_SIGN_SIGN").Value; } set {SetField("MIN_SIGN_SIGN", value);} }
        public DateTime? MAX_VAL { get { return (DateTime?)FindField("MAX_VAL").Value; } set {SetField("MAX_VAL", value);} }
        public String MAX_SIGN { get { return (String)FindField("MAX_SIGN").Value; } set {SetField("MAX_SIGN", value);} }
        public String MAX_SIGN_SIGN { get { return (String)FindField("MAX_SIGN_SIGN").Value; } set {SetField("MAX_SIGN_SIGN", value);} }
        public Decimal? SCORE { get { return (Decimal?)FindField("SCORE").Value; } set {SetField("SCORE", value);} }
    }

    public sealed class VWcsScoringQsDateFilters : BbFilters
    {
        public VWcsScoringQsDateFilters(BbDataSource Parent) : base (Parent)
        {
            SCORING_ID = new BBVarchar2Filter(this, "SCORING_ID");
            QUESTION_ID = new BBVarchar2Filter(this, "QUESTION_ID");
            ORD = new BBDecimalFilter(this, "ORD");
            MIN_VAL = new BBDateFilter(this, "MIN_VAL");
            MIN_SIGN = new BBVarchar2Filter(this, "MIN_SIGN");
            MIN_SIGN_SIGN = new BBVarchar2Filter(this, "MIN_SIGN_SIGN");
            MAX_VAL = new BBDateFilter(this, "MAX_VAL");
            MAX_SIGN = new BBVarchar2Filter(this, "MAX_SIGN");
            MAX_SIGN_SIGN = new BBVarchar2Filter(this, "MAX_SIGN_SIGN");
            SCORE = new BBDecimalFilter(this, "SCORE");
        }
        public BBVarchar2Filter SCORING_ID;
        public BBVarchar2Filter QUESTION_ID;
        public BBDecimalFilter ORD;
        public BBDateFilter MIN_VAL;
        public BBVarchar2Filter MIN_SIGN;
        public BBVarchar2Filter MIN_SIGN_SIGN;
        public BBDateFilter MAX_VAL;
        public BBVarchar2Filter MAX_SIGN;
        public BBVarchar2Filter MAX_SIGN_SIGN;
        public BBDecimalFilter SCORE;
    }

    public partial class VWcsScoringQsDate : BbTable<VWcsScoringQsDateRecord, VWcsScoringQsDateFilters>
    {
        public VWcsScoringQsDate() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VWcsScoringQsDate(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VWcsScoringQsDateRecord> Select(VWcsScoringQsDateRecord Item)
        {
            List<VWcsScoringQsDateRecord> res = new List<VWcsScoringQsDateRecord>();
                        OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VWcsScoringQsDateRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (Decimal?)null : Convert.ToDecimal(rdr[3]), 
                        rdr.IsDBNull(4) ?  (DateTime?)null : Convert.ToDateTime(rdr[4]), 
                        rdr.IsDBNull(5) ?  (String)null : Convert.ToString(rdr[5]), 
                        rdr.IsDBNull(6) ?  (String)null : Convert.ToString(rdr[6]), 
                        rdr.IsDBNull(7) ?  (DateTime?)null : Convert.ToDateTime(rdr[7]), 
                        rdr.IsDBNull(8) ?  (String)null : Convert.ToString(rdr[8]), 
                        rdr.IsDBNull(9) ?  (String)null : Convert.ToString(rdr[9]), 
                        rdr.IsDBNull(10) ?  (Decimal?)null : Convert.ToDecimal(rdr[10]))
                    );
                }
            }
                        finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}