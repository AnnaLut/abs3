@using Areas.Cash.Models
@using BarsWeb.Areas.Cash.ViewModels
@using Kendo.Mvc.UI
@model List<Mfo>

    @{
        Layout = "~/Views/Shared/_LayoutKendo.cshtml";
        const string title = "Порушення лімітів";
        const string changeLimit = "Змінити ліміт";
        bool itIsCenter = ViewBag.ItIsCenter;
        ViewBag.Region = !itIsCenter;
    }
    <script src="@Url.Content("~/lib/jsZip/jszip.min.js")"></script>
    <h1 id="title">@title</h1>
    <table class="viol-table">
        <tr>
            @if (itIsCenter)
            {
                <td valign="top">
                    @*Частичное представление добавляет на страницу объект mfoFilter, в котором можно подписаться на событие изменения перечня выбранных МФО*@
                    @{ Html.RenderPartial("MfoFilter", Model); }
                </td>
                        }
            <td valign="top">
                <div id="childRecordsGrid">
                    @*Шаблон дочерней строки*@
                    <script id="template_Child" type="text/x-kendo-template">
                        @(Html.Kendo().Grid<V_CLIM_ACCOUNT_LIMIT>()
                          .Name("grid_ChildRows_#=KF#_#=LIM_TYPE#_#=ACC_CURRENCY#")
                          .ToolBar(tools => tools.Excel())
                          .Excel(i => i.FileName("AccMfoViolations.xls")
                              .AllPages(true)
                              .Filterable(true)
                              .ProxyURL(Url.Content("~/cash/Violations/ConvertBase64ToFile/"))
                          )
                          .Columns(columns =>
                          {
                              columns.Bound(c => c.ACC_BRANCH);
                              columns.Bound(c => c.ACC_NUMBER);
                              columns.Bound(c => c.ACC_CURRENCY);
                              columns.Bound(c => c.ACC_NAME);
                              columns.Bound(c => c.LIM_CURRENT)
                                  .ClientTemplate("\\#= kendo.toString(LIM_CURRENT/100,\"n\") \\#")
                                  .HtmlAttributes(new { @class = "money badSum" });
                              columns.Bound(c => c.LIM_MAX)
                                  .ClientTemplate("\\#= kendo.toString(LIM_MAX/100,\"n\") \\#")
                                  .HtmlAttributes(new { @class = "money badSum" });
                              columns.Bound(c => c.ACC_BAL)
                                  .ClientTemplate("\\#= kendo.toString(ACC_BAL/100,\"n\") \\#")
                                  .HtmlAttributes(new { @class = "money badSum" });
                              columns.Bound(c => c.LIMIT_VIOLATION)
                                  .ClientTemplate("\\#= formatLimitCashViolated(LIMIT_VIOLATION) \\#");
                              columns.Bound(c => c.OVER_LIM)
                                  .ClientTemplate("\\#= kendo.toString(OVER_LIM/100,\"n\") \\#")
                                  .HtmlAttributes(new { @class = "money badSum" });                             
                          })
                          .Resizable(resize => resize.Columns(true))
                          .Pageable(pager => pager
                              .PageSizes(new[] { 10, 20, 50, 100, 200 })
                              .Refresh(true))
                          .Sortable()
                          .Filterable()
                          .DataSource(dataSource => dataSource
                              .Ajax()
                              .Model(model =>
                              {
                                  model.Id(p => p.ACC_ID);

                                  model.Field(p => p.LIMIT_VIOLATION).Editable(false);
                                  model.Field(p => p.KF).Editable(false);
                                  model.Field(p => p.ACC_BRANCH).Editable(false);
                                  model.Field(p => p.NAME_CASHTYPE).Editable(false);
                                  model.Field(p => p.ACC_NUMBER).Editable(false);
                                  model.Field(p => p.ACC_CURRENCY).Editable(false);
                                  model.Field(p => p.ACC_NAME).Editable(false);
                                  model.Field(p => p.ACC_BAL).Editable(false);
                                  model.Field(p => p.ACC_BALANCE).Editable(false);
                              })
                              .Read(read => read.Action("GetAccMfoLimits", "Limits", new { mfo = "#=KF#", currencyCode = "#=ACC_CURRENCY#", limType = "#=LIM_TYPE#" }))
                              .Update(read => read.Action("UpdateAccountLimit", "Limits"))
                              .Events(e => e.Error("onError"))
                          )
                          .ToClientTemplate()
                        )
                    </script>


                    <script id="template_clim_accounts_lim_grp" type="text/x-kendo-template">
                        @(Html.Kendo().Grid<V_CLIM_ACCOUNT_LIMIT>()
                             .Name("grid_ChildCashBranchRows_#=ROW_ID#")
                             .ToolBar(tools => tools.Excel())
                             .Excel(i => i.FileName("CashAccountsLimGrp.xlsx")
                                 .AllPages(true)
                                 .Filterable(true)
                                 .ProxyURL(Url.Content("~/cash/Violations/ConvertBase64ToFile/"))
                                 )
                              .Columns(columns =>
                              {
                                  columns.Bound(c => c.KF);
                                  columns.Bound(c => c.RU_NAME);
                                  columns.Bound(c => c.ACC_BRANCH);
                                  columns.Bound(c => c.ACC_NUMBER);
                                  columns.Bound(c => c.ACC_CURRENCY);
                                  columns.Bound(c => c.ACC_NAME);
                                  columns.Bound(c => c.ACC_BAL)
                                      .Format("{0:n2}")
                                      .HtmlAttributes(new { @class = "money badSum" });
                                  columns.Bound(c => c.LIM_CURRENT)
                                      .Format("{0:n2}")
                                      .HtmlAttributes(new { @class = "money badSum" });
                                  columns.Bound(c => c.LIM_MAX)
                                      .Format("{0:n2}")
                                      .HtmlAttributes(new { @class = "money badSum" });
                                  columns.Bound(c => c.LIMIT_VIOLATION_NAME);
                                  columns.Bound(c => c.OVER_LIM)
                                      .Format("{0:n2}")
                                      .HtmlAttributes(new { @class = "money badSum" });
                                  columns.Command(command => command.Custom("Історія").Click("showAccLimitArc"));
                              })
                              .Resizable(resize => resize.Columns(true))
                                  .Pageable(pager => pager
                                      .PageSizes(new[] { 10, 20, 50, 100, 200 })
                                      .Refresh(true))
                                  .Sortable()
                                  .Filterable()
                              .DataSource(dataSource => dataSource
                                  .Ajax()
                                    .Model(model =>
                                    {
                                        model.Field(p => p.KF).Editable(false);
                                        model.Field(p => p.RU_NAME).Editable(false);
                                        model.Field(p => p.ACC_BRANCH).Editable(false);
                                        model.Field(p => p.ACC_NUMBER).Editable(false);
                                        model.Field(p => p.ACC_CURRENCY).Editable(false);
                                        model.Field(p => p.ACC_NAME).Editable(false);
                                        model.Field(p => p.ACC_BAL).Editable(false);
                                        model.Field(p => p.LIM_CURRENT).Editable(false);
                                        model.Field(p => p.LIM_MAX).Editable(false);
                                        model.Field(p => p.LIMIT_VIOLATION_NAME).Editable(false);
                                        model.Field(p => p.OVER_LIM).Editable(false);
                                    })
                                 .Read(read => read.Action("GetAccountViolationsGrp", "Violations", new
                                 {
                                     branch = "#=ACC_BRANCH#",
                                     kv = "#=ACC_CURRENCY#"
                                 })))
                              .ToClientTemplate()
                        )
                    </script>



                    <script id="template_v_clim_cashviol_grpbranchkv" type="text/x-kendo-template">
                        @(Html.Kendo().Grid<V_CLIM_CASHVIOL_GRPBRANCHKV>()
                             .Name("grid_ChildCashBranchRows_#=KF#_#=KV#")
                             .ClientDetailTemplateId("template_clim_accounts_lim_grp")
                             .ToolBar(tools => tools.Excel())
                             .Excel(i => i.FileName("CashBranchesLimGrp.xls")
                                 .AllPages(true)
                                 .Filterable(true)
                                 .ProxyURL(Url.Content("~/cash/Violations/ConvertBase64ToFile/"))
                                 )
                              .Columns(columns =>
                              {
                                  columns.Bound(c => c.KF);
                                  columns.Bound(c => c.RU_NAME);
                                  columns.Bound(c => c.ACC_BRANCH);
                                  columns.Bound(c => c.ACC_CURRENCY);
                                  columns.Bound(c => c.SUM_BAL)
                                      .Format("{0:n2}")
                                      .HtmlAttributes(new { @class = "money badSum" });
                                  columns.Bound(c => c.SUM_LIM)
                                      .Format("{0:n2}")
                                      .HtmlAttributes(new { @class = "money badSum" });
                                  columns.Bound(c => c.SUM_LIMMAX)
                                      .Format("{0:n2}")
                                      .HtmlAttributes(new { @class = "money badSum" });
                                  columns.Bound(c => c.SUM_OVERLIM)
                                      .Format("{0:n2}")
                                      .HtmlAttributes(new { @class = "money badSum" });
                                  columns.Bound(c => c.PRC_OVER_LIM)
                                      .ClientTemplate("\\#= (PRC_OVER_LIM ? PRC_OVER_LIM : \"\") \\#");
                                  columns.Bound(c => c.CNT_ACCS);
                                  columns.Command(command => command.Custom("Історія").Click("showBranchLimitArc"));
                              })
                              .Resizable(resize => resize.Columns(true))
                                  .Pageable(pager => pager
                                      .PageSizes(new[] { 10, 20, 50, 100, 200 })
                                      .Refresh(true))
                                  .Sortable()
                                  .Filterable()
                              .DataSource(dataSource => dataSource
                                  .Ajax()
                                    .Model(model =>
                                    {
                                        model.Field(p => p.KF).Editable(false);
                                        model.Field(p => p.RU_NAME).Editable(false);
                                        model.Field(p => p.ACC_BRANCH).Editable(false);
                                        model.Field(p => p.ACC_CURRENCY).Editable(false);
                                        model.Field(p => p.SUM_BAL).Editable(false);
                                        model.Field(p => p.SUM_LIM).Editable(false);
                                        model.Field(p => p.SUM_LIMMAX).Editable(false);
                                        model.Field(p => p.SUM_OVERLIM).Editable(false);
                                        model.Field(p => p.CNT_ACCS).Editable(false);
                                        model.Field(p => p.PRC_OVER_LIM).Editable(false);
                                    })
                                 .Read(read => read.Action("GetCashViolGrpBranchKv", "Violations", new
                                 {
                                     kf = "#=KF#",
                                     kv = "#=KV#"
                                 })))
                              .ToClientTemplate()
                        )
                    </script>
                    <script id="template_CashBranchChild" type="text/x-kendo-template">
                        @(Html.Kendo().Grid<V_CLIM_ACCOUNT_LIMIT>()
                             .Name("grid_ChildCashBranchRows_#=ROW_ID#")
                                                          .ToolBar(tools => tools.Excel())
                             .Excel(i => i.FileName("CashAccountsLimGrp.xlsx")
                                 .AllPages(true)
                                 .Filterable(true)
                                 .ProxyURL(Url.Content("~/cash/Violations/ConvertBase64ToFile/"))
                                 )
                              .Columns(columns =>
                              {
                                  columns.Bound(c => c.KF);
                                  columns.Bound(c => c.RU_NAME);
                                  columns.Bound(c => c.ACC_BRANCH);
                                  columns.Bound(c => c.ACC_NUMBER);
                                  columns.Bound(c => c.ACC_CURRENCY);
                                  columns.Bound(c => c.ACC_NAME);
                                  columns.Bound(c => c.ACC_BAL)
                                      .Format("{0:n2}")
                                      .HtmlAttributes(new { @class = "money badSum" });
                                  columns.Bound(c => c.LIM_CURRENT)
                                      .Format("{0:n2}")
                                      .HtmlAttributes(new { @class = "money badSum" });
                                  columns.Bound(c => c.LIM_MAX)
                                      .Format("{0:n2}")
                                      .HtmlAttributes(new { @class = "money badSum" });
                                  columns.Bound(c => c.LIMIT_VIOLATION_NAME);
                                  columns.Bound(c => c.OVER_LIM)
                                      .Format("{0:n2}")
                                      .HtmlAttributes(new { @class = "money badSum" });
                                  columns.Command(command => command.Custom("Історія").Click("showAccLimitArc"));
                              })
                              .Resizable(resize => resize.Columns(true))
                                  .Pageable(pager => pager
                                      .PageSizes(new[] { 10, 20, 50, 100, 200 })
                                      .Refresh(true))
                                  .Sortable()
                                  .Filterable()
                              .DataSource(dataSource => dataSource
                                  .Ajax()
                                    .Model(model =>
                                    {
                                        model.Field(p => p.KF).Editable(false);
                                        model.Field(p => p.RU_NAME).Editable(false);
                                        model.Field(p => p.ACC_BRANCH).Editable(false);
                                        model.Field(p => p.ACC_NUMBER).Editable(false);
                                        model.Field(p => p.ACC_CURRENCY).Editable(false);
                                        model.Field(p => p.ACC_NAME).Editable(false);
                                        model.Field(p => p.ACC_BAL).Editable(false);
                                        model.Field(p => p.LIM_CURRENT).Editable(false);
                                        model.Field(p => p.LIM_MAX).Editable(false);
                                        model.Field(p => p.LIMIT_VIOLATION_NAME).Editable(false);
                                        model.Field(p => p.OVER_LIM).Editable(false);
                                    })
                                 .Read(read => read.Action("GetCashViolationsBranchKv", "Violations", new
                                 {
                                     branch = "#=ACC_BRANCH#",
                                     kv = "#=ACC_CURRENCY#"
                                 })))
                              .ToClientTemplate()
                        )
                    </script>
                </div>

                @(Html.Kendo().TabStrip()
                .Name("tabstrip")
                .Items(tabstrip =>
                {
                    tabstrip.Add().Text("Каса - МФО")
                        .Selected(true)
                        .Content(@<text>

                            @*Панель навигации*@
                            <div class="navigationBar" style="display: none;">
                                <button id='buttonViolated' class='k-button nav-button'>Порушені</button>
                                <button id='buttonNotViolated' class='k-button nav-button'>Не порушені</button>
                                <button id='buttonAll' class='k-button nav-button'>Усі</button>
                                <br>
                            </div>
                            <div id="CashViolationsToolbar"></div>
                            <div id="divGrid_mfo">
                                <div id="v_clim_cashviol_grpmfokv_toolbar"></div>
                                <div id="v_clim_cashviol_grpmfokv"></div>
                            </div>
                        </text>);
                    tabstrip.Add().Text("Каса - ТВБВ")
                        .Content(@<text>
                        @*Панель навигации*@
                        <div class="navigationBar" style="display: none;">
                            <button class='k-button k-primary'>Порушені</button>
                            <br>
                        </div>
                        <div id="CashBranchViolationsToolbar"></div>
                        <div id="gridCashBranchViolation"></div>
                        </text>);

                    tabstrip.Add().Text("Банкомати")
                        .Content(@<text>
                        @*Панель навигации*@
                        <div class="navigationBar" style="display: none;">
                            <button class='k-button k-primary'>Порушені</button>
                            <br>
                        </div>
                        <div id="AtmViolationsToolbar"></div>
                        <div id="gridAtmViolation"></div>
                        </text>);
                })
                )

            </td>
        </tr>
    </table>

    <div style=" height: 20px "></div>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#v_clim_cashviol_grpmfokv').kendoGrid({
                detailTemplate: kendo.template($("#template_v_clim_cashviol_grpbranchkv").html()),
                heidht: 100,
                dataBound: function (e) {
                    bars.ext.kendo.grid.noDataRow(e);
                },
                pageable: {
                    refresh: true,
                    pageSizes: [10, 20, 50, 100, 200],
                    buttonCount: 10
                },
                sortable: true,
                filterable: true,
                resizable: true,
                scrollable: false,
                dataSource: {
                    type: 'aspnetmvc-ajax',
                    transport: {
                        read: {
                            url: bars.config.urlContent("/Cash/Violations/GetCashViolGrpMfoKv/"),
                            data: getMfoFilter
                        }
                    },
                    "pageSize": 10,
                    "page": 1,
                    "total": 0,
                    "serverPaging": true,
                    "serverSorting": true,
                    "serverFiltering": true,
                    "serverGrouping": true,
                    "serverAggregates": true,
                    "sort": [{
                        "field": "KV",
                        "dir": "asc"
                    }],
                    "filter": [],
                    "error": onError,
                    "schema": {
                        "data": "Data",
                        "total": "Total",
                        "errors": "Errors",
                        "model": {
                            "fields": {
                                KF: { "type": "string" },
                                RU_NAME: { "type": "string" },
                                LIM_TYPE: { type: 'string' },
                                LIM_NAME: { type: 'string' },
                                KV: { "type": "number" },
                                SUM_BAL: { "type": "number" },
                                LIM_CURRENT: { "type": "number" },
                                LIM_MAX: { "type": "number" },
                                LIMIT_VIOLATION: { type: 'number' },
                                LIMIT_VIOLATION_NAME:{type: 'string'},
                                OVER_LIM: { "type": "number" },
                                PRC_OVER_LIM: { "type": "string" },
                                START_DATE: { 'type': 'date' },
                                SET_DATE: {'type': 'date'}
                            }
                        }
                    }
                },
                columns: [{
                    "title": "МФО",
                    "field": "KF",
                    template: '<div title="#=RU_NAME#">#=KF#</div>',
                    "encoded": true
                }, {
                    "title": "Назва РУ",
                    "field": "RU_NAME",
                    template: '<div title="#=RU_NAME#">#=RU_NAME#</div>',
                    "encoded": true
                }, {
                    "title": "Тип ліміту",
                    "field": "LIM_NAME",
                    filterable: false,
                    sortable: false,
                    "encoded": true
                }, {
                    "title": "Валюта",
                    "field": "KV",
                    "encoded": true
                }, {
                    "title": "Поточний ліміт",
                    "field": "LIM_CURRENT",
                    format: "{0:n2}",
                    attributes: { "class": "money badSum" },
                    "encoded": true
                }, {
                    "title": "Максимальний ліміт",
                    "field": "LIM_MAX",
                    format: "{0:n2}",
                    attributes: { "class": "money badSum" },
                    "encoded": true
                }, {
                    "title": "Баланс",
                    "field": "SUM_BAL",
                    format: "{0:n2}",
                    attributes: { "class": "money badSum" },
                    "encoded": true
                }, {
                    "title": "Сума поруш. макс. ліміту",
                    "field": "OVER_LIM",
                    format: "{0:n2}",
                    attributes: { "class": "money badSum" },
                    "encoded": true
                }, {
                    "title": "% поруш. макс. ліміту",
                    "field": "PRC_OVER_LIM",
                    template: '#=(PRC_OVER_LIM ? PRC_OVER_LIM + "%" : "")#',
                    "encoded": true
                }, {
                    "title": "Ліміт порушений",
                    "template": "#= formatLimitViolatedMfo(data) #",
                    "field": "LIMIT_VIOLATION_NAME",
                    "encoded": true
                },{
                    command: [
                        {
                            name: "Історія",
                            imageClass: 'pf-icon pf-16 pf-report_open',
                            click: function (e) {
                                var tr = $(e.target).closest("tr");
                                var data = $("#v_clim_cashviol_grpmfokv").data('kendoGrid').dataItem(tr);

                                var branchWin = $('#branchLimitArcWindow');
                                var accWin = $('#accLimitArcWindow');
                                if (branchWin.length === 0 && accWin.length === 0) {
                                    showMfoLimitArc(data.KF, data.KV);
                                }
                            }
                        }
                    ],
                    title: "&nbsp;",
                    width: "130px"
                }]
            });


            $('#CashViolationsToolbar').kendoToolBar({
                resizable: false,
                items: [
                    {
                        type: "button",
                        text: '<i class="pf-icon pf-16 pf-exel"></i> Вигрузити в EXCEL',
                        click: function () {
                            var mfoList = getAccFilter();
                            var url = bars.config.urlContent("/Cash/Violations/GetCashViolGrpMfoKvFile/");
                            if (mfoList) {
                                for (var i = 0; i < mfoList.length; i++) {
                                    if (i === 0) {
                                        url = url + '?mfoList=' + mfoList[i];
                                    } else {
                                        url = url + '&mfoList=' + mfoList[i];
                                    }
                                }
                            }
                            document.location.href = url;
                        }
                    }, {
                        type: "button",
                        text: '<i class="pf-icon pf-16 pf-exel"></i> Вигрузити в EXCEL зведений файл',
                        click: function () {
                            var mfoList = getAccFilter();
                            var url = bars.config.urlContent("/Cash/Violations/GetAccountViolationsGrpFile/");
                            if (mfoList) {
                                for (var i = 0; i < mfoList.length; i++) {
                                    if (i === 0) {
                                        url += '?';
                                    } else {
                                        url += '&';
                                    }
                                    url += 'mfoList=' + mfoList[i];
                                }
                            }
                            document.location.href = url;
                        }
                    }, {
                        type: 'separator'
                    }, {
                        type: "button",
                        text: '<i class="pf-icon pf-16 pf-report_open"></i> Історія',
                        click: function () {
                            bars.ui.dialog({
                                width: 400,
                                height: 110,
                                content: {
                                    url: bars.config.urlContent('/cash/violations/SelectHistoryPeriodMfo/')
                                }
                            });
                        }
                    }
                ]
            });
            $('#CashBranchViolationsToolbar').kendoToolBar({
                resizable: false,
                items: [
                    {
                        type: "button",
                        text: '<i class="pf-icon pf-16 pf-exel"></i> Вигрузити в EXCEL',
                        click: function () {
                            var mfoList = getAccFilter();
                            var url = bars.config.urlContent("/Cash/Violations/GetCashBranchViolationsFile/");
                            if (mfoList) {
                                for (var i = 0; i < mfoList.length; i++) {
                                    if (i === 0) {
                                        url += '?';
                                    } else {
                                        url += '&';
                                    }
                                    url += 'mfoList=' + mfoList[i];
                                }
                            }
                            document.location.href = url;
                        }
                    }, {
                        type: "button",
                        text: '<i class="pf-icon pf-16 pf-exel"></i> Вигрузити в EXCEL зведений файл',
                        click: function () {
                            var mfoList = getAccFilter();
                            var url = bars.config.urlContent("/Cash/violations/GetCashViolationsBranchKvConsolidateFile/");
                            if (mfoList) {
                                for (var i = 0; i < mfoList.length; i++) {
                                    if (i === 0) {
                                        url += '?';
                                    } else {
                                        url += '&';
                                    }
                                    url += 'mfoList=' + mfoList[i];
                                }
                            }
                            document.location.href = url;
                        }
                    }, {
                        type: 'separator'
                    },{
                        type: "button",
                        text: '<i class="pf-icon pf-16 pf-report_open"></i> Історія',
                        click: function () {
                            bars.ui.dialog({
                                width: 400,
                                height: 110,
                                content: {
                                    url: bars.config.urlContent('/cash/violations/SelectHistoryPeriodBranch/')
                                }
                            });
                        }
                    }
                ]
            });
            $('#AtmViolationsToolbar').kendoToolBar({
                resizable: false,
                items: [
                    {
                        type: "button",
                        text: '<i class="pf-icon pf-16 pf-exel"></i> Вигрузити в EXCEL',
                        click: function () {
                            var mfoList = getAccFilter();
                            var url = bars.config.urlContent("/Cash/Violations/GetAtmViolationsFile/");
                            if (mfoList) {
                                for (var i = 0; i < mfoList.length; i++) {
                                    if (i === 0) {
                                        url = url + '?mfoList=' + mfoList[i];
                                    } else {
                                        url = url + '&mfoList=' + mfoList[i];
                                    }
                                }
                            }
                            document.location.href = url;
                        }
                    }, {
                        type: 'separator'
                    }, {
                        type: "button",
                        text: '<i class="pf-icon pf-16 pf-report_open"></i> Історія',
                        click: function () {
                            bars.ui.dialog({
                                width: 400,
                                height: 80,
                                content: {
                                    url: bars.config.urlContent('/cash/violations/SelectHistoryPeriodAtm/')
                                }
                            });
                        }
                    }
                ]
            });

            $("#gridCashBranchViolation").kendoGrid({
                detailTemplate: kendo.template($("#template_CashBranchChild").html()),
                heidht: 100,
                dataBound: function (e) {
                    bars.ext.kendo.grid.noDataRow(e);
                },
                "columns": [
                {
                    "title": " ",
                    "field": "COLOUR",
                    template: '<div style="width:30px; height: 20px; background-color:#= COLOUR #">  </div>',
                    attributes: { "style": "padding:2px;width:40px;" },
                    filterable: false,
                    "encoded": true
                }, {
                    "title": "МФО",
                    "field": "KF",
                    template: '<div title="#=RU_NAME#">#=KF#</div>',
                    "encoded": true
                }, {
                    "title": "Назва РУ",
                    "field": "RU_NAME",
                    template: '<div title="#=RU_NAME#">#=RU_NAME#</div>',
                    "encoded": true
                }, {
                    "title": "Відділення",
                    "field": "ACC_BRANCH",
                    "encoded": true
                }, {
                    "title": "Тип ліміту",
                    "field": "LIM_TYPE",
                    filterable: false,
                    sortable: false,
                    "encoded": true
                }, {
                    "title": "Валюта",
                    "field": "ACC_CURRENCY",
                    "encoded": true
                }, {
                    "title": "Кількість рахунків",
                    "field": "ACC_CNT",
                    "encoded": true
                }, {
                    "title": "Поточний ліміт",
                    "field": "SUM_LIM",
                    format: "{0:n2}",
                    attributes: { "class": "money badSum" },
                    "encoded": true
                }, {
                    "title": "Максимальний ліміт",
                    "field": "SUM_LIMMAX",
                    format: "{0:n2}",
                    attributes: { "class": "money badSum" },
                    "encoded": true
                }, {
                    "title": "Баланс рахунку",
                    "field": "SUM_BAL",
                    format: "{0:n2}",
                    attributes: { "class": "money badSum" },
                    "encoded": true
                }, {
                    "title": "Сума поруш. макс. ліміту",
                    "field": "SUM_OVERTRESHOLD",
                    format: "{0:n2}",
                    attributes: { "class": "money badSum" },
                    "encoded": true
                }, {
                    "title": "% поруш. макс. лім.",
                    "field": "PRC_OVERLIM",
                    template: '#= (PRC_OVERLIM?PRC_OVERLIM + "%" : "") #',
                    "encoded": true
                }, {
                    "title": "К-ть днів поруш. макс. ліміту",
                    "field": "DIFF_DAYS",
                    "encoded": true
                }, {
                    "title": "Допустимий % поруш. макс. ліміту",
                    "field": "PERCENT_DEV",
                    template: '#=(PERCENT_DEV?PERCENT_DEV+"%":"")#',
                    "encoded": true
                }, {
                    "title": "Допустима к-ть днів поруш. макс. ліміту",
                    "field": "DAYS_VIOL",
                    "encoded": true
                }, {
                    command: [
                        {
                            name: "Історія",
                            imageClass: 'pf-icon pf-16 pf-report_open',
                            click: showBranchLimitArc
                        }
                    ],
                    title: "&nbsp;",
                    width: "130px"
                }],
                "pageable": {
                    "refresh": true,
                    "pageSizes": [10, 20, 50, 100, 200],
                    "buttonCount": 10
                },
                "sortable": true,
                "filterable": true,
                "resizable": true,
                "scrollable": false,
                dataSource: {
                    type: 'aspnetmvc-ajax',
                    transport: {
                        read: {
                            url: bars.config.urlContent("/Cash/Violations/GetCashBranchViolations/"),
                            data: getAccFilter
                        }
                    },
                    "pageSize": 10,
                    "page": 1,
                    "total": 0,
                    "serverPaging": true,
                    "serverSorting": true,
                    "serverFiltering": true,
                    "serverGrouping": true,
                    "serverAggregates": true,
                    "sort": [{
                        "field": "ACC_BRANCH",
                        "dir": "asc"
                    }],
                    "filter": [],
                    "error": onError,
                    "schema": {
                        "data": "Data",
                        "total": "Total",
                        "errors": "Errors",
                        "model": {
                            "id": "ACC_BRANCH",
                            "fields": {
                                DIFF_DAYS: { "type": "number" },
                                START_VIOL: { "type": "date" },
                                KF: { "type": "number" },
                                RU_NAME: { "type": "string" },
                                LIM_TYPE: { "type": "string" },
                                ACC_BRANCH: { "type": "string" },
                                ACC_CURRENCY: { "type": "number" },
                                ACC_CNT: { "type": "number" },
                                SUM_BAL: { "type": "number" },
                                SUM_LIM: { "type": "number" },
                                SUM_LIMMAX: { "type": "number" },
                                PERCENT_DEV: { "type": "number" },
                                DAYS_VIOL: { "type": "number" },
                                COLOUR: { "type": "string" },
                                PERIOD_START: { "type": "date" },
                                TRESHOLD_VIOLATION: { "type": "number" },
                                SUM_OVERTRESHOLD: { "type": "number" },
                                BDATE: { "type": "date" },
                                PRC_OVERLIM: { "type": "string" }
                            }
                        }
                    }
                }
            });



            $("#gridAtmViolation").kendoGrid({
                heidht: 100,
                dataBound: function (e) {
                    bars.ext.kendo.grid.noDataRow(e);
                },
                "columns": [
                {
                    "title": " ",
                    "field": "COLOUR",
                    template: '<div style="width:30px; height: 20px; background-color:#= COLOUR #">  </div>',
                    attributes: { "style": "padding:2px;width:40px;" },
                    filterable: false,
                    "encoded": true
                }, {
                    "title": "МФО",
                    "field": "KF",
                    "encoded": true
                }, {
                    "title": "Назва РУ",
                    "field": "NAME",
                    "encoded": true
                }, {
                    "title": "Відділення",
                    "field": "ACC_BRANCH",
                    "encoded": true
                }, {
                    "title": "Код банкомату",
                    "field": "COD_ATM",
                    "encoded": true
                }, {
                    "title": "Рахунок",
                    "field": "ACC_NUMBER",
                    "encoded": true
                }, {
                    "title": "Валюта",
                    "field": "ACC_CURRENCY",
                    "encoded": true
                }, {
                    "title": "Ліміт макс. загрузки",
                    "field": "LIM_MAXLOAD",
                    format: "{0:n2}",
                    attributes: { "class": "money badSum" },
                    "encoded": true
                }, {
                    "title": "Сума транзакції",
                    "field": "S",
                    format: "{0:n2}",
                    attributes: { "class": "money badSum" },
                    "encoded": true
                }, {
                    "title": "Дата транзакції",
                    "field": "FDAT",
                    "format": "{0:dd/MM/yyyy}",
                    "encoded": true
                },{
                    "title": "Сума поруш. ліміту макс. загрузки",
                    "field": "OVER_MAXLOAD",
                    format: "{0:n2}",
                    attributes: { "class": "money badSum" },
                    "encoded": true,
                    width: 200
                }, {
                    command: [
                        {
                            name: "Історія",
                            imageClass: 'pf-icon pf-16 pf-report_open',
                            click: function (e) {
                                var tr = $(e.target).closest("tr");
                                var data = $("#gridAtmViolation").data('kendoGrid').dataItem(tr);

                                showAtmLimitArc(data.COD_ATM);
                            }
                        }
                    ],
                    title: "&nbsp;",
                    width: "130px"
                }],
                "pageable": {
                    "refresh": true,
                    "pageSizes": [10, 20, 50, 100, 200],
                    "buttonCount": 10
                },
                "sortable": true,
                "filterable": true,
                "resizable": true,
                "scrollable": false,
                dataSource: {
                    type: 'webapi',
                    transport: {
                        read: {
                            url: bars.config.urlContent("/Cash/Violations/GetAtmViolations/"),
                            data: getAccFilter
                        }
                    },
                    "pageSize": 10,
                    "page": 1,
                    "total": 0,
                    "serverPaging": true,
                    "serverSorting": true,
                    "serverFiltering": true,
                    "serverGrouping": true,
                    "serverAggregates": true,
                    "sort": [{
                        "field": "KF",
                        "dir": "asc"
                    }],
                    "schema": {
                        "data": "Data",
                        "total": "Total",
                        "errors": "Errors",
                        "model": {
                            "id": "COD_ATM",
                            "fields": {
                                "COD_ATM": {
                                    "type": "string"
                                },
                                "KF": {
                                    "editable": false,
                                    "type": "number"
                                },
                                NAME: {
                                    "editable": false,
                                    "type": "string"
                                },
                                "ACC_BRANCH": {
                                    "editable": false,
                                    "type": "string"
                                },
                                "ACC_NUMBER": {
                                    "editable": false,
                                    "type": "number"
                                },
                                "ACC_CURRENCY": {
                                    "editable": false,
                                    "type": "number"
                                },
                                "LIM_MAXLOAD": {
                                    "type": "number"
                                },
                                "S": {
                                    "type": "number"
                                },
                                "OVER_MAXLOAD": {
                                    "type": "number"
                                },
                                "FDAT": {
                                    "editable": false,
                                    "type": "date"
                                },
                                "DAYS_SHOW": {
                                    "editable": false,
                                    "type": "number"
                                },
                                "COLOUR": {
                                    "editable": false,
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            });

            var refreshGrid = function (id) {
                var grid = $(id).date('kendoGrid');
                grid.dataSource.read();
                grid.refresh();
            }

            $("#buttonViolated").click(function () {
                model.setState(this.id, true);
            });

            $("#buttonNotViolated").click(function () {
                model.setState(this.id, false);
            });

            $("#buttonAll").click(function () {
                model.setState(this.id);
            });

            model.setState("buttonViolated", true);

            // если страница открыта из региона, то фильтра на МФО нет
            if (window.mfoFilter) {
                window.mfoFilter.registerObserver(function (filterList) {
                    model.filterList = filterList;
                    model.rereadGrids();
                });
            }
        });


        function formatBalance(item) {
            return getFormattedValue(item.Balance, item.LimitViolated);
        }

        function formatCurrentLimit(item) {
            return getFormattedValue(item.CurrentLimit, item.CurrentLimitViolated);
        }

        function formatMaxLimit(item) {
            return getFormattedValue(item.MaxLimit, item.MaxLimitViolated);
        }

        function formatLimitViolated(item) {
            return item.LimitViolated
                ? "<div class='k-block k-error-colored centerField'>Так</div>"
                : "<div class='k-block k-success-colored centerField'>Ні</div>";
        }
        function formatLimitCashViolated(key) {
            return key == 1
                ? "<div class='k-block k-error-colored centerField'>Так</div>"
                : "<div class='k-block k-success-colored centerField'>Ні</div>";
        }
        // Получить отформатированное значения для лимита (html)
        //  limitValue - значение колонки
        //  limitViolated - признак превышения лимита
        function getFormattedValue(limitValue, limitViolated) {
            if (limitValue == null) {
                return "";
            }

            var columnValue = kendo.toString(limitValue, "n");
            var html;
            if (limitViolated) {
                html = kendo.format("<span class='badSum'>{0}<span>",
                    columnValue
                );
            } else {
                html = columnValue;
            }
            return html;
        }



        /* Хранит состояние страницы и позволяет переключаться между функциями*/
        var model = {
            // ассоциативный массив отмеченных МФО (код - true/false)
            filterList: {},
            // массив отмеченных МФО
            getMfoList: function () {
                var mfos = [];
                for (key in model.filterList) {
                    if (model.filterList[key] === true) {
                        mfos.push(key);
                    }
                }
                return mfos;
            },

            // перечитать все гриды
            rereadGrids: function () {
                //this.rereadGrid("grid_mfo");
                this.rereadGrid("v_clim_cashviol_grpmfokv");
                this.rereadGrid("grid_acc");
                this.rereadGrid("gridCashBranchViolation");
                this.rereadGrid("gridAtmViolation");
            },

            // перечитать грид
            rereadGrid: function (gridId) {
                var curGrid = $("#" + gridId);
                if (curGrid.length != 0) {
                    curGrid.data("kendoGrid").dataSource.read();
                }
            },

            violationStatus: undefined,
            currentButtonId: undefined,
            setState: function (currentButtonId, violationStatus) {
                this.violationStatus = violationStatus;
                this.currentButtonId = currentButtonId;
                $(".nav-button").removeClass("k-primary");
                $("#" + currentButtonId).addClass("k-primary");
                this.rereadGrid("grid_mfo");
            }
        };

        function getMfoFilter() {
            return {
                mfoList: model.getMfoList(),
                violationStatus: model.violationStatus
            };
        }

        function getAccFilter() {
            return {
                mfoList: model.getMfoList()
            };
        }


        function onError(e) {
            if (e.status === "customerror") {
                var exception = e.errors;
                showModalWindow(exception.message);
            }
            else {
                alert("Generic server error.");
            }
        }

        function showModalWindow(content) {
            bars.ui.error({ text: content, width: 500, height: 400 });
        }

        function showAtmLimitArc(atmCode) {
            bars.ui.dialog({
                width: 600,
                height: 600,
                title: 'Перегляд історії по банкомату ' + atmCode,
                contentHtml: '<div id="atmLimitArcGrid"></div>',
                open: function () {
                    $('#atmLimitArcGrid').kendoGrid({
                        toolbar: ["excel"],
                        excel: {
                            fileName: 'історія по банкомату: ' + atmCode + '.xlsx',
                            toolbar: true,
                            allPages: true,
                            filterable: true,
                            proxyURL: bars.config.urlContent('/cash/Violations/ConvertBase64ToFile/')
                        },
                        heidht: 120,
                        dataBound: function (e) {
                            bars.ext.kendo.grid.noDataRow(e);
                        },
                        columns: [
                            {
                                field: 'FDAT',
                                title: 'Дата',
                                width: 100,
                                format: '{0:dd/MM/yyyy}'
                            }, {
                                field: 'S_SHARE',
                                title: 'Сума транзакції',
                                format: "{0:n2}",
                                attributes: { "class": "money" },
                                width: 130
                            }, {
                                field: 'OVER_MAXLOAD_SHARE',
                                title: 'Сума поруш. ліміту макс. загрузки',
                                format: "{0:n2}",
                                attributes: { "class": "money" },
                                width: 200
                            }, {
                                field: 'NAME_VIOLATION',
                                title: 'Ліміт порушений',
                                width: 130
                            }
                        ],
                        sortable: true,
                        filterable: true,
                        resizable: true,
                        selectable: "single",
                        pageable: {
                            refresh: true,
                            pageSizes: [10, 20, 50, 100, 200],
                            buttonCount: 5
                        },
                        dataSource: {
                            type: 'webapi',
                            transport: {
                                read: {
                                    url: bars.config.urlContent("/Cash/Violations/GetAtmLimitArc/"),
                                    data: { atmCode: atmCode }
                                }
                            },
                            "pageSize": 10,
                            "page": 1,
                            "total": 0,
                            "serverPaging": true,
                            "serverSorting": true,
                            "serverFiltering": true,
                            "serverGrouping": true,
                            "serverAggregates": true,
                            "schema": {
                                "data": "Data",
                                "total": "Total",
                                "errors": "Errors",
                                "model": {
                                    "fields": {
                                        FDAT: { "type": "date" },
                                        LIM_MAXLOAD: { "type": "number" },
                                        S: { "type": "number" },
                                        OVER_MAXLOAD: { "type": "number" },
                                        MAXLOAD_VIOLATION: { "type": "number" },
                                        LIM_MAXLOAD_SHARE: { "type": "number" },
                                        S_SHARE: { "type": "number" },
                                        OVER_MAXLOAD_SHARE: { "type": "number" },
                                        NAME_VIOLATION: { "type": "string" },
                                        "COD_ATM": {
                                            "type": "string"
                                        },
                                        "KF": {
                                            "editable": false,
                                            "type": "number"
                                        },
                                        NAME: {
                                            "editable": false,
                                            "type": "string"
                                        },
                                        "ACC_BRANCH": {
                                            "editable": false,
                                            "type": "string"
                                        },
                                        "ACC_NUMBER": {
                                            "editable": false,
                                            "type": "number"
                                        },
                                        "ACC_CURRENCY": {
                                            "editable": false,
                                            "type": "number"
                                        },
                                        "OVER_S": {
                                            "type": "number"
                                        },
                                        "DAYS_SHOW": {
                                            "editable": false,
                                            "type": "number"
                                        },
                                        "COLOUR": {
                                            "editable": false,
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    });
                }
            });
        }

        function showMfoLimitArc(mfo, currencyCode) {
            bars.ui.dialog({
                id: 'mfoLimitArcWindow',
                width: 600,
                height: 500,
                title: 'Перегляд історії по МФО: ' + mfo + '(' + currencyCode + ')',
                contentHtml: '<div id="mfoLimitArcGrid"></div>',
                open: function () {
                    $('#mfoLimitArcGrid').kendoGrid({
                        toolbar: ["excel"],
                        excel: {
                            fileName: 'історія по МФО: ' + mfo + '(' + currencyCode + ')' + '.xlsx',
                            toolbar: true,
                            allPages: true,
                            filterable: true,
                            proxyURL: bars.config.urlContent('/cash/Violations/ConvertBase64ToFile/')
                        },
                        heidht: 120,
                        dataBound: function (e) {
                            bars.ext.kendo.grid.noDataRow(e);
                        },
                        columns: [
                            {
                                field: 'LIM_DATE',
                                title: 'Дата',
                                width: 100,
                                format: '{0:dd/MM/yyyy}'
                            }, {
                                field: 'SUM_BAL_SHARE',
                                title: 'Баланс',
                                format: "{0:n2}",
                                attributes: { "class": "money" },
                                width: 130
                            }, {
                                field: 'LIM_MAX_SHARE',
                                title: 'Максимальний ліміт',
                                format: "{0:n2}",
                                attributes: { "class": "money" },
                                width: 200
                            }, {
                                field: 'NAME_VIOLATION',
                                title: 'Ліміт порушений',
                                width: 130
                            }
                        ],
                        sortable: true,
                        filterable: true,
                        resizable: true,
                        selectable: "single",
                        pageable: {
                            refresh: true,
                            pageSizes: [10, 20, 50, 100, 200],
                            buttonCount: 5
                        },
                        dataSource: {
                            type: 'webapi',
                            transport: {
                                read: {
                                    url: bars.config.urlContent("/Cash/Violations/GetMfoLimitArc/"),
                                    data: {
                                        mfo: mfo,
                                        currencyCode: currencyCode
                                    }
                                }
                            },
                            "pageSize": 10,
                            "page": 1,
                            "total": 0,
                            "serverPaging": true,
                            "serverSorting": true,
                            "serverFiltering": true,
                            "serverGrouping": true,
                            "serverAggregates": true,
                            "schema": {
                                "data": "Data",
                                "total": "Total",
                                "errors": "Errors",
                                "model": {
                                    "fields": {
                                        LIM_DATE: { "type": "date" },
                                        SUM_BAL: { "type": "number" },
                                        SUM_BAL_SHARE: { "type": "number" },
                                        LIM_MAX_SHARE: { "type": "number" },
                                        NAME_VIOLATION: { "type": "string" }
                                    }
                                }
                            }
                        }
                    });
                }
            });
        }


        function showBranchLimitArc(e) {
            e.preventDefault();

            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            var branch = dataItem.ACC_BRANCH;
            var currencyCode = dataItem.ACC_CURRENCY;

            var accWin = $('#accLimitArcWindow');
            if (accWin.length !== 0) {
                return;
            }

            bars.ui.dialog({
                id: 'branchLimitArcWindow',
                width: 600,
                height: 500,
                title: 'Перегляд історії по відділенню: ' + branch + '(' + currencyCode + ')',
                contentHtml: '<div id="branchLimitArcGrid"></div>',
                open: function () {
                    $('#branchLimitArcGrid').kendoGrid({
                        toolbar: ["excel"],
                        excel: {
                            fileName: 'історія по відділенню: ' + branch + '(' + currencyCode + ')' + '.xlsx',
                            toolbar: true,
                            allPages: true,
                            filterable: true,
                            proxyURL: bars.config.urlContent('/cash/Violations/ConvertBase64ToFile/')
                        },
                        heidht: 120,
                        dataBound: function (e) {
                            bars.ext.kendo.grid.noDataRow(e);
                        },
                        columns: [
                            {
                                field: 'LDAT',
                                title: 'Дата',
                                width: 100,
                                format: '{0:dd/MM/yyyy}'
                            }, {
                                field: 'SUM_BAL_SHARE',
                                title: 'Баланс',
                                format: "{0:n2}",
                                attributes: { "class": "money" },
                                width: 150
                            }, {
                                field: 'SUM_LIMMAX_SHARE',
                                title: 'Максимальний ліміт',
                                format: "{0:n2}",
                                attributes: { "class": "money" },
                                width: 200
                            }, {
                                field: 'SUM_OVERLIMMAX_SHARE',
                                title: 'Сума поруш. макс. ліміту',
                                format: "{0:n2}",
                                attributes: { "class": "money" },
                                width: 200
                            }, {
                                field: 'PRC_OVERLIM',
                                title: '% поруш. макс. ліміту',
                                width: 200
                            },
                            {
                                field: 'NAME_VIOLATION',
                                title: 'Ліміт порушений',
                                width: 130
                            }
                        ],
                        sortable: true,
                        filterable: true,
                        resizable: true,
                        selectable: "single",
                        pageable: {
                            refresh: true,
                            pageSizes: [10, 20, 50, 100, 200],
                            buttonCount: 5
                        },
                        dataSource: {
                            type: 'webapi',
                            transport: {
                                read: {
                                    url: bars.config.urlContent("/Cash/Violations/GetBranchLimitArc/"),
                                    data: {
                                        branch: branch,
                                        currencyCode: currencyCode
                                    }
                                }
                            },
                            "pageSize": 10,
                            "page": 1,
                            "total": 0,
                            "serverPaging": true,
                            "serverSorting": true,
                            "serverFiltering": true,
                            "serverGrouping": true,
                            "serverAggregates": true,
                            "schema": {
                                "data": "Data",
                                "total": "Total",
                                "errors": "Errors",
                                "model": {
                                    "fields": {
                                        LDAT: { "type": "date" },
                                        SUM_BAL: { "type": "number" },
                                        SUM_LIMMAX: { "type": "number" },
                                        SUM_BAL_SHARE: { "type": "number" },
                                        SUM_OVERLIMMAX_SHARE: { "type": "number" },
                                        PRC_OVERLIM: { "type": "string" },
                                        SUM_LIMMAX_SHARE: { "type": "number" },
                                        NAME_VIOLATION: { "type": "string" }
                                    }
                                }
                            }
                        }
                    });
                }
            });
        }

        function formatLimitViolatedMfo(item) {
            return item.LIMIT_VIOLATION_NAME.toUpperCase() === 'НІ'
                ? "<div class='k-block k-error-colored centerField'>" + item.LIMIT_VIOLATION_NAME + "</div>"
                : "<div class='k-block k-success-colored centerField'>" + item.LIMIT_VIOLATION_NAME + "</div>";
        }

        function showAccLimitArc(e) {
            e.preventDefault();

            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            var accId = dataItem.ACC_ID;
            var accNumber = dataItem.ACC_NUMBER;
            var accCurCode = dataItem.ACC_CURRENCY;

            bars.ui.dialog({
                id: 'accLimitArcWindow',
                width: 600,
                height: 500,
                title: 'Перегляд історії по рахунку: ' + accNumber + '(' + accCurCode + ')',
                contentHtml: '<div id="accLimitArcGrid"></div>',
                open: function () {
                    $('#accLimitArcGrid').kendoGrid({
                        toolbar: ["excel"],
                        excel: {
                            fileName: 'історія по рахунку ' + accNumber + '(' + accCurCode + ')' + '.xlsx',
                            toolbar: true,
                            allPages: true,
                            filterable: true,
                            proxyURL: bars.config.urlContent('/cash/Violations/ConvertBase64ToFile/')
                        },
                        heidht: 120,
                        dataBound: function(e) {
                            bars.ext.kendo.grid.noDataRow(e);
                        },
                        columns: [
                            {
                                field: 'LDAT',
                                title: 'Дата',
                                width: 100,
                                format: '{0:dd/MM/yyyy}'
                            }, {
                                field: 'ACC_BAL_SHARE',
                                title: 'Баланс',
                                format: "{0:n2}",
                                attributes: { "class": "money" },
                                width: 130
                            }, {
                                field: 'LIM_MAX_SHARE',
                                title: 'Максимальний ліміт',
                                format: "{0:n2}",
                                attributes: { "class": "money" },
                                width: 200
                            }, {
                                field: 'NAME_VIOLATION',
                                title: 'Ліміт порушений',
                                width: 130
                            }
                        ],
                        sortable: true,
                        filterable: true,
                        resizable: true,
                        selectable: "single",
                        pageable: {
                            refresh: true,
                            pageSizes: [10, 20, 50, 100, 200],
                            buttonCount: 5
                        },
                        dataSource: {
                            type: 'webapi',
                            transport: {
                                read: {
                                    url: bars.config.urlContent("/Cash/Violations/GetAccountLimitArc/"),
                                    data: {
                                        accId: accId
                                    }
                                }
                            },
                            "pageSize": 10,
                            "page": 1,
                            "total": 0,
                            "serverPaging": true,
                            "serverSorting": true,
                            "serverFiltering": true,
                            "serverGrouping": true,
                            "serverAggregates": true,
                            "schema": {
                                "data": "Data",
                                "total": "Total",
                                "errors": "Errors",
                                "model": {
                                    "fields": {
                                        LDAT: { "type": "date" },
                                        ACC_BALANCE: { "type": "number" },
                                        LIM_MAX: { "type": "number" },
                                        ACC_BAL_SHARE: { "type": "number" },
                                        LIM_MAX_SHARE: { "type": "number" },
                                        NAME_VIOLATION: { "type": "string" }
                                    }
                                }
                            }
                        }
                    });
                }
            });
        }
    </script>

    <style>
        table.viol-table tr td {
            vertical-align: top;
        }

        .rightField {
            text-align: right;
        }

        .centerField {
            text-align: center;
        }

        .navigationBar {
            padding: 10px;
        }

        .badSum {
            font-style: italic;
            font-weight: bold;
        }
    </style>
