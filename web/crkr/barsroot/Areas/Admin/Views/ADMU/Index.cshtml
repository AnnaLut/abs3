@{
    Layout = "~/Views/Shared/_LayoutKendo.cshtml";
    ViewBag.Title = "Адміністрування користувачів";
}

<h2>@ViewBag.Title</h2>

<div id="UserEditWindow">
    <form id="UserConfigForm">
        <div id="UserEditTabStrip">
            <ul>
                <li>Реквізити користувача</li>
                <li>Параметри з'єднання</li>
            </ul>
            <div id="UsersInfoTab">
                <div id="UsersInfo"></div>
            </div>
            <div id="UsersConnectionsTab">
                <div id="UsersConnections">

                </div>
            </div>
        </div>
        <div id="UserEditWindowBtns">
            <button id="start">Виконати</button>
            <button id="cancel">Відмінити</button>
        </div>
    </form>
</div>

@* - User Editing Templates - *@

<script type="text/x-kendo-template" id="UserConfigTemplate">
    <div class="parent">
        <div class="row">
            <div class="col1">Код</div>
            <div class="col2"><input readonly name="p_usrid" id="userID" class="nonEdit" type="text" value="#=USER_ID#" /></div>
        </div>
        <div class="row">
            <div class="col1">Табельний №:</div>
            <div class="col2"><input id="editInput" onkeyup="validForm()" name="p_usrtabn" type="text" value="#=USER_TABNUM == null ? '' : USER_TABNUM#" /></div>
        </div>
        <div class="row">
            <div class="col1">ПІБ</div>
            <div class="col2"><input name="p_usrfio" type="text" value="#=USER_FIO#" /></div>
        </div>
        <div class="row">
            <div class="col1">Тип користувача</div>
            <div class="col2"><input name="p_usrtype" id="dropdownClassList" value="#=USER_CLSID#" /></div> 
        </div>
        <div class="row">
            <div class="col1">Група</div>
            <div class="col2"><input name="p_tipid" id="dropdownGroupList" value="#=USER_TIP#"></div>	
        </div>
        <div class="row">
            <div class="col1">Відділення</div>
            <div class="col2"><input name="p_usrbranch" id="usersTobo" readonly class="nonEdit" type="text"  /></div>
            <button id='pbEditBranch' type='button' class='k-button' onclick='addBranch()' title='Додати відділення'><i class='pf-icon pf-16 pf-add_button'></i></button>
        </div>
        <div class="row">
            <div class="col1"></div>
            <div class="col2"><input readonly id="usersToboName" class="nonEditDep" type="text" /></div>
        </div>
        <div class="row">
            <div>
                <input name="p_usraccown" id="chk_type" type="checkbox" value="#=USER_TYPE#" /> Відповідальний представник
            </div>
        </div>
        <div class="row">
            <div>
                <input name="p_canselectbranch" id="chk_canSelect" type="checkbox" value="#=USER_CANSELECTBRANCH#" /> Можливіть позиціонувати себе відділенням
            </div>
        </div>
    </div>
</script>
<script type="text/x-kendo-template" id="UserConnectConfTemplate">
    <div class="parent">
        <div class="row">
            <div class="col1">Логін</div>
            <div class="col2"><input readonly class="nonEdit" type="text" value="#=USER_LOGNAME#" /></div>
        </div>
        <div class="row">
            <div class="col1">Пароль</div>
            <div class="col2"><input name="p_recpasswd" type="password" id="chkEditPass"  /></div>
        </div>
        <div class="row">
            <div class="col1">
                <p id="expireDateText" style="display:none">Дійсний до</p>
            </div>
            <div class="col2">
                <input id="expireDate" type="text" class="nonEdit" style="display:none">
            </div>
        </div>
        <div class="row">
            <div>
                <input name="p_recappauth" id="isProxy" type="checkbox" /> Дозволити з'єднання через Proxy-користувача
            </div>
        </div>
        <div class="row">
            <div class="col1"></div>
            <div class="col2"><input readonly class="nonEdit" type="text" value="@if (ViewBag.Proxy != null)
            {<text> ViewBag.Proxy </text> } else { <text> APPSERVER </text> }"></div>
        </div>
        <div class="row">
            <div class="col1">Роль за замовчуванням</div>
            <div class="col2"><input name="p_recdefrole" id="dropdownRole"></div>
        </div>
        <div class="row">
            <div class="col1">Файл профілю ресурсів</div>
            <div class="col2"><input name="p_recprof" id="dropdownProFile" value="#=UREC_PROFILE#"></div>
        </div>
        <div class="row">
            <div class="col1">Файл профілю для Web</div>
            <div class="col2"><input name="p_usrwprof" id="dropdownWebProFile" value="#=USER_WEBPROFILE#"></div>
        </div>
        @* визначити умови обмеження на редагування для input name="p_usrusegtw" *@
        <div class="row">
            <div>
                <input hidden name="p_usrusegtw" id="chk_useGtw" type="checkbox" value="#=USER_USEGTW#" /> @*Користувач GateWay*@
            </div>
        </div>
    </div>
</script>

@* - User Adding Templates - *@

<script type="text/x-kendo-template" id="UserAddTemplate">
    <div class="parent">
        <div class="row">
            <div class="col1">Код</div>
            <div class="col2"><input readonly name="p_usrid" id="userID" class="nonEdit" type="text"  /></div>
        </div>
        <div class="row">
            <div class="col1">Табельний №</div>
            <div class="col2"><input name="p_usrtabn" type="text" /></div>
        </div>
        <div class="row">
            <div class="col1">ПІБ</div>
            <div class="col2"><input name="p_usrfio" type="text"  /></div>
        </div>
        <div class="row">
            <div class="col1">Тип користувача</div>
            <div class="col2"><input name="p_usrtype" id="dropdownClassList"  /></div>
        </div>
        <div class="row">
            <div class="col1">Група</div>
            <div class="col2"><input name="p_tipid" id="dropdownGroupList" ></div>
        </div>
        <div class="row">
            <div class="col1">Відділення</div>
            <div class="col2">
                <input name="p_usrbranch" id="branchTobo" readonly class="nonEdit" type="text"  />
                <button id='pbAddBranch' type='button' class='k-button' onclick='addBranch()' title='Додати користувача'><i class='pf-icon pf-16 pf-add_button'></i></button>
            </div>
        </div>
        <div class="row">
            <div class="col1"></div>
            <div class="col2"><input readonly id="branchName" class="nonEditDep" type="text"  /></div>
        </div>
        <div class="row">
            <div>
                <input id="addType" type="checkbox" checked /> Відповідальний представник
                <input hidden name="p_usraccown" id="addTypeHidden" type="text" value="1" />
            </div>
        </div>
        <div class="row">
            <div>
                <input id="addCanSelect" type="checkbox" checked /> Можливіть позиціонувати себе відділенням
                <input hidden name="p_canselectbranch" id="addCanSelectHidden" type="text" value="1" />
            </div>
        </div>
    </div>
</script>
<script type="text/x-kendo-template" id="UserAddConnectConfTemplate">
    <div class="parent">
        <div class="row">
            <div class="col1">Логін</div>
            <div class="col2"><input name="p_reclogname" class="nonEdit" type="text" /></div>
        </div>
        <div class="row">
            <div class="col1">Пароль</div>
            <div class="col2"><input name="p_recpasswd" id="chkAddPass" type="password" /></div>
        </div>
        <div class="row">
            <div class="col1">
                <p id="expireDateText" style="display:none">Дійсний до</p>
            </div>
            <div class="col2">
                <input id="expireDate" type="text" class="nonEdit" style="display:none">
            </div>
        </div>
        <div class="row">
            <div>
                <input name="p_recappauth" type="checkbox" /> Дозволити з'єднання через Proxy-користувача
            </div>
        </div>
        <div class="row">
            <div class="col1"></div>
            <div class="col2">
                <input readonly class="nonEdit" type="text" value="APPSERVER">
            </div>
        </div>
        <div class="row">
            <div class="col1">Роль за замовчуванням</div>
            <div class="col2"><input name="p_recdefrole" id="dropdownRole"></div>
        </div>
        <div class="row">
            <div class="col1">Файл профілю ресурсів</div>
            <div class="col2"><input name="p_recprof" id="dropdownProFile" ></div>
        </div>
        <div class="row">
            <div class="col1">Файл профілю для Web</div>
            <div class="col2"><input name="p_usrwprof" id="dropdownWebProFile" ></div>
        </div>
        @* визначити умови обмеження на редагування для input name="p_usrusegtw" *@
        <div class="row">
            <div>
                <input hidden id="addUseGtw" type="checkbox"  /> @*Користувач GateWay*@
                <input hidden name="p_usrusegtw" id="addUseGtwHidden" type="text" value="0" />
            </div>
        </div>
    </div>
</script>
@* ----- Passwords   ---------------------------------------------------------------------------*@
<div id="winPass">
    <input type="password" id="winPassValue" autofocus />
    <button id="btnOk" type="button" onclick="passValid()">Ok</button>
</div>

<div id="passComparing">
    <input type="password" id="passCompVal" autofocus />
    <button id="btnToPassComp" type="button" onclick="userPassCompare()">Ok</button>
</div>
@* ------ User Cloning Windows ------------------------------------------------------------------*@
<div id="usersResCloneWindow">
    <div id="clonedToolbar"></div>
    <div id="clonedGrid"></div>
</div>
<div id="charactersCloneWindow">
    <div id="cloneToolbar"></div>
    <div id="clonesGrid"></div>
</div>
@* ------  Users Branches -----------------------------------------------------------------------*@
<div id="branchWindow">
    <div id="branchToolBar"></div>
    <div id="branchGrid"></div>
</div>
@* ------  TransmitUserAccounts  -----------------------------------------------------------------*@
<div id="TransmitWindow">
    <div id="TransmitToolBar"></div>
    <div id="TransmitUserGrid"></div>
</div>
@* ------  Lock/Unlock User  -----------------------------------------------------------------*@
<div id="userStatusWindow">
    <h4>Оберіть період актуальності дії:</h4>
    <p>
        <label for="start">Дата початку: &nbsp</label><input id="startD" style="width: 100px" /> 
                &nbsp
        <label for="end">Дата завершення: &nbsp</label><input id="endD" style="width: 100px" />
    </p>
    <div class="wrapper">
        <button class="k-button" id="go">Задати термін</button>
    </div> 
</div>
<div id="UsersConfigToolBar"></div>
@* -----      Main Grid        ------------------------------------------------------------------*@
<div id="ADMUGrid"></div><br />

<div id="tabstrip">
    <ul>
        <li>АРМи</li>
        @*<li>Банківські операції</li>
        <li>Групи контролю</li>
        <li>Звіти НБУ</li>
        <li>Групи користувачів</li>*@
    </ul>
    <div id="admTab">
        <div id="panels">
            <div id="grid1"></div>
            <div id="commands">
                <div><a href="#" id="copySelectedToGrid1" class="k-button">&lt;</a></div>
                <div><a href="#" id="copySelectedToGrid2" class="k-button">&gt;</a></div>
            </div>
            <div id="grid2"></div>
        </div>
    </div>
    @*<div id="ttsTab">
        <div id="panels">
            <div id="grid3"></div>
            <div id="commands">
                <div><a href="#" id="copySelectedToGrid3" class="k-button">&lt;</a></div>
                <div><a href="#" id="copySelectedToGrid4" class="k-button">&gt;</a></div>
            </div>
            <div id="grid4"></div>
        </div>
    </div>
    <div id="chkgrpsTab">
        <div id="panels">
            <div id="grid5"></div>
            <div id="commands">
                <div><a href="#" id="copySelectedToGrid5" class="k-button">&lt;</a></div>
                <div><a href="#" id="copySelectedToGrid6" class="k-button">&gt;</a></div>
            </div>
            <div id="grid6"></div>
        </div>
    </div>
    <div id="nburepsTab">
        <div id="panels">
            <div id="grid7"></div>
            <div id="commands">
                <div><a href="#" id="copySelectedToGrid7" class="k-button">&lt;</a>
                </div>
                <div><a href="#" id="copySelectedToGrid8" class="k-button">&gt;</a>
                </div>
            </div>
            <div id="grid8"></div>
        </div>
    </div>
    <div id="userGrpTab">
        <div id="panels">
            <div id="grid9"></div>
            <div id="commands">
                <div><a href="#" id="copySelectedToGrid9" class="k-button">&lt;</a></div>
                <div><a href="#" id="copySelectedToGrid10" class="k-button">&gt;</a></div>
            </div>
            <div id="grid10"></div>
        </div>
    </div>*@
</div>

<script>
    var proxy = "@ViewBag.Proxy";
    var funcType = "none";

    $('#UserEditWindow').kendoWindow({
        title: "Введення даних - [користувач]",
        visible: false,
        width: "500px",
        resizable: false,
        actions: ["Close"]
    });

    $('#ADMUGrid').on("dblclick", "tbody > tr", openUserEditWindow);

    $('#cancel').kendoButton();
    $('#cancel').on('click', closeUserEditWindow);

    function openUserAddWindow() {
        funcType = "add";
        var window = $("#UserEditWindow").data("kendoWindow");
        var tab1 = $("#UsersInfo");
        var tab2 = $("#UsersConnections")

        var templateUConf = kendo.template($("#UserAddTemplate").html());
        var templateUConn = kendo.template($("#UserAddConnectConfTemplate").html());

        tab1.html(templateUConf(""));
        tab2.html(templateUConn(""));
        initializeUsersElements();
        window.center();
        window.open();
    }

    function openUserEditWindow() {
        funcType = "edit";
        var window = $("#UserEditWindow").data("kendoWindow");

        var gridADMU = getADMUGrid();
        var currentRow = gridADMU.dataItem(gridADMU.select());
        var userID = { userID: currentRow.USER_ID };
        var userLogin = { userLogin: currentRow.USER_LOGNAME }

        bars.ui.loader('#UserEditWindow', true);

        $.get('@Url.Action("GetCurrentUser")', userID).done(function (result) {
            bars.ui.loader('#UserEditWindow', false);
            var tab1 = $("#UsersInfo");
            var tab2 = $("#UsersConnections")
            var templateUConf = kendo.template($("#UserConfigTemplate").html());
            var templateUConn = kendo.template($("#UserConnectConfTemplate").html());
            tab1.html(templateUConf(result.data));
            tab2.html(templateUConn(result.data));

            // User's branch:
            $("#usersTobo").val(currentRow.USER_BRANCH);
            $("#usersToboName").val("Відділення " + currentRow.USER_BRANCH);

            if (result.data.USER_TYPE == 1) {
                $('#chk_type').prop("checked", true);
            } else {
                $('#chk_type').prop("checked", false);
            }
            if (result.data.USER_CANSELECTBRANCH == 'Y') {
                $('#chk_canSelect').prop("checked", true);
            } else {
                $('#chk_canSelect').prop("checked", false);
            }
            if (result.data.USER_USEGTW == 1) {
                $('#chk_useGtw').prop("checked", true);
            } else {
                $('#chk_useGtw').prop("checked", false);
            }
            if (result.data.UREC_PROXY == "APPSERVER") {
                $('#isProxy').prop("checked", true);
            } else {
                $('#isProxy').prop("checked", false);
            }

            initializeUsersElements(userID, userLogin);
            window.center();
            window.open();
        });
    }
    function closeUserEditWindow() {
        var window = $("#UserEditWindow").data("kendoWindow");
        window.close();
    }

    var tabstrip = $("#UserEditTabStrip").kendoTabStrip().data("kendoTabStrip");
    tabstrip.select(0);

    function initializeUsersElements(userID, userLogin) {
        if (userID != null && userLogin != null) {
            $.get('@Url.Action("GetExpireDate")', userID).done(function (result) {
                if (result.Data != null && result.Data.length > 0) {
                    $('#expireDate').val(result.Data);
                    $('#expireDate').show();
                    $('#expireDateText').show();
                }
            });

            @*$.get('@Url.Action("GetUserRoles")', userLogin).done(function (result) {
                var toRow = result.data;

                var userRoles = "";
                for (var i = 0; i < toRow.length; i++) {
                    userRoles += toRow[i].text + ', ';
                }
                userRoles = userRoles.substring(0, userRoles.length - 2);
                /*var userRoles = toRow.reduce(function (a, b) {
                    str = a + b.text + ', ';
                    return str.substring(0, str.length - 2);
                }, '');*/

                var dSourse;
                if (userRoles != "BARS_CONNECT") {
                    dSourse = [
                        { text: userRoles, value: userRoles },
                        { text: "BARS_CONNECT", value: "BARS_CONNECT" }
                    ]
                } else {
                    dSourse = [
                        { text: "BARS_CONNECT", value: "BARS_CONNECT" }
                    ]
                }

                $("#dropdownRole").kendoDropDownList({
                    dataTextField: "text",
                    dataValueField: "value",
                    dataSource: dSourse
                });
            });*@
        }
        else {
            $("#dropdownRole").kendoDropDownList({
                dataTextField: "text",
                dataValueField: "value",
                dataSource: [
                    { text: "BARS_CONNECT", value: "BARS_CONNECT" }
                ]
            });
        }

        $("#dropdownClassList").kendoDropDownList({
            dataSource: [
              { text: "Технічний", value: "-1" },
              { text: "Користувач", value: "0" },
              { text: "Технолог", value: "2" },
              { text: "Адміністратор", value: "3" },
              { text: "Бухгалтер", value: "3" }
            ],
            dataTextField: "text",
            dataValueField: "value"
        });

        $("#dropdownGroupList").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            dataSource: [
              { text: "Касир-операціоніст (WEB)", value: "1" },
              { text: "Бухгалтер (WEB)", value: "2" },
              { text: "Економіст/кредитний інспектор (WEB)", value: "3" },
              { text: "Керівник підрозділу (WEB)", value: "4" },
              { text: "Розрахунковий центр (РУ)", value: "5" },
              { text: "Валютний відділ (РУ)", value: "6" },
              { text: "Ревізійний відділ", value: "7" },
              { text: "Фінансово-економічний відділ (РУ)", value: "8" },
              { text: "Бухгалтерія (РУ)", value: "9" },
              { text: "Кредитний відділ ФО (РУ)", value: "10" },
              { text: "Кредитний відділ ЮО (РУ)", value: "11" },
              { text: "Обслуговування ЮО та VIP (РУ)", value: "12" },
              { text: "Фінансовий моніторинг (РУ)", value: "13" },
              { text: "Відділ депозитів", value: "14" },
              { text: "Працівник сховища", value: "15" },
              { text: "Бухгалтер по валюті", value: "16" }
            ]
        });

        $("#dropdownProFile").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            value: "DEFAULT",
            dataSource: [
                { text: "BARS_DEFAULT", value: "BARS_DEFAULT" },
                { text: "DEFAULT", value: "DEFAULT" }
            ]
        });

        $("#dropdownWebProFile").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            dataSource: [
                { text: "Профіль за замовчуванням", value: "DEFAULT_PROFILE" }
            ]
        });
    }

    // ********* "Start" btn Submit Config   *************************************************
    $('#start').kendoButton();
    $('#start').on('click', inOrderToFuncType);

    function inOrderToFuncType() {
        if (funcType == "add") {
            var pass = $('#chkAddPass').val();
            if (pass != null && pass != "") {
                $('#passComparing').data("kendoWindow").center().open();
            }
            else {
                addUser();
            }
        }
        else if (funcType == "edit") {
            var pass = $('#chkEditPass').val();
            if (pass != null && pass != "") {
                $('#passComparing').data("kendoWindow").center().open();
            }
            else {
                editUser();
            }
        }
    }

    function addFormValidation() {
        var userFIO = $("input[name='p_usrfio']").val();
        if (userFIO == "" || userFIO == null) {
            $("input[name='p_usrfio']").addClass("error");
            return false;
        } else {
            $("input[name='p_usrfio']").removeClass("error");
        }

        var userBranch = $("input[name='p_usrbranch']").val();
        if (userBranch == "" || userBranch == null) {
            $("input[name='p_usrbranch']").addClass("error");
            return false;
        } else {
            $("input[name='p_usrbranch']").removeClass("error");
        }

        var userLgn = $("input[name='p_reclogname']").val();
        if (userLgn == "" || userLgn == null) {
            $("input[name='p_reclogname']").addClass("error");
            return false;
        } else {
            $("input[name='p_reclogname']").removeClass("error");
        }

        var userPass = $("input[name='p_recpasswd']").val();
        if (userPass == "" || userPass == null) {
            $("input[name='p_recpasswd']").addClass("error");
            return false;
        } else {
            $("input[name='p_recpasswd']").removeClass("error");
        }

        return true;
    }

    function editFormValidation() {
        var userFIO = $("input[name='p_usrfio']").val();
        if (userFIO == "" || userFIO == null) {
            $("input[name='p_usrfio']").addClass("error");
            return false;
        } else {
            $("input[name='p_usrfio']").removeClass("error");
        }

        var userBranch = $("input[name='p_usrbranch']").val();
        if (userBranch == "" || userBranch == null) {
            $("input[name='p_usrbranch']").addClass("error");
            return false;
        } else {
            $("input[name='p_usrbranch']").removeClass("error");
        }

        var regex = new RegExp(); // expression here

        $("#editInput").filter(function () {
            return regex.test($(this).text());
        });

        return true;
    }

    function validForm() {
        $('#editInput').keyup(function () {
            this.value = this.value.replace(/[\u0400-\u04FF]/gi, '');
        });
    }

    // визначити допустимий логін
    /*function loginValidation() {
        var sample = /^[a-zA-Z0-9]+$/;
        var login = $("input[name='p_reclogname']").val();
        var result = login.match(sample);
        return result;
    }*/

    function addUser() {
        var gridADMU = getADMUGrid();
        var currentRow = gridADMU.dataItem(gridADMU.select());

        if ($('#addType').prop('checked') == false) {
            $('#addTypeHidden').val("0");
        }
        if ($('#addCanSelect').prop('checked') == false) {
            $('#addCanSelectHidden').val("0");
        }
        if ($('#addUseGtw').prop('checked') == true) {
            $('#addUseGtwHidden').val("1");
        }
        if (addFormValidation()) {
            var userAddParams = $('#UserConfigForm').serialize();
            bars.ui.loader('#UserEditWindow', true);

            $.post('@Url.Action("AddUser")', userAddParams).done(function (result) {
                if (result.status == 'ok') {
                    bars.ui.loader('#UserEditWindow', false);
                    bars.ui.confirm({
                        text: 'Нового користувача успішно створено!'
                    }, function () {
                        $('#ADMUGrid').data('kendoGrid').dataSource.read();
                        $('#ADMUGrid').data('kendoGrid').refresh();
                        closeUserEditWindow();
                    });
                } else {
                    bars.ui.loader('#UserEditWindow', false);
                    var re = "ORA";
                    var str = result.message;
                    var newstr = str.replace(re, '</br>ORA');
                    bars.ui.error({ text: 'Сталася помилка. Користувача НЕ внесено!</br>' + newstr }, function () {
                        closeUserEditWindow();
                    });
                }
            });
        } else {
            bars.ui.error({ text: 'Не всі обов\'язкові поля заповнені!' });
        }
    }

    function editUser() {
        var gridADMU = getADMUGrid();
        var currentRow = gridADMU.dataItem(gridADMU.select());
        var redirectToRow = currentRow.USER_ID;
        //необхідні параметри:
        //p_usrusearc   -    Признак доступности арх. схемы

        if (editFormValidation()) {
            var userEditParams = $('#UserConfigForm').serialize();
            bars.ui.loader('#UserEditWindow', true);
            $.post('@Url.Action("EditUser")', userEditParams).done(function (result) {
                if (result.status == 'ok') {
                    bars.ui.loader('#UserEditWindow', false);
                    bars.ui.confirm({
                        text: 'Зміни у реквізитах користувача ' + currentRow.USER_LOGNAME + '</br>' +
                        'внесено до Бази Даних'
                    }, function () {
                        $('#ADMUGrid').data('kendoGrid').dataSource.read();
                        $('#ADMUGrid').data('kendoGrid').refresh();
                        closeUserEditWindow();
                    });
                } else {
                    bars.ui.loader('#UserEditWindow', false);
                    bars.ui.error({ text: 'Сталася помилка. Зміни НЕ внесено!' }, function () {
                        closeUserEditWindow();
                    });
                }
            });
        } else {
            bars.ui.error({ text: 'Не всі обов\'язкові поля заповнені!' });
        }

    }

    // ************ Drop User Config  ***************************************************

    $("#winPass").kendoWindow({
        width: "210px",
        title: "Пароль підтвердження",
        resizable: false,
        visible: false,
        actions: ["Close"]
    });

    $("#winPass").keyup(function (event) {
        if (event.keyCode == 13) {
            $("#btnOk").click();
        }
    });

    function dropUser() {
        var gridADMU = getADMUGrid();
        var currentRow = gridADMU.dataItem(gridADMU.select());
        if (currentRow.USER_ACTIVE == 0) {
            bars.ui.error({ text: 'Користувача ' + currentRow.USER_LOGNAME + ' вже видалено.' });
        } else {
            $("#winPass").data("kendoWindow").center().open();
        }
    }

    function passValid() {
        var dd = new Date().getDate();
        var mm = new Date().getMonth() + 1;
        if (dd < 10) {
            dd = '0' + dd
        }
        if (mm < 10) {
            mm = '0' + mm
        }
        var datePass = mm.toString() + dd.toString();

        var PassValue = document.getElementById("winPassValue").value;
        if (PassValue == datePass) {
            $("#winPass").data("kendoWindow").close();
            $("#winPassValue").val("");
            dropUserRequest();
        }
        else {
            bars.ui.error({ title: 'Помилка', text: 'Введено невірний пароль.' });
            $("#winPassValue").val("");
            $("#winPass").load(location.href + " #winPass");
        }
    }

    function dropUserRequest() {
        var gridADMU = getADMUGrid();
        var currentRow = gridADMU.dataItem(gridADMU.select());
        bars.ui.loader('body', true);
        $.post('@Url.Action("DropUser")', { dropUserID: currentRow.USER_ID }).done(function (result) {
            if (result.status == 'ok') {
                $('#ADMUGrid').data('kendoGrid').dataSource.read();
                $('#ADMUGrid').data('kendoGrid').refresh();
                bars.ui.loader('body', false);
            }
            else {
                bars.ui.loader('body', false);
                bars.ui.error({ title: 'Помилка', text: 'Користувача НЕ видалено.' });
            }
        });
    }
    // ***************** Clone Config ***************************************************
    $("#usersResCloneWindow").kendoWindow({
        width: "600px",
        height: "250px",
        title: "Вибір ресурсів користувача для клонування",
        resizable: false,
        visible: false,
        actions: ["Close"]
    });
    $("#charactersCloneWindow").kendoWindow({
        width: "500px",
        height: "500px",
        title: "Вибір користувача для передачі ресурсів",
        resizable: false,
        visible: false,
        actions: ["Close"]
    });

    function openCloneWindow() {
        $("#usersResCloneWindow").data("kendoWindow").center().open();
    }
    $('#clonedToolbar').kendoToolBar({
        items: [
            { template: "<button id='pbCloneResToUser' type='button' class='k-button' onclick='cloneSelectRes()' title='Клонувати ресурси'><i class='pf-icon pf-16 pf-ok'></i></button>" },
            { template: "<button id='pbRefreshClonedGrid' type='button' class='k-button' onclick='refreshClonedGrid()' title='Оновити дані таблиці'><i class='pf-icon pf-16 pf-reload_rotate'></i></button>" },
            { template: "<button id='pbCloseCloneWin' type='button' class='k-button' onclick='closeCloneWindow()' title='Завершити'><i class='pf-icon pf-16 pf-delete'></i></button>" }
        ]
    });
    $('#cloneToolbar').kendoToolBar({
        items: [
            { template: "<button id='pbClone' type='button' class='k-button' onclick='cloneUsers()' title='Клонувати'><i class='pf-icon pf-16 pf-ok'></i></button>" },
            { template: "<button id='pbRefresh' type='button' class='k-button' onclick='refreshCharactersCloneGrid()' title='Оновити дані таблиці'><i class='pf-icon pf-16 pf-reload_rotate'></i></button>" },
            { template: "<button id='pbClose' type='button' class='k-button' onclick='closeCharactersCloneWindow()' title='Завершити'><i class='pf-icon pf-16 pf-delete'></i></button>" }
        ]
    });

    var checkList = [];
    function cloneSelectRes() {
        var cloneRes = getUsersResGrid();
        var sel = $("input:checked", cloneRes.tbody).closest("tr");
        if (sel.length < 1) {
            bars.ui.alert({ text: 'Не обрано ресурси для клонування!' });
        } else {
            var cloneUser = cloneRes.dataItem(cloneRes.select());

            var gridADMU = getADMUGrid();
            var currentRow = gridADMU.dataItem(gridADMU.select());

            if ($('#isClone').prop('checked') == true) {
                $('#isClone').val("1");
            } else if ($('#isCleanRes').prop('checked') == true) {
                $('#isCleanRes').val("1");
            }

            for (var i = 0; i < sel.length; i++) {
                var rID = cloneRes.dataSource.data()[i].RES_ID;
                var cbClone = $('#isClone').val();
                var cbClear = $('#isCleanRes').val();
                checkList[i] = { ClonedID: currentRow.USER_ID, CloneID: "", ResourceID: rID, Clone: cbClone, Clear: cbClear };
            }
            openCharactersCloneWindow();
            return checkList;
        }
    }
    function refreshClonedGrid() {
        $('#clonedGrid').data('kendoGrid').dataSource.read();
        $('#clonedGrid').data('kendoGrid').refresh();
    }
    function closeCloneWindow() {
        $("#usersResCloneWindow").data("kendoWindow").close();
    }

    function refreshCharactersCloneGrid() {
        $('#clonesGrid').data('kendoGrid').dataSource.read();
        $('#clonesGrid').data('kendoGrid').refresh();
    }
    function openCharactersCloneWindow() {
        $("#charactersCloneWindow").data("kendoWindow").center().open();
    }
    function closeCharactersCloneWindow() {
        $("#charactersCloneWindow").data("kendoWindow").close();
    }

    function cloneUsers() {
        var cloneGrid = getClonesDataGrid();
        var selectedClone = cloneGrid.dataItem(cloneGrid.select());
        if (selectedClone == null) {
            bars.ui.alert({ text: 'Не обрано користувача для клонування!' });
        }
        else {
            for (var i = 0; i < checkList.length; i++) {
                checkList[i].cloneID = selectedClone.USER_ID;
            }
            bars.ui.loader('body', true);

            bars.ui.confirm({
                text: 'УВАГА!</br> Виконання цієї функції не має зворотньої дії!</br> Ви дійсно бажаєте передати ресурси</br> користувача : ' +
                    checkList[0].ClonedID + '</br>' +
                    'користувачу : ' + selectedClone.USER_ID
            }, function () {
                $.post('@Url.Action("CloneUser")', { cloneUserParam: JSON.stringify(checkList) }).done(function (result) {
                    if (result.status == 'ok') {
                        $('#ADMUGrid').data('kendoGrid').dataSource.read();
                        $('#ADMUGrid').data('kendoGrid').refresh();
                        closeCharactersCloneWindow();
                        closeCloneWindow();
                        refreshClonedGrid();
                        refreshCharactersCloneGrid();
                        refreshADMTab();
                        /*refreshTTsTab();
                        refreshCHKGRPsTab();
                        refreshNBURPsTab();
                        refreshUserGrpTab();*/
                        bars.ui.loader('body', false);
                    }
                    else {
                        closeCharactersCloneWindow();
                        closeCloneWindow();
                        refreshClonedGrid();
                        refreshCharactersCloneGrid();
                        refreshADMTab();
                        /*refreshTTsTab();
                        refreshCHKGRPsTab();
                        refreshNBURPsTab();
                        refreshUserGrpTab();*/
                        bars.ui.loader('body', false);
                        bars.ui.error({ title: 'Помилка', text: 'Клонування користувача не виконано.' });
                    }
                });
            });
        }
    }

    var userResGrid = null;
    function getUsersResGrid() {
        if (userResGrid == null) {
            userResGrid = $('#clonedGrid').data('kendoGrid');
        }
        return userResGrid;
    }

    var clonesDataGrid = null;
    function getClonesDataGrid() {
        if (clonesDataGrid == null) {
            clonesDataGrid = $('#clonesGrid').data('kendoGrid');
        }
        return clonesDataGrid;
    }

    $('#clonedGrid').kendoGrid({
        autobind: true,
        selectable: "row",
        columns: [
            {
                field: "RES_NAME",
                title: "Назва ресурсу",
                width: "40%",
            },
            {
                field: "IS_CLONE",
                title: "Клонувати",
                width: "30%",
                template: "<div style='text-align:center'><input id='isClone' type='checkbox' value='0'/></div>"
            },
            {
                field: "IS_CLEAN_RES",
                title: "Із очищенням ресурсу",
                width: "30%",
                template: "<div style='text-align:center'><input id='isCleanRes' type='checkbox' value='0'/></div>"
            }
        ],
        dataSource: {
            type: "aspnetmvc-ajax",
            pageSize: 10,
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/ADMU/GetUsersResourceList')
                }
            },
            schema: {
                data: "Data",
                total: "Total"
            }
        }
    });
    $('#clonesGrid').kendoGrid({
        autobind: true,
        height: 440,
        sortable: true,
        selectable: "row",
        pageable: {
            refresh: true
        },
        columns: [
            {
                field: "USER_ID",
                title: "Код #",
                width: "40%"
            },
            {
                field: "USER_LOGNAME",
                title: "Логін",
                width: "60%"
            }
        ],
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/ADMU/GetADMUList')
                }
            },
            schema: {
                data: "Data",
                total: "Total"
            }
        }
    });

    // ****************** password comparing window on add-/edit-ing config  *************

    $("#passComparing").kendoWindow({
        width: "210px",
        title: "Підтвердіть пароль",
        resizable: false,
        visible: false,
        actions: ["Close"]
    });
    $("#passComparing").keyup(function (event) {
        if (event.keyCode == 13) {
            $("#btnToPassComp").click();
        }
    });

    function userPassCompare() {
        var pass = funcType == "add" ? $('#chkAddPass').val() : $('#chkEditPass').val();
        var confirmPass = $('#passCompVal').val();
        if (pass == confirmPass) {
            $('#passComparing').data("kendoWindow").close();
            $("#passCompVal").val("");
            if (funcType == "add") {
                addUser();
            }
            else if (funcType == "edit") {
                editUser();
            }
        } else {
            $("#passCompVal").val("");
            bars.ui.error({ title: 'Помилка', text: 'Введені значення не ідентичні!' });
        }
    }

    // ****************** Add/Edit Users Branches Config   **********************************
    $('#pbAddBranch').kendoButton();

    $('#pbEditBranch').kendoButton();

    $('#branchWindow').kendoWindow({
        width: "600px",
        height: "500px",
        title: "Доступні відділення",
        resizable: false,
        visible: false,
        actions: ["Close"]
    });

    var branchGrid = null;

    function getBranchGrid() {
        if (branchGrid == null) {
            branchGrid = $('#branchGrid').data('kendoGrid');
        }
        return branchGrid;
    }

    $('#branchGrid').kendoGrid({
        selectable: "row",
        height: 440,
        sortable: true,
        pageable: {
            refresh: true
        },
        columns: [
            {
                field: "BRANCH",
                title: "Код підрозділу",
                width: "40%"
            },
            {
                field: "NAME",
                title: "Назва",
                width: "60%"
            }
        ],
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/ADMU/GetBranchList')
                }
            },
            schema: {
                data: "Data",
                total: "Total"
            }
        },
        dataBound: setDefaultSelectedBranch
    });

    function setDefaultSelectedBranch() {
        var grid = $('#branchGrid').data('kendoGrid');
        if (grid != null) {
            grid.select("tr:eq(1)");
        }
    }

    function addBranch() {
        $("#branchWindow").data("kendoWindow").center().open();
    }
    $('#branchToolBar').kendoToolBar({
        items: [
            { template: "<button id='pbAddBranchToUser' type='button' class='k-button' onclick='setBranchToUser()' title='Додати відділення'><i class='pf-icon pf-16 pf-ok'></i></button>" },
            { template: "<button id='pbRefreshBranchGrid' type='button' class='k-button' onclick='refreshBranchGrid()' title='Оновити дані таблиці'><i class='pf-icon pf-16 pf-reload_rotate'></i></button>" },
            { template: "<button id='pbCloseWin' type='button' class='k-button' onclick='closeBranchWindow()' title='Завершити'><i class='pf-icon pf-16 pf-delete'></i></button>" }
        ]
    });
    $('#pbAddBranchToUser').kendoButton();
    $('#pbRefreshBranchGrid').kendoButton();
    $('#pbCloseWin').kendoButton();

    function refreshBranchGrid() {
        $('#branchGrid').data('kendoGrid').dataSource.read();
        $('#branchGrid').data('kendoGrid').refresh();
    }
    function closeBranchWindow() {
        $("#branchWindow").data("kendoWindow").close();
    }
    function setBranchToUser() {
        var grid = getBranchGrid();
        var currentBranch = grid.dataItem(grid.select());
        if (currentBranch != null) {
            $("#branchTobo").val(currentBranch.BRANCH);
            $("#branchName").val(currentBranch.NAME);
            $("#branchWindow").data("kendoWindow").close();
        }
    }
    // *****************************  Transmit User Accounts  **************************
    $('#TransmitWindow').kendoWindow({
        width: "600px",
        height: "500px",
        title: "Доступні користувачі",
        resizable: false,
        visible: false,
        actions: ["Close"]
    });

    var transmitUser = null;
    function openTransmitWindow() {
        var gridADMU = getADMUGrid();
        var currentRow = gridADMU.dataItem(gridADMU.select());
        transmitUser = currentRow;

        $("#TransmitWindow").data("kendoWindow").center().open();
    }

    function transmitUserAccount() {
        var transmitGrid = getTransmitGrid();
        var currentRow = transmitGrid.dataItem(transmitGrid.select());

        if (currentRow == null) {
            bars.ui.alert({ text: 'Не обрано користувача для виконання функції!' });
        }
        else {
            if (transmitUser.USER_ID != currentRow.ID) {
                bars.ui.loader('body', true);
                bars.ui.confirm({
                    text: 'УВАГА!</br> Виконання цієї функції не має зворотньої дії!</br> Ви дійсно бажаєте передати рахунки</br> користувача : ' +
                        transmitUser.USER_ID + '</br>' +
                        'користувачу : ' + currentRow.ID
                }, function () {
                    $.post('@Url.Action("GetTransmitUserAccounts")', { oldUserId: transmitUser.USER_ID, newUserId: currentRow.ID }).done(function (result) {
                        if (result.status == 'ok') {
                            $('#ADMUGrid').data('kendoGrid').dataSource.read();
                            $('#ADMUGrid').data('kendoGrid').refresh();
                            refreshADMTab();
                            /*refreshTTsTab();
                            refreshCHKGRPsTab();
                            refreshNBURPsTab();
                            refreshUserGrpTab();
                            closeTransmitWindow();*/
                            bars.ui.loader('body', false);
                        }
                        else {
                            refreshADMTab();
                            /*refreshTTsTab();
                            refreshCHKGRPsTab();
                            refreshNBURPsTab();
                            refreshUserGrpTab();
                            closeTransmitWindow();*/
                            bars.ui.loader('body', false);
                            bars.ui.error({ title: 'Помилка', text: 'Передача рахунків не виконана.' });
                        }
                    });
                });
            }
            else {
                bars.ui.loader('body', false);
                bars.ui.alert({ text: 'Цільові учасники операції не можуть мати одинакові ID значення.' });
            }
        }
    }

    var transmitGrid = null;

    function getTransmitGrid() {
        if (transmitGrid == null) {
            transmitGrid = $('#TransmitUserGrid').data('kendoGrid');
        }
        return transmitGrid;
    }

    $('#TransmitToolBar').kendoToolBar({
        items: [
            { template: "<button id='pbTransmitUserAccount' type='button' class='k-button' onclick='transmitUserAccount()' title='Обрати користувача'><i class='pf-icon pf-16 pf-ok'></i></button>" },
            { template: "<button id='pbRefreshTransmitGrid' type='button' class='k-button' onclick='refreshTransmitGrid()' title='Оновити дані таблиці'><i class='pf-icon pf-16 pf-reload_rotate'></i></button>" },
            { template: "<button id='pbCloseTransmitWin' type='button' class='k-button' onclick='closeTransmitWindow()' title='Завершити'><i class='pf-icon pf-16 pf-delete'></i></button>" }
        ]
    });
    $('#pbTransmitUserAccount').kendoButton();
    $('#pbRefreshTransmitGrid').kendoButton();
    $('#pbCloseTransmitWin').kendoButton();

    function refreshTransmitGrid() {
        $('#TransmitUserGrid').data('kendoGrid').dataSource.read();
        $('#TransmitUserGrid').data('kendoGrid').refresh();
    }
    function closeTransmitWindow() {
        $("#TransmitWindow").data("kendoWindow").close();
    }

    $('#TransmitUserGrid').kendoGrid({
        autobind: true,
        height: 440,
        sortable: true,
        selectable: "row",
        pageable: {
            refresh: true
        },
        columns: [
            {
                field: "ID",
                title: "Код #",
                width: "40%"
            },
            {
                field: "FIO",
                title: "Логін",
                width: "60%"
            }
        ],
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/ADMU/GetTransmitUserList')
                }
            },
            schema: {
                data: "Data",
                total: "Total"
            }
        }
    });

    // **************** Lock/Unlock User ***********************************************

    $('#userStatusWindow').kendoWindow({
        width: "450px",
        height: "120px",
        title: "",
        resizable: false,
        visible: false,
        actions: ["Close"]
    });

    $('#go').kendoButton();
    $('#go').on('click', setStatusType);

    var defaultStartDate = kendo.toString(kendo.parseDate(new Date(new Date().setYear(new Date().getFullYear() - 1)), 'dd/MM/yyyy'));
    var dafaultEndDate = kendo.toString(kendo.parseDate(new Date(), 'dd/MM/yyyy'));

    function openStatusUnblockWindow() {
        $("#userStatusWindow").kendoWindow();
        var dialog = $("#userStatusWindow").data("kendoWindow");
        dialog.title("Розблокування користувача");
        funcType = "unlock";

        var startDateBox = $("#startD").data("kendoDatePicker");
        var endDateBox = $('#endD').data("kendoDatePicker");

        startDateBox.value(defaultStartDate);
        endDateBox.value(dafaultEndDate);

        $("#userStatusWindow").data("kendoWindow").center().open();
    }

    function openStatusLockWindow() {
        $("#userStatusWindow").kendoWindow();
        var dialog = $("#userStatusWindow").data("kendoWindow");
        dialog.title("Блокування користувача");
        funcType = "lock";

        var startDateBox = $("#startD").data("kendoDatePicker");
        var endDateBox = $('#endD').data("kendoDatePicker");

        startDateBox.value(defaultStartDate);
        endDateBox.value(dafaultEndDate);

        $("#userStatusWindow").data("kendoWindow").center().open();
    }

    function setStatusType() {
        if (funcType == "unlock") {
            unlockUser();
        } else if (funcType == "lock") {
            lockUser();
        }
    }

    function unlockUser() {
        var gridADMU = getADMUGrid();
        var currentRow = gridADMU.dataItem(gridADMU.select());
        var dStart = $("#startD").data("kendoDatePicker").value();
        var dEnd = $("#endD").data("kendoDatePicker").value();
        bars.ui.loader('body', true);
        if (currentRow != null) {
            $.get('@Url.Action("UnlockUser")', { userId: currentRow.USER_ID, dateStart: kendo.toString(dStart, 'dd/MM/yyyy'), dateEnd: kendo.toString(dEnd, 'dd/MM/yyyy') }).done(function (result) {
                if (result.status == 'ok') {
                    $('#ADMUGrid').data('kendoGrid').dataSource.read();
                    $('#ADMUGrid').data('kendoGrid').refresh();
                    refreshADMTab();
                    /*refreshTTsTab();
                    refreshCHKGRPsTab();
                    refreshNBURPsTab();
                    refreshUserGrpTab();*/
                    $("#userStatusWindow").data("kendoWindow").close();
                    bars.ui.loader('body', false);
                }
                else {
                    $("#userStatusWindow").data("kendoWindow").close();
                    bars.ui.loader('body', false);
                    bars.ui.error({ title: 'Помилка', text: 'Помилка виконання функції. <br />Користувача не розблоковано.' });
                }
            });
        }
        else {
            bars.ui.loader('body', false);
            $("#userStatusWindow").data("kendoWindow").close();
            bars.ui.alert({ text: 'Не обрано користувача.' });
        }
    }

    function lockUser() {
        var gridADMU = getADMUGrid();
        var currentRow = gridADMU.dataItem(gridADMU.select());
        var dStart = $("#startD").data("kendoDatePicker").value();
        var dEnd = $("#endD").data("kendoDatePicker").value();

        var endFormatDate = kendo.toString(dEnd, 'MM/dd/yyyy');

        bars.ui.loader('body', true);
        if (currentRow != null) {
            $.get('@Url.Action("LockUser")', { userId: currentRow.USER_ID, dateStart: kendo.toString(dStart, 'dd/MM/yyyy'), dateEnd: kendo.toString(dEnd, 'dd/MM/yyyy') }).done(function (result) {
                if (result.status == 'ok') {
                    $('#ADMUGrid').data('kendoGrid').dataSource.read();
                    $('#ADMUGrid').data('kendoGrid').refresh();
                    refreshADMTab();
                    /*refreshTTsTab();
                    refreshCHKGRPsTab();
                    refreshNBURPsTab();
                    refreshUserGrpTab();*/
                    $("#userStatusWindow").data("kendoWindow").close();
                    bars.ui.loader('body', false);
                }
                else {
                    $("#userStatusWindow").data("kendoWindow").close();
                    bars.ui.loader('body', false);
                    bars.ui.error({ title: 'Помилка', text: 'Помилка виконання функції. <br />Користувача не заблоковано.' });
                }
            });
        } else {
            bars.ui.loader('body', false);
            $("#userStatusWindow").data("kendoWindow").close();
            bars.ui.alert({ text: 'Не обрано користувача.' });
        }
    }

    $("#startD").kendoDatePicker({
        format: "dd/MM/yyyy",
        value: kendo.toString(kendo.parseDate(new Date(new Date().setYear(new Date().getFullYear() - 1)), 'dd/MM/yyyy')),
        change: function () {
            var start = $("#startD").data("kendoDatePicker");
            var end = $("#endD").data("kendoDatePicker");
            var startDate = start.value(),
            endDate = end.value();

            if (startDate) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate());
                end.min(startDate);
            } else if (endDate) {
                start.max(new Date(endDate));
            } else {
                endDate = new Date();
                start.max(endDate);
                end.min(endDate);
            }
        }
    });
    $("#endD").kendoDatePicker({
        format: "dd/MM/yyyy",
        value: kendo.toString(kendo.parseDate(new Date(), 'dd/MM/yyyy')),
        change: function () {
            var start = $("#startD").data("kendoDatePicker");
            var end = $("#endD").data("kendoDatePicker");
            var endDate = end.value(),
            startDate = start.value();

            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate());
                start.max(endDate);
            } else if (startDate) {
                end.min(new Date(startDate));
            } else {    
                endDate = new Date();
                start.max(endDate);
                end.min(endDate);
            }
        }
    });
    // ****************************** Export User Data to SQL script ********************
    function exportToSqlScript() {
        var gridADMU = getADMUGrid();
        var currentRow = gridADMU.dataItem(gridADMU.select());

        if (currentRow != null) {
            bars.ui.confirm({
                text: 'Ви дійсно бажаєте вигрузити ресурси користувача ' + currentRow.USER_ID + ' ?'
            }, function () {
                window.location = bars.config.urlContent('/admin/ADMU/File?userId=') + currentRow.USER_ID;
            });
        } else {
            bars.ui.alert({ text: 'Не обрано користувача.' });
        }
    }

    // ******************************* Users ToolBar Config  ****************************

    $('#UsersConfigToolBar').kendoToolBar({
        items: [
            { template: "<button id='pbAddUser' type='button' class='k-button' onclick='openUserAddWindow()' title='Додати користувача'><i class='pf-icon pf-16 pf-add_button'></i></button>" },
            { template: "<button id='pbEditUser' type='button' class='k-button' onclick='openUserEditWindow()' title='Редагувати користувача'><i class='pf-icon pf-16 pf-tool_pencil'></i></button>" },
            { template: "<button id='pbDropUser' type='button' class='k-button' onclick='dropUser()' title='Видалити користувача'><i class='pf-icon pf-16 pf-delete_button_error'></i></button>" },
            { template: "<button id='pbCloneUser' type='button' class='k-button' onclick='openCloneWindow()' title='Клонувати користувача'><i class='pf-icon pf-16 pf-accept_doc'></i></button>" },
            { template: "<button id='pbSendUsersActives' type='button' class='k-button' onclick='openTransmitWindow()' title='Передати рахунки користувача'><i class='pf-icon pf-16 pf-list-arrow_right'></i></button>" },
            { template: "<button id='pbUnblockUser' type='button' class='k-button' onclick='openStatusUnblockWindow()' title='Розблокувати користувача'><i class='pf-icon pf-16 pf-ok'></i></button>" },
            { template: "<button id='pbBlockUser' type='button' class='k-button' onclick='openStatusLockWindow()' title='Заблокувати користувача'><i class='pf-icon pf-16 pf-delete'></i></button>" },
            { template: "<button id='pbLoadUsersRes' type='button' class='k-button' onclick='exportToSqlScript()' title='Вигрузити ресурси користувача'><i class='pf-icon pf-16 pf-arrow_download'></i></button>" }
        ]
    });
    $('#pbAddUser').kendoButton();
    $('#pbEditUser').kendoButton();
    $('#pbDropUser').kendoButton();
    $('#pbCloneUser').kendoButton();
    $('#pbSendUsersActives').kendoButton();
    $('#pbUnblockUser').kendoButton();
    $('#pbBlockUser').kendoButton();
    $('#pbLoadUsersRes').kendoButton();


    // ********************************* Main Grid Config Region   ******************
    var admuGrid = null;

    var grid1 = null;
    var grid2 = null;
    var grid3 = null;
    var grid4 = null;
    var grid5 = null;
    var grid6 = null;
    var grid7 = null;
    var grid8 = null;

    var grid9 = null;
    var grid10 = null;

    function getADMUGrid() {
        if (admuGrid == null) {
            admuGrid = $('#ADMUGrid').data('kendoGrid');
        }
        return admuGrid;
    }

    function setGrid1_data() {
        if (grid1 == null) {
            grid1 = $('#grid1').data('kendoGrid');
        }
        return grid1;
    }
    function setGrid2_data() {
        if (grid2 == null) {
            grid2 = $('#grid2').data('kendoGrid');
        }
        return grid2;
    }
    function setGrid3_data() {
        if (grid3 == null) {
            grid3 = $('#grid3').data('kendoGrid');
        }
        return grid3;
    }
    function setGrid4_data() {
        if (grid4 == null) {
            grid4 = $('#grid4').data('kendoGrid');
        }
        return grid4;
    }
    function setGrid5_data() {
        if (grid5 == null) {
            grid5 = $('#grid5').data('kendoGrid');
        }
        return grid5;
    }
    function setGrid6_data() {
        if (grid6 == null) {
            grid6 = $('#grid6').data('kendoGrid');
        }
        return grid6;
    }
    function setGrid7_data() {
        if (grid7 == null) {
            grid7 = $('#grid7').data('kendoGrid');
        }
        return grid7;
    }
    function setGrid8_data() {
        if (grid8 == null) {
            grid8 = $('#grid8').data('kendoGrid');
        }
        return grid8;
    }

    function setGrid9_data() {
        if (grid9 == null) {
            grid9 = $('#grid9').data('kendoGrid');
        }
        return grid9;
    }
    function setGrid10_data() {
        if (grid10 == null) {
            grid10 = $('#grid10').data('kendoGrid');
        }
        return grid10;
    }

    function refreshADMTab() {
        $('#grid1').data('kendoGrid').dataSource.read();
        $('#grid1').data('kendoGrid').refresh();
        $('#grid2').data('kendoGrid').dataSource.read();
        $('#grid2').data('kendoGrid').refresh();
    }
    //function refreshTTsTab() {
    //    $('#grid3').data('kendoGrid').dataSource.read();
    //    $('#grid3').data('kendoGrid').refresh();
    //    $('#grid4').data('kendoGrid').dataSource.read();
    //    $('#grid4').data('kendoGrid').refresh();
    //}
    //function refreshCHKGRPsTab() {
    //    $('#grid5').data('kendoGrid').dataSource.read();
    //    $('#grid5').data('kendoGrid').refresh();
    //    $('#grid6').data('kendoGrid').dataSource.read();
    //    $('#grid6').data('kendoGrid').refresh();
    //}
    //function refreshNBURPsTab() {
    //    $('#grid7').data('kendoGrid').dataSource.read();
    //    $('#grid7').data('kendoGrid').refresh();
    //    $('#grid8').data('kendoGrid').dataSource.read();
    //    $('#grid8').data('kendoGrid').refresh();
    //}
    //function refreshUserGrpTab() {
    //    $('#grid9').data('kendoGrid').dataSource.read();
    //    $('#grid9').data('kendoGrid').refresh();
    //    $('#grid10').data('kendoGrid').dataSource.read();
    //    $('#grid10').data('kendoGrid').refresh();
    //}

    function setAppContext() {
        var gridADMU = getADMUGrid();
        var currentRow = gridADMU.dataItem(gridADMU.select());

        if (!!currentRow) {
            var userID = { userID: currentRow.USER_ID };

            refreshADMTab();
            /*refreshTTsTab();
            refreshCHKGRPsTab();
            refreshNBURPsTab();
            refreshUserGrpTab();*/

            // тест: запускаю контекст для конкретного
            // користувача разом з реквестом на ресурси для нього
            // з -> getCurrentUserId

            @*$.get('@Url.Action("SetADMUContext")', userID);*@
        }
    }

    function getCurrentUserId() {
        var gridADMU = getADMUGrid();
        var currentRow = gridADMU.dataItem(gridADMU.select());
        if (!!currentRow)
            var userID = currentRow.USER_ID;//{ userID: currentRow.USER_ID };
        return { userID: userID };
    }


    var tabstrip = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
    tabstrip.select(0);

    function setDefaultSelectedRow() {
        var grid = $("#ADMUGrid").data("kendoGrid");
        if (grid != null) {
            grid.select("tr:eq(2)");
        }

        // act user conditional formating
        var gridUsers = getADMUGrid();
        var userRow = gridUsers.dataItem(gridUsers.select());

        gridUsers.tbody.find('>tr').each(function () {
            var dataItem = gridUsers.dataItem(this);

            var d = new Date();
            //var month = d.getMonth() + 1;
            //var day = d.getDate();
            //var output = (('' + day).length < 2 ? '0' : '') + day + '/' + (('' + month).length < 2 ? '0' : '') + month + '/' + d.getFullYear();

            if (dataItem.USER_ACTIVE == 0) {
                $(this).addClass('k-row-isNotActive');
            } else if (kendo.parseDate(dataItem.USER_RDATE2, 'dd/MM/yyyy') >= d) {
                $(this).addClass('k-row-isDisable');
            }
            // need to add EXPIRED DATE mark
        });
    }

    function addResource() {
        var gridADMU = getADMUGrid();
        var admuRow = gridADMU.dataItem(gridADMU.select());
        var tabID = $("#tabstrip").data("kendoTabStrip").select().index();

        var gridApps = setGrid2_data();
        var appRow = gridApps.dataItem(gridApps.select());

        /*var gridTTs = setGrid4_data();
        var ttsRow = gridTTs.dataItem(gridTTs.select());

        var gridCHKGrps = setGrid6_data();
        var chkgrpRow = gridCHKGrps.dataItem(gridCHKGrps.select());

        var gridNBUReps = setGrid8_data();
        var nburepROW = gridNBUReps.dataItem(gridNBUReps.select());

        var gridUserGrp = setGrid10_data();
        var userGrpROW = gridUserGrp.dataItem(gridUserGrp.select());*/

        var rowID;
        switch (tabID) {
            case 0:
                rowID = { userID: admuRow.USER_ID, resVal: appRow.CODEAPP, tabID: tabID, nbuA017: "" };
                break;
            /*case 1:
                rowID = { userID: admuRow.USER_ID, resVal: ttsRow.TT, tabID: tabID, nbuA017: "" };
                break;
            case 2:
                rowID = { userID: admuRow.USER_ID, resVal: chkgrpRow.CHKID, tabID: tabID, nbuA017: "" }; // to String ?
                break;
            case 3:
                rowID = { userID: admuRow.USER_ID, resVal: nburepROW.KODF, tabID: tabID, nbuA017: nburepROW.A017 };
                break;
            case 4:
                rowID = { userID: admuRow.USER_ID, resVal: userGrpROW.ID, tabID: tabID, nbuA017: "" };
                break;*/
        }
        if (tabID != null && admuRow != null && (appRow != null || ttsRow != null || chkgrpRow != null || nburepROW != null || userGrpROW != null)) {
            $.get('@Url.Action("AddResourceToUser")', rowID).done(function () {
                if (tabID == 0) {
                    refreshADMTab();
                } /*else if (tabID == 1) {
                    refreshTTsTab();
                } else if (tabID == 2) {
                    refreshCHKGRPsTab();
                } else if (tabID == 3) {
                    refreshNBURPsTab();
                } else if (tabID == 4) {
                    refreshUserGrpTab();
                }*/
            });
        }
    }
    function removeResource() {
        var gridADMU = getADMUGrid();
        var admuRow = gridADMU.dataItem(gridADMU.select());
        var tabID = $("#tabstrip").data("kendoTabStrip").select().index();

        var gridApps = setGrid1_data();
        var appRow = gridApps.dataItem(gridApps.select());

        /*var gridTTs = setGrid3_data();
        var ttsRow = gridTTs.dataItem(gridTTs.select());

        var gridCHKGrps = setGrid5_data();
        var chkgrpRow = gridCHKGrps.dataItem(gridCHKGrps.select());

        var gridNBUReps = setGrid7_data();
        var nburepROW = gridNBUReps.dataItem(gridNBUReps.select());

        var gridUserGrp = setGrid9_data();
        var userGrpROW = gridUserGrp.dataItem(gridUserGrp.select());*/

        var rowID;
        switch (tabID) {
            case 0:
                rowID = { userID: admuRow.USER_ID, resVal: appRow.CODEAPP, tabID: tabID, nbuA017: "" };
                break;
            /*case 1:
                rowID = { userID: admuRow.USER_ID, resVal: ttsRow.TT, tabID: tabID, nbuA017: "" };
                break;
            case 2:
                rowID = { userID: admuRow.USER_ID, resVal: chkgrpRow.CHKID, tabID: tabID, nbuA017: "" }; // to String ?
                break;
            case 3:
                rowID = { userID: admuRow.USER_ID, resVal: nburepROW.KODF, tabID: tabID, nbuA017: nburepROW.A017 };
                break;
            case 4:
                rowID = { userID: admuRow.USER_ID, resVal: userGrpROW.IDG, tabID: tabID, nbuA017: "" };
                break;*/
        }
        if (tabID != null && admuRow != null && (appRow != null || ttsRow != null || chkgrpRow != null || nburepROW != null || userGrpROW != null)) {
            $.get('@Url.Action("RemoveResourceFromUser")', rowID).done(function () {
                if (tabID == 0) {
                    refreshADMTab();
                } /*else if (tabID == 1) {
                    refreshTTsTab();
                } else if (tabID == 2) {
                    refreshCHKGRPsTab();
                } else if (tabID == 3) {
                    refreshNBURPsTab();
                } else if (tabID == 4) {
                    refreshUserGrpTab();
                }*/
            });
        }
    }

    $("#copySelectedToGrid1").on("click", function () {
        var gridApps = setGrid2_data();
        var appRow = gridApps.dataItem(gridApps.select());
        if (appRow != null) {
            addResource();
        }
        else {
            bars.ui.alert({ text: 'Не обрано ресурс для виконання операції!' });
        }
    });
    $("#copySelectedToGrid3").on("click", function () {
        var gridTTs = setGrid4_data();
        var ttsRow = gridTTs.dataItem(gridTTs.select());
        if (ttsRow != null) {
            addResource();
        }
        else {
            bars.ui.alert({ text: 'Не обрано ресурс для виконання операції!' });
        }
    });
    $("#copySelectedToGrid5").on("click", function () {
        var gridCHKGrps = setGrid6_data();
        var chkgrpRow = gridCHKGrps.dataItem(gridCHKGrps.select());
        if (chkgrpRow != null) {
            addResource();
        }
        else {
            bars.ui.alert({ text: 'Не обрано ресурс для виконання операції!' });
        }
    });
    $("#copySelectedToGrid7").on("click", function () {
        var gridNBUReps = setGrid8_data();
        var nburepROW = gridNBUReps.dataItem(gridNBUReps.select());
        if (nburepROW != null) {
            addResource();
        }
        else {
            bars.ui.alert({ text: 'Не обрано ресурс для виконання операції!' });
        }
    });
    $("#copySelectedToGrid9").on("click", function () {
        var gridUserGrp = setGrid10_data();
        var userGrpROW = gridUserGrp.dataItem(gridUserGrp.select());
        if (userGrpROW != null) {
            addResource();
        }
        else {
            bars.ui.alert({ text: 'Не обрано ресурс для виконання операції!' });
        }
    });
    $("#grid2").on("dblclick", "tbody > tr", addResource);
    $("#grid4").on("dblclick", "tbody > tr", addResource);
    $("#grid6").on("dblclick", "tbody > tr", addResource);
    $("#grid8").on("dblclick", "tbody > tr", addResource);
    $("#grid10").on("dblclick", "tbody > tr", addResource);

    $("#copySelectedToGrid2").on("click", function () {
        var gridApps = setGrid1_data();
        var appRow = gridApps.dataItem(gridApps.select());
        if (appRow != null) {
            removeResource();
        }
        else {
            bars.ui.alert({ text: 'Не обрано ресурс для виконання операції!' });
        }
    });
    $("#copySelectedToGrid4").on("click", function () {
        var gridTTs = setGrid3_data();
        var ttsRow = gridTTs.dataItem(gridTTs.select());
        if (ttsRow != null) {
            removeResource();
        }
        else {
            bars.ui.alert({ text: 'Не обрано ресурс для виконання операції!' });
        }
    });
    $("#copySelectedToGrid6").on("click", function () {
        var gridCHKGrps = setGrid5_data();
        var chkgrpRow = gridCHKGrps.dataItem(gridCHKGrps.select());
        if (chkgrpRow != null) {
            removeResource();
        }
        else {
            bars.ui.alert({ text: 'Не обрано ресурс для виконання операції!' });
        }
    });
    $("#copySelectedToGrid8").on("click", function () {
        var gridNBUReps = setGrid7_data();
        var nburepROW = gridNBUReps.dataItem(gridNBUReps.select());
        if (nburepROW != null) {
            removeResource();
        }
        else {
            bars.ui.alert({ text: 'Не обрано ресурс для виконання операції!' });
        }
    });
    $("#copySelectedToGrid10").on("click", function () {
        var gridUserGrp = setGrid9_data();
        var userGrpROW = gridUserGrp.dataItem(gridUserGrp.select());
        if (userGrpROW != null) {
            removeResource();
        }
        else {
            bars.ui.alert({ text: 'Не обрано ресурс для виконання операції!' });
        }
    });
    $("#grid1").on("dblclick", "tbody > tr", removeResource);
    $("#grid3").on("dblclick", "tbody > tr", removeResource);
    $("#grid5").on("dblclick", "tbody > tr", removeResource);
    $("#grid7").on("dblclick", "tbody > tr", removeResource);
    $("#grid9").on("dblclick", "tbody > tr", removeResource);

    function setAPPsRowBackColor() {
        var gridApps = setGrid1_data();
        var appRow = gridApps.dataItem(gridApps.select());

        gridApps.tbody.find('>tr').each(function () {
            var dataItem = gridApps.dataItem(this);
            if (dataItem.REVOKED == 1 && dataItem.REVOKED != appRow) {
                $(this).addClass('k-row-isRevoked');
            }
            if (dataItem.APPROVED == 0 && dataItem.APPROVED != appRow) {
                $(this).addClass('k-row-isApproved');
            }
            if (dataItem.DISABLED == 1 && dataItem.DISABLED != appRow) {
                $(this).addClass('k-row-isDisabled');
            }
        });
    }

    function setTTSsRowBackColor() {
        var gridTTs = setGrid3_data();
        var ttsRow = gridTTs.dataItem(gridTTs.select());

        gridTTs.tbody.find('>tr').each(function () {
            var dataItem = gridTTs.dataItem(this);
            if (dataItem.REVOKED == 1 && dataItem.REVOKED != ttsRow) {
                $(this).addClass('k-row-isRevoked');
            }
            if (dataItem.APPROVED == 0 && dataItem.APPROVED != ttsRow) {
                $(this).addClass('k-row-isApproved');
            }
            if (dataItem.DISABLED == 1 && dataItem.DISABLED != ttsRow) {
                $(this).addClass('k-row-isDisabled');
            }
        });
    }

    function setCHKGrpsRowBackColor() {
        var gridCHKGrps = setGrid5_data();
        var chkgrpRow = gridCHKGrps.dataItem(gridCHKGrps.select());

        gridCHKGrps.tbody.find('>tr').each(function () {
            var dataItem = gridCHKGrps.dataItem(this);
            if (dataItem.REVOKED == 1 && dataItem.REVOKED != chkgrpRow) {
                $(this).addClass('k-row-isRevoked');
            }
            if (dataItem.APPROVED == 0 && dataItem.APPROVED != chkgrpRow) {
                $(this).addClass('k-row-isApproved');
            }
            if (dataItem.DISABLED == 1 && dataItem.DISABLED != chkgrpRow) {
                $(this).addClass('k-row-isDisabled');
            }
        });
    }

    function setNBURepsRowBackColor() {
        var gridNBUReps = setGrid7_data();
        var nburepROW = gridNBUReps.dataItem(gridNBUReps.select());

        gridNBUReps.tbody.find('>tr').each(function () {
            var dataItem = gridNBUReps.dataItem(this);
            if (dataItem.REVOKED == 1 && dataItem.REVOKED != nburepROW) {
                $(this).addClass('k-row-isRevoked');
            }
            if (dataItem.APPROVED == 0 && dataItem.APPROVED != nburepROW) {
                $(this).addClass('k-row-isApproved');
            }
            if (dataItem.DISABLED == 1 && dataItem.DISABLED != nburepROW) {
                $(this).addClass('k-row-isDisabled');
            }
        });
    }

    function setUserGrpRowBackColor() {
        var gridUserGrp = setGrid9_data();
        var userGrpROW = gridUserGrp.dataItem(gridUserGrp.select());

        gridUserGrp.tbody.find('>tr').each(function () {
            var dataItem = gridUserGrp.dataItem(this);
            if (dataItem.REVOKED == 1 && dataItem.REVOKED != userGrpROW) {
                $(this).addClass('k-row-isRevoked');
            }
            if (dataItem.APPROVED == 0 && dataItem.APPROVED != userGrpROW) {
                $(this).addClass('k-row-isApproved');
            }
            if (dataItem.DISABLED == 1 && dataItem.DISABLED != userGrpROW) {
                $(this).addClass('k-row-isDisabled');
            }
        });

        // *********CheckBoxes

        $('.PR').on("click", function () {
            var gridADMU = getADMUGrid();
            var admuRow = gridADMU.dataItem(gridADMU.select());

            var checked = this.checked;

            var row = $(this).closest("tr");
            var grid = $("#grid9").data("kendoGrid");
            var dataItem = grid.dataItem(row);

            $.get('@Url.Action("ChangeStatus", "UserGrp")', { userId: admuRow.USER_ID, tabid: dataItem.IDG , pr: $(this).is(':checked'), deb: dataItem.DEB, cre: dataItem.CRE }).done(function () {

            });
        });

        $('.DEB').on("click", function () {
            var gridADMU = getADMUGrid();
            var admuRow = gridADMU.dataItem(gridADMU.select());

            var checked = this.checked;

            var row = $(this).closest("tr");
            var grid = $("#grid9").data("kendoGrid");
            var dataItem = grid.dataItem(row);

            $.get('@Url.Action("ChangeStatus", "UserGrp")', { userId: admuRow.USER_ID, tabid: dataItem.IDG, pr: dataItem.PR, deb: $(this).is(':checked'), cre: dataItem.CRE }).done(function () {

            });
        });

        $('.CRE').on("click", function () {
            var gridADMU = getADMUGrid();
            var admuRow = gridADMU.dataItem(gridADMU.select());

            var checked = this.checked;

            var row = $(this).closest("tr");
            var grid = $("#grid9").data("kendoGrid");
            var dataItem = grid.dataItem(row);

            $.get('@Url.Action("ChangeStatus", "UserGrp")', { userId: admuRow.USER_ID, tabid: dataItem.IDG, pr: dataItem.PR, deb: dataItem.DEB, cre: $(this).is(':checked') }).done(function () {

            });
        });
    }

    $('#ADMUGrid').kendoGrid({
        autobind: true,
        selectable: "row",
        sortable: true,
        pageable: {
            refresh: true,
            buttonCount: 5
        },
        columns: [
            {
                field: "USER_FIO",
                title: "ПІБ",
                width: "30%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            },
            {
                field: "USER_ID",
                title: "Код #",
                width: "10%",
                filterable: {
                    cell: {
                        template: function (args) {
                            args.element.kendoNumericTextBox({
                                format: '#',
                                decimals: 0
                            });
                        }

                    }
                }
            },
            {
                field: "USER_LOGNAME",
                title: "Логін",
                width: "20%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            },
            {
                field: "USER_TABNUM",
                title: "Табельний номер",
                width: "20%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            },
            {
                field: "USER_BRANCH",
                title: "Відділ",
                width: "20%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            }
        ],
        dataSource: {
            type: "aspnetmvc-ajax",
            pageSize: 10,
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/ADMU/GetADMUList'),
                    success: function () {
                        $("#grid1").data("kendoGrid").dataSource.read();
                        $("#grid2").data("kendoGrid").dataSource.read();
                        $("#grid3").data("kendoGrid").dataSource.read();
                        $("#grid4").data("kendoGrid").dataSource.read();
                        $("#grid5").data("kendoGrid").dataSource.read();
                        $("#grid6").data("kendoGrid").dataSource.read();
                        $("#grid7").data("kendoGrid").dataSource.read();
                        $("#grid8").data("kendoGrid").dataSource.read();
                        $("#grid9").data("kendoGrid").dataSource.read();
                        $("#grid10").data("kendoGrid").dataSource.read();
                    },
                    error: function (xhr, error) {
                        bars.ui.error({ text: 'Сталася помилка при спробі завантажити дані таблиці.' });
                    }
                }
            },
            schema: {
                data: "Data",
                total: "Total",
                model: {
                    fields: {
                        USER_FIO: { type: "string" },
                        USER_ID: { type: "number" },
                        USER_LOGNAME: { type: "string" },
                        USER_TABNUM: { type: "string" },
                        USER_BRANCH: { type: "string" }
                    }
                }
            }
        },
        filterable: {
            mode: "row"
        },
        change: setAppContext,
        dataBound: setDefaultSelectedRow
    });

    // TabGrids: APPs
    $("#grid1").kendoGrid({
        height: 400,
        selectable: "row",
        sortable: true,
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/APP/GetCurrentUserAPPs'),
                    data: getCurrentUserId
                }
            },
            schema: {
                data: "Data",
                model: {
                    fields: {
                        CODEAPP: { type: "string" },
                        NAME: { type: "string" }
                    }
                }
            }
        },
        autoBind: false,
        editable: "popup",
        pageable: {
            refresh: true
        },
        columns: [
            {
                field: "CODEAPP",
                title: "Код АРМу",
                width: "40%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            },
            {
                field: "NAME",
                title: "Назва",
                width: "60%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            }
        ],
        filterable: {
            mode: "row"
        },
        dataBound: setAPPsRowBackColor
    });
    $("#grid2").kendoGrid({
        height: 400,
        selectable: "row",
        sortable: true,
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/APP/GetAllAPPsGrid'),
                    data: getCurrentUserId
                }
            },
            schema: {
                data: "Data",
                total: "Total",
                model: {
                    fields: {
                        CODEAPP: { type: "string" },
                        NAME: { type: "string" }
                    }
                }
            }
        },
        autoBind: false,
        editable: "popup",
        filterable: {
            mode: "row"
        },
        pageable: {
            refresh: true
        },
        columns: [
            {
                field: "CODEAPP",
                title: "Код АРМу",
                width: "30%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            },
            {
                field: "NAME",
                title: "Назва",
                width: "70%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            }
        ]
    });

    // TabGrids: TTS
    /*$("#grid3").kendoGrid({
        height: 400,
        selectable: "row",
        sortable: true,
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/TTS/GetCurrentUserTTS'),
                    data: getCurrentUserId
                }
            },
            schema: {
                data: "Data",
                model: {
                    fields: {
                        TT: { type: "string" },
                        NAME: { type: "string" }
                    }
                }
            }
        },
        autoBind: false,
        editable: "popup",
        pageable: {
            refresh: true
        },
        filterable: {
            mode: "row"
        },
        columns: [
            {
                field: "TT",
                title: "Код операції",
                width: "40%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            },
            {
                field: "NAME",
                title: "Назва",
                width: "60%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            }
        ],
        dataBound: setTTSsRowBackColor
    });
    $("#grid4").kendoGrid({
        height: 400,
        selectable: "row",
        sortable: true,
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/TTS/GetAllTTSGrid'),
                    data: getCurrentUserId
                }
            },
            schema: {
                data: "Data",
                total: "Total",
                model: {
                    fields: {
                        TT: { type: "string" },
                        NAME: { type: "string" }
                    }
                }
            }
        },
        autoBind: false,
        editable: "popup",
        pageable: {
            refresh: true
        },
        filterable: {
            mode: "row"
        },
        columns: [
           {
               field: "TT",
               title: "Код операції",
               width: "30%",
               filterable: {
                   cell: {
                       operator: "contains"
                   }
               }
           },
           {
               field: "NAME",
               title: "Назва",
               width: "70%",
               filterable: {
                   cell: {
                       operator: "contains"
                   }
               }
           }
        ]
    });

    // TabGrids: CHKGRPS
    $("#grid5").kendoGrid({
        height: 400,
        selectable: "row",
        sortable: true,
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/CHKGrps/GetCurrentUserCHKGrps'),
                    data: getCurrentUserId
                }
            },
            schema: {
                data: "Data",
                model: {
                    fields: {
                        CHKID: { type: "number" },
                        NAME: { type: "string" }
                    }
                }
            }
        },
        autoBind: false,
        editable: "popup",
        pageable: {
            refresh: true
        },
        filterable: {
            mode: "row"
        },
        columns: [
            {
                field: "CHKID",
                title: "Код групи",
                width: "40%",
                filterable: {
                    cell: {
                        template: function (args) {
                            args.element.kendoNumericTextBox({
                                format: '#',
                                decimals: 0
                            });
                        }

                    }
                }
            },
            {
                field: "NAME",
                title: "Назва",
                width: "60%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            }
        ],
        dataBound: setCHKGrpsRowBackColor
    });
    $("#grid6").kendoGrid({
        height: 400,
        selectable: "row",
        sortable: true,
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/CHKGrps/GetAllCHKGrpsGrid'),
                    data: getCurrentUserId
                }
            },
            schema: {
                data: "Data",
                total: "Total",
                model: {
                    fields: {
                        CHKID: { type: "number" },
                        NAME: { type: "string" }
                    }
                }
            }
        },
        autoBind: false,
        editable: "popup",
        pageable: {
            refresh: true
        },
        filterable: {
            mode: "row"
        },
        columns: [
           {
               field: "CHKID",
               title: "Код групи",
               width: "30%",
               filterable: {
                   cell: {
                       template: function (args) {
                           args.element.kendoNumericTextBox({
                               format: '#',
                               decimals: 0
                           });
                       }

                   }
               }
           },
           {
               field: "NAME",
               title: "Назва",
               width: "70%",
               filterable: {
                   cell: {
                       operator: "contains"
                   }
               }
           }
        ]
    });

    // TabGrids: NBUREPS
    $("#grid7").kendoGrid({
        height: 400,
        selectable: "row",
        sortable: true,
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/NBUReps/GetCurrentUserNBUReps'),
                    data: getCurrentUserId
                }
            },
            schema: {
                data: "Data",
                model: {
                    fields: {
                        KODF: { type: "string" },
                        A017: { type: "string" },
                        NAME: { type: "string" }
                    }
                }
            }
        },
        autoBind: false,
        editable: "popup",
        pageable: {
            refresh: true
        },
        filterable: {
            mode: "row"
        },
        columns: [
            {
                field: "KODF",
                title: "Код звіту",
                width: "20%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            },
            {
                field: "A017",
                title: "Схема",
                width: "20%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            },
            {
                field: "NAME",
                title: "Назва",
                width: "60%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            }
        ],
        dataBound: setNBURepsRowBackColor
    });
    $("#grid8").kendoGrid({
        height: 400,
        selectable: "row",
        sortable: true,
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/NBUReps/GetNBURepsGrid'),
                    data: getCurrentUserId
                }
            },
            schema: {
                data: "Data",
                total: "Total",
                model: {
                    fields: {
                        KODF: { type: "string" },
                        A017: { type: "string" },
                        NAME: { type: "string" }
                    }
                }
            }
        },
        autoBind: false,
        editable: "popup",
        pageable: {
            refresh: true
        },
        filterable: {
            mode: "row"
        },
        columns: [
           {
               field: "KODF",
               title: "Код звіту",
               width: "30%",
               filterable: {
                   cell: {
                       operator: "contains"
                   }
               }
           },
           {
               field: "A017",
               title: "Схема",
               width: "30%",
               filterable: {
                   cell: {
                       operator: "contains"
                   }
               }
           },
           {
               field: "NAME",
               title: "Назва",
               width: "40%",
               filterable: {
                   cell: {
                       operator: "contains"
                   }
               }
           }
        ]
    });

    //UserGrp ****************************************************************
    $("#grid9").kendoGrid({
        height: 400,
        selectable: "row",
        sortable: true,
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/UserGrp/GetUserGrpsGrid'),
                    data: getCurrentUserId
                }
            },
            schema: {
                data: "Data",
                model: {
                    fields: {
                        IDG: { type: "number" },
                        NAME: { type: "string" },
                        PR: { type: "boolean" },
                        DEB: { type: "boolean" },
                        CRE: { type: "boolean" }
                    }
                }
            }
        },
        autoBind: false,
        editable: "popup",
        pageable: {
            refresh: true
        },
        filterable: {
            mode: "row"
        },
        columns: [
            {
                field: "IDG",
                title: "Код",
                width: "10%",
                filterable: {
                    cell: {
                        template: function (args) {
                            args.element.kendoNumericTextBox({
                                format: '#',
                                decimals: 0
                            });
                        }

                    }
                }
            },
            {
                field: "NAME",
                title: "Назва",
                width: "40%",
                filterable: {
                    cell: {
                        operator: "contains"
                    }
                }
            },
            {
                field: "PR",
                title: "П",
                width: "10%",
                template: "<div style='text-align:center'><input class='PR' name='PR' type='checkbox' data-bind='checked: PR' #= PR ? checked='checked' : '' #/></div>"
            },
            {
                field: "DEB",
                title: "Д",
                width: "10%",
                template: "<div style='text-align:center'><input class='DEB' name='DEB' type='checkbox' data-bind='checked: DEB' #= DEB ? checked='checked' : '' #/></div>"
            },
            {
                field: "CRE",
                title: "К",
                width: "10%",
                template: "<div style='text-align:center'><input class='CRE' name='CRE' type='checkbox' data-bind='checked: CRE' #= CRE ? checked='checked' : '' #/></div>"
            }
        ],
        dataBound: setUserGrpRowBackColor
    });
    $("#grid10").kendoGrid({
        height: 400,
        selectable: "row",
        sortable: true,
        dataSource: {
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    dataType: 'json',
                    url: bars.config.urlContent('/admin/UserGrp/GetGrps'),
                    data: getCurrentUserId
                }
            },
            schema: {
                data: "Data",
                total: "Total",
                model: {
                    fields: {
                        ID: { type: "number" },
                        NAME: { type: "string" }
                    }
                }
            }
        },
        autoBind: false,
        editable: "popup",
        pageable: {
            refresh: true
        },
        filterable: {
            mode: "row"
        },
        columns: [
           {
               field: "ID",
               title: "Код",
               width: "30%",
               filterable: {
                   cell: {
                       template: function (args) {
                           args.element.kendoNumericTextBox({
                               format: '#',
                               decimals: 0
                           });
                       }

                   }
               }
           },
           {
               field: "NAME",
               title: "Назва",
               width: "40%",
               filterable: {
                   cell: {
                       operator: "contains"
                   }
               }
           }
        ]
    });*/
</script>

<style>
    /*TabDivsPosition:*/
    #panels {
        display: table-row;
    }

    #grid1, #grid2 {
        display: table-cell;
    }

    #commands {
        text-align: center;
        width: 50px;
        vertical-align: middle;
        display: table-cell;
    }

    #commands div {
        padding: 5px;
    }

    #commands div a {
        width: 35px;
        text-align: center;
    }

    /*---------- RowBG Color -----*/
    .k-row-isRevoked {
        background-color: #00ccff;
    }
    .k-row-isApproved {
        background-color: #ccccff;
    }
    .k-row-isDisabled {
        background-color: #ff0000;
    }
    /*---------- defaultSelectedRowColor ----*/
    .k-grid table tr.k-state-selected
    {
        background-color: #428bca !important;
    }
    .k-grid table tr.k-state-selected td
    {
        background-color: #428bca !important;
    }
    .k-grid table tr.k-state-selected td div
    {
        background-color: #428bca !important;
    }
    /*-------------------------------------*/
    #UserEditWindowBtns {
        margin: 5px;
        text-align: center;
    }
    .parent { 
        width: 100%;
        padding: 5px;
        /*border: 1px solid red;*/
    }
    .row { 
        margin: 5px;
        width: 100%;
       /* border: 1px solid green;*/
    }
    .col1, .col2, .col3 { 
        display: inline-block;
        vertical-align: top;
        /*border: 1px dotted ;*/
    }
    .col1 {
        width: 40%;
    }
    .col2 input {
        text-align:center;
    }
    .nonEdit {
        background-color: #abcdfb;
    }
    .col2 .nonEditDep {
        background-color: #abcdfb;
        width:250px;
        text-align:left;
    }
    input#branchTobo.nonEdit {
        width: 210px;
    }
    .k-dropdown {
        width: 250px;
    }
    #branchGrid .k-grid-content
    {
        height: 380px;
    }
    #clonesGrid .k-grid-content {
        height: 370px;
    }
    #TransmitUserGrid .k-grid-content {
        height: 370px;
    }
    /* Main grid color marks */
    .k-row-isNotActive {
        color: red;
    }
    .k-row-isDisable {
        color: brown;
    }
    .k-row-isExpired {
        color: #ff00ff;
    }
    .error {
        border: solid 1px #FF0000;  
    }
    /* Status Window */
    #userStatusWindow .wrapper {
        text-align: center;
        resize:none;
        overflow:auto;
    }

    #exportBox.hidden {
        display: none;
    }
    #userStatusWindow {
        resize:none;
        overflow:auto;
    }

    #ExportBoxTemplate {
        display: none;
    }
</style>
