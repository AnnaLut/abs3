@using BarsWeb.Areas.Payreg.Models
@using Areas.Payreg.Models
@model CustomerSearchParams

@{
    Layout = "~/Views/Shared/_LayoutKendo.cshtml";
    ViewBag.Title = "Заявки щодо регулярних платежів";
    const string searchLabelClass = "control-label text-right";
    var serachEditorHtmlOptions = new
    {
        @class = "form-control k-textbox",
        style = "width:100%;"
    };
}
    <h2>@ViewBag.Title</h2>

    @(Html.Kendo().TabStrip()
    .Name("pages_panel")
    .Items(pages =>
    {
        pages.Add().Text("Пошук клієнтів")
            .Selected(true)
            .Content(@<text>

                <form id="custSearchForm">
                    <table>
                        <tr>
                            <td style="width:150px;text-align:right;">
                                @Html.LabelFor(model => model.CustomerId, new { @class = searchLabelClass })
                            </td>
                            <td style="padding-left: 4px;">
                                @Html.EditorFor(model => model.CustomerId, serachEditorHtmlOptions)
                            </td>
                            <td style="width:200px;text-align:right;">
                                @Html.LabelFor(model => model.CustomerName, new { @class = searchLabelClass })
                            </td>
                            <td style="padding-left:4px;">
                                @Html.EditorFor(model => model.CustomerName, serachEditorHtmlOptions)
                            </td>
                        </tr>
                        <tr>
                            <td style="width:150px;text-align:right;">
                                @Html.LabelFor(model => model.Okpo, new { @class = searchLabelClass })
                            </td>
                            <td style="padding-left:4px;">
                                @Html.EditorFor(model => model.Okpo, serachEditorHtmlOptions)
                            </td>
                            <td style="width:150px;text-align:right;">
                                @Html.LabelFor(model => model.DocNumber, new { @class = searchLabelClass })
                            </td>
                            <td style="padding-left:4px;">
                                @Html.EditorFor(model => model.DocNumber, serachEditorHtmlOptions)
                            </td>
                        </tr>
                        <tr>
                            <td colspan="3"></td>
                            <td class="text-right" style="padding-top:4px;">
                                <button type="button" class="k-button" onclick="bars.utils.sto.searchCustomer();"><i class="k-icon k-i-search"></i>Знайти</button>
                            </td>
                        </tr>
                    </table>
                </form>
                <p></p>
                @(Html.Kendo().Grid<CustomerInfo>()
    .Name("searched_customers")
        .Events(e => e.Change("bars.utils.sto.selectCustomer"))
        .AutoBind(false)
        .Columns(cols =>
        {
            cols.Bound(c => c.Rnk).Title("РНК");
            cols.Bound(c => c.Okpo).Title("ОКПО");
            cols.Bound(c => c.CustomerName).Title("Найменування клієнта");
            cols.Bound(c => c.DayOfBirth).Title("Дата народження").Format("{0:dd.MM.yyyy}");
            cols.Bound(c => c.DocumentNumber).Title("Документ");
            cols.Bound(c => c.HasActiveAccounts).Title("Наявні активні рахунки 2625(980)").ClientTemplate(
                "#=HasActiveAccounts ? '<div style=\"text-align:center;\"><span class=\"pf-icon pf-16 pf-ok\"></span></div>' : '&nbsp;' #");
        })
        .DataSource(ds => ds
            .Ajax().Read(read => read.Action("SearchCustomers", "Payreg").Data("bars.utils.sto.getCustFilter"))
            .Model(model => { model.Id(p => p.Rnk); })
        )
        .Pageable()
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))

                )

            </text>);
        pages.Add().Text("Заявки на регулярні платежі")
            .Content(@<text>
                @(Html.Kendo().Grid<V_STO_ORDER>()
    .Name("cust_orders")
    .Events(e => e.Change("bars.utils.sto.refreshOrdersToolbar").DataBound("bars.utils.sto.refreshOrdersToolbar"))
    .AutoBind(false)
        .Columns(cols =>
        {
            cols.Bound(c => c.PAYER_ACCOUNT).Title("№ рахунку-платника").Width("800px");
            cols.Bound(c => c.CURRENCY_ID).Title("Валюта рахунку-платника").Width("100px").HeaderHtmlAttributes("style: 'white-space: normal;'");
            cols.Bound(c => c.REGULAR_AMOUNT).Title("Сума регулярного перерахування").Width("80px").ClientTemplate("<div style='text-align:right;'>#=REGULAR_AMOUNT == null ? '' : REGULAR_AMOUNT.toFixed(2)#</div>").HeaderHtmlAttributes("style: 'white-space: normal;'");
            cols.Bound(c => c.STOP_DATE).ClientTemplate("#=STOP_DATE == null ? '': kendo.toString(STOP_DATE,'MM/dd/yyyy')#<button style='float:right'; onclick='bars.utils.sto.closeOrder(#=ID#);' class='k-button'>Закрити ордер</button>").Title("Дата завершення перерахувань").Encoded(false).Width("120px");
            cols.Bound(c => c.RECEIVER).Title("№ рахунку-отримувача").Width("120px");
            cols.Bound(c => c.PRIORITY).Title("Пріоритет сплати").ClientTemplate("<button class='k-button'><i class='k-icon k-i-arrow-n' onclick='bars.utils.sto.upPriority(#=ID#);'></i></button> #=PRIORITY# <button class='k-button'><i class='k-icon k-i-arrow-s' onclick='bars.utils.sto.downPriority(#=ID#);'></i></button>").Width("80px");
            cols.Bound(c => c.USER_NAME).Title("Виконавець").Width("120px").HeaderHtmlAttributes("style: 'white-space: normal;'");            

        })
            .ToolBar(bar => bar.Template(@"<div class='orders_toolbar'><span id='cust_info' style='margin-right:15px;'>Не вибрано клієнта </span>
                <button class='k-button' disabled id='add_sep_order'>Додати СЕП ордер</button>
                <button class='k-button' disabled id='add_sbon_order'>Додати СБОН ордер</button>
                <button class='k-button' disabled id='edit_order'><i class='pf-icon pf-16 pf-tool_pencil pf-disabled'></i>Редагувати</button>
                <button class='k-button' disabled id='printF190'><i class='pf-icon pf-16 pf-print pf-disabled'></i> Друк форми 190</button>
            </div>"))
        .DataSource(ds => ds
                    .Ajax()
                    .Sort(sort => sort.Add("PRIORITY").Ascending())
                    .Read(read => read.Action("GetSbonOrders", "Payreg").Data("bars.utils.sto.getCustomerId"))
        )
        .Sortable(s => s
            .Enabled(true)
            .SortMode(GridSortMode.SingleColumn)
        ).Selectable(s => s.Enabled(true))

                )
            </text>);
    }))


    @(Html.Kendo().Window()
    .Name("wnd_sep_order")
    .Title("СЕП ордер")
    .Content(@<text>
        <form id="frmSepOrder" class="form-horizontal">
            <input type="hidden" id="sepOrderId" />
            <ul>
                <li class="long-combo">
                    <label for="sepAccountId" class="control-label">№ рахунку платника</label>
                    <input id="sepAccountId" name="sepAccountId" />
                </li>
                <li>
                    <label for="sepStartDate" class="control-label">Дата початку перерахувань</label>
                    <input class="k-input" id="sepStartDate" name="sepStartDate" required data-required-msg="Дата обов'язкова." data-bankdate-msg='Дата має бути більшою від банківської.' />
                </li>
                <li>
                    <label for="sepStopDate" class="control-label">Дата завершення перерахувань</label>
                    <input class="k-input" id="sepStopDate" name="sepStopDate"
                           data-startdate-field="sepStartDate" data-stopdategreater-msg='Дата завершення має бути <br> більшою дати початку.' />
                </li>
                <li>
                    <label class="control-label">Порядок переносу дати платежа, у випадку, коли строк сплати по графіку - вихідний</label>
                    <span style="padding: 10px; display: inline-block;">
                        <label>
                            <input type="radio" name="sepShiftHolidayRadio" autocomplete="off" value="-1">Платити до вихідних
                        </label>
                        <br />
                        <label>
                            <input type="radio" name="sepShiftHolidayRadio" autocomplete="off" checked value="1">Платити після вихідних
                        </label>

                    </span>
                </li>
                <li>
                    <label for="sepPaymentFrequency" class="control-label">Періодичність сплати</label>
                    @(Html.Kendo().DropDownList()
                                    .Name("sepPaymentFrequency")
                                    .DataTextField("NAME")
                                    .DataValueField("ID")
                                    .DataSource(ds => ds.Read(read => read.Action("GetFreqList", "Payreg")))
                    )
                </li>
                <li>
                    <label for="sepRegularAmount" class="control-label">Сума регулярного перерахування<span class="required-star"> *</span></label>
                    <input type="number" class="k-input" id="sepRegularAmount" name="sepRegularAmount" value="0.00"
                           required data-required-msg="Введіть суму." data-notzero-msg='Сума має бути більшою від 0.' />
                </li>
                <li>
                    <label for="sepReceiverMfo" class="control-label">МФО отримувача <span class="required-star"> *</span></label>
                    <input type="text" class="k-textbox" id="sepReceiverMfo" name="sepReceiverMfo"
                           required data-required-msg="Введіть МФО." />
                </li>
                <li>
                    <label for="sepReceiverAccount" class="control-label">№ рахунку отримувача <span class="required-star"> *</span></label>
                    <input type="text" class="k-textbox" id="sepReceiverAccount" name="sepReceiverAccount"
                           required data-required-msg="Введіть № рахунку."
                           data-validnlscontroldigit-msg='Невірний контрольний розряд.' data-mfo-field="sepReceiverMfo" />

                </li>
                <li>
                    <label for="sepReceiverName" class="control-label">Назва отримувача <span class="required-star"> *</span></label>
                    <input type="text" class="k-textbox" id="sepReceiverName" name="sepReceiverName"
                           required data-required-msg="Введіть назву отримувача." />

                </li>
                <li>
                    <label for="sepReceiverEdrpou" class="control-label">ЕДРПОУ отримувача <span class="required-star"> *</span></label>
                    <input type="text" class="k-textbox" id="sepReceiverEdrpou" name="sepReceiverEdrpou"
                           required data-required-msg="Введіть код ЄДРПОУ."
                           data-validctrldigit-msg='Невірний контрольний розряд' />

                </li>
                <li>
                    <label for="sepPurpose" class="control-label">Призначення платежу </label>
                    <textarea rows="2" class="k-textbox" id="sepPurpose" name="sepPurpose"></textarea>
                </li>
            </ul>

            <div class="window-footer" style="margin-top:10px;">
                <button type="button" class="k-primary k-button" onclick="bars.utils.sto.saveSepOrder()"><i class="pf-icon pf-16 pf-save"></i> Зберегти</button>
                <button type="button" class="k-button" onclick="bars.utils.sto.closeSepOrderWindow()">Відмінити</button>
            </div>
        </form>
    </text>)
    .Width(800)
    .Height(500)
    .Draggable()
    .Modal(true)
    .Visible(false)
    )

    @(Html.Kendo().Window()
    .Name("wnd_sbon_order")
    .Title("СБОН ордер")
    .Content(@<text>
        <form id="frmSbonOrder" class="form-horizontal">
            <input type="hidden" id="sbonOrderId" />
            <ul>
                <li class="long-combo">
                    <label for="sbonAccountId" class="control-label">№ рахунку платника</label>
                    <input id="sbonAccountId" name="sbonAccountId">
                </li>
                <li>
                    <label for="sbonStartDate" class="control-label">Дата початку перерахувань</label>
                    <input class="k-input" id="sbonStartDate" name="sbonStartDate" required data-required-msg="Дата обов'язкова." data-bankdate-msg='Дата має бути більшою від банківської.' />
                </li>
                <li>
                    <label for="sbonStopDate" class="control-label">Дата завершення перерахувань</label>
                    <input class="k-input" id="sbonStopDate" name="sbonStopDate" data-startdate-field="sbonStartDate" data-stopdategreater-msg="Дата завершення має бути <br> більшою дати початку." />
                </li>
                <li>
                    <label class="control-label">Порядок переносу дати платежа, у випадку, коли строк сплати по графіку - вихідний</label>
                    <span style="padding: 10px; display: inline-block;">
                        <label>
                            <input type="radio" name="sbonShiftHolidayRadio" autocomplete="off" value="-1">Платити до вихідних
                        </label>
                        <br />
                        <label>
                            <input type="radio" name="sbonShiftHolidayRadio" autocomplete="off" checked value="1">Платити після вихідних
                        </label>

                    </span>
                </li>
                <li>
                    <label for="sbonPaymentFrequency" class="control-label">Періодичність сплати</label>
                    @(Html.Kendo().DropDownList()
                                   .Name("sbonPaymentFrequency")
                                   .DataTextField("NAME")
                                   .DataValueField("ID")
                                   .DataSource(ds => ds.Read(read => read.Action("GetFreqList", "Payreg")))
                    )
                </li>
                <li>
                    <label for="sbonProvaiderId" class="control-label">Договір з отримувачем</label>
                    @(Html.Kendo().DropDownList()
                                   .Name("sbonProvaiderId")
                                   .DataTextField("RECEIVER_NAME")
                                   .DataValueField("ID")
                                   .DataSource(ds => ds.Read(read => read.Action("GetAllSbonProviders", "Payreg")))
                                   .Events(a => a.Change("bars.utils.sto.onSbonProviderSelect"))
                    )

                </li>
                <li id="sbonPersonalAccountLi" style="display: none;">
                    <label for="sbonPersonalAccount" class="control-label">№ персонального рахунку отримувача<span class="required-star"> *</span></label>
                    <input type="text" class="k-textbox" id="sbonPersonalAccount" name="sbonPersonalAccount" required data-required-msg="Введіть персональний рахунок." />
                </li>
                <li id="sbonRegularAmountLi">
                    <label for="sbonRegularAmount" class="control-label">Фіксована сума платежу<span class="required-star"> *</span></label>
                    <input type="number" class="k-input" id="sbonRegularAmount" name="sbonRegularAmount" value="0.00" data-required-msg="Фіксована сума обов'язкова.'" data-notzero-msg='Сума має бути більшою від 0.' />
                </li>
                <li id="sbonCeilingAmountLi">
                    <label for="sbonCeilingAmount" class="control-label">Гранична сума платежу<span class="required-star"> *</span></label>
                    <input type="number" class="k-input" id="sbonCeilingAmount" name="sbonCeilingAmount" value="0.00" data-required-msg="Гранична сума обов'язкова.'" data-notzero-msg='Сума має бути більшою від 0.' />
                </li>
                <li id="sbonReceiverMfoLi" style="display: none;">
                    <label for="sbonReceiverMfo" class="control-label">МФО отримувача <span class="required-star"> *</span></label>
                    <input type="text" class="k-textbox" id="sbonReceiverMfo" name="sbonReceiverMfo"
                           required data-required-msg="Введіть МФО." />
                </li>
                <li id="sbonReceiverAccountLi" style="display: none;">
                    <label for="sbonReceiverAccount" class="control-label">№ рахунку отримувача <span class="required-star"> *</span></label>
                    <input type="text" class="k-textbox" id="sbonReceiverAccount" name="sbonReceiverAccount"
                           required data-required-msg="Введіть № рахунку."
                           data-validnlscontroldigit-msg='Невірний контрольний розряд.' data-mfo-field="sbonReceiverMfo" />

                </li>
                <li id="sbonReceiverNameLi" style="display: none;">
                    <label for="sbonReceiverName" class="control-label">Назва отримувача <span class="required-star"> *</span></label>
                    <input type="text" class="k-textbox" id="sbonReceiverName" name="sbonReceiverName"
                           required data-required-msg="Введіть назву отримувача." />

                </li>
                <li id="sbonReceiverEdrpouLi" style="display: none;">
                    <label for="sbonReceiverEdrpou" class="control-label">ЕДРПОУ отримувача <span class="required-star"> *</span></label>
                    <input type="text" class="k-textbox" id="sbonReceiverEdrpou" name="sbonReceiverEdrpou"
                           required data-required-msg="Введіть код ЄДРПОУ."
                           data-validctrldigit-msg='Невірний контрольний розряд' />

                </li>
                <li id="sbonpurposeLi" style="display: none;">
                    <label for="sbonPurpose" class="control-label">Призначення платежу <span class="required-star"> *</span></label>
                    <textarea rows="2" class="k-textbox" id="sbonPurpose" name="sbonPurpose"
                              data-required-msg="Введіть призначення платежу."></textarea>
                </li>
            </ul>
            <div id="sbonExtraFields">

            </div>
            <div id="sbonExtraError" style="display: none; border-color: red; border-style: solid;">

            </div>


            <div class="window-footer" style="margin-top: 10px;" id="sbonButtonPanel">
                <button type="button" class="k-primary k-button" onclick="bars.utils.sto.saveSbonOrder() "><i class="pf-icon pf-16 pf-save"></i> Зберегти</button>
                <button type="button" class="k-button" onclick="bars.utils.sto.closeSbonOrderWindow() ">Відмінити</button>
            </div>
        </form>
    </text>)
                            .Width(800)
                            .Height(600)
                            .Draggable()
                            .Modal(true)
                            .Visible(false)
    )

    @(Html.Kendo().Window().Name("errorWnd")
    .Title("Помилка!")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(500)
    )

<script src="@Url.Content("~/Areas/Payreg/Scripts/sto.utils.js")"></script>
<script src="@Url.Content("~/Areas/Payreg/Scripts/sto.loader.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Bars/bars.utils.js")"></script>
<script type="text/javascript">
    var strBankDate = '@ViewBag.BankDate.AddDays(1).ToString("o")';
    var bankDateLeft = strBankDate.split('T')[0];
    var bankDateDigits = bankDateLeft.split('-');

    var bankDate = new Date(bankDateDigits[0], bankDateDigits[1]-1, bankDateDigits[2]);
    var currentUserName = '@ViewBag.CurrentUserName';
    templateLoader.loadExtTemplate("@Url.Content("~/Areas/Payreg/Scripts/sbontemplate.tpl.htm")");
    //начальная инициализация
    $(document).ready(function () {
        $(".orders_toolbar #add_sep_order").bind("click", function () {
            $('#frmSepOrder').trigger('reset');
            $('#sepOrderId').val('');
            $("span.k-tooltip-validation").hide();
            setTimeout(function () {
                $('input[name=sepShiftHolidayRadio][value=-1]').prop('checked', true);
                $('#sepStartDate').data("kendoDatePicker").value(bankDate);
                var $accList = $('#frmSepOrder').find('#sepAccountId').data("kendoDropDownList");
                if ($accList.value() == "") {
                    $accList.select(0);
                }
            }, 500);
            var window = $('#wnd_sep_order').data('kendoWindow');
            window.title('СЕП ордер <b><' + currentUserName + '></b>');
            window.center().open();
        });
        $(".orders_toolbar #add_sbon_order").bind("click", function () {
            $('#frmSbonOrder').trigger('reset');
            $('#sbonOrderId').val('');
            $("span.k-tooltip-validation").hide();
            setTimeout(function () {
                $('input[name=sbonShiftHolidayRadio][value=-1]').prop('checked', true);
                $('#sbonStartDate').data("kendoDatePicker").value(bankDate);
                var $provList = $('#frmSbonOrder').find('#sbonProvaiderId').data("kendoDropDownList");
                $provList.select(0);
                var $accList = $('#frmSbonOrder').find('#sbonAccountId').data("kendoDropDownList");
                if ($accList.value() == "") {
                    $accList.select(0);
                }
                bars.utils.sto.onSbonProviderSelect.call($provList);
            }, 500);
            var window = $('#wnd_sbon_order').data('kendoWindow');
            window.title('СБОН ордер <b><' + currentUserName + '></b>');
            window.center().open();
        });

        $(".orders_toolbar #edit_order").bind("click", function () {
            var grid = $('#cust_orders').data('kendoGrid');
            var row = grid.dataItem(grid.select());
            if (row.ORDER_KIND_ID == 1) {
                //редактируем СЕП ордер
                $.get(bars.config.urlContent('/Payreg/Payreg/GetSepOrder'), { orderId: row.ID }).done(function (result) {
                    if (result.status === 'ok') {


                        $('#frmSepOrder').trigger('reset');
                        $("span.k-tooltip-validation").hide();

                        var $accList = $('#frmSepOrder').find('#sepAccountId').data("kendoDropDownList");
                        $accList.select(function (dataItem) {
                            return dataItem.ACC === result.data.PAYER_ACCOUNT_ID;
                        });

                        $('#sepPaymentFrequency').data("kendoDropDownList").select(function (dataItem) {
                            return dataItem.ID === result.data.PAYMENT_FREQUENCY;
                        });

                        $('#sepOrderId').val(result.data.ID);
                        $('#sepStartDate').data("kendoDatePicker").value(result.data.START_DATE);
                        $('#sepStopDate').data("kendoDatePicker").value(result.data.STOP_DATE);
                        $('#sepRegularAmount').val(result.data.REGULAR_AMOUNT);
                        $('#sepReceiverMfo').val(result.data.RECEIVER_MFO);
                        $('#sepReceiverAccount').val(result.data.RECEIVER_ACCOUNT);
                        $('#sepReceiverName').val(result.data.RECEIVER_NAME);
                        $('#sepReceiverEdrpou').val(result.data.RECEIVER_EDRPOU);
                        $('#sepPurpose').val(result.data.PURPOSE);
                        $('input[name=sepShiftHolidayRadio][value=1]').prop('checked', result.data.HOLIDAY_SHIFT === 1);
                        $('input[name=sepShiftHolidayRadio][value=-1]').prop('checked', result.data.HOLIDAY_SHIFT !== 1);

                        var window = $('#wnd_sep_order').data('kendoWindow');
                        window.title('СЕП ордер <b><' + currentUserName + '></b>');
                        window.center().open();
                    } else {
                        bars.ui.error({ text: result.message });
                    }
                });

            } else {
                //редактируем CБОН ордер
                var sbonAction = '';
                switch (row.ORDER_KIND_ID) {
                    case 2:
                        sbonAction = 'GetSbonFreeOrder';
                        break;
                    case 3:
                        sbonAction = 'GetSbonWithContractOrder';
                        break;
                    case 4:
                        sbonAction = 'GetSbonWithoutContractOrder';
                        break;
                }
                $.get(bars.config.urlContent('/Payreg/Payreg/' + sbonAction), { orderId: row.ID }).done(function (result) {
                    if (result.status === 'ok') {
                        $("span.k-tooltip-validation").hide();

                        var $accList = $('#sbonAccountId').data("kendoDropDownList");
                        $accList.select(function (dataItem) {
                            return dataItem.ACC === result.data.PAYER_ACCOUNT_ID;
                        });
                        $('#sbonPaymentFrequency').data("kendoDropDownList").select(function (dataItem) {
                            return dataItem.ID === result.data.PAYMENT_FREQUENCY;
                        });

                        $('#sbonOrderId').val(result.data.ID);
                        $('#sbonStartDate').data("kendoDatePicker").value(result.data.START_DATE);
                        $('#sbonStopDate').data("kendoDatePicker").value(result.data.STOP_DATE);
                        $('#sbonPersonalAccount').val(result.data.CUSTOMER_ACCOUNT);
                        var $provList = $('#frmSbonOrder').find('#sbonProvaiderId').data("kendoDropDownList");
                        $provList.select(function (dataItem) {
                            return dataItem.ID === result.data.PROVIDER_ID;
                        });
                        bars.utils.sto.onSbonProviderSelect.call($provList, result.data.ExtraData);

                        $('#sbonRegularAmount').data("kendoNumericTextBox").value(result.data.REGULAR_AMOUNT);
                        if (result.data.CEILING_AMOUNT) {
                            $('#sbonCeilingAmount').data("kendoNumericTextBox").value(result.data.CEILING_AMOUNT);
                        }
                        $('input[name=sbonShiftHolidayRadio][value=1]').prop('checked', result.data.HOLIDAY_SHIFT === 1);
                        $('input[name=sbonShiftHolidayRadio][value=-1]').prop('checked', result.data.HOLIDAY_SHIFT !== 1);
                        if (result.data.RECEIVER_MFO) {
                            $('#sbonReceiverMfo').val(result.data.RECEIVER_MFO);
                        }
                        if (result.data.RECEIVER_ACCOUNT) {
                            $('#sbonReceiverAccount').val(result.data.RECEIVER_ACCOUNT);
                        }
                        if (result.data.RECEIVER_NAME) {
                            $('#sbonReceiverName').val(result.data.RECEIVER_NAME);
                        }
                        if (result.data.RECEIVER_EDRPOU) {
                            $('#sbonReceiverEdrpou').val(result.data.RECEIVER_EDRPOU);
                        }
                        if (result.data.PURPOSE) {
                            $('#sbonPurpose').val(result.data.PURPOSE);
                        }
                        var window = $('#wnd_sbon_order').data('kendoWindow');
                        window.title('СБОН ордер <b><' + currentUserName + '></b>');
                        window.center().open();
                    } else {
                        bars.ui.error({ text: result.message });
                    }
                });
            }
        });

        $("#sepStartDate").kendoDatePicker({ culture: "uk-UA" });
        $("#sepStopDate").kendoDatePicker({ culture: "uk-UA" });
        $("#sbonStartDate").kendoDatePicker({ culture: "uk-UA" });
        $("#sbonStopDate").kendoDatePicker({ culture: "uk-UA" });

        $("#sepRegularAmount").kendoNumericTextBox({
            format: "#.00"
        });

        $('#sbonCeilingAmount').kendoNumericTextBox({
            format: "#.00"
        });

        $('#sbonRegularAmount').kendoNumericTextBox({
            format: "#.00"
        });

        $("#edit_order").kendoButton();
        $("#printF190").bind("click", bars.utils.sto.printF190).kendoButton();


        $('#sbonAccountId, #sepAccountId').width(423).kendoDropDownList({
            dataTextField: "NLS",
            dataValueField: "ACC",
            dataSource: bars.utils.sto.custAccountsDS
        });

        $('#custSearchForm').keypress(function (e) {
            if (e.which == 13) {
                bars.utils.sto.searchCustomer();
            }
        });

        //функции-валидаторы
        function checkEdrpouControlDigit(input) {
            if (input.is("[data-validctrldigit-msg]") && input.val() != "") {
                return bars.utils.checkEdrpouCtrlDigit(input.val());
            }
            return true;
        };

        function checkStopDateGreater(input) {
            if (input.is("[data-stopdategreater-msg]") && input.val() != "") {
                var start_date = kendo.parseDate(input.val());
                var stop_date = kendo.parseDate($("[name='" + input.data("startdate-field") + "']").val());
                return start_date && stop_date && stop_date.getTime() < start_date.getTime();
            }
            return true;
        }

        function checkZeroSum(input) {
            if (input.is("[data-notzero-msg]") && input.prop('required')) {
                return input.val() > 0;
            }
            return true;
        }

        //инициализация контейнера telerik-валидации

        var validationRules = {
            validctrldigit: function (input) {
                return checkEdrpouControlDigit(input);
            },
            stopdategreater: function (input) {
                return checkStopDateGreater(input);
            },
            notzero: function (input) {
                return checkZeroSum(input);
            },
            bankdate: function (input) {
                if (input.is("[data-bankdate-msg]")) {
                    return kendo.parseDate(input.val()) >= bankDate;
                }
                return true;
            },
            validnlscontroldigit: function (input) {
                if (input.is("[data-validnlscontroldigit-msg]")) {
                    var mfo = $("[name='" + input.data("mfo-field") + "']").val();
                    if (input.val() != "" && mfo != undefined && mfo != "") {
                        return bars.utils.checkNlsCtrlDigit(mfo, input.val());
                    }
                }
                return true;
            }
        };

        var validationContainer = $('#frmSepOrder');
        kendo.init(validationContainer);
        validationContainer.kendoValidator({
            rules: validationRules
        });

        var validationContainer1 = $('#frmSbonOrder');
        kendo.init(validationContainer1);
        validationContainer1.kendoValidator({
            rules: validationRules
        });

    });
</script>
<link href="@Url.Content("~/Areas/Payreg/Content/style.css")" rel="stylesheet" />