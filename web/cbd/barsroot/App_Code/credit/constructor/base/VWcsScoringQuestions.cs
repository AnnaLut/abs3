/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace credit
{
    public sealed class VWcsScoringQuestionsRecord : BbRecord
    {
        public VWcsScoringQuestionsRecord(): base()
        {
            fillFields();
        }
        public VWcsScoringQuestionsRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VWcsScoringQuestionsRecord(BbDataSource Parent, OracleDecimal RowScn, String SCORING_ID, String QUESTION_ID, String QUESTION_NAME, String QUESTION_DESC, String TYPE_ID, String TYPE_NAME, String RESULT_QID, Decimal? MULTIPLIER, Decimal? ELSE_SCORE)
            : this(Parent)
        {
            this.SCORING_ID = SCORING_ID;
            this.QUESTION_ID = QUESTION_ID;
            this.QUESTION_NAME = QUESTION_NAME;
            this.QUESTION_DESC = QUESTION_DESC;
            this.TYPE_ID = TYPE_ID;
            this.TYPE_NAME = TYPE_NAME;
            this.RESULT_QID = RESULT_QID;
            this.MULTIPLIER = MULTIPLIER;
            this.ELSE_SCORE = ELSE_SCORE;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("SCORING_ID", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SCORING_QUESTIONS", ObjectTypes.View, "Вопросы карты скоринга (Представление)", "Идентификатор карты скоринга"));
            Fields.Add( new BbField("QUESTION_ID", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SCORING_QUESTIONS", ObjectTypes.View, "Вопросы карты скоринга (Представление)", "Идентификатор вопроса"));
            Fields.Add( new BbField("QUESTION_NAME", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SCORING_QUESTIONS", ObjectTypes.View, "Вопросы карты скоринга (Представление)", "Наименование вопроса"));
            Fields.Add( new BbField("QUESTION_DESC", OracleDbType.Varchar2, true, false, false, false, false, "V_WCS_SCORING_QUESTIONS", ObjectTypes.View, "Вопросы карты скоринга (Представление)", "Наименование вопроса (расширеное)"));
            Fields.Add( new BbField("TYPE_ID", OracleDbType.Varchar2, true, false, false, false, false, "V_WCS_SCORING_QUESTIONS", ObjectTypes.View, "Вопросы карты скоринга (Представление)", "Идентификатор типа вопроса"));
            Fields.Add( new BbField("TYPE_NAME", OracleDbType.Varchar2, false, false, false, false, false, "V_WCS_SCORING_QUESTIONS", ObjectTypes.View, "Вопросы карты скоринга (Представление)", "Наименование типа вопроса"));
            Fields.Add( new BbField("RESULT_QID", OracleDbType.Varchar2, true, false, false, false, false, "V_WCS_SCORING_QUESTIONS", ObjectTypes.View, "Вопросы карты скоринга (Представление)", "Идентификатор вопроса-результата вычисления скор. балла"));
            Fields.Add( new BbField("MULTIPLIER", OracleDbType.Decimal, true, false, false, false, false, "V_WCS_SCORING_QUESTIONS", ObjectTypes.View, "Вопросы карты скоринга (Представление)", "Весовой коэффициент"));
            Fields.Add( new BbField("ELSE_SCORE", OracleDbType.Decimal, true, false, false, false, false, "V_WCS_SCORING_QUESTIONS", ObjectTypes.View, "Вопросы карты скоринга (Представление)", "Cкор. балла если не выполнились условия разбивки"));        
        }
        public String SCORING_ID { get { return (String)FindField("SCORING_ID").Value; } set {SetField("SCORING_ID", value);} }
        public String QUESTION_ID { get { return (String)FindField("QUESTION_ID").Value; } set {SetField("QUESTION_ID", value);} }
        public String QUESTION_NAME { get { return (String)FindField("QUESTION_NAME").Value; } set {SetField("QUESTION_NAME", value);} }
        public String QUESTION_DESC { get { return (String)FindField("QUESTION_DESC").Value; } set {SetField("QUESTION_DESC", value);} }
        public String TYPE_ID { get { return (String)FindField("TYPE_ID").Value; } set {SetField("TYPE_ID", value);} }
        public String TYPE_NAME { get { return (String)FindField("TYPE_NAME").Value; } set {SetField("TYPE_NAME", value);} }
        public String RESULT_QID { get { return (String)FindField("RESULT_QID").Value; } set {SetField("RESULT_QID", value);} }
        public Decimal? MULTIPLIER { get { return (Decimal?)FindField("MULTIPLIER").Value; } set {SetField("MULTIPLIER", value);} }
        public Decimal? ELSE_SCORE { get { return (Decimal?)FindField("ELSE_SCORE").Value; } set {SetField("ELSE_SCORE", value);} }
    }

    public sealed class VWcsScoringQuestionsFilters : BbFilters
    {
        public VWcsScoringQuestionsFilters(BbDataSource Parent) : base (Parent)
        {
            SCORING_ID = new BBVarchar2Filter(this, "SCORING_ID");
            QUESTION_ID = new BBVarchar2Filter(this, "QUESTION_ID");
            QUESTION_NAME = new BBVarchar2Filter(this, "QUESTION_NAME");
            QUESTION_DESC = new BBVarchar2Filter(this, "QUESTION_DESC");
            TYPE_ID = new BBVarchar2Filter(this, "TYPE_ID");
            TYPE_NAME = new BBVarchar2Filter(this, "TYPE_NAME");
            RESULT_QID = new BBVarchar2Filter(this, "RESULT_QID");
            MULTIPLIER = new BBDecimalFilter(this, "MULTIPLIER");
            ELSE_SCORE = new BBDecimalFilter(this, "ELSE_SCORE");
        }
        public BBVarchar2Filter SCORING_ID;
        public BBVarchar2Filter QUESTION_ID;
        public BBVarchar2Filter QUESTION_NAME;
        public BBVarchar2Filter QUESTION_DESC;
        public BBVarchar2Filter TYPE_ID;
        public BBVarchar2Filter TYPE_NAME;
        public BBVarchar2Filter RESULT_QID;
        public BBDecimalFilter MULTIPLIER;
        public BBDecimalFilter ELSE_SCORE;
    }

    public partial class VWcsScoringQuestions : BbTable<VWcsScoringQuestionsRecord, VWcsScoringQuestionsFilters>
    {
        public VWcsScoringQuestions() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VWcsScoringQuestions(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VWcsScoringQuestionsRecord> Select(VWcsScoringQuestionsRecord Item)
        {
            List<VWcsScoringQuestionsRecord> res = new List<VWcsScoringQuestionsRecord>();
                        OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VWcsScoringQuestionsRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (String)null : Convert.ToString(rdr[4]), 
                        rdr.IsDBNull(5) ?  (String)null : Convert.ToString(rdr[5]), 
                        rdr.IsDBNull(6) ?  (String)null : Convert.ToString(rdr[6]), 
                        rdr.IsDBNull(7) ?  (String)null : Convert.ToString(rdr[7]), 
                        rdr.IsDBNull(8) ?  (Decimal?)null : Convert.ToDecimal(rdr[8]), 
                        rdr.IsDBNull(9) ?  (Decimal?)null : Convert.ToDecimal(rdr[9]))
                    );
                }
            }
                        finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}