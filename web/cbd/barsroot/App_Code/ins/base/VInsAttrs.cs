/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace Bars.Ins
{
    public sealed class VInsAttrsRecord : BbRecord
    {
        public VInsAttrsRecord(): base()
        {
            fillFields();
        }
        public VInsAttrsRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VInsAttrsRecord(BbDataSource Parent, OracleDecimal RowScn, String ATTR_ID, String NAME, String TYPE_ID, String TYPE_NAME)
            : this(Parent)
        {
            this.ATTR_ID = ATTR_ID;
            this.NAME = NAME;
            this.TYPE_ID = TYPE_ID;
            this.TYPE_NAME = TYPE_NAME;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add(new BbField("ATTR_ID", OracleDbType.Varchar2, false, false, false, false, false, "V_INS_ATTRS", ObjectTypes.View, "Атрибути СК (Представлення)", "Ідентифікатор"));
            Fields.Add(new BbField("NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_INS_ATTRS", ObjectTypes.View, "Атрибути СК (Представлення)", "Найменування"));
            Fields.Add(new BbField("TYPE_ID", OracleDbType.Varchar2, true, false, false, false, false, "V_INS_ATTRS", ObjectTypes.View, "Атрибути СК (Представлення)", "Тип"));
            Fields.Add(new BbField("TYPE_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_INS_ATTRS", ObjectTypes.View, "Атрибути СК (Представлення)", "Найменування типу"));
        }
        public String ATTR_ID { get { return (String)FindField("ATTR_ID").Value; } set { SetField("ATTR_ID", value); } }
        public String NAME { get { return (String)FindField("NAME").Value; } set {SetField("NAME", value);} }
        public String TYPE_ID { get { return (String)FindField("TYPE_ID").Value; } set { SetField("TYPE_ID", value); } }
        public String TYPE_NAME { get { return (String)FindField("TYPE_NAME").Value; } set { SetField("TYPE_NAME", value); } }
    }

    public sealed class VInsAttrsFilters : BbFilters
    {
        public VInsAttrsFilters(BbDataSource Parent) : base (Parent)
        {
            ATTR_ID = new BBVarchar2Filter(this, "ATTR_ID");
            NAME = new BBVarchar2Filter(this, "NAME");
            TYPE_ID = new BBVarchar2Filter(this, "TYPE_ID");
            TYPE_NAME = new BBVarchar2Filter(this, "TYPE_NAME");
        }
        public BBVarchar2Filter ATTR_ID;
        public BBVarchar2Filter NAME;
        public BBVarchar2Filter TYPE_ID;
        public BBVarchar2Filter TYPE_NAME;
    }

    public partial class VInsAttrs : BbTable<VInsAttrsRecord, VInsAttrsFilters>
    {
        public VInsAttrs() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VInsAttrs(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VInsAttrsRecord> Select(VInsAttrsRecord Item)
        {
            List<VInsAttrsRecord> res = new List<VInsAttrsRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VInsAttrsRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ? (String)null : Convert.ToString(rdr[1]),
                        rdr.IsDBNull(2) ? (String)null : Convert.ToString(rdr[2]),
                        rdr.IsDBNull(3) ? (String)null : Convert.ToString(rdr[3]),
                        rdr.IsDBNull(4) ? (String)null : Convert.ToString(rdr[4]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}