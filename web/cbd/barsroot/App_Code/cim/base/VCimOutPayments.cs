/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace cim
{
    public sealed class VCimOutPaymentsRecord : BbRecord
    {
        public VCimOutPaymentsRecord(): base()
        {
            fillFields();
        }
        public VCimOutPaymentsRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VCimOutPaymentsRecord(BbDataSource Parent, OracleDecimal RowScn, Decimal? REF, Decimal? DEAL_TAG, String TT, Decimal? VOB, String ND, DateTime? PDAT, DateTime? VDAT, Decimal? KV, Decimal? DK, Decimal? S, Decimal? SQ, Decimal? SK, DateTime? DATD, DateTime? DATP, String NAM_A, String NLSA, String MFOA, String NAM_B, String NLSB, String MFOB, String NAZN, String D_REC, String ID_A, String ID_B, String ID_O, Byte[] SIGN, Decimal? SOS, Decimal? VP, String CHK, Decimal? S2, Decimal? KV2, Decimal? KVQ, Decimal? REFL, Decimal? PRTY, Decimal? SQ2, String CURRVISAGRP, String NEXTVISAGRP, String REF_A, String TOBO, Decimal? OTM, String SIGNED, String BRANCH, Decimal? USERID, Decimal? RESPID, String KF, Decimal? BIS, Decimal? SOS_TRACKER, String NEXT_VISA_BRANCHES, DateTime? SOS_CHANGE_TIME)
            : this(Parent)
        {
            this.REF = REF;
            this.DEAL_TAG = DEAL_TAG;
            this.TT = TT;
            this.VOB = VOB;
            this.ND = ND;
            this.PDAT = PDAT;
            this.VDAT = VDAT;
            this.KV = KV;
            this.DK = DK;
            this.S = S;
            this.SQ = SQ;
            this.SK = SK;
            this.DATD = DATD;
            this.DATP = DATP;
            this.NAM_A = NAM_A;
            this.NLSA = NLSA;
            this.MFOA = MFOA;
            this.NAM_B = NAM_B;
            this.NLSB = NLSB;
            this.MFOB = MFOB;
            this.NAZN = NAZN;
            this.D_REC = D_REC;
            this.ID_A = ID_A;
            this.ID_B = ID_B;
            this.ID_O = ID_O;
            this.SIGN = SIGN;
            this.SOS = SOS;
            this.VP = VP;
            this.CHK = CHK;
            this.S2 = S2;
            this.KV2 = KV2;
            this.KVQ = KVQ;
            this.REFL = REFL;
            this.PRTY = PRTY;
            this.SQ2 = SQ2;
            this.CURRVISAGRP = CURRVISAGRP;
            this.NEXTVISAGRP = NEXTVISAGRP;
            this.REF_A = REF_A;
            this.TOBO = TOBO;
            this.OTM = OTM;
            this.SIGNED = SIGNED;
            this.BRANCH = BRANCH;
            this.USERID = USERID;
            this.RESPID = RESPID;
            this.KF = KF;
            this.BIS = BIS;
            this.SOS_TRACKER = SOS_TRACKER;
            this.NEXT_VISA_BRANCHES = NEXT_VISA_BRANCHES;
            this.SOS_CHANGE_TIME = SOS_CHANGE_TIME;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("REF", OracleDbType.Decimal, false, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("DEAL_TAG", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("TT", OracleDbType.Char, false, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("VOB", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("ND", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("PDAT", OracleDbType.Date, false, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("VDAT", OracleDbType.Date, false, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("KV", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("DK", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("S", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("SQ", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("SK", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("DATD", OracleDbType.Date, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("DATP", OracleDbType.Date, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("NAM_A", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("NLSA", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("MFOA", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("NAM_B", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("NLSB", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("MFOB", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("NAZN", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("D_REC", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("ID_A", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("ID_B", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("ID_O", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("SIGN", OracleDbType.Raw, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("SOS", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("VP", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("CHK", OracleDbType.Char, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("S2", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("KV2", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("KVQ", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("REFL", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("PRTY", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("SQ2", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("CURRVISAGRP", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("NEXTVISAGRP", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("REF_A", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("TOBO", OracleDbType.Varchar2, false, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("OTM", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("SIGNED", OracleDbType.Char, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("BRANCH", OracleDbType.Varchar2, false, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("USERID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("RESPID", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("KF", OracleDbType.Varchar2, false, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("BIS", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("SOS_TRACKER", OracleDbType.Decimal, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("NEXT_VISA_BRANCHES", OracleDbType.Varchar2, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));
            Fields.Add( new BbField("SOS_CHANGE_TIME", OracleDbType.Date, true, false, false, false, false, "V_CIM_OUT_PAYMENTS", ObjectTypes.View, "Вихідні (імпортні) платежі, що пілягають валютному контролю", ""));        
        }
        public Decimal? REF { get { return (Decimal?)FindField("REF").Value; } set {SetField("REF", value);} }
        public Decimal? DEAL_TAG { get { return (Decimal?)FindField("DEAL_TAG").Value; } set {SetField("DEAL_TAG", value);} }
        public String TT { get { return (String)FindField("TT").Value; } set {SetField("TT", value);} }
        public Decimal? VOB { get { return (Decimal?)FindField("VOB").Value; } set {SetField("VOB", value);} }
        public String ND { get { return (String)FindField("ND").Value; } set {SetField("ND", value);} }
        public DateTime? PDAT { get { return (DateTime?)FindField("PDAT").Value; } set {SetField("PDAT", value);} }
        public DateTime? VDAT { get { return (DateTime?)FindField("VDAT").Value; } set {SetField("VDAT", value);} }
        public Decimal? KV { get { return (Decimal?)FindField("KV").Value; } set {SetField("KV", value);} }
        public Decimal? DK { get { return (Decimal?)FindField("DK").Value; } set {SetField("DK", value);} }
        public Decimal? S { get { return (Decimal?)FindField("S").Value; } set {SetField("S", value);} }
        public Decimal? SQ { get { return (Decimal?)FindField("SQ").Value; } set {SetField("SQ", value);} }
        public Decimal? SK { get { return (Decimal?)FindField("SK").Value; } set {SetField("SK", value);} }
        public DateTime? DATD { get { return (DateTime?)FindField("DATD").Value; } set {SetField("DATD", value);} }
        public DateTime? DATP { get { return (DateTime?)FindField("DATP").Value; } set {SetField("DATP", value);} }
        public String NAM_A { get { return (String)FindField("NAM_A").Value; } set {SetField("NAM_A", value);} }
        public String NLSA { get { return (String)FindField("NLSA").Value; } set {SetField("NLSA", value);} }
        public String MFOA { get { return (String)FindField("MFOA").Value; } set {SetField("MFOA", value);} }
        public String NAM_B { get { return (String)FindField("NAM_B").Value; } set {SetField("NAM_B", value);} }
        public String NLSB { get { return (String)FindField("NLSB").Value; } set {SetField("NLSB", value);} }
        public String MFOB { get { return (String)FindField("MFOB").Value; } set {SetField("MFOB", value);} }
        public String NAZN { get { return (String)FindField("NAZN").Value; } set {SetField("NAZN", value);} }
        public String D_REC { get { return (String)FindField("D_REC").Value; } set {SetField("D_REC", value);} }
        public String ID_A { get { return (String)FindField("ID_A").Value; } set {SetField("ID_A", value);} }
        public String ID_B { get { return (String)FindField("ID_B").Value; } set {SetField("ID_B", value);} }
        public String ID_O { get { return (String)FindField("ID_O").Value; } set {SetField("ID_O", value);} }
        public Byte[] SIGN { get { return (Byte[])FindField("SIGN").Value; } set {SetField("SIGN", value);} }
        public Decimal? SOS { get { return (Decimal?)FindField("SOS").Value; } set {SetField("SOS", value);} }
        public Decimal? VP { get { return (Decimal?)FindField("VP").Value; } set {SetField("VP", value);} }
        public String CHK { get { return (String)FindField("CHK").Value; } set {SetField("CHK", value);} }
        public Decimal? S2 { get { return (Decimal?)FindField("S2").Value; } set {SetField("S2", value);} }
        public Decimal? KV2 { get { return (Decimal?)FindField("KV2").Value; } set {SetField("KV2", value);} }
        public Decimal? KVQ { get { return (Decimal?)FindField("KVQ").Value; } set {SetField("KVQ", value);} }
        public Decimal? REFL { get { return (Decimal?)FindField("REFL").Value; } set {SetField("REFL", value);} }
        public Decimal? PRTY { get { return (Decimal?)FindField("PRTY").Value; } set {SetField("PRTY", value);} }
        public Decimal? SQ2 { get { return (Decimal?)FindField("SQ2").Value; } set {SetField("SQ2", value);} }
        public String CURRVISAGRP { get { return (String)FindField("CURRVISAGRP").Value; } set {SetField("CURRVISAGRP", value);} }
        public String NEXTVISAGRP { get { return (String)FindField("NEXTVISAGRP").Value; } set {SetField("NEXTVISAGRP", value);} }
        public String REF_A { get { return (String)FindField("REF_A").Value; } set {SetField("REF_A", value);} }
        public String TOBO { get { return (String)FindField("TOBO").Value; } set {SetField("TOBO", value);} }
        public Decimal? OTM { get { return (Decimal?)FindField("OTM").Value; } set {SetField("OTM", value);} }
        public String SIGNED { get { return (String)FindField("SIGNED").Value; } set {SetField("SIGNED", value);} }
        public String BRANCH { get { return (String)FindField("BRANCH").Value; } set {SetField("BRANCH", value);} }
        public Decimal? USERID { get { return (Decimal?)FindField("USERID").Value; } set {SetField("USERID", value);} }
        public Decimal? RESPID { get { return (Decimal?)FindField("RESPID").Value; } set {SetField("RESPID", value);} }
        public String KF { get { return (String)FindField("KF").Value; } set {SetField("KF", value);} }
        public Decimal? BIS { get { return (Decimal?)FindField("BIS").Value; } set {SetField("BIS", value);} }
        public Decimal? SOS_TRACKER { get { return (Decimal?)FindField("SOS_TRACKER").Value; } set {SetField("SOS_TRACKER", value);} }
        public String NEXT_VISA_BRANCHES { get { return (String)FindField("NEXT_VISA_BRANCHES").Value; } set {SetField("NEXT_VISA_BRANCHES", value);} }
        public DateTime? SOS_CHANGE_TIME { get { return (DateTime?)FindField("SOS_CHANGE_TIME").Value; } set {SetField("SOS_CHANGE_TIME", value);} }
    }

    public sealed class VCimOutPaymentsFilters : BbFilters
    {
        public VCimOutPaymentsFilters(BbDataSource Parent) : base (Parent)
        {
            REF = new BBDecimalFilter(this, "REF");
            DEAL_TAG = new BBDecimalFilter(this, "DEAL_TAG");
            TT = new BBCharFilter(this, "TT");
            VOB = new BBDecimalFilter(this, "VOB");
            ND = new BBVarchar2Filter(this, "ND");
            PDAT = new BBDateFilter(this, "PDAT");
            VDAT = new BBDateFilter(this, "VDAT");
            KV = new BBDecimalFilter(this, "KV");
            DK = new BBDecimalFilter(this, "DK");
            S = new BBDecimalFilter(this, "S");
            SQ = new BBDecimalFilter(this, "SQ");
            SK = new BBDecimalFilter(this, "SK");
            DATD = new BBDateFilter(this, "DATD");
            DATP = new BBDateFilter(this, "DATP");
            NAM_A = new BBVarchar2Filter(this, "NAM_A");
            NLSA = new BBVarchar2Filter(this, "NLSA");
            MFOA = new BBVarchar2Filter(this, "MFOA");
            NAM_B = new BBVarchar2Filter(this, "NAM_B");
            NLSB = new BBVarchar2Filter(this, "NLSB");
            MFOB = new BBVarchar2Filter(this, "MFOB");
            NAZN = new BBVarchar2Filter(this, "NAZN");
            D_REC = new BBVarchar2Filter(this, "D_REC");
            ID_A = new BBVarchar2Filter(this, "ID_A");
            ID_B = new BBVarchar2Filter(this, "ID_B");
            ID_O = new BBVarchar2Filter(this, "ID_O");
            SOS = new BBDecimalFilter(this, "SOS");
            VP = new BBDecimalFilter(this, "VP");
            CHK = new BBCharFilter(this, "CHK");
            S2 = new BBDecimalFilter(this, "S2");
            KV2 = new BBDecimalFilter(this, "KV2");
            KVQ = new BBDecimalFilter(this, "KVQ");
            REFL = new BBDecimalFilter(this, "REFL");
            PRTY = new BBDecimalFilter(this, "PRTY");
            SQ2 = new BBDecimalFilter(this, "SQ2");
            CURRVISAGRP = new BBVarchar2Filter(this, "CURRVISAGRP");
            NEXTVISAGRP = new BBVarchar2Filter(this, "NEXTVISAGRP");
            REF_A = new BBVarchar2Filter(this, "REF_A");
            TOBO = new BBVarchar2Filter(this, "TOBO");
            OTM = new BBDecimalFilter(this, "OTM");
            SIGNED = new BBCharFilter(this, "SIGNED");
            BRANCH = new BBVarchar2Filter(this, "BRANCH");
            USERID = new BBDecimalFilter(this, "USERID");
            RESPID = new BBDecimalFilter(this, "RESPID");
            KF = new BBVarchar2Filter(this, "KF");
            BIS = new BBDecimalFilter(this, "BIS");
            SOS_TRACKER = new BBDecimalFilter(this, "SOS_TRACKER");
            NEXT_VISA_BRANCHES = new BBVarchar2Filter(this, "NEXT_VISA_BRANCHES");
            SOS_CHANGE_TIME = new BBDateFilter(this, "SOS_CHANGE_TIME");
        }
        public BBDecimalFilter REF;
        public BBDecimalFilter DEAL_TAG;
        public BBCharFilter TT;
        public BBDecimalFilter VOB;
        public BBVarchar2Filter ND;
        public BBDateFilter PDAT;
        public BBDateFilter VDAT;
        public BBDecimalFilter KV;
        public BBDecimalFilter DK;
        public BBDecimalFilter S;
        public BBDecimalFilter SQ;
        public BBDecimalFilter SK;
        public BBDateFilter DATD;
        public BBDateFilter DATP;
        public BBVarchar2Filter NAM_A;
        public BBVarchar2Filter NLSA;
        public BBVarchar2Filter MFOA;
        public BBVarchar2Filter NAM_B;
        public BBVarchar2Filter NLSB;
        public BBVarchar2Filter MFOB;
        public BBVarchar2Filter NAZN;
        public BBVarchar2Filter D_REC;
        public BBVarchar2Filter ID_A;
        public BBVarchar2Filter ID_B;
        public BBVarchar2Filter ID_O;
        public BBDecimalFilter SOS;
        public BBDecimalFilter VP;
        public BBCharFilter CHK;
        public BBDecimalFilter S2;
        public BBDecimalFilter KV2;
        public BBDecimalFilter KVQ;
        public BBDecimalFilter REFL;
        public BBDecimalFilter PRTY;
        public BBDecimalFilter SQ2;
        public BBVarchar2Filter CURRVISAGRP;
        public BBVarchar2Filter NEXTVISAGRP;
        public BBVarchar2Filter REF_A;
        public BBVarchar2Filter TOBO;
        public BBDecimalFilter OTM;
        public BBCharFilter SIGNED;
        public BBVarchar2Filter BRANCH;
        public BBDecimalFilter USERID;
        public BBDecimalFilter RESPID;
        public BBVarchar2Filter KF;
        public BBDecimalFilter BIS;
        public BBDecimalFilter SOS_TRACKER;
        public BBVarchar2Filter NEXT_VISA_BRANCHES;
        public BBDateFilter SOS_CHANGE_TIME;
    }

    public partial class VCimOutPayments : BbTable<VCimOutPaymentsRecord, VCimOutPaymentsFilters>
    {
        public VCimOutPayments() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VCimOutPayments(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VCimOutPaymentsRecord> Select(VCimOutPaymentsRecord Item)
        {
            List<VCimOutPaymentsRecord> res = new List<VCimOutPaymentsRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VCimOutPaymentsRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (Decimal?)null : Convert.ToDecimal(rdr[1]), 
                        rdr.IsDBNull(2) ?  (Decimal?)null : Convert.ToDecimal(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (Decimal?)null : Convert.ToDecimal(rdr[4]), 
                        rdr.IsDBNull(5) ?  (String)null : Convert.ToString(rdr[5]), 
                        rdr.IsDBNull(6) ?  (DateTime?)null : Convert.ToDateTime(rdr[6]), 
                        rdr.IsDBNull(7) ?  (DateTime?)null : Convert.ToDateTime(rdr[7]), 
                        rdr.IsDBNull(8) ?  (Decimal?)null : Convert.ToDecimal(rdr[8]), 
                        rdr.IsDBNull(9) ?  (Decimal?)null : Convert.ToDecimal(rdr[9]), 
                        rdr.IsDBNull(10) ?  (Decimal?)null : Convert.ToDecimal(rdr[10]), 
                        rdr.IsDBNull(11) ?  (Decimal?)null : Convert.ToDecimal(rdr[11]), 
                        rdr.IsDBNull(12) ?  (Decimal?)null : Convert.ToDecimal(rdr[12]), 
                        rdr.IsDBNull(13) ?  (DateTime?)null : Convert.ToDateTime(rdr[13]), 
                        rdr.IsDBNull(14) ?  (DateTime?)null : Convert.ToDateTime(rdr[14]), 
                        rdr.IsDBNull(15) ?  (String)null : Convert.ToString(rdr[15]), 
                        rdr.IsDBNull(16) ?  (String)null : Convert.ToString(rdr[16]), 
                        rdr.IsDBNull(17) ?  (String)null : Convert.ToString(rdr[17]), 
                        rdr.IsDBNull(18) ?  (String)null : Convert.ToString(rdr[18]), 
                        rdr.IsDBNull(19) ?  (String)null : Convert.ToString(rdr[19]), 
                        rdr.IsDBNull(20) ?  (String)null : Convert.ToString(rdr[20]), 
                        rdr.IsDBNull(21) ?  (String)null : Convert.ToString(rdr[21]), 
                        rdr.IsDBNull(22) ?  (String)null : Convert.ToString(rdr[22]), 
                        rdr.IsDBNull(23) ?  (String)null : Convert.ToString(rdr[23]), 
                        rdr.IsDBNull(24) ?  (String)null : Convert.ToString(rdr[24]), 
                        rdr.IsDBNull(25) ?  (String)null : Convert.ToString(rdr[25]), 
                        rdr.IsDBNull(26) ?  (Byte[])null : (Byte[])(rdr[26]), 
                        rdr.IsDBNull(27) ?  (Decimal?)null : Convert.ToDecimal(rdr[27]), 
                        rdr.IsDBNull(28) ?  (Decimal?)null : Convert.ToDecimal(rdr[28]), 
                        rdr.IsDBNull(29) ?  (String)null : Convert.ToString(rdr[29]), 
                        rdr.IsDBNull(30) ?  (Decimal?)null : Convert.ToDecimal(rdr[30]), 
                        rdr.IsDBNull(31) ?  (Decimal?)null : Convert.ToDecimal(rdr[31]), 
                        rdr.IsDBNull(32) ?  (Decimal?)null : Convert.ToDecimal(rdr[32]), 
                        rdr.IsDBNull(33) ?  (Decimal?)null : Convert.ToDecimal(rdr[33]), 
                        rdr.IsDBNull(34) ?  (Decimal?)null : Convert.ToDecimal(rdr[34]), 
                        rdr.IsDBNull(35) ?  (Decimal?)null : Convert.ToDecimal(rdr[35]), 
                        rdr.IsDBNull(36) ?  (String)null : Convert.ToString(rdr[36]), 
                        rdr.IsDBNull(37) ?  (String)null : Convert.ToString(rdr[37]), 
                        rdr.IsDBNull(38) ?  (String)null : Convert.ToString(rdr[38]), 
                        rdr.IsDBNull(39) ?  (String)null : Convert.ToString(rdr[39]), 
                        rdr.IsDBNull(40) ?  (Decimal?)null : Convert.ToDecimal(rdr[40]), 
                        rdr.IsDBNull(41) ?  (String)null : Convert.ToString(rdr[41]), 
                        rdr.IsDBNull(42) ?  (String)null : Convert.ToString(rdr[42]), 
                        rdr.IsDBNull(43) ?  (Decimal?)null : Convert.ToDecimal(rdr[43]), 
                        rdr.IsDBNull(44) ?  (Decimal?)null : Convert.ToDecimal(rdr[44]), 
                        rdr.IsDBNull(45) ?  (String)null : Convert.ToString(rdr[45]), 
                        rdr.IsDBNull(46) ?  (Decimal?)null : Convert.ToDecimal(rdr[46]), 
                        rdr.IsDBNull(47) ?  (Decimal?)null : Convert.ToDecimal(rdr[47]), 
                        rdr.IsDBNull(48) ?  (String)null : Convert.ToString(rdr[48]), 
                        rdr.IsDBNull(49) ?  (DateTime?)null : Convert.ToDateTime(rdr[49]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}