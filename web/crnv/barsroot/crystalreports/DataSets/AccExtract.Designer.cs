//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace BarsWeb.CrystalReports.DataSets {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("AccExtract")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AccExtract : System.Data.DataSet {
        
        private dataAccExtractDataTable tabledataAccExtract;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AccExtract() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected AccExtract(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["dataAccExtract"] != null)) {
                    base.Tables.Add(new dataAccExtractDataTable(ds.Tables["dataAccExtract"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dataAccExtractDataTable dataAccExtract {
            get {
                return this.tabledataAccExtract;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            AccExtract cln = ((AccExtract)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dataAccExtract"] != null)) {
                    base.Tables.Add(new dataAccExtractDataTable(ds.Tables["dataAccExtract"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledataAccExtract = ((dataAccExtractDataTable)(base.Tables["dataAccExtract"]));
            if ((initTable == true)) {
                if ((this.tabledataAccExtract != null)) {
                    this.tabledataAccExtract.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "AccExtract";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AccExtract.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledataAccExtract = new dataAccExtractDataTable();
            base.Tables.Add(this.tabledataAccExtract);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedataAccExtract() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            AccExtract ds = new AccExtract();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void dataAccExtractRowChangeEventHandler(object sender, dataAccExtractRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dataAccExtractDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnACC;
            
            private System.Data.DataColumn columnNMK;
            
            private System.Data.DataColumn columnNLS;
            
            private System.Data.DataColumn columnRNK;
            
            private System.Data.DataColumn columnNMS;
            
            private System.Data.DataColumn columnISP;
            
            private System.Data.DataColumn columnFIO;
            
            private System.Data.DataColumn columnFDAT;
            
            private System.Data.DataColumn columnDAPP;
            
            private System.Data.DataColumn columnOSTF_STR;
            
            private System.Data.DataColumn columnOSTF;
            
            private System.Data.DataColumn columnTT;
            
            private System.Data.DataColumn columnREF;
            
            private System.Data.DataColumn columnMFO;
            
            private System.Data.DataColumn columnVOB;
            
            private System.Data.DataColumn columnND;
            
            private System.Data.DataColumn columnSK;
            
            private System.Data.DataColumn columnNLSK;
            
            private System.Data.DataColumn columnS1;
            
            private System.Data.DataColumn columnS2;
            
            private System.Data.DataColumn columnUSERID;
            
            private System.Data.DataColumn columnNB;
            
            private System.Data.DataColumn columnOKPO;
            
            private System.Data.DataColumn columnNAMK;
            
            private System.Data.DataColumn columnOUR_MFO_NB;
            
            private System.Data.DataColumn columnOUR_MFO;
            
            private System.Data.DataColumn columnNAZN;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataAccExtractDataTable() {
                this.TableName = "dataAccExtract";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataAccExtractDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dataAccExtractDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCColumn {
                get {
                    return this.columnACC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NMKColumn {
                get {
                    return this.columnNMK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NLSColumn {
                get {
                    return this.columnNLS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RNKColumn {
                get {
                    return this.columnRNK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NMSColumn {
                get {
                    return this.columnNMS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ISPColumn {
                get {
                    return this.columnISP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FIOColumn {
                get {
                    return this.columnFIO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FDATColumn {
                get {
                    return this.columnFDAT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DAPPColumn {
                get {
                    return this.columnDAPP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OSTF_STRColumn {
                get {
                    return this.columnOSTF_STR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OSTFColumn {
                get {
                    return this.columnOSTF;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TTColumn {
                get {
                    return this.columnTT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REFColumn {
                get {
                    return this.columnREF;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MFOColumn {
                get {
                    return this.columnMFO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VOBColumn {
                get {
                    return this.columnVOB;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NDColumn {
                get {
                    return this.columnND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SKColumn {
                get {
                    return this.columnSK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NLSKColumn {
                get {
                    return this.columnNLSK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn S1Column {
                get {
                    return this.columnS1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn S2Column {
                get {
                    return this.columnS2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USERIDColumn {
                get {
                    return this.columnUSERID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NBColumn {
                get {
                    return this.columnNB;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OKPOColumn {
                get {
                    return this.columnOKPO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NAMKColumn {
                get {
                    return this.columnNAMK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OUR_MFO_NBColumn {
                get {
                    return this.columnOUR_MFO_NB;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OUR_MFOColumn {
                get {
                    return this.columnOUR_MFO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NAZNColumn {
                get {
                    return this.columnNAZN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataAccExtractRow this[int index] {
                get {
                    return ((dataAccExtractRow)(this.Rows[index]));
                }
            }
            
            public event dataAccExtractRowChangeEventHandler dataAccExtractRowChanging;
            
            public event dataAccExtractRowChangeEventHandler dataAccExtractRowChanged;
            
            public event dataAccExtractRowChangeEventHandler dataAccExtractRowDeleting;
            
            public event dataAccExtractRowChangeEventHandler dataAccExtractRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddataAccExtractRow(dataAccExtractRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataAccExtractRow AdddataAccExtractRow(
                        string ACC, 
                        string NMK, 
                        string NLS, 
                        string RNK, 
                        string NMS, 
                        string ISP, 
                        string FIO, 
                        string FDAT, 
                        string DAPP, 
                        string OSTF_STR, 
                        double OSTF, 
                        string TT, 
                        string REF, 
                        string MFO, 
                        string VOB, 
                        string ND, 
                        string SK, 
                        string NLSK, 
                        double S1, 
                        double S2, 
                        string USERID, 
                        string NB, 
                        string OKPO, 
                        string NAMK, 
                        string OUR_MFO_NB, 
                        string OUR_MFO, 
                        string NAZN) {
                dataAccExtractRow rowdataAccExtractRow = ((dataAccExtractRow)(this.NewRow()));
                rowdataAccExtractRow.ItemArray = new object[] {
                        ACC,
                        NMK,
                        NLS,
                        RNK,
                        NMS,
                        ISP,
                        FIO,
                        FDAT,
                        DAPP,
                        OSTF_STR,
                        OSTF,
                        TT,
                        REF,
                        MFO,
                        VOB,
                        ND,
                        SK,
                        NLSK,
                        S1,
                        S2,
                        USERID,
                        NB,
                        OKPO,
                        NAMK,
                        OUR_MFO_NB,
                        OUR_MFO,
                        NAZN};
                this.Rows.Add(rowdataAccExtractRow);
                return rowdataAccExtractRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dataAccExtractDataTable cln = ((dataAccExtractDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dataAccExtractDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnACC = base.Columns["ACC"];
                this.columnNMK = base.Columns["NMK"];
                this.columnNLS = base.Columns["NLS"];
                this.columnRNK = base.Columns["RNK"];
                this.columnNMS = base.Columns["NMS"];
                this.columnISP = base.Columns["ISP"];
                this.columnFIO = base.Columns["FIO"];
                this.columnFDAT = base.Columns["FDAT"];
                this.columnDAPP = base.Columns["DAPP"];
                this.columnOSTF_STR = base.Columns["OSTF_STR"];
                this.columnOSTF = base.Columns["OSTF"];
                this.columnTT = base.Columns["TT"];
                this.columnREF = base.Columns["REF"];
                this.columnMFO = base.Columns["MFO"];
                this.columnVOB = base.Columns["VOB"];
                this.columnND = base.Columns["ND"];
                this.columnSK = base.Columns["SK"];
                this.columnNLSK = base.Columns["NLSK"];
                this.columnS1 = base.Columns["S1"];
                this.columnS2 = base.Columns["S2"];
                this.columnUSERID = base.Columns["USERID"];
                this.columnNB = base.Columns["NB"];
                this.columnOKPO = base.Columns["OKPO"];
                this.columnNAMK = base.Columns["NAMK"];
                this.columnOUR_MFO_NB = base.Columns["OUR_MFO_NB"];
                this.columnOUR_MFO = base.Columns["OUR_MFO"];
                this.columnNAZN = base.Columns["NAZN"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnACC = new System.Data.DataColumn("ACC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACC);
                this.columnNMK = new System.Data.DataColumn("NMK", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNMK);
                this.columnNLS = new System.Data.DataColumn("NLS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNLS);
                this.columnRNK = new System.Data.DataColumn("RNK", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRNK);
                this.columnNMS = new System.Data.DataColumn("NMS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNMS);
                this.columnISP = new System.Data.DataColumn("ISP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnISP);
                this.columnFIO = new System.Data.DataColumn("FIO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columnFDAT = new System.Data.DataColumn("FDAT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDAT);
                this.columnDAPP = new System.Data.DataColumn("DAPP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAPP);
                this.columnOSTF_STR = new System.Data.DataColumn("OSTF_STR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSTF_STR);
                this.columnOSTF = new System.Data.DataColumn("OSTF", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSTF);
                this.columnTT = new System.Data.DataColumn("TT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTT);
                this.columnREF = new System.Data.DataColumn("REF", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF);
                this.columnMFO = new System.Data.DataColumn("MFO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMFO);
                this.columnVOB = new System.Data.DataColumn("VOB", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVOB);
                this.columnND = new System.Data.DataColumn("ND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnND);
                this.columnSK = new System.Data.DataColumn("SK", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSK);
                this.columnNLSK = new System.Data.DataColumn("NLSK", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNLSK);
                this.columnS1 = new System.Data.DataColumn("S1", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1);
                this.columnS2 = new System.Data.DataColumn("S2", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnS2);
                this.columnUSERID = new System.Data.DataColumn("USERID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERID);
                this.columnNB = new System.Data.DataColumn("NB", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNB);
                this.columnOKPO = new System.Data.DataColumn("OKPO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOKPO);
                this.columnNAMK = new System.Data.DataColumn("NAMK", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMK);
                this.columnOUR_MFO_NB = new System.Data.DataColumn("OUR_MFO_NB", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUR_MFO_NB);
                this.columnOUR_MFO = new System.Data.DataColumn("OUR_MFO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUR_MFO);
                this.columnNAZN = new System.Data.DataColumn("NAZN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAZN);
                this.columnNMK.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataAccExtractRow NewdataAccExtractRow() {
                return ((dataAccExtractRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dataAccExtractRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dataAccExtractRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dataAccExtractRowChanged != null)) {
                    this.dataAccExtractRowChanged(this, new dataAccExtractRowChangeEvent(((dataAccExtractRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dataAccExtractRowChanging != null)) {
                    this.dataAccExtractRowChanging(this, new dataAccExtractRowChangeEvent(((dataAccExtractRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dataAccExtractRowDeleted != null)) {
                    this.dataAccExtractRowDeleted(this, new dataAccExtractRowChangeEvent(((dataAccExtractRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dataAccExtractRowDeleting != null)) {
                    this.dataAccExtractRowDeleting(this, new dataAccExtractRowChangeEvent(((dataAccExtractRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedataAccExtractRow(dataAccExtractRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                AccExtract ds = new AccExtract();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dataAccExtractDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dataAccExtractRow : System.Data.DataRow {
            
            private dataAccExtractDataTable tabledataAccExtract;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataAccExtractRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledataAccExtract = ((dataAccExtractDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACC {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.ACCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACC\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.ACCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NMK {
                get {
                    return ((string)(this[this.tabledataAccExtract.NMKColumn]));
                }
                set {
                    this[this.tabledataAccExtract.NMKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NLS {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.NLSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NLS\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.NLSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RNK {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.RNKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RNK\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.RNKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NMS {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.NMSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NMS\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.NMSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISP {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.ISPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ISP\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.ISPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FIO {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.FIOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FIO\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.FIOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FDAT {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.FDATColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FDAT\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.FDATColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DAPP {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.DAPPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DAPP\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.DAPPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OSTF_STR {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.OSTF_STRColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OSTF_STR\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.OSTF_STRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OSTF {
                get {
                    try {
                        return ((double)(this[this.tabledataAccExtract.OSTFColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OSTF\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.OSTFColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TT {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.TTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TT\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.TTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.REFColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REF\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.REFColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MFO {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.MFOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MFO\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.MFOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VOB {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.VOBColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VOB\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.VOBColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ND {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.NDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ND\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.NDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SK {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.SKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SK\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.SKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NLSK {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.NLSKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NLSK\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.NLSKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double S1 {
                get {
                    try {
                        return ((double)(this[this.tabledataAccExtract.S1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'S1\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.S1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double S2 {
                get {
                    try {
                        return ((double)(this[this.tabledataAccExtract.S2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'S2\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.S2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USERID {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.USERIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USERID\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.USERIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NB {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.NBColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NB\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.NBColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OKPO {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.OKPOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OKPO\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.OKPOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAMK {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.NAMKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NAMK\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.NAMKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OUR_MFO_NB {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.OUR_MFO_NBColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OUR_MFO_NB\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.OUR_MFO_NBColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OUR_MFO {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.OUR_MFOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OUR_MFO\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.OUR_MFOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAZN {
                get {
                    try {
                        return ((string)(this[this.tabledataAccExtract.NAZNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NAZN\' in table \'dataAccExtract\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataAccExtract.NAZNColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCNull() {
                return this.IsNull(this.tabledataAccExtract.ACCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCNull() {
                this[this.tabledataAccExtract.ACCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNLSNull() {
                return this.IsNull(this.tabledataAccExtract.NLSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNLSNull() {
                this[this.tabledataAccExtract.NLSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRNKNull() {
                return this.IsNull(this.tabledataAccExtract.RNKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRNKNull() {
                this[this.tabledataAccExtract.RNKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNMSNull() {
                return this.IsNull(this.tabledataAccExtract.NMSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNMSNull() {
                this[this.tabledataAccExtract.NMSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISPNull() {
                return this.IsNull(this.tabledataAccExtract.ISPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISPNull() {
                this[this.tabledataAccExtract.ISPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIONull() {
                return this.IsNull(this.tabledataAccExtract.FIOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIONull() {
                this[this.tabledataAccExtract.FIOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFDATNull() {
                return this.IsNull(this.tabledataAccExtract.FDATColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFDATNull() {
                this[this.tabledataAccExtract.FDATColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDAPPNull() {
                return this.IsNull(this.tabledataAccExtract.DAPPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDAPPNull() {
                this[this.tabledataAccExtract.DAPPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSTF_STRNull() {
                return this.IsNull(this.tabledataAccExtract.OSTF_STRColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSTF_STRNull() {
                this[this.tabledataAccExtract.OSTF_STRColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSTFNull() {
                return this.IsNull(this.tabledataAccExtract.OSTFColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSTFNull() {
                this[this.tabledataAccExtract.OSTFColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTTNull() {
                return this.IsNull(this.tabledataAccExtract.TTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTTNull() {
                this[this.tabledataAccExtract.TTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREFNull() {
                return this.IsNull(this.tabledataAccExtract.REFColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREFNull() {
                this[this.tabledataAccExtract.REFColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMFONull() {
                return this.IsNull(this.tabledataAccExtract.MFOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMFONull() {
                this[this.tabledataAccExtract.MFOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVOBNull() {
                return this.IsNull(this.tabledataAccExtract.VOBColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVOBNull() {
                this[this.tabledataAccExtract.VOBColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNDNull() {
                return this.IsNull(this.tabledataAccExtract.NDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNDNull() {
                this[this.tabledataAccExtract.NDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSKNull() {
                return this.IsNull(this.tabledataAccExtract.SKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSKNull() {
                this[this.tabledataAccExtract.SKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNLSKNull() {
                return this.IsNull(this.tabledataAccExtract.NLSKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNLSKNull() {
                this[this.tabledataAccExtract.NLSKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS1Null() {
                return this.IsNull(this.tabledataAccExtract.S1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS1Null() {
                this[this.tabledataAccExtract.S1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsS2Null() {
                return this.IsNull(this.tabledataAccExtract.S2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetS2Null() {
                this[this.tabledataAccExtract.S2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSERIDNull() {
                return this.IsNull(this.tabledataAccExtract.USERIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSERIDNull() {
                this[this.tabledataAccExtract.USERIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBNull() {
                return this.IsNull(this.tabledataAccExtract.NBColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBNull() {
                this[this.tabledataAccExtract.NBColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOKPONull() {
                return this.IsNull(this.tabledataAccExtract.OKPOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOKPONull() {
                this[this.tabledataAccExtract.OKPOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMKNull() {
                return this.IsNull(this.tabledataAccExtract.NAMKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMKNull() {
                this[this.tabledataAccExtract.NAMKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOUR_MFO_NBNull() {
                return this.IsNull(this.tabledataAccExtract.OUR_MFO_NBColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOUR_MFO_NBNull() {
                this[this.tabledataAccExtract.OUR_MFO_NBColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOUR_MFONull() {
                return this.IsNull(this.tabledataAccExtract.OUR_MFOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOUR_MFONull() {
                this[this.tabledataAccExtract.OUR_MFOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAZNNull() {
                return this.IsNull(this.tabledataAccExtract.NAZNColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAZNNull() {
                this[this.tabledataAccExtract.NAZNColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dataAccExtractRowChangeEvent : System.EventArgs {
            
            private dataAccExtractRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataAccExtractRowChangeEvent(dataAccExtractRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataAccExtractRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591