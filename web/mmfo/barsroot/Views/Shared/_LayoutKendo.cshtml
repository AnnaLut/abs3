@using System.Threading
@using BarsWeb.Infrastructure.Repository.DI.Implementation
@{
  /*string theme = "bootstrap";
  var cook = HttpContext.Current.Request.Cookies["theme"];
  if (cook != null)
  {
    theme = cook.Value;
  }
  theme = Session["theme"] != null ? Session["theme"].ToString() : theme;*/
    string theme = "";//new UserProfileProvider().GetProfile().Theme;
    if (string.IsNullOrEmpty(theme))
    {
        theme = "bootstrap";
    }
    var culture = Thread.CurrentThread.CurrentCulture;
}
<!DOCTYPE html>
<html lang="ru" xmlns="http://www.w3.org/1999/xhtml" id="ng-app" data-ng-app="BarsWeb" class="k-@theme">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="utf-8" />
    <title>@ViewBag.Title</title>
    <link href="@Url.Content("~/Content/Bootstrap/bootstrap.css")" rel="stylesheet" />


    <link href="~/Content/Themes/Kendo/app.css" rel="stylesheet" />
    @Styles.Render("~/content/themes/kendo/css")
    <link href="@Url.Content("~/Content/Themes/Kendo/kendo." + theme + ".min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/Themes/Kendo/kendo.dataviz."+theme+".min.css" )" rel="stylesheet" />
 
    <link href="@Url.Content("~/lib/animate/animate.min.css")" rel="stylesheet" />
    @*<link href="@Url.Content("~/Content/Themes/Kendo/style.css")" rel="stylesheet"/>*@


    @Styles.Render("~/content/themes/kendo/styles")
    <link href="~/lib/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/lib/themify-icons/themify-icons.css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/images/PureFlat/pf-icons.css")" rel="stylesheet" />

    <script src="~/Scripts/html5shiv.js"></script>
    <script src="~/Scripts/respond.min.js"></script>

    @Html.Partial("_html5shiv")
    @Scripts.Render("~/bundles/jquery")

    @*obsolete script*@
    @Scripts.Render("~/bundles/jquery-bars-ui")

    <script src="@Url.Content("~/Scripts/angular/angular.min.js")"></script>
    <script src="~/lib/angular-ie7-support/angular-ie7-support.min.js"></script>
    <script src="~/lib/angular-sanitize/angular-sanitize.min.js"></script>
    <script src="~/lib/angular-ui-router/release/angular-ui-router.min.js"></script>
    <script src="~/lib/angular-i18n/angular-locale_uk.js"></script>
    <script src="~/lib/angular-i18n/angular-locale_uk-ua.js"></script>

    @Scripts.Render("~/bundles/kendo")
    <script src="@Url.Content("~/Scripts/kendo/cultures/kendo.culture." + culture.Parent.Name + ".min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/cultures/kendo.culture." + culture.Name + ".min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/messages/kendo.messages." + culture.Name + ".min.js")"></script>

    <script src="@Url.Content("~/Scripts/bootstrap/bootstrap.min.js" )"></script>
    @Scripts.Render("~/bundles/bars")
    <script src="~/Scripts/Bars/directives/bw-utils.js"></script>
    <script src="~/Scripts/es6-promise-for-ie8.js"></script>
    <script src="~/Scripts/selectionTooltip.js"></script>
    <noscript>
        Нажаль ваш браузер на підтримує сценарії JavaScript, або вони заборонені в налаштуваннях.
        <br /><br />
        Будь ласка змініть ваш браузер або перевірте його налаштування згідно з <a href="@Url.Content("~/home/help/")">інструкцією</a>.
    </noscript>
    <link rel="shortcut icon" href="@Url.Content("~/content/ico.ico")">
    <script>
        var globalSettings = {
            appName: 'BarsWeb',
            modulesAreas: 'BarsWeb.Areas'
        };
        var BarsWeb = angular.module(globalSettings.appName, [
            'BarsWeb.Controllers',
            'BarsWeb.Areas',
            'kendo.directives',
            'ngSanitize',
            'bw.utils',
            'ui.router'
        ]);
        BarsWeb.factory('httpResponseInterceptor', [
            '$q', '$location', function ($q) {
                var parseOraErrorMessage = function(message) {
                    var messageArray = message.split('ORA-');
                    if (messageArray.length > 1) {
                        message = messageArray[1];
                    }
                    return message;
                }
                return {
                    request: function (config) {
                        config.headers = config.headers || {};
                        config.headers['Cache-Control'] = 'no-cache';
                        if (config.url && config.method === 'GET') {
                            if (config.url.indexOf('?') === -1) {
                                config.url += '?_=';
                            } else {
                                config.url += '&_=';
                            }
                            config.url += (new Date()).getTime();
                        }
                        return config;
                    },
                    response: function (response) {
                        if (response.status === 401 || response.statusText == '401') {
                            document.location.reload();
                        }
                        return response || $q.when(response);
                    },
                    responseError: function (rejection) {
                        if (rejection.status === 401 || rejection.statusText == '401') {
                            document.location.reload();
                        }
                        if (rejection.status === 400
                            || rejection.status === 404
                            || rejection.status === 500
                            || rejection.statusText == 'BRS-500'
                            || rejection.status == 'BRS-500') {
                            bars.ui.loader('body', false);
                            var text;
                            if (rejection.data.Message) {
                                text = rejection.data.Message;
                                if (rejection.data.ExceptionMessage) {
                                    text += '<br/>' + rejection.data.ExceptionMessage;
                                }
                            } else {
                                text = rejection.data;
                            }
                            bars.ui.error({ text: parseOraErrorMessage(text) });
                        }
                        return $q.reject(rejection);
                    }
                }
            }
        ]);
        BarsWeb.config(['$httpProvider', function ($httpProvider) {
            //Http Intercpetor to check auth failures for xhr requests
            $httpProvider.interceptors.push('httpResponseInterceptor');
        }]);

        angular.module('BarsWeb.Controllers', []);//.controller('AppCtrl', ['$scope', function ($scope) {}]);
        angular.module(globalSettings.modulesAreas, []);
    </script>
</head>
<body>
@RenderBody()
@*<div class="app" id="app"
     ng-class="{
         'app-header-fixed':app.settings.headerFixed,
         'app-aside-fixed':app.settings.asideFixed,
         'app-aside-folded':app.settings.asideFolded,
         'app-aside-dock':app.settings.asideDock,
         'container':app.settings.container}" ui-view>
    <div class="app-content">
        <div ui-butterbar></div>
        <a href class="off-screen-toggle hide" ui-toggle-class="off-screen" data-target=".app-aside"></a>
        <div class="app-content-body fade-in-up" ui-view>
            
        </div>
    </div>

</div>*@

<script>
    $(function() {
        kendo.culture("@culture.Name");
        // в качестве разделителя целой и дробной части явно указываем точку
        // если не указывать, то для украинской культуры, например, разделителем будет запятая, которая будет вызывать ошибку при сериализации в C# decimal
        kendo.culture().numberFormat["."] = ".";
        $.ajaxSetup({
            // Disable caching of AJAX responses
            cache: false
        });
        //функція для реагування на відповівдь сервера з помилкою для AJAX
        $(document).ajaxSuccess(function(data, xhr) {
                if (xhr.statusText == '401') {
                    document.location.reload();
                } else if (xhr.statusText == 'BRS-500') {
                    var text;
                    if (xhr.responseJSON && xhr.responseJSON.Message) {
                        text = parseJsonError(xhr.responseJSON);
                    } else {
                        text = replaseResponseText(xhr.responseText);
                    }
                    bars.ui.alert({
                        text: text,
                        title: 'Помилка !!!',
                        winType: 'error',
                        width: '550px',
                        height: '450px'
                    });
                }
            })
            .ajaxError(function(e, xhr) {
                if (xhr.status == 401) {
                    document.location.reload();
                } else if (xhr.status == 403) {
                    var response = $.parseJSON(xhr.responseText);
                    window.location = response.LogOnUrl;
                } else if (xhr.status == 400 || xhr.status == 404 || xhr.status == 500) {
                    var text;
                    if (xhr.responseJSON && xhr.responseJSON.Message) {
                        text = parseJsonError(xhr.responseJSON);
                    } else {
                        text = replaseResponseText(xhr.responseText);
                    }
                    bars.ui.alert({
                        text: text,
                        title: 'Помилка !',
                        winType: 'error',
                        width: '550px',
                        height: '450px'
                    });
                    $('#detail').css('width', '450px');
                } else if (xhr.status == 502) {
                    document.location.refresh();
                }
            });
    });

    function parseJsonError(object) {
        var result = '<h1>' + object.Message + '</h1><hr style="width: 100%;color:silver">';
        if (object.ExceptionMessage) {
            result += '<div><b>Опис: </b>' + object.ExceptionMessage + '<br><br></div>';
        }
        if (object.MessageDetail) {
            result += '<div><b>Детальний опис: </b><div>' + object.MessageDetail + '</div></div>';
        }
        if (object.StackTrace) {
            result += '<div><b>Стек: </b><div><pre>' + object.StackTrace + '</pre></div></div>';
        }

        return result;
    }

    function replaseResponseText(text) {
        var result = text.match(/.*<body.*>([\s\S]*)<\/body>.*/);
        if (result == null) {
            return text;
        }
        if (result.length && result.length > 1) {
            result = result[0];
        }
        return result;
    }
</script>
</body>

</html>

