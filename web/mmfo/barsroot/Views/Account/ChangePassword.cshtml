@{
  Layout = Layout == null ? null : "~/Views/Shared/_LayoutLogin.cshtml";
  ViewBag.Title = "АБС \"BARS-WEB\"-зміна пароля";
}

<div style="width: 350px; position: relative;padding-left:50px;" class="floatLeft loginBloc" id="signInTD">
  <div style="height: 40px;"></div>  
  <div class="signInHeader" style="" id="i0272">
    <h1 class="loginhead">Зміна пароля</h1>
  </div>
  <div style="height: 30px;width: 320px;margin-bottom:10px;" id="messSumary" class="errorDiv first">
    @Html.Raw(ViewBag.ErrorSumary)
  </div>
  <div style="width: 320px;" class="floatLeft">
    <div id="rightTD">
      <form name="AuthFormInput" target="_top" method="POST" novalidate="">
        <div class="section">
          <div class="row label">
            Користувач
          </div>
          <div class="row textbox">
            <div style="position: relative; width: 100%;">
              @if (string.IsNullOrWhiteSpace(User.Identity.Name))
              {
                <input id="txtUserName" name="txtUserName" class="login" value="@ViewBag.UserName" maxlength="100" type="text" />
              }
              else
              {
                <b style="font-size: 16px">@User.Identity.Name</b> 
                <input id="txtUserName" name="txtUserName" type="hidden" value="@User.Identity.Name" />
              }
            </div>
            <div id="messLogin" class="errorDiv first">
              @ViewBag.ErrorLogin
            </div> 
          </div>
 
          <div class="row label" role="heading">
            Старий пароль
          </div>
          <div class="row textbox">
            <div style="position: relative; width: 100%;">
              <input autocomplete="off" id="txtPasswordOld" name="txtPassword" class="password" type="password" />
            </div>
            <div id="messPasswordOld" class="errorDiv">
              @ViewBag.ErrorPasswordOld
            </div>
          </div>

          <div class="row label">
            Новий пароль
          </div>
          <div class="row textbox">
            <div style="position: relative; width: 100%;">
              <input autocomplete="off" id="txtPasswordNew" name="txtPasswordNew" class="password" type="password" onkeyup="EvalPwdStrength2(this);" />
            </div>
            <div id="messPasswordNew" class="errorDiv">
              @ViewBag.ErrorPasswordNew
            </div>
          </div>
                  
          <div class="row label">
            Підтвердження нового пароля
          </div>
          <div class="row textbox">
            <div style="position: relative; width: 100%;">
              <input autocomplete="off" id="txtPasswordNewConf" name="txtPasswordNewConf" class="password" type="password" />
            </div>
            <div id="messPasswordNewConf" class="errorDiv">
              @ViewBag.ErrorPasswordNewConf
            </div>
          </div>

        </div>
        <div class="section">
          <input class="default" value="Змінити" id="btChangePsw" name="btChangePsw" type="submit">
        </div>
        <input name="__pswMinLength" type="hidden" id="__pswMinLength" value="@ViewBag.pswMinLength" />
        <input name="__sysUser" type="hidden" id="__sysUser" value="@ViewBag.sysUser" />
        <input name="__pswMaxSeq" type="hidden" id="__pswMaxSeq" value="@ViewBag.pswMaxSeq" />
        <input name="__InitPassword" type="hidden" id="__InitPassword" value="@ViewBag.initPassword" />


        <div id="test1" style="display: none;">
          <div style="border: 1px solid red;">
            <input type="checkbox" />
            <input type="submit" />
          </div>
        </div>
      </form>

      <form name="AuthForm" action="/barsroot/account/changepassword/" target="_top" method="POST" novalidate="">
        <input type="hidden" id="encdata" name="encdata" />
        <input type="hidden" id="challenge" name="challenge" />
      </form>
      @if (string.IsNullOrWhiteSpace(User.Identity.Name))
      {
        <div class="section">
          <div class="row small">
            <a id="ForgotPassword" href="/barsroot/account/login/">Повернутись</a>
          </div>
        </div>
      }
    </div>
  </div>
</div>
<script>
  $(document).ready(function () {
      $('#btChangePsw').click(function () {
          validateForm();
          return false;
      });

      $('a#ForgotPassword').click(function () {
          $('#messSumary').html('<div class="loader"></div>');
          $("#signInTD").find("*").unbind();
          $('#signInTD').load(this.href + '?partial=true', function () {
              //history.pushState(state, state.title, state.url);
          });
          return false;
      });

      OnLoad();
  });

  function OnLoad() {
      if (document.all.txtUserName.value != "")
          document.all.txtPasswordOld.focus();
      else
          document.all.txtUserName.focus();
      if (location.search.indexOf('techPsw') > 0)
          alert("Вы використовуєте технічний пароль! Необхідно задати новий пароль!");
  }

  function doLogin(userName, passwordOld, passwordNew, passwordNewConf) {
      with (document.AuthForm) {
          challenge.value = "@ViewBag.Challenge";
      var user_key = "@ViewBag.UserKey";
      var const_key = "@ViewBag.ConstKey";
      encdata.value = base$encodeBase64(rc4Encrypt(user_key,
                      const_key + "\\"
                      + challenge.value + "\\"
                      + user_key + "\\"
                      + base$encodeBase64(userName) + "\\"
                      + base$encodeBase64(hex_sha1(passwordOld)) + "\\"
                      + base$encodeBase64(hex_sha1(passwordNew)) + "\\"
                      + base$encodeBase64(hex_sha1(passwordNewConf))));
    }
    return;
  }
  
  
  function validateForm() {
      var validLogin = validateUserame();
      var validPassOld = validatePasswordOld();
      var validPassNew = validatePasswordNew();
      var validPassNewConf = validatePasswordNewConf();
      var validNewPass = EvalPwdStrength2(document.getElementById('txtPasswordNew'));
      if (!validLogin || !validPassOld || !validPassNew || !validPassNewConf)
          return false;
      $('#btChangePsw').attr('disabled', 'disabled');
      $('#txtUserName').attr('disabled', 'disabled');
      $('#txtPasswordOld').attr('disabled', 'disabled');
      $('#txtPasswordNew').attr('disabled', 'disabled');
      $('#txtPasswordNewConf').attr('disabled', 'disabled');
  
      with (document.AuthForm) {
          doLogin(AuthFormInput.txtUserName.value.toLowerCase(),
                  AuthFormInput.txtPasswordOld.value.toLowerCase(),
                  AuthFormInput.txtPasswordNew.value.toLowerCase(),
                  AuthFormInput.txtPasswordNewConf.value.toLowerCase());
          var date = new Date((new Date()).getTime() + 24 * 3600000);
          document.cookie = 'userLogin=' + AuthFormInput.txtUserName.value.toLowerCase() + "; expires=" + date.toGMTString();
          //txtUserName.value = "";
          //txtPassword.value = "";
          $('#messSumary').html('<div class="loader"></div>');
  
          $('form[name="AuthForm"]').submit();
      }
      return true;
  }
  
  function validateUserame() {
      var tempName = $('#txtUserName');
  
      if (isEmpty(tempName.val())) {
          $('#messLogin').html("Задайте ім'я користувача.");
          tempName.focus();
          tempName.select();
          return false;
      }
      else {
          return true;
      }
  }
  function validatePasswordOld() {
      var tempName = $('#txtPasswordOld');
  
      if (isEmpty(tempName.val())) {
          $('#messPasswordOld').html("Задайте пароль користувача.");
          //alert("Задайте пароль користувача.");
          tempName.focus();
          tempName.select();
          return false;
      }
      else {
          return true;
      }
  }
  function validatePasswordNew() {
      var tempName = $('#txtPasswordNew');
  
      if (isEmpty(tempName.val())) {
          $('#messPasswordNew').html("Задайте новий пароль користувача.");
          tempName.focus();
          tempName.select();
          return false;
      }
      else if (!EvalPwdStrength2(tempName.get(0))) {
          $('#messPasswordNew').html("Новий пароль не відповідає вимогам безпеки.");
          return false;
      }
      else {
          return true;
      }
  }
  function validatePasswordNewConf() {
      var tempNewPass = $('#txtPasswordNew');
      var tempNewPassConf = $('#txtPasswordNewConf');
  
      if (tempNewPass.val() != tempNewPassConf.val()) {
          $('#messPasswordNewConf').html("Підтвердження пароля не співпадає");
          tempNewPassConf.focus();
          tempNewPassConf.select();
          return false;
      }
      else {
          return true;
      }
  }
  
  function isEmpty(strTextField) {
      if (strTextField == "" || strTextField == null)
          return true;
  
      var re = /\s/g;
      RegExp.multiline = true;
      var str = strTextField.replace(re, "");
  
      if (str.length == 0)
          return true;
      else
          return false;
  }
  
  function EvalPwdStrength2(edit) {
      var nPasswordLength = $('#__pswMinLength').val();
      var nCharacterSets = 2;
      var sUserSysName = $('#__sysUser').val();
      var arrNames = new Array();
      if (sUserSysName != null && sUserSysName != "") {
        arrNames[arrNames.length] = sUserSysName.toLowerCase();
        arrNames[arrNames.length] = revertStr(sUserSysName.toLowerCase());
      }
      if ($('#txtUserName').val() != null && $('#txtUserName').val() != "") {
          arrNames[arrNames.length] = $('#txtUserName').val().toLowerCase();
          arrNames[arrNames.length] = revertStr($('#txtUserName').val().toLowerCase());
      }
      var nMaxSeqLength = $('#__pswMaxSeq').val();
      var sOldPassword = $('#txtPasswordOld').val().toLowerCase();
  
      var text = edit.value.toLowerCase();
      var errMsg = "<ul>";
      var checkLehgth = IsLongEnough(text, nPasswordLength);
    if (!checkLehgth) errMsg += "<li>Довжина пароля повинна бути більше " + nPasswordLength + " символів.</li>";
  
      var checkCharSets = SpansEnoughCharacterSets(text, nCharacterSets);
      if (!checkCharSets) errMsg += "<li>Пароль повинен містити " + nCharacterSets + " типи символів із трьох: букви латинского алфавіту(a..z), цифри(0..9) и спеціальні символи(@@!#$....)</li>";
  
      var checkUserName = IsNotContainsDefineStr(text, arrNames);
      if (!checkUserName) errMsg += "<li>Пароль не повинен містити ім'я користувача системи або логіна.</li>";
  
      var checkSeqRepeat = IsNotContainsRepeatSequence(text, nMaxSeqLength);
      if (!checkSeqRepeat) errMsg += "<li>Пароль містить більше " + nMaxSeqLength + " символів, що повторюються.</li>";
  
      var checkDigSequence = IsNotContainsSequence(text, nMaxSeqLength, 1);
      if (!checkDigSequence) errMsg += "<li>Пароль містить цифрову послідовність.</li>";
  
      var checkCharSequence = IsNotContainsSequence(text, nMaxSeqLength, 2);
      if (!checkCharSequence) errMsg += "<li>Пароль містить алфавітну послідовність.</li>";
  
      var checkKeyboardSequence = IsNotContainsSequence(text, nMaxSeqLength, 3);
      if (!checkKeyboardSequence) errMsg += "<li>Пароль містить клавіатурну послідовність.</li>";
  
      var checkDiffPsw = DiffernceBetweenPsw(text, sOldPassword);
      if (!checkDiffPsw) errMsg = "<li>Новий пароль відрізняється від старого менш ніж 3 символами.</li>";
  
      errMsg += '</ul>';
      var result = checkLehgth && checkCharSets && checkUserName && checkSeqRepeat && checkDigSequence && checkCharSequence && checkKeyboardSequence && checkDiffPsw;
      var vColor = "red";
      if (result) {
          vColor = "green";
          errMsg = "Пароль пройшов перевірку.";
      }
      else {
          vColor = 'rgb(200, 83, 5)';
      }
  
    addPopup($(edit), errMsg, vColor);
      return result;
  }
  
  function revertStr(str) {
      var strLen = str.length - 1;
      var flush = "";
      for (var i = strLen; i > -1; i--)
          flush += str.charAt(i);
      return (flush);
  }
</script>
