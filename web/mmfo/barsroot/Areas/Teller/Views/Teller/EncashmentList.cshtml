@using BarsWeb.Areas.Teller.Model
@{
    Layout = null;
}
<style>
    .k-pager-nav span{
        margin-top: 4px;
    }
    .k-dropdown-wrap .k-select, .k-pager-refresh span{
        margin-top: 7px;
    }
    #teller-carrying-out-button-container a{
        width: auto !important;
    }
</style>
<script>
    // получение кнопки удаления операции (1 - можно удалять, 0 - нельзя удалять)
    function displayRemoveButtons(data) {
        if (data && data.CanDelete === 1)
            return '<a class="atm-button atm-color-red" style="width:80px; padding: 4px; margin-left: 13px;" onclick="RemoveOper(' + data.Id + '); return false;">Видалити</a>';
        return '';
    }

    // удаление операции ТОХ для проводок для темпокассы
    function RemoveOper(id) {
        var elements = ['#preloader', '#preloader-text', '#text-oper', '#teller-preloader-image'];
        for (var i = 0; i < elements.length; ++i)
            $(elements[i]).css('display', 'block');
        $('#preloader').css('z-index', zElementIndex.middle);
        $.ajax({
            type: "POST",
            contentType: "application/json",
            url: '/barsroot/api/teller/teller/RemoveOper/' + id,
            data: JSON.stringify({ method: 'collectatm' }),
            success: function (result) {
                if (result.Result === 0) {
                    if (result.P_errtxt.length === 0)
                        result.P_errtxt = 'Операція видалена успішно';
                    showNotification(result.P_errtxt);
                }
                else
                    showNotification(result.P_errtxt, 'error');                
                $('#encashmentList').data('kendoGrid').dataSource.read();
                $('#encashmentList').data('kendoGrid').refresh();
                var items = ["#preloader-text", '#text-oper', '#teller-preloader-image'];
                for (var i = 0; i < items.length; ++i)
                    $(items[i]).css('display', 'none');
                $('#nominals-container').css('display', 'block');
                $('#encashment-window').css('z-index', zElementIndex.up);

            },
            error: DefaultError
        });
    }
</script>
<script src="~/Scripts/kendo/kendo.aspnetmvc.min.js"></script>
<div id="teller-carrying-out-window">
    <div id="atm-header">
        <div id="atm-close-button" onclick="CloseEncashmentWindow(false); return false;"></div>
        <label>Проведення</label>
    </div>
    <div id="teller-carrying-out-button-container">
        @(Html.Kendo().Grid<TellerEncashmentList>()
             .Name("encashmentList")
             .HtmlAttributes(new { style = "width: 99%;" })
             .Sortable()
             .Columns(col =>
             {
                 col.Bound(x => x.Id).Hidden(true);
                 col.Bound(x => x.Cur_code).Title("Код валюти").HeaderHtmlAttributes(new { style = "white-space: normal" }).Width(100);
                 col.Bound(x => x.Cash_direction).Title("Тип операції").HeaderHtmlAttributes(new { style = "white-space: normal, min-width: 120px" }).Width(200);
                 col.Bound(x => x.Last_DT).Format("{0:dd.MM.yyyy HH:mm:ss}").Title("Дата").HeaderHtmlAttributes(new { style = "white-space: normal" }).HtmlAttributes(new { style = "text-align: center" }).Width(160);
                 col.Bound(x => x.Amount).Title("Сума").Format("{0:n2}").HeaderHtmlAttributes(new { style = "white-space: normal" }).HtmlAttributes(new { style = "text-align: right" }).Width(120);
                 col.Bound(x => x).Title("Провести через ТОХ").ClientTemplate("#=displayTOXButtons(data)#").HeaderHtmlAttributes(new { style = "white-space: normal" }).Width(120);
                 col.Bound(x => x).Title("Видалення операції").ClientTemplate("#=displayRemoveButtons(data)#").HeaderHtmlAttributes(new { style = "white-space: normal" }).Width(120);
             })
             .Filterable()
             .Selectable()
             .Scrollable()
             .Sortable()
             .Pageable(page => page
                 .Refresh(true)
                 .PageSizes(new List<Int32> { 5, 10, 20, 50 })
                 .ButtonCount(5))
             .DataSource(dataSource => dataSource
                 .Ajax()
                 .Model(model => model.Id(x => x.Id))
                 .Read(read => read.Action("EncashmentList_Read", "Teller"))
                 .PageSize(7)
             )
        )
    </div>
</div>

