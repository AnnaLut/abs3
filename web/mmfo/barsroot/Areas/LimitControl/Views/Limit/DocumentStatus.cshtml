
<h1>Запит лімітів за документом</h1>
<div id="toolbar" style="margin-bottom: 20px"></div>
    @*<div class="demo-section">


            <form action="">
                <p>
                    @Html.LabelFor(m => m.SearchInfo.Series, new { @class = "k-label" })
                    @*Любые символы* @
                    @Html.Kendo().MaskedTextBoxFor(m => m.SearchInfo.Series).Mask("&&&")
                    @*Только буквы* @
                    @* @Html.Kendo().MaskedTextBoxFor(m => m.SearchInfo.Series).Rules(rules => rules.Add('~', "/[a-zA-Zа-яА-Я]/")).Mask("~~~")* @
                </p>
                <p>
                    @Html.LabelFor(m => m.SearchInfo.Number, new { @class = "k-label" })
                    @*Любые символы* @
                    @Html.Kendo().MaskedTextBoxFor(m => m.SearchInfo.Number).Mask("&&&&&&&&&&")
                    @*Только цифры* @
                    @* @Html.Kendo().MaskedTextBoxFor(m => m.SearchInfo.Number).Mask("0000000000")* @
                </p>

            </form>
            <p align="center">
                <button type="submit" class="k-button" id="search"  >
                    <i class="pf-icon pf-16 pf-find"></i> Пошук
                </button>
                <div id="message"></div>
            </p>
        </div>*@
    <div id="tabStrip">
        <div id="tabstrip">
            <ul>
                <li class="k-state-active">
                    Допустимі операції для користувача
                </li>
                <li>
                    Транзакції користувача
                </li>
            </ul>
            <div style="padding: 10px">
                <div id="operationsGrid"></div>
            </div>
            <div style="padding: 10px">
                <div id="transactionsGrid"></div>
            </div>
        </div>
        @*(Html.Kendo().TabStrip()
            .Name("tabstrip")
            .Items(tabstrip =>
            {
                tabstrip.Add().Text("Допустимі операції для користувача")
                    .Selected(true)
                    .Content(@<text>
                                  @(Html.Kendo().Grid(Model.Operations)
                                        .Name("operationsGrid1")
                                        .Columns(columns =>
                                        {
                                            columns.Bound(p => p.Limit).Title("Ліміт");
                                            columns.Bound(p => p.Sum).Title("Можливі операції на суму")
                                                .Format("{0:n}");
                                            columns.Bound(p => p.EquivalentList).Title("Еквівалент в: ")
                                                .ClientTemplate("#= bindEquivalentSum(EquivalentList) #").HeaderTemplate("Еквівалент в: <select><option value=840>840</option><option value=978>978</option></select>")
                                                .Format("{0:n}").Sortable(false).Filterable(false);
                                        })
                                        .Pageable()
                                        .Sortable()
                                        .Scrollable(scr => scr.Height(430))
                                        .Filterable()
                                        .Reorderable(c => c.Columns(true))
                                        .Resizable(c => c.Columns(true))
                                        .Selectable()
                                        .AutoBind(false)
                                        .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .PageSize(20)
                                            .ServerOperation(false)
                                        )
                                        )
                              </text>);
                tabstrip.Add().Text("Транзакції користувача")
                    .Content(@<text>
                                  @(Html.Kendo().Grid(Model.Transactions)
                                        .Name("transactionsGrid")
                                        .Columns(columns =>
                                        {
                                            columns.Bound(p => p.Date).Title("Банківська дата")
                                                .Format("{0:dd/MM/yyyy}");
                                            columns.Bound(p => p.Branch).Title("Бранч");
                                            columns.Bound(p => p.Operation).Title("Операція");
                                            columns.Bound(p => p.Currency).Title("Код валюти");
                                            columns.Bound(p => p.Sum).Title("Сума")
                                                .Format("{0:n}");
                                            columns.Bound(p => p.SumEquivalent).Title("Сума в еквіваленті")
                                                .Format("{0:n}");
                                        })
                                        .Pageable()
                                        .Sortable()
                                        .Scrollable(scr => scr.Height(430))
                                        .Filterable()
                                        .Reorderable(c => c.Columns(true))
                                        .Resizable(c => c.Columns(true))
                                        .Selectable()
                                        .AutoBind(false)
                                        .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .PageSize(20)
                                            .ServerOperation(false)
                                        )
                                        )
                              </text>);
            })
            )*@
    </div>

    <div class="modal"><!-- Place at bottom of page --></div>

    <script type="text/javascript">
        var requestDataGrid = null;
        var deffaultCurrency = 840;

        function bindEquivalentSum(equivalentmList) {
            var result = 'Невстановлено курс';
            var currlist = $("#dropdownCurrency").data("kendoDropDownList");
            var curr = currlist.dataItem(currlist.selectedIndex).Code;
            for (var i = 0; i < equivalentmList.length; i++) {
                if (equivalentmList[i].Сurrency == curr) {
                    result = kendo.toString(equivalentmList[i].Sum, "n");
                    break;
                }
            }
            return result;
        }
        // Получить JS-дату из строки вида "/Date(1415224800000)/"
        function ToJavaScriptDate(value) {
            var pattern = /Date\(([^)]+)\)/;
            var results = pattern.exec(value);
            var dt = new Date(parseFloat(results[1]));
            return dt;
        }

        /*function showSpinner(par) {
            var body = $("body");
            if (par) {
                body.addClass("loading");
            } else {
                body.removeClass("loading");
            }
        }*/

        function validateForm() {
            // allow empty, 2, 3 characters
            if ($("#SearchInfo_Series").val().replace(/_/g, "").length == 1) {
                $("#SearchInfo_Series").focus();
                return false;
            }
            if ($("#SearchInfo_Number").val().replace(/_/g, "").length < 2) {
                $("#SearchInfo_Number").focus();
                return false;
            }
            return true;
        }

        function addRowToGrid(gridId, row) {
            var grid = $("#" + gridId).data("kendoGrid");
            var datasource = grid.dataSource;
            datasource.insert(row);
        }

        function removeGridData(gridId) {
            var grid = $("#" + gridId).data("kendoGrid");
            var datasource = grid.dataSource;
            datasource.data([]);
        }
        var gridDataBound = function (e) {
            var grid = e.sender;
            if (grid.dataSource.total() == 0) {
                var colCount = grid.columns.length;
                $(e.sender.wrapper).find('tbody')
                    .append('<tr class="kendo-data-row"><td colspan="' + colCount + '" class="no-data">' + grid.pager.options.messages.empty + ' :(</td></tr>');
            }
        }
        function rebindGridData(data) {
            var tabStrip = $("#tabStrip");

            removeGridData("operationsGrid");
            $.each(data.limitStatus.OperationCollection.Operations, function (i, val) {
                addRowToGrid("operationsGrid", { Limit: val.Limit, Sum: val.Sum, EquivalentList: val.EquivalentList });
            });
            removeGridData("transactionsGrid");
            $.each(data.limitStatus.TransactionCollection.Transactions, function (i, val) {
                addRowToGrid("transactionsGrid", {
                    Date: ToJavaScriptDate(val.Date),
                    Branch: val.Branch,
                    Operation: val.Operation,
                    Sum: val.Sum,
                    SumEquivalent: val.SumEquivalent,
                    Currency: val.Currency
                });
            });
            tabStrip.fadeIn();
        }

        $(function () {
            $("#toolbar").kendoToolBar({
                items: [
                    {
                        type: 'separator'
                    }, {
                        template: '<label>Серія: </label><input id="SearchInfo_Series" name="SearchInfo_Series" type="text" class="k-textbox" maxlength="4" />'
                    }, {
                        type: 'separator'
                    }, {
                        template: '<label>Номер: </label><input id="SearchInfo_Number" name="SearchInfo_Number" type="text" class="k-textbox" maxlength="20" />'
                    }, {
                        type: 'separator'
                    }, {
                        type: "button",
                        text: '<i class="pf-icon pf-16 pf-find"></i> Пошук',
                        id: 'search'
                    }, {
                        type: 'separator'
                    }
                ]
            });
            $("#tabstrip").kendoTabStrip({});
            $("#operationsGrid").kendoGrid({
                columns: [{
                    title: "Ліміт",
                    field: "Limit",
                    encoded: true
                }, {
                    title: "Можливі операції на суму",
                    field: "Sum",
                    format: "{0:n}",
                    width: 200,
                    attributes: { "class": "money" },
                    encoded: true
                }, {
                    title: "Еквівалент в:",
                    headerTemplate: 'Еквівалент в: <div id=dropdownCurrency></div>',
                    field: "EquivalentList",
                    format: "{0:n}",
                    template: '#= bindEquivalentSum(EquivalentList) #',
                    filterable: false,
                    sortable: false,
                    width: 250,
                    attributes: { "class": "money" },
                    encoded: true
                }],
                pageable: true,
                dataBound: gridDataBound,
                sortable: true,
                selectable: "Single, Row",
                filterable: true,
                resizable: true,
                reorderable: true,
                autoBind: false,
                dataSource: {
                    type: "webapi",
                    transport: {
                        read: { url: "" }
                    },
                    pageSize: 20,
                    page: 1,
                    total: 0,
                    schema: {
                        data: "Data",
                        total: "Total",
                        errors: "Errors",
                        model: {
                            fields:
                            {
                                EquivalentList: { "type": "Array" },
                                Limit: { "type": "string" },
                                Sum: { "type": "number", "defaultValue": null }
                            }
                        }
                    }
                }
            });
            $("#transactionsGrid").kendoGrid({
                columns: [{
                    title: "Банківська дата",
                    field: "Date",
                    format: "{0:dd/MM/yyyy}",
                    encoded: true
                }, {
                    title: "Бранч",
                    field: "Branch",
                    encoded: true
                }, {
                    title: "Операція",
                    field: "Operation",
                    encoded: true
                }, {
                    title: "Код валюти",
                    field: "Currency",
                    encoded: true
                }, {
                    title: "Сума",
                    field: "Sum",
                    attributes: { "class": "money" },
                    format: "{0:n}",
                    encoded: true
                }, {
                    title: "Сума в еквіваленті",
                    field: "SumEquivalent",
                    attributes: { "class": "money" },
                    format: "{0:n}",
                    encoded: true
                }],
                dataBound: gridDataBound,
                pageable: true,
                sortable: true,
                selectable: "Single, Row",
                filterable: true,
                resizable: true,
                reorderable: true,
                autoBind: false,
                dataSource: {
                    type: "webapi",
                    transport: {
                        read: { url: "" },
                        prefix: ""
                    },
                    "pageSize": 20,
                    "page": 1,
                    "total": 0,
                    "schema": {
                        "data": "Data",
                        "total": "Total",
                        "errors": "Errors",
                        "model": {
                            "fields": {
                                "Date": {
                                    "type": "date",
                                    "defaultValue": null
                                },
                                "Branch": { "type": "string" },
                                "Operation": { "type": "string" },
                                "Currency": { "type": "string" },
                                "Sum": {
                                    "type": "number",
                                    "defaultValue": null
                                },
                                "SumEquivalent": {
                                    "type": "number",
                                    "defaultValue": null
                                }
                            }
                        }
                    }
                }
            });
            $("#dropdownCurrency").kendoDropDownList({
                dataTextField: "Name",
                dataValueField: "Code",
                valueTemplate: '#=Code#-#=Name#',
                template: '#=Code#-#=Name#',
                dataSource: {
                    transport: {
                        read: {
                            dataType: "json",
                            url: bars.config.urlContent('/api/kernel/currency/?onlyOpen=true')
                        }
                    }
                },
                index: 0,
                dataBound: function () {
                    var currlist = $("#dropdownCurrency").data("kendoDropDownList");
                    for (var i = 0; i < currlist.dataSource.data().length; i++) {
                        if (currlist.dataItem(i).Code == deffaultCurrency) {
                            currlist.select(i);
                            return;
                        }
                    }
                },
                change: function () {
                    rebindGridData(requestDataGrid);
                },
                filter: 'contains'
            });
            $("#SearchInfo_Series").addClass("series");
            $("#search").click(function () {
                if (!validateForm()) {
                    return;
                }
                $('#search').attr('disabled', 'disabled');
                $(':input').attr('readonly', 'readonly');
                var message = $("#message");
                message.hide();
                var tabStrip = $("#tabStrip");
                tabStrip.hide();
                bars.ui.loader($("body"), true);
                var data = {
                    Number: $("#SearchInfo_Number").val(),
                    Series: $("#SearchInfo_Series").val()
                };
                $.ajax({
                    type: "post",
                    url: bars.config.urlContent('/limitcontrol/Limit/GetDocumentStatus/'),
                    data: data,
                    dataType: "json",
                    traditional: true,
                    success: function (request) {
                        bars.ui.loader($("body"), false);
                        if (request.success == true) {
                            if (request.limitStatus.Success == true) {
                                requestDataGrid = request;
                                rebindGridData(request);

                                /*removeGridData("operationsGrid");
                                $.each(request.limitStatus.OperationCollection.Operations, function (i, val) {
                                    addRowToGrid("operationsGrid", { Limit: val.Limit, Sum: val.Sum, EquivalentList: val.EquivalentList });
                                });
                                removeGridData("transactionsGrid");
                                $.each(request.limitStatus.TransactionCollection.Transactions, function (i, val) {
                                    addRowToGrid("transactionsGrid", {
                                        Date: ToJavaScriptDate(val.Date),
                                        Branch: val.Branch,
                                        Operation: val.Operation,
                                        Sum: val.Sum,
                                        SumEquivalent: val.SumEquivalent,
                                        Currency: val.Currency
                                    });
                                });
                                tabStrip.fadeIn();*/
                            } else {
                                var messageContent = "<br>";
                                messageContent += request.limitStatus.ErrorMessage;
                                message.html(messageContent);
                                message.fadeIn();
                            }
                        } else {
                            alert(request.errorMessage);
                        }
                        $('#search').removeAttr('disabled');
                        $(':input').removeAttr('readonly');
                    },
                    error: function () {
                        bars.ui.loader($("body"), false);
                        alert("error");
                        $('#search').removeAttr('disabled');
                        $(':input').removeAttr('readonly');
                    }
                });
            });
            $("form").change(function () {
                var tabStrip = $("#tabStrip");
                tabStrip.fadeOut();
                var message = $("#message");
                message.fadeOut();
            });
        });
    </script>

    <style>
        #tabStrip {
            display: none;
        }

        .demo-section {
            width: 460px;
            padding: 30px;
        }

            .demo-section h2 {
                text-transform: uppercase;
                font-size: 1.2em;
                margin-bottom: 30px;
            }

            .demo-section label {
                display: inline-block;
                width: 120px;
                padding-right: 5px;
                text-align: right;
            }

            .demo-section .k-button {
            }

        .k-readonly {
            color: gray;
        }

        .k-popup .k-list .k-item {
            font-size: 13px;
        }
    </style>


    <!-- CSS goes in the document HEAD or added to your external stylesheet -->
    <style type="text/css">
        table.gridtable {
            font-family: verdana,arial,sans-serif;
            font-size: 11px;
            color: #333333;
            border-width: 1px;
            border-color: #666666;
            border-collapse: collapse;
        }

            table.gridtable th {
                border-width: 1px;
                padding: 8px;
                border-style: solid;
                border-color: #666666;
                background-color: #dedede;
            }

            table.gridtable td {
                border-width: 1px;
                padding: 8px;
                border-style: solid;
                border-color: #666666;
                background-color: #ffffff;
            }

        /* приведение к верхнему регистру серии документа*/
        .series {
            text-transform: uppercase !important;
        }

        /* Start by setting display:none to make this hidden.
                Then we position it in relation to the viewport window
                with position:fixed. Width, height, top and left speak
                speak for themselves. Background we set to 80% white with
                our animation centered, and no-repeating */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            background: #ffffff url('/barsroot/content/spinners/ajax-loader.gif') 50% 50% no-repeat;
            background: rgba( 255, 255, 255, .8 ) url('/barsroot/content/spinners/ajax-loader.gif') 50% 50% no-repeat;
        }

        /* When the body has the loading class, we turn
                the scrollbar off with overflow:hidden */
        body.loading {
            overflow: hidden;
        }

            /* Anytime the body has the loading class, our
                modal element will be visible */
            body.loading .modal {
                display: block;
            }
    </style>
