/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace Bars.ObjLayer.CbiRep
{
    public sealed class VCbirepReplistRecord : BbRecord
    {
        public VCbirepReplistRecord(): base()
        {
            fillFields();
        }
        public VCbirepReplistRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VCbirepReplistRecord(BbDataSource Parent, OracleDecimal RowScn, String CODEAPP, Decimal? REP_ID, String REP_DESC, Decimal? FOLDER_ID)
            : this(Parent)
        {
            this.CODEAPP = CODEAPP;
            this.REP_ID = REP_ID;
            this.REP_DESC = REP_DESC;
            this.FOLDER_ID = FOLDER_ID;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("CODEAPP", OracleDbType.Char, false, false, false, false, false, "V_CBIREP_REPLIST", ObjectTypes.View, "Доступные пользователю отчеты по армам", "Код арма"));
            Fields.Add( new BbField("REP_ID", OracleDbType.Decimal, false, false, false, false, false, "V_CBIREP_REPLIST", ObjectTypes.View, "Доступные пользователю отчеты по армам", "Код отчета"));
            Fields.Add( new BbField("REP_DESC", OracleDbType.Varchar2, false, false, false, false, false, "V_CBIREP_REPLIST", ObjectTypes.View, "Доступные пользователю отчеты по армам", "Наименование отчета"));
            Fields.Add( new BbField("FOLDER_ID", OracleDbType.Decimal, true, false, false, false, false, "V_CBIREP_REPLIST", ObjectTypes.View, "Доступные пользователю отчеты по армам", "Ид папки отчета"));        
        }
        public String CODEAPP { get { return (String)FindField("CODEAPP").Value; } set {SetField("CODEAPP", value);} }
        public Decimal? REP_ID { get { return (Decimal?)FindField("REP_ID").Value; } set {SetField("REP_ID", value);} }
        public String REP_DESC { get { return (String)FindField("REP_DESC").Value; } set {SetField("REP_DESC", value);} }
        public Decimal? FOLDER_ID { get { return (Decimal?)FindField("FOLDER_ID").Value; } set {SetField("FOLDER_ID", value);} }
    }

    public sealed class VCbirepReplistFilters : BbFilters
    {
        public VCbirepReplistFilters(BbDataSource Parent) : base (Parent)
        {
            CODEAPP = new BBCharFilter(this, "CODEAPP");
            REP_ID = new BBDecimalFilter(this, "REP_ID");
            REP_DESC = new BBVarchar2Filter(this, "REP_DESC");
            FOLDER_ID = new BBDecimalFilter(this, "FOLDER_ID");
        }
        public BBCharFilter CODEAPP;
        public BBDecimalFilter REP_ID;
        public BBVarchar2Filter REP_DESC;
        public BBDecimalFilter FOLDER_ID;
    }

    public partial class VCbirepReplist : BbTable<VCbirepReplistRecord, VCbirepReplistFilters>
    {
        public VCbirepReplist() : base(new BbConnection())
        {
        }
        public VCbirepReplist(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VCbirepReplistRecord> Select(VCbirepReplistRecord Item)
        {
            List<VCbirepReplistRecord> res = new List<VCbirepReplistRecord>();
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                OracleDataReader rdr = ExecuteReader(Item);
                try
                {
                    while (rdr.Read())
                    {
                        res.Add(new VCbirepReplistRecord(
                            this,
                            rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                            rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (Decimal?)null : Convert.ToDecimal(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (Decimal?)null : Convert.ToDecimal(rdr[4]))
                        );
                    }
                }
                finally
                {
                    rdr.Close();
                    rdr.Dispose();
                }
            }
            finally
            {
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
        public List<VCbirepReplistRecord> Select(String SortExpression)
        {
            // сортировка
            if (!String.IsNullOrEmpty(SortExpression))
                this.Filter.OrderStatement.Add(SortExpression);
                
            return Select();            
        }
    }
}