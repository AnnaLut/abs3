/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace Bars.DynamicLayout
{
    public sealed class VTmpDynamicLayoutRecord : BbRecord
    {
        public VTmpDynamicLayoutRecord(): base()
        {
            fillFields();
        }
        public VTmpDynamicLayoutRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VTmpDynamicLayoutRecord(BbDataSource Parent, OracleDecimal RowScn, String ND, DateTime? DATD, Decimal? DK, Decimal? SUMM, Decimal? KV_A, String NLS_A, Decimal? OSTC, String NMS, String NAZN, DateTime? DATE_FROM, DateTime? DATE_TO, Decimal? DATES_TO_NAZN, Decimal? CORRECTION, Decimal? REF, Decimal? TYPED_PERCENT, Decimal? TYPED_SUMM, Decimal? BRANCH_COUNT, Decimal? USERID)
            : this(Parent)
        {
            this.ND = ND;
            this.DATD = DATD;
            this.DK = DK;
            this.SUMM = SUMM;
            this.KV_A = KV_A;
            this.NLS_A = NLS_A;
            this.OSTC = OSTC;
            this.NMS = NMS;
            this.NAZN = NAZN;
            this.DATE_FROM = DATE_FROM;
            this.DATE_TO = DATE_TO;
            this.DATES_TO_NAZN = DATES_TO_NAZN;
            this.CORRECTION = CORRECTION;
            this.REF = REF;
            this.TYPED_PERCENT = TYPED_PERCENT;
            this.TYPED_SUMM = TYPED_SUMM;
            this.BRANCH_COUNT = BRANCH_COUNT;
            this.USERID = USERID;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("ND", OracleDbType.Varchar2, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "Номер документу(розпорядження)"));
            Fields.Add( new BbField("DATD", OracleDbType.Date, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "Дата документу(розпорядження)"));
            Fields.Add( new BbField("DK", OracleDbType.Decimal, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "1 - дебет, 0 - кредет"));
            Fields.Add( new BbField("SUMM", OracleDbType.Decimal, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "Загальна сума для розподылу"));
            Fields.Add( new BbField("KV_A", OracleDbType.Decimal, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "Код валюти рахунку А"));
            Fields.Add( new BbField("NLS_A", OracleDbType.Varchar2, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "Номер разунку А"));
            Fields.Add( new BbField("OSTC", OracleDbType.Decimal, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "Залишок рахунку А"));
            Fields.Add( new BbField("NMS", OracleDbType.Varchar2, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", " Найменування рахунку А"));
            Fields.Add( new BbField("NAZN", OracleDbType.Varchar2, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "Призначення платежу"));
            Fields.Add( new BbField("DATE_FROM", OracleDbType.Date, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "Дата з"));
            Fields.Add( new BbField("DATE_TO", OracleDbType.Date, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "Дата по"));
            Fields.Add( new BbField("DATES_TO_NAZN", OracleDbType.Decimal, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "Ознака додавання дати з та дати по до призначення платежу(0 - ні, 1 - так)"));
            Fields.Add( new BbField("CORRECTION", OracleDbType.Decimal, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "Ознака виконання платежу корегувальними оборотами"));
            Fields.Add( new BbField("REF", OracleDbType.Decimal, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "РЕФ"));
            Fields.Add( new BbField("TYPED_PERCENT", OracleDbType.Decimal, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "набрано %"));
            Fields.Add( new BbField("TYPED_SUMM", OracleDbType.Decimal, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", " набрано суму"));
            Fields.Add( new BbField("BRANCH_COUNT", OracleDbType.Decimal, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", "кількість бранчів"));
            Fields.Add( new BbField("USERID", OracleDbType.Decimal, true, false, false, false, false, "V_TMP_DYNAMIC_LAYOUT", ObjectTypes.View, "Макет динамічних проводок (заголовок)", ""));        
        }
        public String ND { get { return (String)FindField("ND").Value; } set {SetField("ND", value);} }
        public DateTime? DATD { get { return (DateTime?)FindField("DATD").Value; } set {SetField("DATD", value);} }
        public Decimal? DK { get { return (Decimal?)FindField("DK").Value; } set {SetField("DK", value);} }
        public Decimal? SUMM { get { return (Decimal?)FindField("SUMM").Value; } set {SetField("SUMM", value);} }
        public Decimal? KV_A { get { return (Decimal?)FindField("KV_A").Value; } set {SetField("KV_A", value);} }
        public String NLS_A { get { return (String)FindField("NLS_A").Value; } set {SetField("NLS_A", value);} }
        public Decimal? OSTC { get { return (Decimal?)FindField("OSTC").Value; } set {SetField("OSTC", value);} }
        public String NMS { get { return (String)FindField("NMS").Value; } set {SetField("NMS", value);} }
        public String NAZN { get { return (String)FindField("NAZN").Value; } set {SetField("NAZN", value);} }
        public DateTime? DATE_FROM { get { return (DateTime?)FindField("DATE_FROM").Value; } set {SetField("DATE_FROM", value);} }
        public DateTime? DATE_TO { get { return (DateTime?)FindField("DATE_TO").Value; } set {SetField("DATE_TO", value);} }
        public Decimal? DATES_TO_NAZN { get { return (Decimal?)FindField("DATES_TO_NAZN").Value; } set {SetField("DATES_TO_NAZN", value);} }
        public Decimal? CORRECTION { get { return (Decimal?)FindField("CORRECTION").Value; } set {SetField("CORRECTION", value);} }
        public Decimal? REF { get { return (Decimal?)FindField("REF").Value; } set {SetField("REF", value);} }
        public Decimal? TYPED_PERCENT { get { return (Decimal?)FindField("TYPED_PERCENT").Value; } set {SetField("TYPED_PERCENT", value);} }
        public Decimal? TYPED_SUMM { get { return (Decimal?)FindField("TYPED_SUMM").Value; } set {SetField("TYPED_SUMM", value);} }
        public Decimal? BRANCH_COUNT { get { return (Decimal?)FindField("BRANCH_COUNT").Value; } set {SetField("BRANCH_COUNT", value);} }
        public Decimal? USERID { get { return (Decimal?)FindField("USERID").Value; } set {SetField("USERID", value);} }
    }

    public sealed class VTmpDynamicLayoutFilters : BbFilters
    {
        public VTmpDynamicLayoutFilters(BbDataSource Parent) : base (Parent)
        {
            ND = new BBVarchar2Filter(this, "ND");
            DATD = new BBDateFilter(this, "DATD");
            DK = new BBDecimalFilter(this, "DK");
            SUMM = new BBDecimalFilter(this, "SUMM");
            KV_A = new BBDecimalFilter(this, "KV_A");
            NLS_A = new BBVarchar2Filter(this, "NLS_A");
            OSTC = new BBDecimalFilter(this, "OSTC");
            NMS = new BBVarchar2Filter(this, "NMS");
            NAZN = new BBVarchar2Filter(this, "NAZN");
            DATE_FROM = new BBDateFilter(this, "DATE_FROM");
            DATE_TO = new BBDateFilter(this, "DATE_TO");
            DATES_TO_NAZN = new BBDecimalFilter(this, "DATES_TO_NAZN");
            CORRECTION = new BBDecimalFilter(this, "CORRECTION");
            REF = new BBDecimalFilter(this, "REF");
            TYPED_PERCENT = new BBDecimalFilter(this, "TYPED_PERCENT");
            TYPED_SUMM = new BBDecimalFilter(this, "TYPED_SUMM");
            BRANCH_COUNT = new BBDecimalFilter(this, "BRANCH_COUNT");
            USERID = new BBDecimalFilter(this, "USERID");
        }
        public BBVarchar2Filter ND;
        public BBDateFilter DATD;
        public BBDecimalFilter DK;
        public BBDecimalFilter SUMM;
        public BBDecimalFilter KV_A;
        public BBVarchar2Filter NLS_A;
        public BBDecimalFilter OSTC;
        public BBVarchar2Filter NMS;
        public BBVarchar2Filter NAZN;
        public BBDateFilter DATE_FROM;
        public BBDateFilter DATE_TO;
        public BBDecimalFilter DATES_TO_NAZN;
        public BBDecimalFilter CORRECTION;
        public BBDecimalFilter REF;
        public BBDecimalFilter TYPED_PERCENT;
        public BBDecimalFilter TYPED_SUMM;
        public BBDecimalFilter BRANCH_COUNT;
        public BBDecimalFilter USERID;
    }

    public partial class VTmpDynamicLayout : BbTable<VTmpDynamicLayoutRecord, VTmpDynamicLayoutFilters>
    {
        public VTmpDynamicLayout() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VTmpDynamicLayout(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VTmpDynamicLayoutRecord> Select(VTmpDynamicLayoutRecord Item)
        {
            List<VTmpDynamicLayoutRecord> res = new List<VTmpDynamicLayoutRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VTmpDynamicLayoutRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (DateTime?)null : Convert.ToDateTime(rdr[2]), 
                        rdr.IsDBNull(3) ?  (Decimal?)null : Convert.ToDecimal(rdr[3]), 
                        rdr.IsDBNull(4) ?  (Decimal?)null : Convert.ToDecimal(rdr[4]), 
                        rdr.IsDBNull(5) ?  (Decimal?)null : Convert.ToDecimal(rdr[5]), 
                        rdr.IsDBNull(6) ?  (String)null : Convert.ToString(rdr[6]), 
                        rdr.IsDBNull(7) ?  (Decimal?)null : Convert.ToDecimal(rdr[7]), 
                        rdr.IsDBNull(8) ?  (String)null : Convert.ToString(rdr[8]), 
                        rdr.IsDBNull(9) ?  (String)null : Convert.ToString(rdr[9]), 
                        rdr.IsDBNull(10) ?  (DateTime?)null : Convert.ToDateTime(rdr[10]), 
                        rdr.IsDBNull(11) ?  (DateTime?)null : Convert.ToDateTime(rdr[11]), 
                        rdr.IsDBNull(12) ?  (Decimal?)null : Convert.ToDecimal(rdr[12]), 
                        rdr.IsDBNull(13) ?  (Decimal?)null : Convert.ToDecimal(rdr[13]), 
                        rdr.IsDBNull(14) ?  (Decimal?)null : Convert.ToDecimal(rdr[14]), 
                        rdr.IsDBNull(15) ?  (Decimal?)null : Convert.ToDecimal(rdr[15]), 
                        rdr.IsDBNull(16) ?  (Decimal?)null : Convert.ToDecimal(rdr[16]), 
                        rdr.IsDBNull(17) ?  (Decimal?)null : Convert.ToDecimal(rdr[17]), 
                        rdr.IsDBNull(18) ?  (Decimal?)null : Convert.ToDecimal(rdr[18]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}