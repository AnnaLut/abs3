<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="text_client_hasno_curaccs" xml:space="preserve">
    <value>У клиента нет открытых текущих счетов</value>
  </data>
  <data name="text_deal_date_change" xml:space="preserve">
    <value>Смена даты договора</value>
  </data>
  <data name="text_grt_must_be_in_status" xml:space="preserve">
    <value>Обеспечение {0} - {1} должно быть в статусе {2}</value>
  </data>
  <data name="text_inn_search_required" xml:space="preserve">
    <value>Необходимо выполнить поиск по ИНН = {0}</value>
  </data>
  <data name="text_ins_must_be_in_status" xml:space="preserve">
    <value>Страховка {0} - {1} должна быть в статусе '{2}'</value>
  </data>
  <data name="text_no_bids_selected" xml:space="preserve">
    <value>Заявки не выбраны</value>
  </data>
  <data name="text_no_curacc_selected" xml:space="preserve">
    <value>Не выбран текущий счет</value>
  </data>
  <data name="text_no_user_selected" xml:space="preserve">
    <value>Не выбран пользователь для переназначения</value>
  </data>
  <data name="text_question_check_error_ptrn" xml:space="preserve">
    <value>Вопрос {0}({1}) - {2}</value>
  </data>
  <data name="text_reg_bid2new_client" xml:space="preserve">
    <value>Зарегистрировать заявку на нового клиента ИНН = {0}?</value>
  </data>
  <data name="text_reg_bid2_client_rnk" xml:space="preserve">
    <value>Зарегистрировать заявку на клиента РНК = {0}?</value>
  </data>
  <data name="text_survey_wrong_step" xml:space="preserve">
    <value>Нельза перейти на незаполненый шаг</value>
  </data>
  <data name="text_wrong_acc_checksum" xml:space="preserve">
    <value>Неверный контрольный разряд счета</value>
  </data>
  <data name="text_incomplete_iquery" xml:space="preserve">
    <value>Запрос "{0} - {1}" не обработан</value>
  </data>
  <data name="text_unscaned_document" xml:space="preserve">
    <value>Шаблон "{0} - {1}" не отсканирован</value>
  </data>
  <data name="text_done" xml:space="preserve">
    <value>Выполнено</value>
  </data>
  <data name="text_all" xml:space="preserve">
    <value>все</value>
  </data>
  <data name="text_branchs" xml:space="preserve">
    <value>отделения</value>
  </data>
  <data name="text_users" xml:space="preserve">
    <value>пользователя</value>
  </data>
  <data name="text_decision1" xml:space="preserve">
    <value>Рішення №{0} від {1:dd/MM/yyyy}: {2}; {3}</value>
  </data>
  <data name="text_decision2" xml:space="preserve">
    <value>Рішення:</value>
  </data>
  <data name="text_bid_incomplete_iquery" xml:space="preserve">
    <value>Заявка №{0}: запрос "{1} - {2}" не обработан</value>
  </data>
  <data name="text_bid_unscaned_document" xml:space="preserve">
    <value>Заявка №{0}: шаблон "{1} - {2}" не отсканирован</value>
  </data>
  <data name="text_selected_bids_have_diff_sbps" xml:space="preserve">
    <value>Выбранные заявки имеют разный субпродукт</value>
  </data>
  <data name="text_conclusion" xml:space="preserve">
    <value>Вывод :</value>
  </data>
  <data name="text_storno" xml:space="preserve">
    <value>Сторнировано </value>
  </data>
  <data name="text_visa" xml:space="preserve">
    <value>Завизировано</value>
  </data>
  <data name="text_notdone" xml:space="preserve">
    <value>НЕ выполнено</value>
  </data>
  <data name="text_optional" xml:space="preserve">
    <value>НЕобязательный</value>
  </data>
  <data name="text_error" xml:space="preserve">
    <value>Ошибка ({0})</value>
  </data>
  <data name="text_inproc" xml:space="preserve">
    <value>Выполняется</value>
  </data>
  <data name="text_wait" xml:space="preserve">
    <value>Ожидает</value>
  </data>
  <data name="text_wait_optional" xml:space="preserve">
    <value>Ожидает (необязательный)</value>
  </data>
  <data name="text_pagecount" xml:space="preserve">
    <value>Изображение {0} из {1}</value>
  </data>
  <data name="text_loaded" xml:space="preserve">
    <value>Загружен</value>
  </data>
  <data name="text_not_select_service" xml:space="preserve">
    <value>Не выбрали службы для рассмотрения заявки</value>
  </data>
</root>