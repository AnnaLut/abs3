@using BarsWeb.HtmlHelpers
@inherits System.Web.Mvc.WebViewPage

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /*body { font-size: 62.5%; }*/
    /*label, textarea, button { display:block; }*/
    /*input.text { margin-bottom:12px; width:95%; padding: .4em; }*/
    /*fieldset { padding:0; border:0; margin-top:25px; }
    h1 { font-size: 1.2em; margin: .6em 0; }
    div#users-contain { width: 350px; margin: 20px 0; }
    div#users-contain table { margin: 1em 0; border-collapse: collapse; width: 100%; }
    div#users-contain table td, div#users-contain table th { border: 1px solid #eee; padding: .6em 10px; text-align: left; }
    .ui-dialog .ui-state-error { padding: .3em; }
    .validateTips { border: 1px solid transparent; padding: 0.3em; }*/

    /*#feedback { font-size: 1.4em; }*/
    #selectable .ui-selecting { background: #F0F0F0 }
    #selectable .ui-selected { background: #adddff; }
    #selectable { list-style-type: none; margin: 0; padding: 0; width: 60%; }
    /*#selectable li { margin: 3px; padding: 0.4em; font-size: 1.4em; height: 18px; }*/
    .dialog-button {width: 250px; margin: 0;}
    .dialog-controls {width: 150px; padding: 0; border-spacing: 0;}
</style>

<h1>Шаблони договорів</h1>
<div style="margin:5px 0 5px 0;" class="buttons tiptip">
    <a href="#" id="btnUpdate" onclick="return false;" title="Оновити дані" class="button hover"><span class="icon icon157"></span></a>
    
    @*TODO: button LEFT? MIDDLE?*@
    @*TODO: why return false?*@
    <a id="btnPrint"  onclick="print(); return false;" class="button left" title="Друк"><span class="icon icon153"></span><span class="label">Друк</span></a>
    <a id="btnFilter" onclick="filter();return false;" class="button middle hover" title="Фільтр"><span class="icon icon206"></span><span class="label">Фільтр</span></a>
</div>
<div>
    @*@barsroot.HtmlHelpers.CreateTable(capTableBtn: new string[,] { },
        columnName: new [,] { { "Код", "ID" }, { "Назва шаблону", "NAME" } },
        tableId:"tableContracts",
        tableContent:Html.Action("ContractList", new { defaultFilter = ViewBag.Filter}).ToString())*@
    
    @JGridView.Create(new List<JGridView.Column>
                             {
                               JGridView.Columns.Add("checkbox","",TypeCode.Boolean),
                               JGridView.Columns.Add("Код", "a.ID",TypeCode.String),
                               JGridView.Columns.Add("Назва шаблону", "a.NAME",TypeCode.String)
                              },
                      tableId: "tableContracts"/*,
                      tableContent: Html.Action("ContractList", new { defaultFilter = ViewBag.Filter }).ToString()*/)
    

</div>

<div id="dialog-filter" title="Фільтр">
    <form>
        <select id = "selAttr">
            <option value="id">Код шаблону</option>
            <option value="name">Назва шаблону</option>
        </select>
        <select id = "selFilter">
            <option value="=">=</option>
            <option value="<="><=</option>
            <option value=">=">>=</option>
            <option value="<>"><></option>
            <option value="like">схожий на</option>
            <option value="not like">не схожий на</option>
            <option value="in">один з</option>
            <option value="not in">жоден з</option>
        </select>
        <input type="text" id="txtValue"/>
        
        @*TODO: how to do empty title for all dialog buttons*@
        
        @*<div class="buttons">
            <button id="btnAddRow" onclick="addFilterRow(); return false;" class="button dialog-button" >Додати рядок фільтра</button>
            <button id="btnDelRow" onclick="delFilterRow(); return false;" class="button dialog-button" >Видалити рядок фільтра</button>
        </div>
        <ol id="selectable"></ol>*@
    </form>
</div>

@*TODO: добавить region/endregion*@ 

<script type="text/javascript">
    
    //ID шаблона выбранной строки таблицы
    var templateId = null;

    $(document).ready(function () {
        $('.tiptip a.button, .tiptip button').tipTip();
        
        $('#tableContracts').jungGridView({
            updateTableUrl: '/barsroot/PrintContract/ContractList/',
            userUpdateParamFunc: tableParam,
            updateTableFunc: function () { refreshTableContracts(); },
            viewTfoot: true,
            viewFilter: false,
            buttonToUpdateId: 'btnUpdate',
            trClickFunk: function () { },
            sort: 'a.ID',
            sortDir: 'ASC',
            autoLoad: true
        });
        
        $("#dialog-filter").dialog({
            autoOpen: false,
            minHeight: 150,
            width: 500,
            //TODO:
            icons: {},
            modal: true,
            buttons: {
                "Застосувати фільтр": function () { applyFilter(); $(this).dialog("close");},
                "Відмінити фільтр": function () { cancelFilter(); $(this).dialog("close");}
            },
            close: function () {

            }
        });
        
        $(function() {
            $( "#selectable" ).selectable({
                stop: function() {
                    var result = $( "#select-result" ).empty();
                    $( ".ui-selected", this ).each(function() {
                        //TODO: this?
                        var index = $( "#selectable li" ).index( this );
                        result.append( " #" + ( index + 1 ) );
                    });
                }
            });
        });
    });

    function print() {
        if (templateId != null) {
            $('body').loader();
            var url = "/barsroot/PrintContract/GetFileForPrint/";
            $.post(url, { id: "@ViewBag.Id", templateId: templateId }, function (data) {
                var link = 'WebPrint.aspx?filename=' + data;
                $('body').loader('remove');
                window.showModalDialog(link, '', 'dialogWidth: 900px; dialogHeight: 800px; center: yes');
            });
        }
        else {
            barsUiAlert("Не вибрано документ для друку", "Не вибрано документ", "warning");
        }
    };

    function filter() {
        $( "#dialog-filter" ).dialog( "open" );
    };

    //пользовательский фильтр
    var userFilter = "";
    
    function applyFilter() {
        var attribute = $("#selAttr :selected").val();
        var operand = $("#selFilter :selected").val();
        var value = $("#txtValue").val();
        userFilter = getFilterString(attribute, operand, value);
        $('#tableContracts').jungGridView('refresh');
    };
    
    function cancelFilter() {
        userFilter = "";
        //TODO: спорный вопрос
        //$("#selectable li").remove();
        $('#tableContracts').jungGridView('refresh');
    }
    
    function addFilterRow() {
        var attribute = $("#selAttr :selected");
        var operand = $("#selFilter :selected");
        var value = $("#txtValue").val();
        var rowFilter = getFilterString(attribute, operand, value);
        $  ("#selectable")
            .append(
            '<li data-filter = "'+rowFilter+'" class="ui-widget-content">'+attribute.html()+' '+operand.html()+' '+value+'</li>');
    }

    function delFilterRow() {
        $( ".ui-selected").remove();
        //$( ".ui-selected").each(function() {
        //    $(this).remove();
        //    //var index = $( "#selectable li" ).index(this);
        //    //alert(index+1);
        //    //$("#selectable li").remove(this);
        //});
    }

    function selectRow(elem) {
        templateId = elem.id;
        $('#btnPrint').addClass('hover');
    }
    
    function refreshTableContracts() {
        templateId = null;
        $('#btnPrint').removeClass('hover');
    }
    
    function tableParam(type, pageNum) {
        var param = {
            defaultFilter: @Html.Raw(Json.Encode(@ViewBag.Filter)),
            userFilter: userFilter
        };
        return param;
    }
    
    function getFilterString(attribute, operand, value) {
        
        var filter = "";
        switch (operand) {
            case "=" :  
            case "<=" :  
            case ">=" :  
            case "<>" : 
                filter = attribute + operand + "'" + value + "'"; 
                break;
            case "like" : 
            case "not like" : 
                filter = attribute + " " + operand + " " + "'%" + value + "%'"; 
                break;
            case "in" :
            case "not in" : 
                var arrValues = value.split(",");
                var strValues = "";
                for (var i=0; i<arrValues.length; i++) {
                    strValues += "'" + arrValues[i] + "'" + ",";
                }
                //обрезать последнюю запятую
                strValues = strValues.slice(0, -1);
                filter = attribute + " " + operand + "(" + strValues + ")";
                break;
        }
        return filter;
    }
    
</script>