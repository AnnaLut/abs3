@*Частичное представление добавляет на страницу объект mfoFilter, в котором можно подписаться на событие изменения перечня выбранных МФО*@
@model List<BarsWeb.Areas.Cash.ViewModels.Mfo>

<div id="div_mfoFilter">
    @(Html.Kendo().TreeView()
    .Name("treeview_mfoFilter")
        .Checkboxes(checkboxes => checkboxes
                .CheckChildren(true)
            )
            .Events(events => events
                            .Check("treeview_mfoFilter_onCheck")
                )
.Items(root => root.Add().Text("Фільтр на МФО").Id("filterRoot")
    .Expanded(true)
    .Items(items =>
    {
        foreach (var mfo in Model)
        {
            items.Add().Text(mfo.Code + " - " + mfo.Name).Id("filter" + mfo.Code);
        }
    }))
    )
</div>

<script type="text/javascript">
    function treeview_mfoFilter_onCheck(e) {
        var checkBox = $('#treeview_mfoFilter').data('kendoTreeView').dataItem(e.node);
        // если id = filterRoot - корень
        // если id = filter000000, то 000000 - это фильтр на MФО
        var checkId = checkBox.id;

        var keyWord = checkId.substr(0, 6);
        var mfoId = checkId.substr(6);
        if (keyWord == "filter") {
            // получить объект, который управляет фильтрацией
            var filterObj = window.mfoFilter;

            // если кликнули по корню
            if (mfoId == "Root") {
                // сделаем в модели все такими же как корень
                var children = checkBox.children.options.data.items;
                $.each(children, function (index, value) {
                    var childMfoId = value.id.substr(6);
                    filterObj.checkItem(childMfoId, checkBox.checked);
                });
            }
            else {
                filterObj.checkItem(mfoId, checkBox.checked);
            }
            filterObj.notifyObservers();
        }
    }

    (function createMfoFilter() {
        window.mfoFilter = {
            // Зарегистрировать callback-функцию для уведомления о изменении фильтра
            // функцию должна иметь сигнатуру f(filterList)
            //  - filterList - ассоциативный массив отмеченных МФО (код - true/false)
            registerObserver: function (onChange) {
                this._onChange = onChange;
            },

            // callback-функция для уведомления о изменении фильтра
            _onChange: undefined,

            // ассоциативный массив отмеченных МФО (код - true/false)
            _filterList: {},

            notifyObservers: function () {
                if (typeof this._onChange != "undefined") {
                    this._onChange(this._filterList);
                }
            },

            checkItem: function (mfoId, checked) {
                this._filterList[mfoId] = checked;
            }
        };
    })();
</script>
