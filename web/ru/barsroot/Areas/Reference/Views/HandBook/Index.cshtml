@{
    ViewBag.Title = "";
}
@model BarsWeb.Areas.Reference.Models.HandBookRequest
<script src="@Url.Content("~/Areas/Reference/Scripts/HandBook/Index.js")"></script>
<script src="~/Scripts/kendo/kendo.aspnetmvc.min.js"></script>

<div data-ng-app="Reference">
    <div data-ng-controller="HandBookCtrl">
        <div id="handBookGrid" class="slim-row"></div>
    </div>
</div>
<script>
    function changeCheckRow(elem) {
        var $this = $(elem);
        var $thisTable = $('#handBookGrid');
        if (!$thisTable.data('selected-row')) {
            $thisTable.data('selected-row',[]);
        }
        var num = -1;
        for (var i=0; i < $thisTable.data('selected-row').length; i++) {
            if ($thisTable.data('selected-row')[i].PrimaryKeyColumn == $this.val()) {
                num = i;
            }
        }

        if ($this.is(':checked')) {
            if (num == -1) {
                var gridData = $('#handBookGrid').data('kendoGrid');
                var tr = $this.parentsUntil('tr').parent();
                $thisTable.data('selected-row').push(gridData.dataItem(tr));
            }
        } else {
            if (num != -1) {
                $thisTable.data('selected-row').splice(num, 1);
            }
        }
    }
    $(function() {
        var appName = '/barsroot';
        var handBookModel = @Html.Raw(Json.Encode(Model)) ;
        var grid = $("#handBookGrid");
        var url = '/reference/handbookmetadata/getstructure/?id=' + handBookModel.Id;


        if (handBookModel.Columns) {
            if (typeof handBookModel.Columns === "string")
                handBookModel.Columns = handBookModel.Columns.split(',');
            for (var i= 0;i<handBookModel.Columns.length; i++) {
                url = url + '&columns=' + handBookModel.Columns[i] ;            
            }
        }


        $.get(appName + url,function(request) {
            grid.parent().parent().parent().parent().find('.k-window-title').html('Довідник: ' + request.Semantic);

            handBookGridOptions.dataSource.schema.model.fields = request.Fields;
            handBookGridOptions.columns = request.Columns;
            if (handBookModel.MultiSelect == true) {
                handBookGridOptions.columns.splice(0, 0, {
                    field: "checkRow",
                    title: "<input name=checkRow class=checkRow id=handBookSelectAll type=checkbox />",
                    width: '30px',
                    template: "<input name='checkRow' onchange='changeCheckRow(this)' class='checkRow' type='checkbox' value='#= PrimaryKeyColumn #' />",
                    filterable: false,
                    sortable:false
                });
            }

            grid.kendoGrid(handBookGridOptions);

            if (handBookModel.MultiSelect == true) {
                grid.find('#handBookSelectAll').on('change',function() {
                    var checkedRows = grid.find('input[type="checkbox"][name="checkRow"]');
                    var $this = $(this);
                    if ($this.is(':checked')) {
                        checkedRows.prop( "checked", true );
                    } else {
                        checkedRows.prop( "checked", false );
                    }
                    for (var i = 0; i < checkedRows.length; i++) {
                        changeCheckRow(checkedRows[i]);
                    }
                });
            }
        });

        var handBookGridOptions = {
            dataSource: {
                //type: 'aspnetmvc-ajax',
                type: 'webapi',
                transport: {
                    read: bars.config.urlContent('/api/reference/handbook/') + handBookModel.Id + '?clause=' + handBookModel.Clause
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors",
                    model: {
                        /*fields: {
                            checkRow: {type:'bool'},
                            Id: { type: "string" },
                            Name: { type: "string" }
                        }*/
                    }
                },
                pageSize: 15,
                "page": 1,
                "total": 0,
                "serverPaging": true,
                "serverSorting": true,
                "serverFiltering": true,
                "serverGrouping": true,
                "serverAggregates": true
            },
            height: 450,
            selectable: "multiple",
            //change: onArchiversGridRowSelect,
            groupable: false,
            sortable: true,
            resizable:true,
            filterable: true,
            scrollable: true,
            pageable: {
                previousNext: false,
                info: false,
                refresh: true,
                pageSizes: [15, 25, 50, 100],
                buttonCount: 1,
                messages: {
                    itemsPerPage:''
                }
            },
            dataBound: function (e) {
                if (e.sender.dataSource.total() == 0) {
                    var colCount = e.sender.columns.length;
                    $(e.sender.wrapper)
                        .find('tbody')
                        .append('<tr class="kendo-data-row"><td colspan="' + colCount + '" class="no-data">'+e.sender.pager.options.messages.empty+' :(</td></tr>');
                }
                if (handBookModel.MultiSelect == true) {
                    grid.find('#handBookSelectAll').prop("checked", false);
                
                    var selector = '';
                    var tableArray = $('#handBookGrid').data('selected-row');
                    if (!tableArray) {
                        tableArray = [];
                    }

                    for (var i = 0; i < tableArray.length; i++) {
                        if (selector != '') selector += ','; 
                        selector += 'input[type="checkbox"][name="checkRow"][value="'+tableArray[i].PrimaryKeyColumn+'"]';
                    }
                    grid.find(selector).prop("checked", true);
                }
            }//,
            //columns:columns
        }

    });
</script>