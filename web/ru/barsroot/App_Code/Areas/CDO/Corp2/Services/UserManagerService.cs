//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 
namespace BarsWeb.Areas.CDO.Corp2.Services {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserManagerServiceSoap", Namespace="http://unity-bars.com.ua/ws")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class UserManagerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserByTaxCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrUpdateUserWithConnectionSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrUpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback BlockUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnBlockUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsBlockedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserACSKKeySnOperationCompleted;
        
        /// <remarks/>
        public UserManagerService() {
            this.Url = "http://localhost:7777/ibank/service/UserManagerService.asmx";
        }
        
        /// <remarks/>
        public event GetUserByTaxCodeCompletedEventHandler GetUserByTaxCodeCompleted;
        
        /// <remarks/>
        public event AddOrUpdateUserWithConnectionSettingsCompletedEventHandler AddOrUpdateUserWithConnectionSettingsCompleted;
        
        /// <remarks/>
        public event AddOrUpdateUserCompletedEventHandler AddOrUpdateUserCompleted;
        
        /// <remarks/>
        public event BlockUserCompletedEventHandler BlockUserCompleted;
        
        /// <remarks/>
        public event UnBlockUserCompletedEventHandler UnBlockUserCompleted;
        
        /// <remarks/>
        public event IsBlockedCompletedEventHandler IsBlockedCompleted;
        
        /// <remarks/>
        public event SetUserACSKKeySnCompletedEventHandler SetUserACSKKeySnCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unity-bars.com.ua/ws/GetUserByTaxCode", RequestNamespace="http://unity-bars.com.ua/ws", ResponseNamespace="http://unity-bars.com.ua/ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetUserByTaxCode(string taxCode, string passportSeries, string passportNumber) {
            object[] results = this.Invoke("GetUserByTaxCode", new object[] {
                        taxCode,
                        passportSeries,
                        passportNumber});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserByTaxCode(string taxCode, string passportSeries, string passportNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserByTaxCode", new object[] {
                        taxCode,
                        passportSeries,
                        passportNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public User EndGetUserByTaxCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByTaxCodeAsync(string taxCode, string passportSeries, string passportNumber) {
            this.GetUserByTaxCodeAsync(taxCode, passportSeries, passportNumber, null);
        }
        
        /// <remarks/>
        public void GetUserByTaxCodeAsync(string taxCode, string passportSeries, string passportNumber, object userState) {
            if ((this.GetUserByTaxCodeOperationCompleted == null)) {
                this.GetUserByTaxCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByTaxCodeOperationCompleted);
            }
            this.InvokeAsync("GetUserByTaxCode", new object[] {
                        taxCode,
                        passportSeries,
                        passportNumber}, this.GetUserByTaxCodeOperationCompleted, userState);
        }
        
        private void OnGetUserByTaxCodeOperationCompleted(object arg) {
            if ((this.GetUserByTaxCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByTaxCodeCompleted(this, new GetUserByTaxCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unity-bars.com.ua/ws/AddOrUpdateUserWithConnectionSettings", RequestNamespace="http://unity-bars.com.ua/ws", ResponseNamespace="http://unity-bars.com.ua/ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] AddOrUpdateUserWithConnectionSettings(string secretKey, User user, string bankId, string[] moduleIds, decimal[] funcIds, Limit limit, Account[] accs, bool isBlock) {
            object[] results = this.Invoke("AddOrUpdateUserWithConnectionSettings", new object[] {
                        secretKey,
                        user,
                        bankId,
                        moduleIds,
                        funcIds,
                        limit,
                        accs,
                        isBlock});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddOrUpdateUserWithConnectionSettings(string secretKey, User user, string bankId, string[] moduleIds, decimal[] funcIds, Limit limit, Account[] accs, bool isBlock, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddOrUpdateUserWithConnectionSettings", new object[] {
                        secretKey,
                        user,
                        bankId,
                        moduleIds,
                        funcIds,
                        limit,
                        accs,
                        isBlock}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndAddOrUpdateUserWithConnectionSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void AddOrUpdateUserWithConnectionSettingsAsync(string secretKey, User user, string bankId, string[] moduleIds, decimal[] funcIds, Limit limit, Account[] accs, bool isBlock) {
            this.AddOrUpdateUserWithConnectionSettingsAsync(secretKey, user, bankId, moduleIds, funcIds, limit, accs, isBlock, null);
        }
        
        /// <remarks/>
        public void AddOrUpdateUserWithConnectionSettingsAsync(string secretKey, User user, string bankId, string[] moduleIds, decimal[] funcIds, Limit limit, Account[] accs, bool isBlock, object userState) {
            if ((this.AddOrUpdateUserWithConnectionSettingsOperationCompleted == null)) {
                this.AddOrUpdateUserWithConnectionSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrUpdateUserWithConnectionSettingsOperationCompleted);
            }
            this.InvokeAsync("AddOrUpdateUserWithConnectionSettings", new object[] {
                        secretKey,
                        user,
                        bankId,
                        moduleIds,
                        funcIds,
                        limit,
                        accs,
                        isBlock}, this.AddOrUpdateUserWithConnectionSettingsOperationCompleted, userState);
        }
        
        private void OnAddOrUpdateUserWithConnectionSettingsOperationCompleted(object arg) {
            if ((this.AddOrUpdateUserWithConnectionSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrUpdateUserWithConnectionSettingsCompleted(this, new AddOrUpdateUserWithConnectionSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unity-bars.com.ua/ws/AddOrUpdateUser", RequestNamespace="http://unity-bars.com.ua/ws", ResponseNamespace="http://unity-bars.com.ua/ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] AddOrUpdateUser(string secretKey, User user) {
            object[] results = this.Invoke("AddOrUpdateUser", new object[] {
                        secretKey,
                        user});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddOrUpdateUser(string secretKey, User user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddOrUpdateUser", new object[] {
                        secretKey,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndAddOrUpdateUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void AddOrUpdateUserAsync(string secretKey, User user) {
            this.AddOrUpdateUserAsync(secretKey, user, null);
        }
        
        /// <remarks/>
        public void AddOrUpdateUserAsync(string secretKey, User user, object userState) {
            if ((this.AddOrUpdateUserOperationCompleted == null)) {
                this.AddOrUpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrUpdateUserOperationCompleted);
            }
            this.InvokeAsync("AddOrUpdateUser", new object[] {
                        secretKey,
                        user}, this.AddOrUpdateUserOperationCompleted, userState);
        }
        
        private void OnAddOrUpdateUserOperationCompleted(object arg) {
            if ((this.AddOrUpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrUpdateUserCompleted(this, new AddOrUpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unity-bars.com.ua/ws/BlockUser", RequestNamespace="http://unity-bars.com.ua/ws", ResponseNamespace="http://unity-bars.com.ua/ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BlockUser(string secretKey, decimal userId) {
            this.Invoke("BlockUser", new object[] {
                        secretKey,
                        userId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBlockUser(string secretKey, decimal userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BlockUser", new object[] {
                        secretKey,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBlockUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void BlockUserAsync(string secretKey, decimal userId) {
            this.BlockUserAsync(secretKey, userId, null);
        }
        
        /// <remarks/>
        public void BlockUserAsync(string secretKey, decimal userId, object userState) {
            if ((this.BlockUserOperationCompleted == null)) {
                this.BlockUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBlockUserOperationCompleted);
            }
            this.InvokeAsync("BlockUser", new object[] {
                        secretKey,
                        userId}, this.BlockUserOperationCompleted, userState);
        }
        
        private void OnBlockUserOperationCompleted(object arg) {
            if ((this.BlockUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BlockUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unity-bars.com.ua/ws/UnBlockUser", RequestNamespace="http://unity-bars.com.ua/ws", ResponseNamespace="http://unity-bars.com.ua/ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnBlockUser(string secretKey, decimal userId) {
            this.Invoke("UnBlockUser", new object[] {
                        secretKey,
                        userId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnBlockUser(string secretKey, decimal userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnBlockUser", new object[] {
                        secretKey,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUnBlockUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UnBlockUserAsync(string secretKey, decimal userId) {
            this.UnBlockUserAsync(secretKey, userId, null);
        }
        
        /// <remarks/>
        public void UnBlockUserAsync(string secretKey, decimal userId, object userState) {
            if ((this.UnBlockUserOperationCompleted == null)) {
                this.UnBlockUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnBlockUserOperationCompleted);
            }
            this.InvokeAsync("UnBlockUser", new object[] {
                        secretKey,
                        userId}, this.UnBlockUserOperationCompleted, userState);
        }
        
        private void OnUnBlockUserOperationCompleted(object arg) {
            if ((this.UnBlockUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnBlockUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unity-bars.com.ua/ws/IsBlocked", RequestNamespace="http://unity-bars.com.ua/ws", ResponseNamespace="http://unity-bars.com.ua/ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsBlocked(decimal userId) {
            object[] results = this.Invoke("IsBlocked", new object[] {
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsBlocked(decimal userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsBlocked", new object[] {
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsBlocked(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsBlockedAsync(decimal userId) {
            this.IsBlockedAsync(userId, null);
        }
        
        /// <remarks/>
        public void IsBlockedAsync(decimal userId, object userState) {
            if ((this.IsBlockedOperationCompleted == null)) {
                this.IsBlockedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsBlockedOperationCompleted);
            }
            this.InvokeAsync("IsBlocked", new object[] {
                        userId}, this.IsBlockedOperationCompleted, userState);
        }
        
        private void OnIsBlockedOperationCompleted(object arg) {
            if ((this.IsBlockedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsBlockedCompleted(this, new IsBlockedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://unity-bars.com.ua/ws/SetUserACSKKeySn", RequestNamespace="http://unity-bars.com.ua/ws", ResponseNamespace="http://unity-bars.com.ua/ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetUserACSKKeySn(string secretKey, decimal userId, string key) {
            this.Invoke("SetUserACSKKeySn", new object[] {
                        secretKey,
                        userId,
                        key});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetUserACSKKeySn(string secretKey, decimal userId, string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetUserACSKKeySn", new object[] {
                        secretKey,
                        userId,
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetUserACSKKeySn(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetUserACSKKeySnAsync(string secretKey, decimal userId, string key) {
            this.SetUserACSKKeySnAsync(secretKey, userId, key, null);
        }
        
        /// <remarks/>
        public void SetUserACSKKeySnAsync(string secretKey, decimal userId, string key, object userState) {
            if ((this.SetUserACSKKeySnOperationCompleted == null)) {
                this.SetUserACSKKeySnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserACSKKeySnOperationCompleted);
            }
            this.InvokeAsync("SetUserACSKKeySn", new object[] {
                        secretKey,
                        userId,
                        key}, this.SetUserACSKKeySnOperationCompleted, userState);
        }
        
        private void OnSetUserACSKKeySnOperationCompleted(object arg) {
            if ((this.SetUserACSKKeySnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserACSKKeySnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://unity-bars.com.ua/ws")]
    public partial class User {
        
        private System.Nullable<decimal> idField;
        
        private System.Nullable<decimal> customerIdField;
        
        private int visaIdField;
        
        private string sequentialVisaField;
        
        private string loginField;
        
        private string emailField;
        
        private string phoneNumberField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string secondNameField;
        
        private string fullNameGenitiveCaseField;
        
        private string acskSertificateKeySnField;
        
        private string taxCodeField;
        
        private System.Nullable<System.DateTime> birthDateField;
        
        private string docSeriesField;
        
        private string docNumberField;
        
        private System.Nullable<System.DateTime> docDateField;
        
        private string docOrganizationField;
        
        private string addressRegionIdField;
        
        private string addressCityField;
        
        private string addressStreetField;
        
        private string addressHouseNumberField;
        
        private string addressAdditionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public int VisaId {
            get {
                return this.visaIdField;
            }
            set {
                this.visaIdField = value;
            }
        }
        
        /// <remarks/>
        public string SequentialVisa {
            get {
                return this.sequentialVisaField;
            }
            set {
                this.sequentialVisaField = value;
            }
        }
        
        /// <remarks/>
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string SecondName {
            get {
                return this.secondNameField;
            }
            set {
                this.secondNameField = value;
            }
        }
        
        /// <remarks/>
        public string FullNameGenitiveCase {
            get {
                return this.fullNameGenitiveCaseField;
            }
            set {
                this.fullNameGenitiveCaseField = value;
            }
        }
        
        /// <remarks/>
        public string AcskSertificateKeySn {
            get {
                return this.acskSertificateKeySnField;
            }
            set {
                this.acskSertificateKeySnField = value;
            }
        }
        
        /// <remarks/>
        public string TaxCode {
            get {
                return this.taxCodeField;
            }
            set {
                this.taxCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        public string DocSeries {
            get {
                return this.docSeriesField;
            }
            set {
                this.docSeriesField = value;
            }
        }
        
        /// <remarks/>
        public string DocNumber {
            get {
                return this.docNumberField;
            }
            set {
                this.docNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DocDate {
            get {
                return this.docDateField;
            }
            set {
                this.docDateField = value;
            }
        }
        
        /// <remarks/>
        public string DocOrganization {
            get {
                return this.docOrganizationField;
            }
            set {
                this.docOrganizationField = value;
            }
        }
        
        /// <remarks/>
        public string AddressRegionId {
            get {
                return this.addressRegionIdField;
            }
            set {
                this.addressRegionIdField = value;
            }
        }
        
        /// <remarks/>
        public string AddressCity {
            get {
                return this.addressCityField;
            }
            set {
                this.addressCityField = value;
            }
        }
        
        /// <remarks/>
        public string AddressStreet {
            get {
                return this.addressStreetField;
            }
            set {
                this.addressStreetField = value;
            }
        }
        
        /// <remarks/>
        public string AddressHouseNumber {
            get {
                return this.addressHouseNumberField;
            }
            set {
                this.addressHouseNumberField = value;
            }
        }
        
        /// <remarks/>
        public string AddressAddition {
            get {
                return this.addressAdditionField;
            }
            set {
                this.addressAdditionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://unity-bars.com.ua/ws")]
    public partial class Account {
        
        private System.Nullable<decimal> aCCIDField;
        
        private string cANVIEWField;
        
        private string cANDEBITField;
        
        private string cANVISAField;
        
        private System.Nullable<int> vISAIDField;
        
        private string aCTIVEField;
        
        private string sEQUENTIALVISAField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ACCID {
            get {
                return this.aCCIDField;
            }
            set {
                this.aCCIDField = value;
            }
        }
        
        /// <remarks/>
        public string CANVIEW {
            get {
                return this.cANVIEWField;
            }
            set {
                this.cANVIEWField = value;
            }
        }
        
        /// <remarks/>
        public string CANDEBIT {
            get {
                return this.cANDEBITField;
            }
            set {
                this.cANDEBITField = value;
            }
        }
        
        /// <remarks/>
        public string CANVISA {
            get {
                return this.cANVISAField;
            }
            set {
                this.cANVISAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> VISAID {
            get {
                return this.vISAIDField;
            }
            set {
                this.vISAIDField = value;
            }
        }
        
        /// <remarks/>
        public string ACTIVE {
            get {
                return this.aCTIVEField;
            }
            set {
                this.aCTIVEField = value;
            }
        }
        
        /// <remarks/>
        public string SEQUENTIALVISA {
            get {
                return this.sEQUENTIALVISAField;
            }
            set {
                this.sEQUENTIALVISAField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://unity-bars.com.ua/ws")]
    public partial class Limit {
        
        private System.Nullable<decimal> uSER_IDField;
        
        private decimal lOGIN_TYPEField;
        
        private System.Nullable<decimal> dOC_SUMField;
        
        private System.Nullable<decimal> dOC_CREATED_COUNTField;
        
        private System.Nullable<decimal> dOC_SENT_COUNTField;
        
        private string lIMIT_IDField;
        
        private System.Nullable<System.DateTime> dOC_DATE_LIMField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> USER_ID {
            get {
                return this.uSER_IDField;
            }
            set {
                this.uSER_IDField = value;
            }
        }
        
        /// <remarks/>
        public decimal LOGIN_TYPE {
            get {
                return this.lOGIN_TYPEField;
            }
            set {
                this.lOGIN_TYPEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> DOC_SUM {
            get {
                return this.dOC_SUMField;
            }
            set {
                this.dOC_SUMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> DOC_CREATED_COUNT {
            get {
                return this.dOC_CREATED_COUNTField;
            }
            set {
                this.dOC_CREATED_COUNTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> DOC_SENT_COUNT {
            get {
                return this.dOC_SENT_COUNTField;
            }
            set {
                this.dOC_SENT_COUNTField = value;
            }
        }
        
        /// <remarks/>
        public string LIMIT_ID {
            get {
                return this.lIMIT_IDField;
            }
            set {
                this.lIMIT_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DOC_DATE_LIM {
            get {
                return this.dOC_DATE_LIMField;
            }
            set {
                this.dOC_DATE_LIMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GetUserByTaxCodeCompletedEventHandler(object sender, GetUserByTaxCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByTaxCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByTaxCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void AddOrUpdateUserWithConnectionSettingsCompletedEventHandler(object sender, AddOrUpdateUserWithConnectionSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrUpdateUserWithConnectionSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrUpdateUserWithConnectionSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void AddOrUpdateUserCompletedEventHandler(object sender, AddOrUpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrUpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrUpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void BlockUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void UnBlockUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void IsBlockedCompletedEventHandler(object sender, IsBlockedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsBlockedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsBlockedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void SetUserACSKKeySnCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
