//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.33440.
// 
namespace LcsServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LcsServiceSoap", Namespace="http://tempuri.org/")]
    public partial class LcsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetEquivalentOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private WsHeader wsHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetLimitStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransfersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmTransfersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserParamsOperationCompleted;
        
        /// <remarks/>
        public LcsService() {
            this.Url = "http://localhost/barsroot/webservices/LCSService.asmx";
        }
        
        public WsHeader WsHeaderValue {
            get {
                return this.wsHeaderValueField;
            }
            set {
                this.wsHeaderValueField = value;
            }
        }
        
        /// <remarks/>
        public event GetEquivalentCompletedEventHandler GetEquivalentCompleted;
        
        /// <remarks/>
        public event BackCompletedEventHandler BackCompleted;
        
        /// <remarks/>
        public event ApproveCompletedEventHandler ApproveCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event GetLimitStatusCompletedEventHandler GetLimitStatusCompleted;
        
        /// <remarks/>
        public event GetTransfersCompletedEventHandler GetTransfersCompleted;
        
        /// <remarks/>
        public event ConfirmTransfersCompletedEventHandler ConfirmTransfersCompleted;
        
        /// <remarks/>
        public event GetUserParamsCompletedEventHandler GetUserParamsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEquivalent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEquivalent(
                    string dateOperation, 
                    string sourceType, 
                    string transactionId, 
                    string mfo, 
                    string branch, 
                    string transactionDate, 
                    string transactionBankdate, 
                    string transactionCode, 
                    decimal documentSum, 
                    decimal documentSumEquivalent, 
                    decimal currencyCode, 
                    decimal exchangeRateOfficial, 
                    decimal exchangeRateSale, 
                    decimal documentTypeId, 
                    string documentSerial, 
                    string documentNumber, 
                    string userSurname, 
                    string birthDate, 
                    decimal residentFlag, 
                    decimal cashAccFlag, 
                    decimal approveDocumentFlag, 
                    decimal exceptionFlag, 
                    string exceptionDescription, 
                    string staffLogname, 
                    string staffName) {
            object[] results = this.Invoke("GetEquivalent", new object[] {
                        dateOperation,
                        sourceType,
                        transactionId,
                        mfo,
                        branch,
                        transactionDate,
                        transactionBankdate,
                        transactionCode,
                        documentSum,
                        documentSumEquivalent,
                        currencyCode,
                        exchangeRateOfficial,
                        exchangeRateSale,
                        documentTypeId,
                        documentSerial,
                        documentNumber,
                        userSurname,
                        birthDate,
                        residentFlag,
                        cashAccFlag,
                        approveDocumentFlag,
                        exceptionFlag,
                        exceptionDescription,
                        staffLogname,
                        staffName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEquivalent(
                    string dateOperation, 
                    string sourceType, 
                    string transactionId, 
                    string mfo, 
                    string branch, 
                    string transactionDate, 
                    string transactionBankdate, 
                    string transactionCode, 
                    decimal documentSum, 
                    decimal documentSumEquivalent, 
                    decimal currencyCode, 
                    decimal exchangeRateOfficial, 
                    decimal exchangeRateSale, 
                    decimal documentTypeId, 
                    string documentSerial, 
                    string documentNumber, 
                    string userSurname, 
                    string birthDate, 
                    decimal residentFlag, 
                    decimal cashAccFlag, 
                    decimal approveDocumentFlag, 
                    decimal exceptionFlag, 
                    string exceptionDescription, 
                    string staffLogname, 
                    string staffName, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("GetEquivalent", new object[] {
                        dateOperation,
                        sourceType,
                        transactionId,
                        mfo,
                        branch,
                        transactionDate,
                        transactionBankdate,
                        transactionCode,
                        documentSum,
                        documentSumEquivalent,
                        currencyCode,
                        exchangeRateOfficial,
                        exchangeRateSale,
                        documentTypeId,
                        documentSerial,
                        documentNumber,
                        userSurname,
                        birthDate,
                        residentFlag,
                        cashAccFlag,
                        approveDocumentFlag,
                        exceptionFlag,
                        exceptionDescription,
                        staffLogname,
                        staffName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetEquivalent(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEquivalentAsync(
                    string dateOperation, 
                    string sourceType, 
                    string transactionId, 
                    string mfo, 
                    string branch, 
                    string transactionDate, 
                    string transactionBankdate, 
                    string transactionCode, 
                    decimal documentSum, 
                    decimal documentSumEquivalent, 
                    decimal currencyCode, 
                    decimal exchangeRateOfficial, 
                    decimal exchangeRateSale, 
                    decimal documentTypeId, 
                    string documentSerial, 
                    string documentNumber, 
                    string userSurname, 
                    string birthDate, 
                    decimal residentFlag, 
                    decimal cashAccFlag, 
                    decimal approveDocumentFlag, 
                    decimal exceptionFlag, 
                    string exceptionDescription, 
                    string staffLogname, 
                    string staffName) {
            this.GetEquivalentAsync(dateOperation, sourceType, transactionId, mfo, branch, transactionDate, transactionBankdate, transactionCode, documentSum, documentSumEquivalent, currencyCode, exchangeRateOfficial, exchangeRateSale, documentTypeId, documentSerial, documentNumber, userSurname, birthDate, residentFlag, cashAccFlag, approveDocumentFlag, exceptionFlag, exceptionDescription, staffLogname, staffName, null);
        }
        
        /// <remarks/>
        public void GetEquivalentAsync(
                    string dateOperation, 
                    string sourceType, 
                    string transactionId, 
                    string mfo, 
                    string branch, 
                    string transactionDate, 
                    string transactionBankdate, 
                    string transactionCode, 
                    decimal documentSum, 
                    decimal documentSumEquivalent, 
                    decimal currencyCode, 
                    decimal exchangeRateOfficial, 
                    decimal exchangeRateSale, 
                    decimal documentTypeId, 
                    string documentSerial, 
                    string documentNumber, 
                    string userSurname, 
                    string birthDate, 
                    decimal residentFlag, 
                    decimal cashAccFlag, 
                    decimal approveDocumentFlag, 
                    decimal exceptionFlag, 
                    string exceptionDescription, 
                    string staffLogname, 
                    string staffName, 
                    object userState) {
            if ((this.GetEquivalentOperationCompleted == null)) {
                this.GetEquivalentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEquivalentOperationCompleted);
            }
            this.InvokeAsync("GetEquivalent", new object[] {
                        dateOperation,
                        sourceType,
                        transactionId,
                        mfo,
                        branch,
                        transactionDate,
                        transactionBankdate,
                        transactionCode,
                        documentSum,
                        documentSumEquivalent,
                        currencyCode,
                        exchangeRateOfficial,
                        exchangeRateSale,
                        documentTypeId,
                        documentSerial,
                        documentNumber,
                        userSurname,
                        birthDate,
                        residentFlag,
                        cashAccFlag,
                        approveDocumentFlag,
                        exceptionFlag,
                        exceptionDescription,
                        staffLogname,
                        staffName}, this.GetEquivalentOperationCompleted, userState);
        }
        
        private void OnGetEquivalentOperationCompleted(object arg) {
            if ((this.GetEquivalentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEquivalentCompleted(this, new GetEquivalentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Back", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Back(string transactionId, string mfo, string sourceType) {
            this.Invoke("Back", new object[] {
                        transactionId,
                        mfo,
                        sourceType});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBack(string transactionId, string mfo, string sourceType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Back", new object[] {
                        transactionId,
                        mfo,
                        sourceType}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBack(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void BackAsync(string transactionId, string mfo, string sourceType) {
            this.BackAsync(transactionId, mfo, sourceType, null);
        }
        
        /// <remarks/>
        public void BackAsync(string transactionId, string mfo, string sourceType, object userState) {
            if ((this.BackOperationCompleted == null)) {
                this.BackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackOperationCompleted);
            }
            this.InvokeAsync("Back", new object[] {
                        transactionId,
                        mfo,
                        sourceType}, this.BackOperationCompleted, userState);
        }
        
        private void OnBackOperationCompleted(object arg) {
            if ((this.BackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Approve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Approve(string transactionId, string mfo, string sourceType) {
            this.Invoke("Approve", new object[] {
                        transactionId,
                        mfo,
                        sourceType});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApprove(string transactionId, string mfo, string sourceType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Approve", new object[] {
                        transactionId,
                        mfo,
                        sourceType}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndApprove(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ApproveAsync(string transactionId, string mfo, string sourceType) {
            this.ApproveAsync(transactionId, mfo, sourceType, null);
        }
        
        /// <remarks/>
        public void ApproveAsync(string transactionId, string mfo, string sourceType, object userState) {
            if ((this.ApproveOperationCompleted == null)) {
                this.ApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveOperationCompleted);
            }
            this.InvokeAsync("Approve", new object[] {
                        transactionId,
                        mfo,
                        sourceType}, this.ApproveOperationCompleted, userState);
        }
        
        private void OnApproveOperationCompleted(object arg) {
            if ((this.ApproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Search", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetUserInfo Search(string documentSerial, string documentNumber) {
            object[] results = this.Invoke("Search", new object[] {
                        documentSerial,
                        documentNumber});
            return ((GetUserInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearch(string documentSerial, string documentNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Search", new object[] {
                        documentSerial,
                        documentNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public GetUserInfo EndSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetUserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(string documentSerial, string documentNumber) {
            this.SearchAsync(documentSerial, documentNumber, null);
        }
        
        /// <remarks/>
        public void SearchAsync(string documentSerial, string documentNumber, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        documentSerial,
                        documentNumber}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WsHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLimitStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LimitStatus GetLimitStatus(LimitSearchInfo searchInfo) {
            object[] results = this.Invoke("GetLimitStatus", new object[] {
                        searchInfo});
            return ((LimitStatus)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLimitStatus(LimitSearchInfo searchInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLimitStatus", new object[] {
                        searchInfo}, callback, asyncState);
        }
        
        /// <remarks/>
        public LimitStatus EndGetLimitStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LimitStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetLimitStatusAsync(LimitSearchInfo searchInfo) {
            this.GetLimitStatusAsync(searchInfo, null);
        }
        
        /// <remarks/>
        public void GetLimitStatusAsync(LimitSearchInfo searchInfo, object userState) {
            if ((this.GetLimitStatusOperationCompleted == null)) {
                this.GetLimitStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLimitStatusOperationCompleted);
            }
            this.InvokeAsync("GetLimitStatus", new object[] {
                        searchInfo}, this.GetLimitStatusOperationCompleted, userState);
        }
        
        private void OnGetLimitStatusOperationCompleted(object arg) {
            if ((this.GetLimitStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLimitStatusCompleted(this, new GetLimitStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WsHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransfers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Transfer[] GetTransfers(TransferSearchInfo searchInfo) {
            object[] results = this.Invoke("GetTransfers", new object[] {
                        searchInfo});
            return ((Transfer[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransfers(TransferSearchInfo searchInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransfers", new object[] {
                        searchInfo}, callback, asyncState);
        }
        
        /// <remarks/>
        public Transfer[] EndGetTransfers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Transfer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTransfersAsync(TransferSearchInfo searchInfo) {
            this.GetTransfersAsync(searchInfo, null);
        }
        
        /// <remarks/>
        public void GetTransfersAsync(TransferSearchInfo searchInfo, object userState) {
            if ((this.GetTransfersOperationCompleted == null)) {
                this.GetTransfersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransfersOperationCompleted);
            }
            this.InvokeAsync("GetTransfers", new object[] {
                        searchInfo}, this.GetTransfersOperationCompleted, userState);
        }
        
        private void OnGetTransfersOperationCompleted(object arg) {
            if ((this.GetTransfersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransfersCompleted(this, new GetTransfersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WsHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmTransfers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConformationResponse ConfirmTransfers(TransferSearchInfo searchInfo, string[] transfers, string currentUser) {
            object[] results = this.Invoke("ConfirmTransfers", new object[] {
                        searchInfo,
                        transfers,
                        currentUser});
            return ((ConformationResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginConfirmTransfers(TransferSearchInfo searchInfo, string[] transfers, string currentUser, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConfirmTransfers", new object[] {
                        searchInfo,
                        transfers,
                        currentUser}, callback, asyncState);
        }
        
        /// <remarks/>
        public ConformationResponse EndConfirmTransfers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ConformationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmTransfersAsync(TransferSearchInfo searchInfo, string[] transfers, string currentUser) {
            this.ConfirmTransfersAsync(searchInfo, transfers, currentUser, null);
        }
        
        /// <remarks/>
        public void ConfirmTransfersAsync(TransferSearchInfo searchInfo, string[] transfers, string currentUser, object userState) {
            if ((this.ConfirmTransfersOperationCompleted == null)) {
                this.ConfirmTransfersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmTransfersOperationCompleted);
            }
            this.InvokeAsync("ConfirmTransfers", new object[] {
                        searchInfo,
                        transfers,
                        currentUser}, this.ConfirmTransfersOperationCompleted, userState);
        }
        
        private void OnConfirmTransfersOperationCompleted(object arg) {
            if ((this.ConfirmTransfersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmTransfersCompleted(this, new ConfirmTransfersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserParams", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserParams(string params_str, string role) {
            object[] results = this.Invoke("GetUserParams", new object[] {
                        params_str,
                        role});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserParams(string params_str, string role, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserParams", new object[] {
                        params_str,
                        role}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetUserParams(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserParamsAsync(string params_str, string role) {
            this.GetUserParamsAsync(params_str, role, null);
        }
        
        /// <remarks/>
        public void GetUserParamsAsync(string params_str, string role, object userState) {
            if ((this.GetUserParamsOperationCompleted == null)) {
                this.GetUserParamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserParamsOperationCompleted);
            }
            this.InvokeAsync("GetUserParams", new object[] {
                        params_str,
                        role}, this.GetUserParamsOperationCompleted, userState);
        }
        
        private void OnGetUserParamsOperationCompleted(object arg) {
            if ((this.GetUserParamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserParamsCompleted(this, new GetUserParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class WsHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string passwordField;
        
        private string versionField;
        
        private string cultureField;
        
        private string securityTokenField;
        
        private int userIdField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ConformationResponse {
        
        private bool successField;
        
        private string messageField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Transfer {
        
        private string systemField;
        
        private string idField;
        
        private string seriesField;
        
        private string numberField;
        
        private string nameField;
        
        private System.Nullable<System.DateTime> birthDateField;
        
        private System.Nullable<decimal> sumField;
        
        private bool selectedField;
        
        private bool editableField;
        
        /// <remarks/>
        public string System {
            get {
                return this.systemField;
            }
            set {
                this.systemField = value;
            }
        }
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Series {
            get {
                return this.seriesField;
            }
            set {
                this.seriesField = value;
            }
        }
        
        /// <remarks/>
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Sum {
            get {
                return this.sumField;
            }
            set {
                this.sumField = value;
            }
        }
        
        /// <remarks/>
        public bool Selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
        
        /// <remarks/>
        public bool Editable {
            get {
                return this.editableField;
            }
            set {
                this.editableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TransferSearchInfo {
        
        private string seriesField;
        
        private string numberField;
        
        /// <remarks/>
        public string Series {
            get {
                return this.seriesField;
            }
            set {
                this.seriesField = value;
            }
        }
        
        /// <remarks/>
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Transaction {
        
        private System.Nullable<System.DateTime> dateField;
        
        private string branchField;
        
        private string operationField;
        
        private string currencyField;
        
        private System.Nullable<decimal> sumField;
        
        private System.Nullable<decimal> sumEquivalentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Branch {
            get {
                return this.branchField;
            }
            set {
                this.branchField = value;
            }
        }
        
        /// <remarks/>
        public string Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Sum {
            get {
                return this.sumField;
            }
            set {
                this.sumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> SumEquivalent {
            get {
                return this.sumEquivalentField;
            }
            set {
                this.sumEquivalentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TransactionCollection {
        
        private Transaction[] transactionsField;
        
        /// <remarks/>
        public Transaction[] Transactions {
            get {
                return this.transactionsField;
            }
            set {
                this.transactionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Operation {
        
        private string limitField;
        
        private System.Nullable<decimal> sumField;
        
        /// <remarks/>
        public string Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Sum {
            get {
                return this.sumField;
            }
            set {
                this.sumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OperationCollection {
        
        private Operation[] operationsField;
        
        /// <remarks/>
        public Operation[] Operations {
            get {
                return this.operationsField;
            }
            set {
                this.operationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LimitStatus {
        
        private bool successField;
        
        private string errorMessageField;
        
        private OperationCollection operationCollectionField;
        
        private TransactionCollection transactionCollectionField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public OperationCollection OperationCollection {
            get {
                return this.operationCollectionField;
            }
            set {
                this.operationCollectionField = value;
            }
        }
        
        /// <remarks/>
        public TransactionCollection TransactionCollection {
            get {
                return this.transactionCollectionField;
            }
            set {
                this.transactionCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LimitSearchInfo {
        
        private string seriesField;
        
        private string numberField;
        
        /// <remarks/>
        public string Series {
            get {
                return this.seriesField;
            }
            set {
                this.seriesField = value;
            }
        }
        
        /// <remarks/>
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GetUserInfo {
        
        private string[] datasField;
        
        /// <remarks/>
        public string[] Datas {
            get {
                return this.datasField;
            }
            set {
                this.datasField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void GetEquivalentCompletedEventHandler(object sender, GetEquivalentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEquivalentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEquivalentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void BackCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void ApproveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void GetLimitStatusCompletedEventHandler(object sender, GetLimitStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLimitStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLimitStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LimitStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LimitStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void GetTransfersCompletedEventHandler(object sender, GetTransfersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransfersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransfersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Transfer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Transfer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void ConfirmTransfersCompletedEventHandler(object sender, ConfirmTransfersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmTransfersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmTransfersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConformationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConformationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void GetUserParamsCompletedEventHandler(object sender, GetUserParamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
