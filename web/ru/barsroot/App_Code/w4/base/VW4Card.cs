/*
    AUTOGENERATED! Do not modify this code.
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.Collections.Specialized;
using System.Data;
using System.Web.Configuration;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using ibank.core;
using Bars.Classes;

namespace Bars.W4
{
    public sealed class VW4CardRecord : BbRecord
    {
        public VW4CardRecord(): base()
        {
            fillFields();
        }
        public VW4CardRecord(BbDataSource Parent) : base (Parent)
        {
            fillFields();
        }
        public VW4CardRecord(BbDataSource Parent, OracleDecimal RowScn, String CODE, String PRODUCT_CODE, String SUB_CODE, String SUB_NAME)
            : this(Parent)
        {
            this.CODE = CODE;
            this.PRODUCT_CODE = PRODUCT_CODE;
            this.SUB_CODE = SUB_CODE;
            this.SUB_NAME = SUB_NAME;
            this.RowScn = RowScn;
            this.IsRowscnSupported = false;
            this.ClearChanges();
        }
        private void fillFields()
        {
            Fields.Add( new BbField("CODE", OracleDbType.Varchar2, false, false, false, false, false, "V_W4_CARD", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("PRODUCT_CODE", OracleDbType.Varchar2, false, false, false, false, false, "V_W4_CARD", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("SUB_CODE", OracleDbType.Varchar2, false, false, false, false, false, "V_W4_CARD", ObjectTypes.View, "", ""));
            Fields.Add( new BbField("SUB_NAME", OracleDbType.Varchar2, true, false, false, false, false, "V_W4_CARD", ObjectTypes.View, "", ""));        
        }
        public String CODE { get { return (String)FindField("CODE").Value; } set {SetField("CODE", value);} }
        public String PRODUCT_CODE { get { return (String)FindField("PRODUCT_CODE").Value; } set {SetField("PRODUCT_CODE", value);} }
        public String SUB_CODE { get { return (String)FindField("SUB_CODE").Value; } set {SetField("SUB_CODE", value);} }
        public String SUB_NAME { get { return (String)FindField("SUB_NAME").Value; } set {SetField("SUB_NAME", value);} }
    }

    public sealed class VW4CardFilters : BbFilters
    {
        public VW4CardFilters(BbDataSource Parent) : base (Parent)
        {
            CODE = new BBVarchar2Filter(this, "CODE");
            PRODUCT_CODE = new BBVarchar2Filter(this, "PRODUCT_CODE");
            SUB_CODE = new BBVarchar2Filter(this, "SUB_CODE");
            SUB_NAME = new BBVarchar2Filter(this, "SUB_NAME");
        }
        public BBVarchar2Filter CODE;
        public BBVarchar2Filter PRODUCT_CODE;
        public BBVarchar2Filter SUB_CODE;
        public BBVarchar2Filter SUB_NAME;
    }

    public partial class VW4Card : BbTable<VW4CardRecord, VW4CardFilters>
    {
        public VW4Card() : base(new BbConnection())
        {
            // base.Connection.RoleName = "WR_WCS";
        }
        public VW4Card(BbConnection Connection)
            : base(Connection)
        {
        }
        public override List<VW4CardRecord> Select(VW4CardRecord Item)
        {
            List<VW4CardRecord> res = new List<VW4CardRecord>();
            OracleDataReader rdr = null;
            ConnectionResult connectionResult = Connection.InitConnection();
            try
            {
                rdr = ExecuteReader(Item);
                while (rdr.Read())
                {
                    res.Add(new VW4CardRecord(
                        this,
                        rdr.IsDBNull(0) ? OracleDecimal.Null : rdr.GetOracleDecimal(0),
                        rdr.IsDBNull(1) ?  (String)null : Convert.ToString(rdr[1]), 
                        rdr.IsDBNull(2) ?  (String)null : Convert.ToString(rdr[2]), 
                        rdr.IsDBNull(3) ?  (String)null : Convert.ToString(rdr[3]), 
                        rdr.IsDBNull(4) ?  (String)null : Convert.ToString(rdr[4]))
                    );
                }
            }
            finally
            {
                DisposeDataReader(rdr);
                if (ConnectionResult.New == connectionResult)
                    Connection.CloseConnection();
            }
            return res;
        }
    }
}